# Version in my language:
# --------------------------------------
record R1 =
    u8 a
    u64 b
end

record R2 = $caligned
    u8 a
    u64 b
end

proc main=
    println R1.bytes
    println R2.bytes
    println R1.b
    println R2.b
end
# --------------------------------------

# Version in C:
# --------------------------------------
#include <stdio.h>
#include <stdint.h>

#pragma pack(1)
typedef struct {
    uint8_t a;
    uint64_t b;
} R1;

#pragma pack()
typedef struct {
    uint8_t a;
    uint64_t b;
} R2;

int main(void) {
    printf("%zu\n", sizeof(R1));
    printf("%zu\n", sizeof(R2));
    printf("%zu\n", offsetof(R1, b));
    printf("%zu\n", offsetof(R2, b));
}
# --------------------------------------

# Examples show versions and differences between packed/unpacked, and to switch from the default in each language (mine defaults to packed, C to padded)
