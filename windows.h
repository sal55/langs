#ifndef $windows
#define $windows 1
#include <stdarg.h>
#include <stddef.h>

#define FALSE 0
#define TRUE 1

typedef int BOOL;
typedef BOOL *PBOOL;
#define FAR
#define NEAR
#define Int32x32To64(a,b)(((long long)((long)(a))) *((long long)((long)(b))))


#define DECLARE_HANDLE(n) typedef HANDLE n
#define _WINBASE_
#define WINBASEAPI
typedef int WINBOOL;
typedef unsigned short UINT16;
typedef unsigned short ATOM;
typedef unsigned char BOOLEAN;
typedef unsigned char BYTE;
typedef unsigned long CALTYPE;
typedef unsigned long CALID;
typedef unsigned long long *PULONGLONG;
typedef long long LONG64;
typedef char CCHAR;
typedef char CHAR;
typedef unsigned long COLORREF;
#define CONST const
typedef unsigned long DWORD;

typedef unsigned long ULONG_PTR;
typedef ULONG_PTR *PULONG_PTR;
typedef ULONG_PTR DWORD_PTR;
typedef long long int LONGLONG;
typedef unsigned long long UINT_PTR;
typedef ULONG_PTR SIZE_T;
typedef SIZE_T *PSIZE_T;
typedef unsigned long long int DWORDLONG,*PDWORDLONG;
typedef float FLOAT;
typedef void *HANDLE;
typedef long SCODE,*PSCODE;
typedef double DOUBLE;
typedef HANDLE GLOBALHANDLE;
typedef HANDLE HSTMT;
typedef HANDLE HDBC;
typedef HANDLE HENV;
typedef HANDLE LOCALHANDLE;
typedef HANDLE HTASK;
typedef HANDLE HACCEL;
typedef HANDLE HBITMAP;
typedef HANDLE HBRUSH;
typedef HANDLE HCOLORSPACE;
typedef HANDLE HCONV;
typedef HANDLE HCONVLIST;
typedef HANDLE HCURSOR;
typedef HANDLE HDC;
typedef HANDLE HDDEDATA;
typedef HANDLE HDESK;
typedef HANDLE HWINEVENTHOOK;
typedef HANDLE HDWP;
typedef HANDLE HENHMETAFILE;
typedef int HFILE;
typedef HANDLE HFONT;
typedef HANDLE HGDIOBJ;
typedef HANDLE HGLOBAL;
typedef HANDLE HGLRC;
typedef HANDLE HHOOK;
typedef HANDLE HICON;
typedef HANDLE HIMAGELIST;
typedef HANDLE HINSTANCE;
typedef HANDLE HKEY,*PHKEY;
typedef HANDLE HKL;
typedef HANDLE HLOCAL;
typedef HANDLE HMENU;
typedef HANDLE HMETAFILE;
typedef HANDLE HMODULE;
typedef HANDLE HPALETTE;
typedef HANDLE HPEN;
typedef long HRESULT;
#define _HRESULT_DEFINED
#define SNDMSG SendMessage
typedef HANDLE HRGN;
typedef HANDLE HRSRC;
typedef HANDLE HSZ;
typedef HANDLE HWINSTA;
typedef HANDLE HWND;
typedef int INT;
typedef unsigned short LANGID;
typedef DWORD LCID;
#define _LCID_DEFINED
typedef DWORD LCTYPE;
typedef enum _SYSTEM_POWER_STATE { PowerSystemUnspecified=0,PowerSystemWorking=1,
	PowerSystemSleeping1 =2,PowerSystemSleeping2=3,PowerSystemSleeping3=4,
	PowerSystemHibernate=5,PowerSystemShutdown=6,PowerSystemMaximum=7
} SYSTEM_POWER_STATE,*PSYSTEM_POWER_STATE;
#define POWER_SYSTEM_MAXIMUM 7
typedef enum { PowerActionNone=0,PowerActionReserved,PowerActionSleep,PowerActionHibernate,
	PowerActionShutdown,PowerActionShutdownReset,PowerActionShutdownOff,PowerActionWarmEject
} POWER_ACTION, *PPOWER_ACTION;
typedef enum _DEVICE_POWER_STATE { PowerDeviceUnspecified=0,PowerDeviceD0,PowerDeviceD1,
	PowerDeviceD2,PowerDeviceD3,PowerDeviceMaximum
} DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;
#define ES_SYSTEM_REQUIRED	0x1
#define ES_DISPLAY_REQUIRED	0x2
#define ES_USER_PRESENT	0x4
#define ES_CONTINUOUS	0x80000000
typedef DWORD EXECUTION_STATE;
typedef long LONG;
typedef long long USN;
typedef unsigned long long ULONGLONG;
typedef long LPARAM;
typedef BOOL *LPBOOL;
typedef BYTE *LPBYTE;
typedef CONST BYTE *LPCBYTE;
typedef CONST CHAR *LPCCH;
typedef CHAR *LPCH;
typedef COLORREF *LPCOLORREF;
typedef const char *LPCSTR;
typedef unsigned short * LPCOLESTR;
#define OLESTR(str) L##str
typedef unsigned char UCHAR;
typedef signed char SCHAR;
typedef long int SDWORD;
typedef short int SWORD;
typedef unsigned long int UDWORD;
typedef unsigned short int UWORD;
typedef unsigned long ULONG;
typedef unsigned short USHORT;
//#endif
typedef signed short RETCODE;
#define STDAPI
#define STDAPICALLTYPE
#define STDAPIVCALLTYPE
#define STDMETHODCALLTYPE
#define STDAPI_(type) type
#define APIPRIVATE
//#endif /* rc_invoked */
#define CONTROL_C_EXIT STATUS_CONTROL_C_EXIT
#define WC_LINK L"Syslink"
#define WC_SCROLLBARA "ScrollBar"
#define WC_SCROLLBARW L"ScrollBar"
#define WC_IPADDRESSW	L"SysIPAddress32"
#define WC_IPADDRESSA	"SysIPAddress32"
#define WC_NATIVEFONTCTLW	L"NativeFontCtl"
#define WC_NATIVEFONTCTLA	"NativeFontCtl"
#define WC_COMBOBOXEXW	L"ComboBoxEx32"
#define WC_COMBOBOXEXA	"ComboBoxEx32"
#define WC_BUTTONA "Button"
#define WC_BUTTONW L"Button"
#define WC_STATICA "Static"
#define WC_STATICW L"Static"
#define WC_EDITA "Edit"
#define WC_EDITW L"Edit"
#define WC_LISTBOXA "ListBox"
#define WC_LISTBOXW L"ListBox"
#define WC_COMBOBOXA "ComboBox"
#define WC_COMBOBOXW L"ComboBox"
#define SB_GETUNICODEFORMAT	CCM_GETUNICODEFORMAT
#define SB_SETUNICODEFORMAT	CCM_SETUNICODEFORMAT
#define TB_GETUNICODEFORMAT CCM_GETUNICODEFORMAT
#define TB_SETUNICODEFORMAT CCM_SETUNICODEFORMAT
#define TC_NORMAL 0
#define TC_HARDERR 1
#define TC_GP_TRAP 2
#define TC_SIGNAL 3
#ifdef UNICODE
#define WC_EDIT WC_EDITW
#define WC_BUTTON WC_BUTTONW
typedef const unsigned short *LPCTSTR;
typedef unsigned short *LPTCH;
typedef unsigned short *LPTSTR;
typedef unsigned short *PTBYTE;
typedef unsigned short *PTCH;
typedef unsigned short *PTCHAR;
typedef unsigned short *PTSTR;
typedef unsigned short TBYTE;
typedef unsigned short TCHAR;
typedef unsigned short BCHAR;
#define WC_STATIC WC_STATICW
#define WC_LISTBOX WC_LISTBOXW
#define WC_COMBOBOX WC_COMBOBOXW
#define ANYSIZE_ARRAY 1
#define TEXT(quote) L##quote
#define SERVICES_ACTIVE_DATABASE	SERVICES_ACTIVE_DATABASEW
#define SERVICES_FAILED_DATABASE	SERVICES_FAILED_DATABASEW
#define SC_GROUP_IDENTIFIER	SC_GROUP_IDENTIFIERW
#define HDM_GETITEM HDM_GETITEMW
#define HDM_INSERTITEM HDM_INSERTITEMW
#define HDM_SETITEM HDM_SETITEMW
#define HDM_SETUNICODEFORMAT CCM_SETUNICODEFORMAT
#define HDM_GETUNICODEFORMAT CCM_GETUNICODEFORMAT
#define ACM_OPEN ACM_OPENW
#define HDN_BEGINTRACK HDN_BEGINTRACKW
#define HDN_DIVIDERDBLCLICK HDN_DIVIDERDBLCLICKW
#define HDN_ENDTRACK HDN_ENDTRACKW
#define HDN_ITEMCHANGED HDN_ITEMCHANGEDW
#define HDN_ITEMCHANGING HDN_ITEMCHANGINGW
#define HDN_ITEMCLICK HDN_ITEMCLICKW
#define HDN_ITEMDBLCLICK HDN_ITEMDBLCLICKW
#define HDN_GETDISPINFO	HDN_GETDISPINFOW
#define HDN_TRACK HDN_TRACKW
#define WC_COMBOBOXEX	WC_COMBOBOXEXW
#define WC_IPADDRESS	WC_IPADDRESSW
#define WC_SCROLLBAR	WC_SCROLLBARW
#define GetSystemWindowsDirectory GetSystemWindowsDirectoryW
#define IPN_FIELDCHANGED	(IPN_FIRST - 0)
#define MAKEIPRANGE(low, high)	((LPARAM)(WORD)(((BYTE)(high) << 8) + (BYTE)(low)))
#define MAKEIPADDRESS(b1,b2,b3,b4)	((LPARAM)(((DWORD)(b1)<<24)+((DWORD)(b2)<<16)+((DWORD)(b3)<<8)+((DWORD)(b4))))
#define FIRST_IPADDRESS(x)	((x>>24) & 0xff)
#define SECOND_IPADDRESS(x)	((x>>16) & 0xff)
#define THIRD_IPADDRESS(x)	((x>>8) & 0xff)
#define FOURTH_IPADDRESS(x)	(x & 0xff)
#define LVM_EDITLABEL LVM_EDITLABELW
#define	LVM_FINDITEM	LVM_FINDITEMW
#define	LVM_GETCOLUMN	LVM_GETCOLUMNW
#define	LVM_GETITEMTEXT	LVM_GETITEMTEXTW
#define	LVM_GETSTRINGWIDTH	LVM_GETSTRINGWIDTHW
#define	LVM_INSERTCOLUMN	LVM_INSERTCOLUMNW
#define	LVM_SETCOLUMN	LVM_SETCOLUMNW
#define	LVM_SETITEMTEXT	LVM_SETITEMTEXTW
#define	LVM_EDITLABEL	LVM_EDITLABELW
#define	LVM_GETBKIMAGE	LVM_GETBKIMAGEW
#define	LVM_GETISEARCHSTRING	LVM_GETISEARCHSTRINGW
#define	LVM_GETITEM	LVM_GETITEMW
#define	LVM_INSERTITEM	LVM_INSERTITEMW
#define	LVM_SETBKIMAGE	LVM_SETBKIMAGEW
#define	LVM_SETITEM	LVM_SETITEMW
#define LVN_BEGINLABELEDIT LVN_BEGINLABELEDITW
#define LVN_ENDLABELEDIT LVN_ENDLABELEDITW
#define LVN_GETDISPINFO LVN_GETDISPINFOW
#define LVN_SETDISPINFO LVN_SETDISPINFOW
#define LVN_ODFNDITEM LVN_ODFINDITEMW
#define LVN_HOTTRACK	(LVN_FIRST+21)
#define PSM_SETFINISHTEXT PSM_SETFINISHTEXTW
#define PSM_SETTITLE PSM_SETTITLEW
#define SB_GETTEXT SB_GETTEXTW
#define SB_GETTEXTLENGTH SB_GETTEXTLENGTHW
#define SB_SETTEXT SB_SETTEXTW
#define TB_ADDSTRING TB_ADDSTRINGW
#define TB_GETBUTTONTEXT TB_GETBUTTONTEXTW
#define TB_SAVERESTORE TB_SAVERESTOREW
#define TBBUTTONINFO TBBUTTONINFOW
#define LPTBBUTTONINFO LPTBBUTTONINFOW
#define DESKTOPENUMPROC DESKTOPENUMPROCW
#define TBN_GETBUTTONINFO TBN_GETBUTTONINFOW
#define TBN_GETDISPINFO	TBN_GETDISPINFOW
#define TCM_GETITEM TCM_GETITEM
#define TCM_INSERTITEM TCM_INSERTITEMW
#define TCM_SETITEM TCM_SETITEMW
#define TTM_ADDTOOL TTM_ADDTOOLW
#define TTM_DELTOOL TTM_DELTOOLW
#define TTM_ENUMTOOLS TTM_ENUMTOOLSW
#define TTM_GETCURRENTTOOL TTM_GETCURRENTTOOLW
#define TTM_GETTEXT TTM_GETTEXTW
#define TTM_GETTOOLINFO TTM_GETTOOLINFOW
#define TTM_HITTEST TTM_HITTESTW
#define TTM_NEWTOOLRECT TTM_NEWTOOLRECTW
#define TTM_SETTOOLINFO TTM_SETTOOLINFOW
#define TTM_UPDATETIPTEXT TTM_UPDATETIPTEXTW
#define TTN_NEEDTEXT TTN_NEEDTEXTW
#define TTN_GETDISPINFO	TTN_GETDISPINFOW
#define TVM_EDITLABEL TVM_EDITLABELW
#define TVM_GETISEARCHSTRING TVM_GETISEARCHSTRINGW
#define TVM_GETITEM TVM_GETITEMW
#define TVM_INSERTITEM TVM_INSERTITEMW
#define TVM_SETITEM TVM_SETITEMW
#define TVN_BEGINDRAG TVN_BEGINDRAGW
#define TVN_BEGINLABELEDIT TVN_BEGINLABELEDITW
#define TVN_BEGINRDRAG TVN_BEGINRDRAGW
#define TVN_DELETEITEM TVN_DELETEITEMW
#define TVN_ENDLABELEDIT TVN_ENDLABELEDITW
#define TVN_GETDISPINFO TVN_GETDISPINFOW
#define TVN_ITEMEXPANDED TVN_ITEMEXPANDEDW
#define TVN_ITEMEXPANDING TVN_ITEMEXPANDINGW
#define TVN_SELCHANGED TVN_SELCHANGEDW
#define TVN_SELCHANGING TVN_SELCHANGINGW
#define TVN_SETDISPINFO TVN_SETDISPINFOW
#define ANIMATE_CLASS ANIMATE_CLASSW
#define HOTKEY_CLASS HOTKEY_CLASSW
#define PROGRESS_CLASS PROGRESS_CLASSW
#define STATUSCLASSNAME STATUSCLASSNAMEW
#define REBARCLASSNAME REBARCLASSNAMEW
#define REBARBANDINFO REBARBANDINFOW
#define TOOLBARCLASSNAME TOOLBARCLASSNAMEW
#define TOOLTIPS_CLASS TOOLTIPS_CLASSW
#define TRACKBAR_CLASS TRACKBAR_CLASSW
#define UPDOWN_CLASS UPDOWN_CLASSW
#define WC_HEADER WC_HEADERW
#define WC_NATIVEFONTCTL	WC_NATIVEFONTCTLA
#define WC_LISTVIEW WC_LISTVIEWW
#define WC_TABCONTROL WC_TABCONTROLW
#define WC_TREEVIEW WC_TREEVIEWW
#define LPSTR_TEXTCALLBACK LPSTR_TEXTCALLBACKW
#define RB_INSERTBAND	RB_INSERTBANDW
#define RB_SETBANDINFO	RB_SETBANDINFOW
#define LPREBARBANDINFO	LPREBARBANDINFOW
#define NMLVDISPINFO NMLVDISPINFOW
#define LVN_GETINFOTIP	LVN_GETINFOTIPW
#define NMLVGETINFOTIP	NMLVGETINFOTIPW
#define LPNMLVGETINFOTIP	LPNMLVGETINFOTIPW
#define LVFINDINFO	LVFINDINFOW
#define NMCBEDRAGBEGIN NMCBEDRAGBEGINW
#define LPNMCBEDRAGBEGIN LPNMCBEDRAGBEGINW
#define PNMCBEDRAGBEGIN PNMCBEDRAGBEGINW
#define NMCBEENDEDIT NMCBEENDEDITW
#define LPNMCBEENDEDIT LPNMCBEENDEDITW
#define PNMCBEENDEDIT PNMCBEENDEDITW
#define LPLVITEM	LPLVITEMW
#define LPLVCOLUMN	LPLVCOLUMNW
#define PGET_MODULE_HANDLE_EX PGET_MODULE_HANDLE_EXW
#else
typedef const char *LPCTSTR;
typedef char *LPTCH;
typedef char *LPTSTR;
typedef unsigned char *PTBYTE;
typedef char *PTCH;
typedef char *PTCHAR;
typedef char *PTSTR;
typedef unsigned char TBYTE;
typedef char TCHAR;
typedef BYTE BCHAR;
#define WC_EDIT WC_EDITA
#define WC_BUTTON WC_BUTTONA
#define WC_STATIC WC_STATICA
#define WC_LISTBOX WC_LISTBOXA
#define WC_COMBOBOX WC_COMBOBOXW
#define TEXT(quote) quote
#define SERVICES_ACTIVE_DATABASE	SERVICES_ACTIVE_DATABASEA
#define SERVICES_FAILED_DATABASE	SERVICES_FAILED_DATABASEA
#define SC_GROUP_IDENTIFIER	SC_GROUP_IDENTIFIERA
#define WC_COMBOBOXEX	WC_COMBOBOXEXA
#define WC_NATIVEFONTCTL	WC_NATIVEFONTCTLA
#define WC_IPADDRESS	WC_IPADDRESSA
#define WC_SCROLLBAR	WC_SCROLLBARA
#define GetSystemWindowsDirectory GetSystemWindowsDirectoryA
#define HDN_GETDISPINFO	HDN_GETDISPINFOA
#define HDM_GETITEM HDM_GETITEMA
#define HDM_INSERTITEM HDM_INSERTITEMA
#define HDM_SETITEM HDM_SETITEMA
#define ACM_OPEN ACM_OPENA
#define HDN_BEGINTRACK HDN_BEGINTRACKA
#define HDN_DIVIDERDBLCLICK HDN_DIVIDERDBLCLICKA
#define HDN_ENDTRACK HDN_ENDTRACKA
#define HDN_ITEMCHANGED HDN_ITEMCHANGEDA
#define HDN_ITEMCHANGING HDN_ITEMCHANGINGA
#define HDN_ITEMCLICK HDN_ITEMCLICKA
#define HDN_ITEMDBLCLICK HDN_ITEMDBLCLICKA
#define HDN_TRACK HDN_TRACKA
#define	LVM_FINDITEM	LVM_FINDITEMA
#define	LVM_GETCOLUMN	LVM_GETCOLUMNA
#define	LVM_GETITEMTEXT	LVM_GETITEMTEXTA
#define	LVM_GETSTRINGWIDTH	LVM_GETSTRINGWIDTHA
#define	LVM_INSERTCOLUMN	LVM_INSERTCOLUMNA
#define	LVM_SETCOLUMN	LVM_SETCOLUMNA
#define	LVM_SETITEMTEXT	LVM_SETITEMTEXTA
#define	LVM_EDITLABEL	LVM_EDITLABELA
#define	LVM_GETBKIMAGE	LVM_GETBKIMAGEA
#define	LVM_GETISEARCHSTRING	LVM_GETISEARCHSTRINGA
#define	LVM_GETITEM	LVM_GETITEMA
#define	LVM_INSERTITEM	LVM_INSERTITEMA
#define	LVM_SETBKIMAGE	LVM_SETBKIMAGEA
#define	LVM_SETITEM	LVM_SETITEMA
#define LVN_BEGINLABELEDIT LVN_BEGINLABELEDITA
#define LVN_ENDLABELEDIT LVN_ENDLABELEDITA
#define LVN_GETDISPINFO LVN_GETDISPINFOA
#define LVN_SETDISPINFO LVN_SETDISPINFOA
#define LVN_ODFINDITEM LVN_ODFINDITEMA
#define PSM_SETFINISHTEXT PSM_SETFINISHTEXTA
#define PSM_SETTITLE PSM_SETTITLEA
#define SB_GETTEXT SB_GETTEXTA
#define SB_GETTEXTLENGTH SB_GETTEXTLENGTHA
#define SB_SETTEXT SB_SETTEXTA
#define TB_ADDSTRING TB_ADDSTRINGA
#define TB_GETBUTTONTEXT TB_GETBUTTONTEXTA
#define TB_SAVERESTORE TB_SAVERESTOREA
#define TB_GETBUTTONINFO	TB_GETBUTTONINFOA
#define TB_SETBUTTONINFO	TB_SETBUTTONINFOA
#define TBBUTTONINFO TBBUTTONINFOA
#define LPTBBUTTONINFO LPTBBUTTONINFOA
#define DESKTOPENUMPROC DESKTOPENUMPROCA
#define TBN_GETBUTTONINFO TBN_GETBUTTONINFOA
#define TBN_GETDISPINFO TBN_GETDISPINFOA
#define TCM_GETITEM TCM_GETITEMA
#define TCM_INSERTITEM TCM_INSERTITEMA
#define TCM_SETITEM TCM_SETITEMA
#define TTM_ADDTOOL TTM_ADDTOOLA
#define TTM_DELTOOL TTM_DELTOOLA
#define TTM_ENUMTOOLS TTM_ENUMTOOLSA
#define TTM_GETCURRENTTOOL TTM_GETCURRENTTOOLA
#define TTM_GETTEXT TTM_GETTEXTA
#define TTM_GETTOOLINFO TTM_GETTOOLINFOA
#define TTM_HITTEST TTM_HITTESTA
#define TTM_NEWTOOLRECT TTM_NEWTOOLRECTA
#define TTM_SETTOOLINFO TTM_SETTOOLINFOA
#define TTM_UPDATETIPTEXT TTM_UPDATETIPTEXTA
#define TTN_NEEDTEXT TTN_NEEDTEXTA
#define TTN_GETDISPINFO	TTN_GETDISPINFOA
#define TVM_EDITLABEL TVM_EDITLABELA
#define TVM_GETISEARCHSTRING TVM_GETISEARCHSTRINGA
#define TVM_GETITEM TVM_GETITEMA
#define TVM_INSERTITEM TVM_INSERTITEMA
#define TVM_SETITEM TVM_SETITEMA
#define TVN_BEGINDRAG TVN_BEGINDRAGA
#define TVN_BEGINLABELEDIT TVN_BEGINLABELEDITA
#define TVN_BEGINRDRAG TVN_BEGINRDRAGA
#define TVN_DELETEITEM TVN_DELETEITEMA
#define TVN_ENDLABELEDIT TVN_ENDLABELEDITA
#define TVN_GETDISPINFO TVN_GETDISPINFOA
#define TVN_ITEMEXPANDED TVN_ITEMEXPANDEDA
#define TVN_ITEMEXPANDING TVN_ITEMEXPANDINGA
#define TVN_SELCHANGED TVN_SELCHANGEDA
#define TVN_SELCHANGING TVN_SELCHANGINGA
#define TVN_SETDISPINFO TVN_SETDISPINFOA
#define ANIMATE_CLASS ANIMATE_CLASSA
#define HOTKEY_CLASS HOTKEY_CLASSA
#define PROGRESS_CLASS PROGRESS_CLASSA
#define STATUSCLASSNAME STATUSCLASSNAMEA
#define REBARCLASSNAME REBARCLASSNAMEA
#define REBARBANDINFO REBARBANDINFOA
#define TOOLBARCLASSNAME TOOLBARCLASSNAMEA
#define TOOLTIPS_CLASS TOOLTIPS_CLASSA
#define TRACKBAR_CLASS TRACKBAR_CLASSA
#define UPDOWN_CLASS UPDOWN_CLASSA
#define WC_HEADER WC_HEADERA
#define WC_LISTVIEW WC_LISTVIEWA
#define WC_TABCONTROL WC_TABCONTROLA
#define WC_TREEVIEW WC_TREEVIEWA
#define LPSTR_TEXTCALLBACK LPSTR_TEXTCALLBACKA
#define RB_INSERTBAND	RB_INSERTBANDA
#define RB_SETBANDINFO	RB_SETBANDINFOA
#define LPREBARBANDINFO LPREBARBANDINFOA
#define NMLDISPINFO NMLDISPINFOA
#define LVN_GETINFOTIP	LVN_GETINFOTIPA
#define NMLVGETINFOTIP	NMLVGETINFOTIPA
#define LPNMLVGETINFOTIP	LPNMLVGETINFOTIPA
#define LVFINDINFO LVFINDINFOA
#define NMCBEDRAGBEGIN NMCBEDRAGBEGINA
#define NMLVDISPINFO NMLVDISPINFOA
#define LPNMCBEDRAGBEGIN LPNMCBEDRAGBEGINA
#define PNMCBEDRAGBEGIN PNMCBEDRAGBEGINA
#define NMCBEENDEDIT NMCBEENDEDITA
#define LPNMCBEENDEDIT LPNMCBEENDEDITA
#define PNMCBEENDEDIT PNMCBEENDEDITA
#define LPLVITEM	LPLVITEMA
#define LPLVCOLUMN	LPLVCOLUMNA
#define PGET_MODULE_HANDLE_EX PGET_MODULE_HANDLE_EXA
#endif // UNICODE

//#ifndef RC_INVOKED
typedef const unsigned short *LPCWCH;
typedef const unsigned short *LPCWSTR;
typedef DWORD *LPDWORD;
typedef HANDLE *LPHANDLE;
typedef int *LPINT;
typedef long *LPLONG;
typedef char *LPSTR;
typedef long LRESULT;
typedef void *LPVOID;
typedef const void *LPCVOID;
typedef unsigned short *LPWCH;
typedef unsigned short *LPWORD;
typedef unsigned short *LPWSTR;
typedef unsigned short *PWSTR;
typedef unsigned short *NWPSTR;
typedef BOOL *PWINBOOL;
typedef BYTE *PBOOLEAN;
typedef BYTE *PBYTE;
typedef const CHAR *PCCH;
typedef CHAR *PCH;
typedef CHAR *PCHAR;
typedef const char *PCSTR;
typedef const unsigned short *PCWCH;
typedef const unsigned short *PCWSTR;
typedef DWORD *PDWORD;
typedef float *PFLOAT;
typedef HANDLE *PHANDLE;
typedef int *PINT;
typedef long *PLONG;
typedef short *PSHORT;
typedef char *PSTR;
typedef char *PSZ;
typedef unsigned char *PUCHAR;
typedef unsigned int *PUINT;
typedef unsigned long *PULONG;
typedef unsigned short *PUSHORT;
typedef void *PVOID;
typedef unsigned short *PWCH;
typedef unsigned short *PWCHAR;
typedef unsigned short *PWORD;
typedef short SHORT;
typedef unsigned int UINT;
#define VOID void
typedef unsigned short WCHAR;
typedef unsigned short WORD;
typedef unsigned int WPARAM;
#define CDECL
#define CALLBACK
#define PASCAL
#define WINAPI	
#define NTAPI	
#define WINGDIAPI 
#define WINAPIV
#define APIENTRY	
#define IPM_CLEARADDRESS	(WM_USER+100)
#define IPM_SETADDRESS	(WM_USER+101)
#define IPM_GETADDRESS	(WM_USER+102)
#define IPM_SETRANGE	(WM_USER+103)
#define IPM_SETFOCUS	(WM_USER+104)
#define IPM_ISBLANK	(WM_USER+105)
typedef enum _ACL_INFORMATION_CLASS {
	AclRevisionInformation = 1,AclSizeInformation
} ACL_INFORMATION_CLASS;
typedef enum _SECURITY_IMPERSONATION_LEVEL {
	SecurityAnonymous,SecurityIdentification, SecurityImpersonation,
	SecurityDelegation
} SECURITY_IMPERSONATION_LEVEL;
typedef enum _SID_NAME_USE {
	SidTypeUser = 1,SidTypeGroup, SidTypeDomain, SidTypeAlias,
	SidTypeWellKnownGroup,SidTypeDeletedAccount, SidTypeInvalid,
	SidTypeUnknown
} SID_NAME_USE,*PSID_NAME_USE;
typedef enum _TOKEN_INFORMATION_CLASS {
	TokenUser = 1,TokenGroups, TokenPrivileges, TokenOwner,
	TokenPrimaryGroup,TokenDefaultDacl, TokenSource, TokenType,
	TokenImpersonationLevel,TokenStatistics
} TOKEN_INFORMATION_CLASS;
typedef enum tagTOKEN_TYPE {
	TokenPrimary = 1,TokenImpersonation
} TOKEN_TYPE;
typedef enum { LT_DONT_CARE, LT_LOWEST_LATENCY } LATENCY_TIME;
//#endif RC_INVOKED

#define FORWARD_WM_NOTIFY(h,id,hdr,fn) (void)(fn)((h),WM_NOTIFY,(WPARAM)(id),(LPARAM)(hdr))
#define GetBValue(rgb) ((BYTE) ((rgb) >> 16))
#define GetGValue(rgb) ((BYTE) (((WORD) (rgb)) >> 8))
#define GetRValue(rgb) ((BYTE) (rgb))
#define RGB(r,g,b) ((DWORD)(((BYTE)(r)|((WORD)(g) << 8))|(((DWORD)(BYTE)(b)) << 16)))
#define HANDLE_WM_NOTIFY(h,wP,lP,fn) (fn)((h),(int)(wP),(NMHDR *)(lP))
#define HIBYTE(w) ((BYTE) (((WORD) (w) >> 8) & 0xFF))
#define HIWORD(l) ((WORD) (((DWORD) (l) >> 16) & 0xFFFF))
#define LOBYTE(w) (((BYTE) (w)) & 0xFF)
#define LOWORD(l) (((WORD) (l)) & 0xFFFF)
#define MAKELONG(a,b) ((LONG) (((WORD) (a)) | ((DWORD) ((WORD) (b))) << 16))
#define MAKEWORD(a,b) ((WORD) (((BYTE) (a)) | ((WORD) ((BYTE) (b))) << 8))
#define INDEXTOOVERLAYMASK(i) ((i) << 8)
#define INDEXTOSTATEIMAGEMASK(i) ((i) << 12)
#define MAXINTATOM 0xC000
#define INVALID_ATOM ((ATOM)0)
#define MAKEINTATOM(i) (LPTSTR) ((DWORD) ((WORD) (i)))
#define MAKEINTRESOURCE(i) (LPTSTR) ((DWORD) ((WORD) (i)))
#define IS_INTRESOURCE(_r) (((ULONG_PTR)(_r) >> 16)==0)
#define MAKELANGID(p,s) ((((WORD) (s)) << 10) | (WORD) (p))
#define PRIMARYLANGID(lgid) ((WORD )(lgid) & 0x3ff)
#define SUBLANGID(lgid) ((WORD )(lgid) >> 10)
#define LANGIDFROMLCID(lcid) ((WORD) (lcid))
#define SORTIDFROMLCID(lcid) ((WORD )((((DWORD)(lcid)) & 0xFFFFF) >> 16))
#define MAKELCID(lgid,srtid) ((DWORD)((((DWORD)((WORD)(srtid))) << 16)|((DWORD)((WORD)(lgid)))))
#define MAKELPARAM(l,h) ((LPARAM) MAKELONG(l,h))
#define MAKELRESULT(l,h) ((LRESULT) MAKELONG(l,h))
#define MAKEPOINTS(l) (*((POINTS *) & (l)))
#define MAKEROP4(fore,back) (DWORD)((((back) << 8) & 0xFF000000) | (fore))
#define MAKEWPARAM(l,h)	((WPARAM) MAKELONG(l,h))
#define PALETTEINDEX(i) ((COLORREF) (0x01000000 | (DWORD) (WORD) (i)))
#define PALETTERGB(r,g,b) (0x02000000 | RGB(r,g,b))
#define POINTSTOPOINT(pt,pts) {(pt).x = (LONG)(SHORT) LOWORD(*(LONG*)&pts); (pt).y = (LONG)(SHORT) HIWORD(*(LONG*)&pts);}
#define POINTTOPOINTS(pt) (MAKELONG((short) ((pt).x),(short) ((pt).y)))
#define INDEXTOOVERLAYMASK(i) ((i) << 8)

typedef int (CALLBACK *BFFCALLBACK) (HWND,UINT,LPARAM,LPARAM);
typedef UINT (CALLBACK *LPCCHOOKPROC) (HWND,UINT,WPARAM,LPARAM);
typedef UINT (CALLBACK *LPCFHOOKPROC) (HWND,UINT,WPARAM,LPARAM);
typedef DWORD (CALLBACK *PTHREAD_START_ROUTINE) (LPVOID);
typedef PTHREAD_START_ROUTINE LPTHREAD_START_ROUTINE;
typedef UINT (CALLBACK *LPFRHOOKPROC) (HWND,UINT,WPARAM,LPARAM);
typedef UINT (CALLBACK *LPOFNHOOKPROC) (HWND,UINT,WPARAM,LPARAM);
typedef UINT (CALLBACK *LPPRINTHOOKPROC) (HWND,UINT,WPARAM,LPARAM);
typedef UINT (CALLBACK *LPSETUPHOOKPROC) (HWND,UINT,WPARAM,LPARAM);
typedef BOOL (CALLBACK *DLGPROC) (HWND,UINT,WPARAM,LPARAM);
typedef int (CALLBACK *PFNPROPSHEETCALLBACK) (HWND,UINT,LPARAM);
typedef VOID (CALLBACK *LPSERVICE_MAIN_FUNCTION) (DWORD,LPTSTR);
typedef int (CALLBACK *PFNTVCOMPARE) (LPARAM,LPARAM,LPARAM);
typedef LRESULT (CALLBACK *WNDPROC) (HWND,UINT,WPARAM,LPARAM);
typedef int (CALLBACK *FARPROC)(void);
typedef int (WINAPI *PROC)(void);
typedef BOOL (CALLBACK *WNDENUMPROC)(HWND,LPARAM);
typedef BOOL (CALLBACK *ENUMRESTYPEPROCA) (HANDLE,LPSTR,LONG);
typedef BOOL (CALLBACK *ENUMRESTYPEPROCW) (HANDLE,LPWSTR,LONG);
typedef BOOL (CALLBACK *ENUMRESNAMEPROC) (HANDLE,LPCTSTR,LPTSTR,LONG);
typedef BOOL (CALLBACK *ENUMRESLANGPROC) (HANDLE,LPCTSTR,LPCTSTR,WORD,LONG);
typedef BOOL (CALLBACK *ENUMWINDOWSPROC) (HWND,LPARAM);
typedef BOOL (CALLBACK *ENUMWINDOWSTATIONPROC) (LPTSTR,LPARAM);
typedef VOID (CALLBACK *SENDASYNCPROC) (HWND,UINT,DWORD,LRESULT);
typedef VOID (CALLBACK *TIMERPROC) (HWND,UINT,UINT,DWORD);
typedef BOOL (CALLBACK *GRAYSTRINGPROC)(HDC,LPARAM,int);
typedef BOOL (CALLBACK *DRAWSTATEPROC) (HDC,LPARAM,WPARAM,int,int);
typedef BOOL (CALLBACK *PROPENUMPROCEX) (HWND,LPCTSTR,HANDLE,DWORD);
typedef BOOL (CALLBACK *PROPENUMPROC) (HWND,LPCTSTR,HANDLE);
typedef LRESULT (CALLBACK *HOOKPROC) (int,WPARAM,LPARAM);
typedef VOID (CALLBACK *ENUMOBJECTSPROC) (LPVOID,LPARAM);
typedef VOID (CALLBACK *LINEDDAPROC) (int,int,LPARAM);
typedef BOOL (CALLBACK *ABORTPROC) (HDC,int);
typedef UINT (CALLBACK *LPPAGEPAINTHOOK) (HWND,UINT,WPARAM,LPARAM);
typedef UINT (CALLBACK *LPPAGESETUPHOOK) (HWND,UINT,WPARAM,LPARAM);
typedef int (CALLBACK *ICMENUMPROC) (LPTSTR,LPARAM);
typedef LONG (*EDITWORDBREAKPROCEX) (char *,LONG,BYTE,INT);
typedef int (CALLBACK *PFNLVCOMPARE) (LPARAM,LPARAM,LPARAM);
typedef BOOL (CALLBACK *LOCALE_ENUMPROC) (LPTSTR);
typedef BOOL (CALLBACK *CODEPAGE_ENUMPROC) (LPTSTR);
typedef BOOL (CALLBACK *DATEFMT_ENUMPROC) (LPTSTR);
typedef BOOL (CALLBACK *TIMEFMT_ENUMPROC) (LPTSTR);
typedef BOOL (CALLBACK *CALINFO_ENUMPROC) (LPTSTR);
typedef BOOL (CALLBACK *PHANDLER_ROUTINE) (DWORD);
typedef UINT (CALLBACK *PFNGETPROFILEPATH) (LPCTSTR,LPSTR,UINT);
typedef UINT (CALLBACK *PFNRECONCILEPROFILE) (LPCTSTR,LPCTSTR,DWORD);
typedef BOOL (CALLBACK *PFNPROCESSPOLICIES) (HWND,LPCTSTR,LPCTSTR,LPCTSTR,DWORD);
typedef BOOL (CALLBACK* NAMEENUMPROCA)(LPSTR,LPARAM);
typedef BOOL (CALLBACK* NAMEENUMPROCW)(LPWSTR,LPARAM);
typedef NAMEENUMPROCA WINSTAENUMPROCA;
typedef NAMEENUMPROCA DESKTOPENUMPROCA;
typedef NAMEENUMPROCW WINSTAENUMPROCW;
typedef NAMEENUMPROCW DESKTOPENUMPROCW;

#define SECURITY_NULL_SID_AUTHORITY	{0,0,0,0,0,0}
#define SECURITY_WORLD_SID_AUTHORITY	{0,0,0,0,0,1}
#define SECURITY_LOCAL_SID_AUTHORITY	{0,0,0,0,0,2}
#define SECURITY_CREATOR_SID_AUTHORITY	{0,0,0,0,0,3}
#define SECURITY_NON_UNIQUE_AUTHORITY	{0,0,0,0,0,4}
#define SECURITY_NT_AUTHORITY	{0,0,0,0,0,5}
#define SE_CREATE_TOKEN_NAME	TEXT("SeCreateTokenPrivilege")
#define SE_ASSIGNPRIMARYTOKEN_NAME	TEXT("SeAssignPrimaryTokenPrivilege")
#define SE_LOCK_MEMORY_NAME	TEXT("SeLockMemoryPrivilege")
#define SE_INCREASE_QUOTA_NAME	TEXT("SeIncreaseQuotaPrivilege")
#define SE_UNSOLICITED_INPUT_NAME	TEXT("SeUnsolicitedInputPrivilege")
#define SE_MACHINE_ACCOUNT_NAME	TEXT("SeMachineAccountPrivilege")
#define SE_TCB_NAME	TEXT("SeTcbPrivilege")
#define SE_SECURITY_NAME	TEXT("SeSecurityPrivilege")
#define SE_TAKE_OWNERSHIP_NAME	TEXT("SeTakeOwnershipPrivilege")
#define SE_LOAD_DRIVER_NAME	TEXT("SeLoadDriverPrivilege")
#define SE_SYSTEM_PROFILE_NAME	TEXT("SeSystemProfilePrivilege")
#define SE_SYSTEMTIME_NAME	TEXT("SeSystemtimePrivilege")
#define SE_PROF_SINGLE_PROCESS_NAME	TEXT("SeProfileSingleProcessPrivilege")
#define SE_INC_BASE_PRIORITY_NAME	TEXT("SeIncreaseBasePriorityPrivilege")
#define SE_CREATE_PAGEFILE_NAME	TEXT("SeCreatePagefilePrivilege")
#define SE_CREATE_PERMANENT_NAME	TEXT("SeCreatePermanentPrivilege")
#define SE_BACKUP_NAME	TEXT("SeBackupPrivilege")
#define SE_RESTORE_NAME	TEXT("SeRestorePrivilege")
#define SE_SHUTDOWN_NAME	TEXT("SeShutdownPrivilege")
#define SE_DEBUG_NAME	TEXT("SeDebugPrivilege")
#define SE_AUDIT_NAME	TEXT("SeAuditPrivilege")
#define SE_SYSTEM_ENVIRONMENT_NAME	TEXT("SeSystemEnvironmentPrivilege")
#define SE_CHANGE_NOTIFY_NAME	TEXT("SeChangeNotifyPrivilege")
#define SE_REMOTE_SHUTDOWN_NAME	TEXT("SeRemoteShutdownPrivilege")
#define SERVICES_ACTIVE_DATABASEW	L"ServicesActive"
#define SERVICES_FAILED_DATABASEW	L"ServicesFailed"
#define SERVICES_ACTIVE_DATABASEA	"ServicesActive"
#define SERVICES_FAILED_DATABASEA	"ServicesFailed"
#define SC_GROUP_IDENTIFIERW	L'+'
#define SC_GROUP_IDENTIFIERA	'+'
/* Messages.h WIN32 message definitions */
#define ACM_OPENW	1127
#define ACM_OPENA	1124
#define ACM_PLAY	1125
#define ACM_STOP	1126
#define ACN_START	1
#define ACN_STOP	2
#define BM_CLICK	245
#define BM_GETCHECK	240
#define BM_GETIMAGE	246
#define BM_GETSTATE	242
#define BM_SETCHECK	241
#define BM_SETIMAGE	247
#define BM_SETSTATE	243
#define BM_SETSTYLE	244
#define BN_CLICKED	0
#define BN_DBLCLK	5
#define BN_DISABLE	4
#define BN_DOUBLECLICKED	5
#define BN_HILITE	2
#define BN_KILLFOCUS	7
#define BN_PAINT	1
#define BN_PUSHED	2
#define BN_SETFOCUS	6
#define BN_UNHILITE	3
#define BN_UNPUSHED	3
#define CB_ADDSTRING	323
#define CB_DELETESTRING	324
#define CB_DIR	325
#define CB_FINDSTRING	332
#define CB_FINDSTRINGEXACT	344
#define CB_GETCOUNT	326
#define CB_GETCURSEL	327
#define CB_GETDROPPEDCONTROLRECT	338
#define CB_GETDROPPEDSTATE	343
#define CB_GETDROPPEDWIDTH	351
#define CB_GETEDITSEL	320
#define CB_GETEXTENDEDUI	342
#define CB_GETHORIZONTALEXTENT	349
#define CB_GETITEMDATA	336
#define CB_GETITEMHEIGHT	340
#define CB_GETLBTEXT	328
#define CB_GETLBTEXTLEN	329
#define CB_GETLOCALE	346
#define CB_GETTOPINDEX	347
#define CB_INITSTORAGE	353
#define CB_INSERTSTRING	330
#define CB_LIMITTEXT	321
#define CB_RESETCONTENT	331
#define CB_SELECTSTRING	333
#define CB_SETCURSEL	334
#define CB_SETDROPPEDWIDTH	352
#define CB_SETEDITSEL	322
#define CB_SETEXTENDEDUI	341
#define CB_SETHORIZONTALEXTENT	350
#define CB_SETITEMDATA	337
#define CB_SETITEMHEIGHT	339
#define CB_SETLOCALE	345
#define CB_SETTOPINDEX	348
#define CB_SHOWDROPDOWN	335
#define CBN_CLOSEUP	8
#define CBN_DBLCLK	2
#define CBN_DROPDOWN	7
#define CBN_EDITCHANGE	5
#define CBN_EDITUPDATE	6
#define CBN_ERRSPACE	(-1)
#define CBN_KILLFOCUS	4
#define CBN_SELCHANGE	1
#define CBN_SELENDCANCEL	10
#define CBN_SELENDOK	9
#define CBN_SETFOCUS	3
#define DL_BEGINDRAG	1157
#define DL_CANCELDRAG	1160
#define DL_DRAGGING	1158
#define DL_DROPPED	1159
#define DRAGLISTMSGSTRING	TEXT("commctrl_DragListMsg")
#define DM_GETDEFID	1024
#define DM_REPOSITION	1026
#define DM_SETDEFID	1025
#define EM_SETCUEBANNER (ECM_FIRST+1)
#define EM_GETCUEBANNER (ECM_FIRST + 2)
#define EM_SHOWBALLOONTIP (ECM_FIRST + 3)
#define EM_HIDEBALLOONTIP (ECM_FIRST+4)
#define EM_CANPASTE	1074
#define EM_CANUNDO	198
#define EM_CHARFROMPOS	215
#define EM_DISPLAYBAND	1075
#define EM_EMPTYUNDOBUFFER	205
#define EM_EXGETSEL	1076
#define EM_EXLIMITTEXT	1077
#define EM_EXLINEFROMCHAR	1078
#define EM_EXSETSEL	1079
#define EM_FINDTEXT	1080
#define EM_FINDTEXTEX	1103
#define EM_FINDWORDBREAK	1100
#define EM_FMTLINES	200
#define EM_FORMATRANGE	1081
#define EM_GETCHARFORMAT	1082
#define EM_GETEVENTMASK	1083
#define EM_GETFIRSTVISIBLELINE	206
#define EM_GETHANDLE	189
#define EM_GETLIMITTEXT	213
#define EM_GETLINE	196
#define EM_GETLINECOUNT	186
#define EM_GETMARGINS	212
#define EM_GETMODIFY	184
#define EM_GETIMECOLOR	1129
#define EM_GETIMEOPTIONS	1131
#define EM_GETOPTIONS	1102
#define EM_GETOLEINTERFACE	1084
#define EM_GETPARAFORMAT	1085
#define EM_GETPASSWORDCHAR	210
#define EM_GETPUNCTUATION	1125
#define EM_GETRECT	178
#define EM_GETSEL	176
#define EM_GETSELTEXT	1086
#define EM_GETTEXTRANGE	1099
#define EM_GETTHUMB	190
#define EM_GETWORDBREAKPROC	209
#define EM_GETWORDBREAKPROCEX	1104
#define EM_GETWORDWRAPMODE	1127
#define EM_HIDESELECTION	1087
#define EM_LIMITTEXT	197
#define EM_LINEFROMCHAR	201
#define EM_LINEINDEX	187
#define EM_LINELENGTH	193
#define EM_LINESCROLL	182
#define EM_PASTESPECIAL	1088
#define EM_POSFROMCHAR	214
#define EM_REPLACESEL	194
#define EM_REQUESTRESIZE	1089
#define EM_SCROLL	181
#define EM_SCROLLCARET	183
#define EM_SELECTIONTYPE	1090
#define EM_SETBKGNDCOLOR	1091
#define EM_SETCHARFORMAT	1092
#define EM_SETEVENTMASK	1093
#define EM_SETHANDLE	188
#define EM_SETIMECOLOR	1128
#define EM_SETIMEOPTIONS	1130
#define EM_SETLIMITTEXT	197
#define EM_SETMARGINS	211
#define EM_SETMODIFY	185
#define EM_SETOLECALLBACK	1094
#define EM_SETOPTIONS	1101
#define EM_SETPARAFORMAT	1095
#define EM_SETPASSWORDCHAR	204
#define EM_SETPUNCTUATION	1124
#define EM_SETREADONLY	207
#define EM_SETRECT	179
#define EM_SETRECTNP	180
#define EM_SETSEL	177
#define EM_SETTABSTOPS	203
#define EM_SETTARGETDEVICE	1096
#define EM_SETWORDBREAKPROC	208
#define EM_SETWORDBREAKPROCEX	1105
#define EM_SETWORDWRAPMODE	1126
#define EM_STREAMIN	1097
#define EM_STREAMOUT	1098
#define EM_UNDO	199
#define EN_CHANGE	768
#define EN_CORRECTTEXT	1797
#define EN_DROPFILES	1795
#define EN_ERRSPACE	1280
#define EN_HSCROLL	1537
#define EN_IMECHANGE	1799
#define EN_KILLFOCUS	512
#define EN_MAXTEXT	1281
#define EN_MSGFILTER	1792
#define EN_OLEOPFAILED	1801
#define EN_PROTECTED	1796
#define EN_REQUESTRESIZE	1793
#define EN_SAVECLIPBOARD	1800
#define EN_SELCHANGE	1794
#define EN_SETFOCUS	256
#define EN_STOPNOUNDO	1798
#define EN_UPDATE	1024
#define EN_VSCROLL	1538
#define HDM_FIRST	0x1200
#define HDM_DELETEITEM	4610
#define HDM_GETITEMW	4619
#define HDM_INSERTITEMW	4618
#define HDM_SETITEMW	4620
#define HDM_GETITEMA	4611
#define HDM_INSERTITEMA	4609
#define HDM_SETITEMA	4612
#define HDM_GETITEMCOUNT	4608
#define HDM_HITTEST	4614
#define HDM_LAYOUT	4613
#define HDM_SETBITMAPMARGIN (HDM_FIRST + 20)
#define Header_SetBitmapMargin(hwnd, iWidth) (int)SNDMSG((hwnd), HDM_SETBITMAPMARGIN, (WPARAM)(iWidth), 0)
#define HDM_GETBITMAPMARGIN (HDM_FIRST + 21)
#define Header_GetBitmapMargin(hwnd) (int)SNDMSG((hwnd), HDM_GETBITMAPMARGIN, 0, 0)
#define HDM_SETFILTERCHANGETIMEOUT (HDM_FIRST+22)
#define Header_SetFilterChangeTimeout(hwnd, i) (int)SNDMSG((hwnd), HDM_SETFILTERCHANGETIMEOUT, 0, (LPARAM)(i))
#define HDM_EDITFILTER	(HDM_FIRST+23)
#define Header_EditFilter(h,i,f) (int)SNDMSG((h),HDM_EDITFILTER,(WPARAM)(i),MAKELPARAM(f,0))
#define HDM_CLEARFILTER	(HDM_FIRST+24)
#define Header_ClearFilter(h,i) (int)SNDMSG((h), HDM_CLEARFILTER, (WPARAM)(i),0)
#define Header_ClearAllFilters(hwnd) (int)SNDMSG((hwnd), HDM_CLEARFILTER, (WPARAM)-1, 0)
#define HDM_GETITEMRECT	(HDM_FIRST+7)
#define Header_GetItemRect(h,I,lprc) (BOOL)SendMessage((h), HDM_GETITEMRECT, (WPARAM)(I),(LPARAM)(lprc))
#define HDM_SETIMAGELIST	(HDM_FIRST+8)
#define Header_SetImageList(h,himl) (HIMAGELIST)SendMessage((h),HDM_SETIMAGELIST,0,(LPARAM)(himl))
#define HDM_GETIMAGELIST	(HDM_FIRST+9)
#define Header_GetImageList(h) (HIMAGELIST)SendMessage((h),HDM_GETIMAGELIST,0,0)
#define HDM_ORDERTOINDEX	(HDM_FIRST+15)
#define Header_OrderToIndex(hwnd, i) (int)SendMessage((hwnd), HDM_ORDERTOINDEX, (WPARAM)(i), 0)
#define HDM_CREATEDRAGIMAGE	(HDM_FIRST+16)
#define Header_CreateDragImage(h,i) (HIMAGELIST)SendMessage((h),HDM_CREATEDRAGIMAGE,(WPARAM)(i),0)
#define HDM_GETORDERARRAY	(HDM_FIRST+17)
#define Header_GetOrderArray(h,C,i) (BOOL)SendMessage((h),HDM_GETORDERARRAY,(WPARAM)(C),(LPARAM)(i))
#define HDM_SETORDERARRAY	(HDM_FIRST+18)
#define Header_SetOrderArray(h,C,lpi) (BOOL)SendMessage((h), HDM_SETORDERARRAY, (WPARAM)(C),(LPARAM)(lpi))
#define HDM_SETHOTDIVIDER	(HDM_FIRST+19)
#define Header_SetHotDivider(h,P,dw) (int)SendMessage((h),HDM_SETHOTDIVIDER,(WPARAM)(P),(LPARAM)(dw))
#define HDN_BEGINTRACKW	(-326)
#define HDN_DIVIDERDBLCLICKW	(-325)
#define HDN_ENDTRACKW	(-327)
#define HDN_ITEMCHANGEDW	(-321)
#define HDN_ITEMCHANGINGW	(-320)
#define HDN_ITEMCLICKW	(-322)
#define HDN_ITEMDBLCLICKW	(-323)
#define HDN_TRACKW	(-328)
#define HDN_BEGINTRACKA	(-306)
#define HDN_DIVIDERDBLCLICKA	(-305)
#define HDN_ENDTRACKA	(-307)
#define HDN_ITEMCHANGEDA	(-301)
#define HDN_ITEMCHANGINGA	(-300)
#define HDN_ITEMCLICKA	(-302)
#define HDN_ITEMDBLCLICKA	(-303)
#define HDN_TRACKA	(-308)
#define HDN_GETDISPINFOA	(HDN_FIRST-9)
#define HDN_GETDISPINFOW	(HDN_FIRST-29)
#define HDN_BEGINDRAG	(HDN_FIRST-10)
#define HDN_ENDDRAG	(HDN_FIRST-11)
#define HDN_FILTERCHANGE (HDN_FIRST-12)
#define HDN_FILTERBTNCLICK (HDN_FIRST-13)
#define HD_NOTIFYA NMHEADERA
#define HD_NOTIFYW NMHEADERW
#define HKM_GETHOTKEY	1026
#define HKM_SETHOTKEY	1025
#define HKM_SETRULES	1027
#define LB_ADDFILE	406
#define LB_ADDSTRING	384
#define LB_DELETESTRING	386
#define LB_DIR	397
#define LB_FINDSTRING	399
#define LB_FINDSTRINGEXACT	418
#define LB_GETANCHORINDEX	413
#define LB_GETCARETINDEX	415
#define LB_GETCOUNT	395
#define LB_GETCURSEL	392
#define LB_GETHORIZONTALEXTENT	403
#define LB_GETITEMDATA	409
#define LB_GETITEMHEIGHT	417
#define LB_GETITEMRECT	408
#define LB_GETLOCALE	422
#define LB_GETSEL	391
#define LB_GETSELCOUNT	400
#define LB_GETSELITEMS	401
#define LB_GETTEXT	393
#define LB_GETTEXTLEN	394
#define LB_GETTOPINDEX	398
#define LB_INITSTORAGE	424
#define LB_INSERTSTRING	385
#define LB_ITEMFROMPOINT	425
#define LB_RESETCONTENT	388
#define LB_SELECTSTRING	396
#define LB_SELITEMRANGE	411
#define LB_SELITEMRANGEEX	387
#define LB_SETANCHORINDEX	412
#define LB_SETCARETINDEX	414
#define LB_SETCOLUMNWIDTH	405
#define LB_SETCOUNT	423
#define LB_SETCURSEL	390
#define LB_SETHORIZONTALEXTENT	404
#define LB_SETITEMDATA	410
#define LB_SETITEMHEIGHT	416
#define LB_SETLOCALE	421
#define LB_SETSEL	389
#define LB_SETTABSTOPS	402
#define LB_SETTOPINDEX	407
#define LBN_DBLCLK	2
#define LBN_ERRSPACE	(-2)
#define LBN_KILLFOCUS	5
#define LBN_SELCANCEL	3
#define LBN_SELCHANGE	1
#define LBN_SETFOCUS	4
#define LVM_FIRST	0x1000
#define	LVM_APPROXIMATEVIEWRECT	(LVM_FIRST+64)
#define	LVM_ARRANGE	(LVM_FIRST+22)
#define	LVM_CANCELEDITLABEL	(LVM_FIRST+179)
#define	LVM_CREATEDRAGIMAGE	(LVM_FIRST+33)
#define	LVM_DELETEALLITEMS	(LVM_FIRST+9)
#define	LVM_DELETECOLUMN	(LVM_FIRST+28)
#define	LVM_DELETEITEM	(LVM_FIRST+8)
#define	LVM_EDITLABELA	(LVM_FIRST+23)
#define	LVM_EDITLABELW	(LVM_FIRST+118)
#define	LVM_ENABLEGROUPVIEW	(LVM_FIRST+157)
#define	LVM_ENSUREVISIBLE	(LVM_FIRST+19)
#define	LVM_FINDITEMA	(LVM_FIRST+13)
#define	LVM_FINDITEMW	(LVM_FIRST+83)
#define	LVM_GETBKCOLOR	(LVM_FIRST+0)
#define	LVM_GETBKIMAGEA	(LVM_FIRST+69)
#define	LVM_GETBKIMAGEW	(LVM_FIRST+139)
#define	LVM_GETCALLBACKMASK	(LVM_FIRST+10)
#define	LVM_GETCOLUMNA	(LVM_FIRST+25)
#define	LVM_GETCOLUMNORDERARRAY	(LVM_FIRST+59)
#define	LVM_GETCOLUMNW	(LVM_FIRST+95)
#define	LVM_GETCOLUMNWIDTH	(LVM_FIRST+29)
#define	LVM_GETCOUNTPERPAGE	(LVM_FIRST+40)
#define	LVM_GETEDITCONTROL	(LVM_FIRST+24)
#define	LVM_GETEXTENDEDLISTVIEWSTYLE	(LVM_FIRST+55)
#define	LVM_GETGROUPINFO	(LVM_FIRST+149)
#define	LVM_GETGROUPMETRICS	(LVM_FIRST+156)
#define	LVM_GETHEADER	(LVM_FIRST+31)
#define	LVM_GETHOTCURSOR	(LVM_FIRST+63)
#define	LVM_GETHOTITEM	(LVM_FIRST+61)
#define	LVM_GETHOVERTIME	(LVM_FIRST+72)
#define	LVM_GETIMAGELIST	(LVM_FIRST+2)
#define	LVM_GETINSERTMARK	(LVM_FIRST+167)
#define	LVM_GETINSERTMARKCOLOR	(LVM_FIRST+171)
#define	LVM_GETINSERTMARKRECT	(LVM_FIRST+169)
#define	LVM_GETISEARCHSTRINGA	(LVM_FIRST+52)
#define	LVM_GETISEARCHSTRINGW	(LVM_FIRST+117)
#define	LVM_GETITEMA	(LVM_FIRST+5)
#define	LVM_GETITEMCOUNT	(LVM_FIRST+4)
#define	LVM_GETITEMPOSITION	(LVM_FIRST+16)
#define	LVM_GETITEMRECT	(LVM_FIRST+14)
#define	LVM_GETITEMSPACING	(LVM_FIRST+51)
#define	LVM_GETITEMSTATE	(LVM_FIRST+44)
#define	LVM_GETITEMTEXTA	(LVM_FIRST+45)
#define	LVM_GETITEMTEXTW	(LVM_FIRST+115)
#define	LVM_GETITEMW	(LVM_FIRST+75)
#define	LVM_GETNEXTITEM	(LVM_FIRST+12)
#define	LVM_GETNUMBEROFWORKAREAS	(LVM_FIRST+73)
#define	LVM_GETORIGIN	(LVM_FIRST+41)
#define	LVM_GETOUTLINECOLOR	(LVM_FIRST+176)
#define	LVM_GETSELECTEDCOLUMN	(LVM_FIRST+174)
#define	LVM_GETSELECTEDCOUNT	(LVM_FIRST+50)
#define	LVM_GETSELECTIONMARK	(LVM_FIRST+66)
#define	LVM_GETSTRINGWIDTHA	(LVM_FIRST+17)
#define	LVM_GETSTRINGWIDTHW	(LVM_FIRST+87)
#define	LVM_GETSUBITEMRECT	(LVM_FIRST+56)
#define	LVM_GETTEXTBKCOLOR	(LVM_FIRST+37)
#define	LVM_GETTEXTCOLOR	(LVM_FIRST+35)
#define	LVM_GETTILEINFO	(LVM_FIRST+165)
#define	LVM_GETTILEVIEWINFO	(LVM_FIRST+163)
#define	LVM_GETTOOLTIPS	(LVM_FIRST+78)
#define	LVM_GETTOPINDEX	(LVM_FIRST+39)
#define	LVM_GETVIEW	(LVM_FIRST+143)
#define	LVM_GETVIEWRECT	(LVM_FIRST+34)
#define	LVM_GETWORKAREAS	(LVM_FIRST+70)
#define	LVM_HASGROUP	(LVM_FIRST+161)
#define	LVM_HITTEST	(LVM_FIRST+18)
#define	LVM_INSERTCOLUMNA	(LVM_FIRST+27)
#define	LVM_INSERTCOLUMNW	(LVM_FIRST+97)
#define	LVM_INSERTGROUP	(LVM_FIRST+145)
#define	LVM_INSERTGROUPSORTED	(LVM_FIRST+159)
#define	LVM_INSERTITEMA	(LVM_FIRST+7)
#define	LVM_INSERTITEMW	(LVM_FIRST+77)
#define	LVM_INSERTMARKHITTEST	(LVM_FIRST+168)
#define	LVM_ISGROUPVIEWENABLED	(LVM_FIRST+175)
#define	LVM_MAPIDTOINDEX	(LVM_FIRST+181)
#define	LVM_MAPINDEXTOID	(LVM_FIRST+180)
#define	LVM_MOVEGROUP	(LVM_FIRST+151)
#define	LVM_MOVEITEMTOGROUP	(LVM_FIRST+154)
#define	LVM_REDRAWITEMS	(LVM_FIRST+21)
#define	LVM_REMOVEALLGROUPS	(LVM_FIRST+160)
#define	LVM_REMOVEGROUP	(LVM_FIRST+150)
#define	LVM_SCROLL	(LVM_FIRST+20)
#define	LVM_SETBKCOLOR	(LVM_FIRST+1)
#define	LVM_SETBKIMAGEA	(LVM_FIRST+68)
#define	LVM_SETBKIMAGEW	(LVM_FIRST+138)
#define	LVM_SETCALLBACKMASK	(LVM_FIRST+11)
#define	LVM_SETCOLUMNA	(LVM_FIRST+26)
#define	LVM_SETCOLUMNORDERARRAY	(LVM_FIRST+58)
#define	LVM_SETCOLUMNW	(LVM_FIRST+96)
#define	LVM_SETCOLUMNWIDTH	(LVM_FIRST+30)
#define	LVM_SETEXTENDEDLISTVIEWSTYLE	(LVM_FIRST+54)
#define	LVM_SETGROUPINFO	(LVM_FIRST+147)
#define	LVM_SETGROUPMETRICS	(LVM_FIRST+155)
#define	LVM_SETHOTCURSOR	(LVM_FIRST+62)
#define	LVM_SETHOTITEM	(LVM_FIRST+60)
#define	LVM_SETHOVERTIME	(LVM_FIRST+71)
#define	LVM_SETICONSPACING	(LVM_FIRST+53)
#define	LVM_SETIMAGELIST	(LVM_FIRST+3)
#define	LVM_SETINFOTIP	(LVM_FIRST+173)
#define	LVM_SETINSERTMARK	(LVM_FIRST+166)
#define	LVM_SETINSERTMARKCOLOR	(LVM_FIRST+170)
#define	LVM_SETITEMA	(LVM_FIRST+6)
#define	LVM_SETITEMCOUNT	(LVM_FIRST+47)
#define	LVM_SETITEMPOSITION	(LVM_FIRST+15)
#define	LVM_SETITEMPOSITION32	(LVM_FIRST+49)
#define	LVM_SETITEMSTATE	(LVM_FIRST+43)
#define	LVM_SETITEMTEXTA	(LVM_FIRST+46)
#define	LVM_SETITEMTEXTW	(LVM_FIRST+116)
#define	LVM_SETITEMW	(LVM_FIRST+76)
#define	LVM_SETOUTLINECOLOR	(LVM_FIRST+177)
#define	LVM_SETSELECTEDCOLUMN	(LVM_FIRST+140)
#define	LVM_SETSELECTIONMARK	(LVM_FIRST+67)
#define	LVM_SETTEXTBKCOLOR	(LVM_FIRST+38)
#define	LVM_SETTEXTCOLOR	(LVM_FIRST+36)
#define	LVM_SETTILEINFO	(LVM_FIRST+164)
#define	LVM_SETTILEVIEWINFO	(LVM_FIRST+162)
#define	LVM_SETTILEWIDTH	(LVM_FIRST+141)
#define	LVM_SETTOOLTIPS	(LVM_FIRST+74)
#define	LVM_SETVIEW	(LVM_FIRST+142)
#define	LVM_SETWORKAREAS	(LVM_FIRST+65)
#define	LVM_SORTGROUPS	(LVM_FIRST+158)
#define	LVM_SORTITEMS	(LVM_FIRST+48)
#define	LVM_SORTITEMSEX	(LVM_FIRST+81)
#define	LVM_SUBITEMHITTEST	(LVM_FIRST+57)
#define	LVM_UPDATE	(LVM_FIRST+42)
#define LVM_GETUNICODEFORMAT CCM_GETUNICODEFORMAT
#define LVM_SETUNICODEFORMAT CCM_SETUNICODEFORMAT
#define LVN_BEGINDRAG	(-109)
#define LVN_BEGINRDRAG	(-111)
#define LVN_COLUMNCLICK	(-108)
#define LVN_DELETEALLITEMS	(-104)
#define LVN_DELETEITEM	(-103)
#define LVN_BEGINLABELEDITW	(-175)
#define LVN_ENDLABELEDITW	(-176)
#define LVN_GETDISPINFOW	(-177)
#define LVN_SETDISPINFOW	(-178)
#define LVN_BEGINLABELEDITA	(-105)
#define LVN_ENDLABELEDITA	(-106)
#define LVN_GETDISPINFOA	(-150)
#define LVN_SETDISPINFOA	(-151)
#define LVN_INSERTITEM	(-102)
#define LVN_ITEMCHANGED	(-101)
#define LVN_ITEMCHANGING	(-100)
#define LVN_KEYDOWN	(-155)
#define LVN_ODCACHEHINT (-113)
#define LVN_ODFINDITEMA (-152)
#define LVN_ODFINDITEMW (-179)
#define LVN_ODSTATECHANGED (-115)
#define LVN_ITEMACTIVATE	(LVN_FIRST-14)
#define LV_MAX_WORKAREAS	16
#define LV_VIEW_ICON	0
#define LV_VIEW_DETAILS	1
#define LV_VIEW_SMALLICON	2
#define LV_VIEW_LIST	3
#define LV_VIEW_TILE	4
#define LV_VIEW_MAX	4
#define LVGF_NONE 0
#define LVGF_HEADER	1
#define LVGF_FOOTER	2
#define LVGF_STATE	4
#define LVGF_ALIGN	8
#define LVGF_GROUPID	0x10
#define LVGS_NORMAL	0
#define LVGS_COLLAPSED	1
#define LVGS_HIDDEN	2
#define LVGA_HEADER_LEFT 1
#define LVGA_HEADER_CENTER 2
#define LVGA_HEADER_RIGHT 4
#define LVGA_FOOTER_LEFT 8
#define LVGA_FOOTER_CENTER 16
#define LVGA_FOOTER_RIGHT 32
#define LVGMF_NONE 0
#define LVGMF_BORDERSIZE 1
#define LVGMF_BORDERCOLOR 2
#define LVGMF_TEXTCOLOR 4
#define LVTVIF_AUTOSIZE 0
#define LVTVIF_FIXEDWIDTH 1
#define LVTVIF_FIXEDHEIGHT 2
#define LVTVIF_FIXEDSIZE 3
#define LVTVIM_TILESIZE 1
#define LVTVIM_COLUMNS 2
#define LVTVIM_LABELMARGIN 4
#define LVIM_AFTER 1
#define LVM_SETWORKAREAS	(LVM_FIRST+65)
#define LVM_GETWORKAREAS	(LVM_FIRST+70)
#define LVM_GETNUMBEROFWORKAREAS	(LVM_FIRST+73)
#define LVM_GETSELECTIONMARK	(LVM_FIRST+66)
#define LVM_SETSELECTIONMARK	(LVM_FIRST+67)
#define LVM_SETHOVERTIME	(LVM_FIRST+71)
#define LVM_GETHOVERTIME	(LVM_FIRST+72)
#define LVM_SETTOOLTIPS	(LVM_FIRST+74)
#define LVM_GETTOOLTIPS	(LVM_FIRST+78)
#define LVM_SORTITEMSEX	(LVM_FIRST+81)
#define LVBKIF_SOURCE_NONE	0
#define LVBKIF_SOURCE_HBITMAP	1
#define LVBKIF_SOURCE_URL	2
#define LVBKIF_SOURCE_MASK	3
#define LVBKIF_STYLE_NORMAL	0
#define LVBKIF_STYLE_TILE	16
#define LVBKIF_STYLE_MASK	16
#define LVBKIF_FLAG_TILEOFFSET	0x00000100
#define LVBKIF_TYPE_WATERMARK	0x10000000
#define LVM_SETBKIMAGEA		(LVM_FIRST+68)
#define LVM_SETBKIMAGEW		(LVM_FIRST+138)
#define LVM_GETBKIMAGEA		(LVM_FIRST+69)
#define LVM_GETBKIMAGEW		(LVM_FIRST+139)
#define LVKF_ALT	1
#define LVKF_CONTROL	2
#define LVKF_SHIFT	4

#ifdef UNICODE
#define ENUMRESTYPEPROC	ENUMRESTYPEPROCW
#define LVBKIMAGE	LVBKIMAGEW
#define LPLVBKIMAGE	LPLVBKIMAGEW
#define LVM_SETBKIMAGE	LVM_SETBKIMAGEW
#define LVM_GETBKIMAGE	LVM_GETBKIMAGEW
#define GetWindowModuleFileName GetWindowModuleFileNameW
#define NMTOOLBAR	NMTOOLBARW
#define LPNMTOOLBAR	LPNMTOOLBARW
#define TCITEMHEADER	TCITEMHEADERW
#define LPTCITEMHEADER	LPTCITEMHEADERW
#else
#define ENUMRESTYPEPROC	ENUMRESTYPEPROCA
#define LVBKIMAGE	LVBKIMAGEA
#define LPLVBKIMAGE	LPLVBKIMAGEA
#define LVM_SETBKIMAGE	LVM_SETBKIMAGEA
#define LVM_GETBKIMAGE	LVM_GETBKIMAGEA
#define GetWindowModuleFileName GetWindowModuleFileNameA
#define NMTOOLBAR	NMTOOLBARA
#define LPNMTOOLBAR	LPNMTOOLBARA
#define TCITEMHEADER	TCITEMHEADERA
#define LPTCITEMHEADER	LPTCITEMHEADERA
#endif

#define NM_CLICK	(-2)
#define NM_DBLCLK	(-3)
#define NM_KILLFOCUS	(-8)
#define NM_OUTOFMEMORY	(-1)
#define NM_RCLICK	(-5)
#define NM_RDBLCLK	(-6)
#define NM_RETURN	(-4)
#define NM_SETFOCUS	(-7)
#define NM_KILLFOCUS	(-8)
#define NM_CUSTOMDRAW	(-12)
#define NM_HOVER	(-13)
#define NM_NCHITTEST	(-14)
#define NM_KEYDOWN	(-15)
#define NM_RELEASEDCAPTURE (-16)
#define NM_SETCURSOR	(-17)
#define NM_CHAR		(-18)
#define NM_TOOLTIPSCREATED (-19)
#define NM_LDOWN	(-20)
#define NM_THEMECHANGED (-22)
#define NM_RDOWN	(-21)
#define NM_FIRST	0
#define NM_UPDOWN	NMUPDOWN
#define LPNM_UPDOWN	LPNMUPDOWN
#define PBM_DELTAPOS	1027
#define PBM_SETPOS	1026
#define PBM_SETRANGE	1025
#define PBM_SETSTEP	1028
#define PBM_STEPIT	1029
#define PSM_ADDPAGE	1127
#define PSM_APPLY	1134
#define PSM_CANCELTOCLOSE	1131
#define PSM_CHANGED	1128
#define PSM_GETTABCONTROL	1140
#define PSM_GETCURRENTPAGEHWND	1142
#define PSM_ISDIALOGMESSAGE	1141
#define PSM_PRESSBUTTON	1137
#define PSM_QUERYSIBLINGS	1132
#define PSM_REBOOTSYSTEM	1130
#define PSM_REMOVEPAGE	1126
#define PSM_RESTARTWINDOWS	1129
#define PSM_SETCURSEL	1125
#define PSM_SETCURSELID	1138
#define PSM_SETFINISHTEXTW	1145
#define PSM_SETTITLEW	1144
#define PSM_SETFINISHTEXTA	1139
#define PSM_SETTITLEA	1135
#define PSM_SETWIZBUTTONS	1136
#define PSM_UNCHANGED	1133
#define PSN_APPLY	(-202)
#define PSN_HELP	(-205)
#define PSN_KILLACTIVE	(-201)
#define PSN_QUERYCANCEL	(-209)
#define PSN_RESET	(-203)
#define PSN_SETACTIVE	(-200)
#define PSN_WIZBACK	(-206)
#define PSN_WIZFINISH	(-208)
#define PSN_WIZNEXT	(-207)
#define SB_GETBORDERS	1031
#define SB_GETPARTS	1030
#define SB_GETRECT	1034
#define SB_GETTEXTW	1037
#define SB_GETTEXTLENGTHW	1036
#define SB_SETTEXTW	1035
#define SB_GETTEXTA	1026
#define SB_GETTEXTLENGTHA	1027
#define SB_SETTEXTA	1025
#define SB_SETMINHEIGHT	1032
#define SB_SETPARTS	1028
#define SB_SIMPLE	1033
#define SBM_ENABLE_ARROWS	228
#define SBM_GETPOS	225
#define SBM_GETRANGE	227
#define SBM_GETSCROLLINFO	234
#define SBM_SETPOS	224
#define SBM_SETRANGE	226
#define SBM_SETRANGEREDRAW	230
#define SBM_SETSCROLLINFO	233
#define STM_GETICON	369
#define STM_GETIMAGE	371
#define STM_SETICON	368
#define STM_SETIMAGE	370
#define STN_CLICKED	0
#define STN_DBLCLK	1
#define STN_DISABLE	3
#define STN_ENABLE	2
#define TB_ADDBITMAP	1043
#define TB_ADDBUTTONS	1044
#define TB_AUTOSIZE	1057
#define TB_BUTTONCOUNT	1048
#define TB_BUTTONSTRUCTSIZE	1054
#define TB_CHANGEBITMAP	1067
#define TB_CHECKBUTTON	1026
#define TB_COMMANDTOINDEX	1049
#define TB_CUSTOMIZE	1051
#define TB_DELETEBUTTON	1046
#define TB_ENABLEBUTTON	1025
#define TB_GETBITMAP	1068
#define TB_GETBITMAPFLAGS	1065
#define TB_GETBUTTON	1047
#define TB_ADDSTRINGW	1101
#define TB_GETBUTTONTEXTW	1099
#define TB_SAVERESTOREW	1100
#define TB_ADDSTRINGA	1052
#define TB_GETBUTTONTEXTA	1069
#define TB_SAVERESTOREA	1050
#define TB_GETITEMRECT	1053
#define TB_GETROWS	1064
#define TB_GETSTATE	1042
#define TB_GETTOOLTIPS	1059
#define TB_HIDEBUTTON	1028
#define TB_INDETERMINATE	1029
#define TB_INSERTBUTTON	1045
#define TB_INSERTBUTTONW	(WM_USER+67)
#define TB_ADDBUTTONSW	(WM_USER+68)
#define TB_HITTEST	(WM_USER+69)
#define TB_ISBUTTONCHECKED	1034
#define TB_ISBUTTONENABLED	1033
#define TB_ISBUTTONHIDDEN	1036
#define TB_ISBUTTONINDETERMINATE	1037
#define TB_ISBUTTONPRESSED	1035
#define TB_PRESSBUTTON	1027
#define TB_SETBITMAPSIZE	1056
#define TB_SETBUTTONSIZE	1055
#define TB_SETCMDID	1066
#define TB_SETPARENT	1061
#define TB_SETROWS	1063
#define TB_SETSTATE	1041
#define TB_SETTOOLTIPS	1060
#define TB_HITTEST	(WM_USER+69)
#define TB_REPLACEBITMAP (WM_USER+46)
#define TB_SETINDENT	(WM_USER+47)
#define TB_SETIMAGELIST	(WM_USER+48)
#define TB_GETIMAGELIST	(WM_USER+49)
#define TB_LOADIMAGES	(WM_USER+50)
#define TB_GETRECT	(WM_USER+51)
#define TB_SETHOTIMAGELIST	(WM_USER+52)
#define TB_GETHOTIMAGELIST	(WM_USER+53)
#define TB_SETDISABLEDIMAGELIST (WM_USER+54)
#define TB_GETDISABLEDIMAGELIST	(WM_USER+55)
#define TB_SETSTYLE	(WM_USER+56)
#define TB_GETSTYLE	(WM_USER+57)
#define TB_GETBUTTONSIZE	(WM_USER+58)
#define TB_SETBUTTONWIDTH	(WM_USER+59)
#define TB_SETMAXTEXTROWS	(WM_USER+60)
#define TB_GETTEXTROWS	(WM_USER+61)
#define TB_GETINSERTMARK	(WM_USER+79)
#define TB_SETINSERTMARK	(WM_USER+80)
#define TB_INSERTMARKHITTEST	(WM_USER+81)
#define TB_MOVEBUTTON		(WM_USER+82)
#define TB_GETMAXSIZE		(WM_USER+83)
#define TB_SETEXTENDEDSTYLE	(WM_USER+84)
#define TB_GETEXTENDEDSTYLE	(WM_USER+85)
#define TB_GETPADDING		(WM_USER+86)
#define TB_SETPADDING		(WM_USER+87)
#define TB_SETINSERTMARKCOLOR	(WM_USER+88)
#define TB_GETINSERTMARKCOLOR	(WM_USER+89)
#define TB_SETCOLORSCHEME	CCM_SETCOLORSCHEME
#define TB_GETCOLORSCHEME	CCM_GETCOLORSCHEME
#define TB_SETUNICODEFORMAT	CCM_SETUNICODEFORMAT
#define TB_GETUNICODEFORMAT	CCM_GETUNICODEFORMAT
#define TB_MAPACCELERATORW	(WM_USER+90)
#define TB_ADDBUTTONSA		(WM_USER + 20)
#define TB_INSERTBUTTONA	(WM_USER + 21)
#define TB_GETOBJECT		(WM_USER + 62)
#define TB_GETHOTITEM		(WM_USER + 71)
#define TB_SETHOTITEM		(WM_USER + 72)
#define TB_SETANCHORHIGHLIGHT	(WM_USER + 73)
#define TB_GETANCHORHIGHLIGHT	(WM_USER + 74)
#define TB_GETBUTTONINFOW	(WM_USER + 63)
#define TB_SETBUTTONINFOW	(WM_USER + 64)
#define TB_SETDRAWTEXTFLAGS	(WM_USER + 70)
#define TB_GETSTRINGW		(WM_USER + 91)
#define TB_GETSTRINGA		(WM_USER + 92)
#define TB_GETMETRICS		(WM_USER + 101)
#define TB_SETMETRICS		(WM_USER + 102)
#define TB_SETWINDOWTHEME     CCM_SETWINDOWTHEME
#define TBNF_IMAGE	1
#define TBNF_TEXT	2
#define TBNF_DI_SETITEM 0x10000000
#define HICF_OTHER	0
#define HICF_MOUSE	1
#define HICF_ARROWKEYS	2
#define HICF_ACCELERATOR 4
#define HICF_DUPACCEL	8
#define HICF_ENTERING	0x10
#define HICF_LEAVING	0x20
#define HICF_RESELECT	0x40
#define HICF_LMOUSE	0x80
#define HICF_TOGGLEDROPDOWN 0x100
#define WMN_FIRST	(0U-1000U)
#define WMN_LAST	(0U-1200U)
#define BCN_FIRST	(0U-1250U)
#define BCN_HOTITEMCHANGE (BCN_FIRST + 0x0001)
#define BCN_LAST	(0U-1350U)
#define BST_HOT 0x0200
#define MSGF_COMMCTRL_BEGINDRAG	0x4200
#define CDIS_SHOWKEYBOARDCUES	0x0200
#define MSGF_COMMCTRL_SIZEHEADER	0x4201
#define MSGF_COMMCTRL_DRAGSELECT	0x4202
#define MSGF_COMMCTRL_TOOLBARCUST	0x4203

#ifdef UNICODE
#define TB_GETSTRING TB_GETSTRINGW
#define TB_MAPACCELERATOR	TB_MAPACCELERATORW
#else
#define TB_GETSTRING TB_GETSTRINGA
#define TB_MAPACCELERATOR	TB_MAPACCELERATORA
#endif

#define TBMF_PAD 1
#define TBMF_BARPAD 2
#define TBMF_BUTTONSPACING 4
#define TBBF_LARGE	1
#define TBIF_IMAGE	1
#define TBIF_TEXT	2
#define TBIF_STATE	4
#define TBIF_STYLE	8
#define TBIF_LPARAM	16
#define TBIF_COMMAND	32
#define TBIF_SIZE	64
#define TBIF_BYINDEX	0x80000000
#define PGS_VERT	0
#define PGS_HORZ	1
#define PGS_AUTOSCROLL	2
#define PGS_DRAGNDROP	4
#define PGF_INVISIBLE	0
#define PGF_NORMAL	1
#define PGF_GRAYED	2
#define PGF_DEPRESSED	4
#define PGF_HOT	8
#define PGB_TOPORLEFT	0
#define PGB_BOTTOMORRIGHT 1
#define PGM_SETCHILD	(PGM_FIRST+1)
#define Pager_SetChild(h,C) (void)SendMsg((h),PGM_SETCHILD,0,(LPARAM)(C))
#define PGM_RECALCSIZE	(PGM_FIRST+2)
#define Pager_RecalcSize(hwnd) (void)SendMessage((hwnd),PGM_RECALCSIZE,0,0)
#define PGM_FORWARDMOUSE	(PGM_FIRST+3)
#define Pager_ForwardMouse(hwnd,F) (void)SendMessage((hwnd), PGM_FORWARDMOUSE, (WPARAM)(F),0)
#define PGM_SETBKCOLOR	(PGM_FIRST+4)
#define Pager_SetBkColor(h,c) (COLORREF)SendMessage((h),PGM_SETBKCOLOR,0,(LPARAM)(c))
#define PGM_GETBKCOLOR	(PGM_FIRST+5)
#define Pager_GetBkColor(h) (COLORREF)SendMessage((h),PGM_GETBKCOLOR,0,0)
#define PGM_SETBORDER	(PGM_FIRST+6)
#define Pager_SetBorder(h,B) (int)SNDMSG((h),PGM_SETBORDER,0,(LPARAM)(B))
#define PGM_GETBORDER	(PGM_FIRST+7)
#define Pager_GetBorder(hwnd) (int)SNDMSG((hwnd),PGM_GETBORDER,0,0)
#define PGM_SETPOS	(PGM_FIRST+8)
#define Pager_SetPos(hwnd, iPos) (int)SNDMSG((hwnd),PGM_SETPOS,0,(LPARAM)(iPos))
#define PGM_GETPOS	(PGM_FIRST+9)
#define Pager_GetPos(hwnd) (int)SNDMSG((hwnd),PGM_GETPOS,0,0)
#define PGM_SETBUTTONSIZE	(PGM_FIRST+10)
#define Pager_SetButtonSize(hwnd, iSize) (int)SNDMSG((hwnd), PGM_SETBUTTONSIZE, 0, (LPARAM)(iSize))
#define PGM_GETBUTTONSIZE	(PGM_FIRST+11)
#define Pager_GetButtonSize(hwnd) (int)SNDMSG((hwnd),PGM_GETBUTTONSIZE, 0,0)
#define PGM_GETBUTTONSTATE	(PGM_FIRST+12)
#define Pager_GetButtonState(hwnd, iButton) (DWORD)SNDMSG((hwnd), PGM_GETBUTTONSTATE, 0, (LPARAM)(iButton))
#define PGM_GETDROPTARGET	CCM_GETDROPTARGET
#define Pager_GetDropTarget(h,t) (void)SNDMSG((h),PGM_GETDROPTARGET,0,(LPARAM)(t))
#define PGN_SCROLL	(PGN_FIRST-1)
#define PGN_CALCSIZE	(PGN_FIRST-2)
#define PGF_CALCWIDTH	1
#define PGF_CALCHEIGHT	2
#define PGF_SCROLLUP	1
#define PGF_SCROLLDOWN	2
#define PGF_SCROLLLEFT	4
#define PGF_SCROLLRIGHT	8
#define PGK_SHIFT	1
#define PGK_CONTROL	2
#define PGK_MENU	4
#define TBM_CLEARSEL	1043
#define TBM_CLEARTICS	1033
#define TBM_GETCHANNELRECT	1050
#define TBM_GETLINESIZE	1048
#define TBM_GETNUMTICS	1040
#define TBM_GETPAGESIZE	1046
#define TBM_GETPOS	1024
#define TBM_GETPTICS	1038
#define TBM_GETRANGEMAX	1026
#define TBM_GETRANGEMIN	1025
#define TBM_GETSELEND	1042
#define TBM_GETSELSTART	1041
#define TBM_GETTHUMBLENGTH	1052
#define TBM_GETTHUMBRECT	1049
#define TBM_GETTIC	1027
#define TBM_GETTICPOS	1039
#define TBM_SETLINESIZE	1047
#define TBM_SETPAGESIZE	1045
#define TBM_SETPOS	1029
#define TBM_SETRANGE	1030
#define TBM_SETRANGEMAX	1032
#define TBM_SETRANGEMIN	1031
#define TBM_SETSEL	1034
#define TBM_SETSELEND	1036
#define TBM_SETSELSTART	1035
#define TBM_SETTHUMBLENGTH	1051
#define TBM_SETTIC	1028
#define TBM_SETTICFREQ	1044
#define TBM_GETUNICODEFORMAT CCM_GETUNICODEFORMAT
#define TBM_SETUNICODEFORMAT CCM_SETUNICODEFORMAT
#define	TBN_FIRST	(-700U)
#define TBN_BEGINADJUST	(-703U)
#define TBN_BEGINDRAG	(-701U)
#define TBN_CUSTHELP	(-709U)
#define TBN_ENDADJUST	(-704U)
#define TBN_ENDDRAG	(-702U)
#define TBN_GETBUTTONINFOW	(-720U)
#define TBN_GETBUTTONINFOA	(-700U)
#define TBN_QUERYDELETE	(-707U)
#define TBN_QUERYINSERT	(-706U)
#define TBN_RESET	(-705U)
#define TBN_TOOLBARCHANGE	(-708U)
#define TBN_GETDISPINFOA	(TBN_FIRST-16)
#define TBN_GETDISPINFOW	(TBN_FIRST-17)
#define TBN_HOTITEMCHANGE	(TBN_FIRST - 13)
#define TBN_DRAGOUT	(TBN_FIRST - 14)
#define TBN_DELETINGBUTTON	(TBN_FIRST - 15)
#define TBN_GETINFOTIPA	(TBN_FIRST - 18)
#define TBN_GETINFOTIPW	(TBN_FIRST - 19)
#define TBN_RESTORE	(TBN_FIRST - 21)
#define TBN_SAVE	(TBN_FIRST - 22)
#define TBN_INITCUSTOMIZE	(TBN_FIRST - 23)
#define TBN_DROPDOWN	(TBN_FIRST-10)
#define TBN_GETOBJECT	(TBN_FIRST-12)
#define TBNRF_HIDEHELP	1
#define TBNRF_ENDCUSTOMIZE	2
#define TBDDRET_DEFAULT	0
#define TBDDRET_NODEFAULT	1
#define TBDDRET_TREATPRESSED	2
#define TBN_LAST	(-720U)
#define TCM_FIRST	0x1300
#define TCM_ADJUSTRECT	4904
#define TCM_DELETEALLITEMS	4873
#define TCM_DELETEITEM	4872
#define TCM_GETCURFOCUS	4911
#define TCM_GETCURSEL	4875
#define TCM_GETIMAGELIST	4866
#define TCM_GETITEMW	4924
#define TCM_INSERTITEMW	4926
#define TCM_SETITEMW	4925
#define TCM_GETITEMA	4869
#define TCM_INSERTITEMA	4871
#define TCM_SETITEMA	4870
#define TCM_GETITEMCOUNT	4868
#define TCM_GETITEMRECT	4874
#define TCM_GETROWCOUNT	4908
#define TCM_GETTOOLTIPS	4909
#define TCM_HITTEST	4877
#define TCM_REMOVEIMAGE	4906
#define TCM_SETCURFOCUS	4912
#define TCM_SETCURSEL	4876
#define TCM_SETIMAGELIST	4867
#define TCM_SETITEMEXTRA	4878
#define TCM_SETITEMSIZE	4905
#define TCM_SETPADDING	4907
#define TCM_SETTOOLTIPS	4910
#define TCM_GETUNICODEFORMAT CCM_GETUNICODEFORMAT
#define TCM_SETUNICODEFORMAT CCM_SETUNICODEFORMAT
#define TCM_SETMINTABWIDTH	(TCM_FIRST+49)
#define TCM_DESELECTALL	(TCM_FIRST+50)
#define TCM_HIGHLIGHTITEM	(TCM_FIRST+51)
#define TCM_SETEXTENDEDSTYLE	(TCM_FIRST+52)
#define TCM_GETEXTENDEDSTYLE	(TCM_FIRST+53)
#define TCM_SETUNICODEFORMAT	CCM_SETUNICODEFORMAT
#define TCM_GETUNICODEFORMAT	CCM_GETUNICODEFORMAT
#define TCN_KEYDOWN	(-550)
#define TCN_SELCHANGE	(-551)
#define TCN_SELCHANGING	(-552)
#define TCN_GETOBJECT	(TCN_FIRST-3)
#define TTM_ACTIVATE	1025
#define TTM_ADDTOOLW	1074
#define TTM_DELTOOLW	1075
#define TTM_ENUMTOOLSW	1082
#define TTM_GETCURRENTTOOLW	1083
#define TTM_SETWINDOWTHEME	CCM_SETWINDOWTHEME
#define TTM_GETTEXTW	1080
#define TTM_GETTOOLINFOW	1077
#define TTM_HITTESTW	1079
#define TTM_NEWTOOLRECTW	1076
#define TTM_SETTOOLINFOW	1078
#define TTM_UPDATETIPTEXTW	1081
#define TTM_ADDTOOLA	1028
#define TTM_DELTOOLA	1029
#define TTM_ENUMTOOLSA	1038
#define TTM_GETCURRENTTOOLA	1039
#define TTM_GETTEXTA	1035
#define TTM_GETTOOLINFOA	1032
#define TTM_HITTESTA	1034
#define TTM_NEWTOOLRECTA	1030
#define TTM_SETTOOLINFOA	1033
#define TTM_UPDATETIPTEXTA	1036
#define TTM_GETTOOLCOUNT	1037
#define TTM_RELAYEVENT	1031
#define TTM_SETDELAYTIME	1027
#define TTM_WINDOWFROMPOINT	1040
#define	TTM_POP (WM_USER+28)
#define TTM_SETMARGIN	(WM_USER+26)
#define TTM_GETMARGIN	(WM_USER+27)
#define TTM_GETMAXTIPWIDTH	(WM_USER+25)
#define TTM_SETMAXTIPWIDTH	(WM_USER+24)
#define TTM_TRACKACTIVATE	(WM_USER+17)
#define TTM_TRACKPOSITION	(WM_USER+18)
#define TTM_SETTIPBKCOLOR	(WM_USER+19)
#define TTM_SETTIPTEXTCOLOR	(WM_USER+20)
#define TTM_GETDELAYTIME	(WM_USER+21)
#define TTM_GETTIPBKCOLOR	(WM_USER+22)
#define TTM_GETTIPTEXTCOLOR	(WM_USER+23)
#define TTM_GETBUBBLESIZE	(WM_USER + 30)
#define TTM_ADJUSTRECT	(WM_USER+31)
#define TTM_SETTITLEA	(WM_USER+32)
#define TTM_SETTITLEW	(WM_USER+33)
#define TTM_POPUP	(WM_USER + 34)
#define TTM_GETTITLE	(WM_USER + 35)
#define TTN_GETDISPINFOA	(TTN_FIRST-0)
#define TTN_GETDISPINFOW	(TTN_FIRST-10)
#define TTN_SHOW	(TTN_FIRST-1)
#define TTN_POP	(TTN_FIRST - 2)
#define TTN_NEEDTEXTW	(-530)
#define TTN_NEEDTEXTA	(-520)
#define TVM_FIRST	0x1100
#define TV_FIRST	0x1100
#define TVM_INSERTITEMA	(TV_FIRST)
#define TVM_INSERTITEMW	(TV_FIRST+50)
#define TVM_GETTOOLTIPS	(TV_FIRST+25)
#define TVM_SETTOOLTIPS	(TV_FIRST+24)
#define TVM_SETITEMHEIGHT	(TV_FIRST + 27)
#define TVM_GETITEMHEIGHT	(TV_FIRST + 28)
#define TVM_SETBKCOLOR	(TV_FIRST + 29)
#define TVM_SETTEXTCOLOR	(TV_FIRST + 30)
#define TVM_GETBKCOLOR	(TV_FIRST + 31)
#define TVM_GETTEXTCOLOR	(TV_FIRST + 32)
#define TVM_SETSCROLLTIME	(TV_FIRST + 33)
#define TVM_GETSCROLLTIME	(TV_FIRST + 34)
#define TVM_SETINSERTMARKCOLOR	(TV_FIRST + 37)
#define TVM_GETINSERTMARKCOLOR	(TV_FIRST + 38)
#define TVM_CREATEDRAGIMAGE	4370
#define TVM_DELETEITEM	4353
#define TVM_ENDEDITLABELNOW	4374
#define TVM_ENSUREVISIBLE	4372
#define TVM_EXPAND	4354
#define TVM_GETCOUNT	4357
#define TVM_GETEDITCONTROL	4367
#define TVM_GETIMAGELIST	4360
#define TVM_GETINDENT	4358
#define TVM_GETITEMSTATE	(TV_FIRST+39)
#define TVM_SETLINECOLOR	(TV_FIRST+40)
#define TVM_GETLINECOLOR	(TV_FIRST+41)
#define TVM_GETITEMRECT	4356
#define TVM_GETNEXTITEM	4362
#define TVM_GETVISIBLECOUNT	4368
#define TVM_HITTEST	4369
#define TVM_EDITLABELW	4417
#define TVM_GETISEARCHSTRINGW	4416
#define TVM_GETITEMW	4414
#define TVM_SETITEMW	4415
#define TVM_EDITLABELA	4366
#define TVM_GETISEARCHSTRINGA	4375
#define TVM_GETITEMA	4364
#define TVM_SETITEMA	4365
#define TVM_SELECTITEM	4363
#define TVM_SETIMAGELIST	4361
#define TVM_SETINDENT	4359
#define TVM_SORTCHILDREN	4371
#define TVM_SORTCHILDRENCB	4373
#define TVM_GETUNICODEFORMAT CCM_GETUNICODEFORMAT
#define TVM_SETUNICODEFORMAT CCM_SETUNICODEFORMAT
#define TVN_KEYDOWN	(-412)
#define TVN_BEGINDRAGW	(-456)
#define TVN_BEGINLABELEDITW	(-459)
#define TVN_BEGINRDRAGW	(-457)
#define TVN_DELETEITEMW	(-458)
#define TVN_ENDLABELEDITW	(-460)
#define TVN_GETDISPINFOW	(-452)
#define TVN_ITEMEXPANDEDW	(-455)
#define TVN_ITEMEXPANDINGW	(-454)
#define TVN_SELCHANGEDW	(-451)
#define TVN_SELCHANGINGW	(-450)
#define TVN_SETDISPINFOW	(-453)
#define TVN_BEGINDRAGA	(-407)
#define TVN_BEGINLABELEDITA	(-410)
#define TVN_BEGINRDRAGA	(-408)
#define TVN_DELETEITEMA	(-409)
#define TVN_ENDLABELEDITA	(-411)
#define TVN_GETDISPINFOA	(-403)
#define TVN_ITEMEXPANDEDA	(-406)
#define TVN_ITEMEXPANDINGA	(-405)
#define TVN_SELCHANGEDA	(-402)
#define TVN_SELCHANGINGA	(-401)
#define TVN_SETDISPINFOA	(-404)
#define UDM_GETACCEL	1132
#define UDM_GETBASE	1134
#define UDM_GETBUDDY	1130
#define UDM_GETPOS	1128
#define UDM_GETRANGE	1126
#define UDM_SETACCEL	1131
#define UDM_SETBASE	1133
#define UDM_SETBUDDY	1129
#define UDM_SETPOS	1127
#define UDM_SETRANGE	1125
#define UDM_GETUNICODEFORMAT CCM_GETUNICODEFORMAT
#define UDM_SETUNICODEFORMAT CCM_SETUNICODEFORMAT
#define UDN_DELTAPOS	(-722)

#define WM_NULL	0
#define WM_APP	0x8000
#define WM_ACTIVATE	6
#define WM_ACTIVATEAPP	28
#define WM_ASKCBFORMATNAME	780
#define WM_CANCELJOURNAL	75
#define WM_CANCELMODE	31
#define WM_CAPTURECHANGED	533
#define WM_CHANGECBCHAIN	781
#define WM_CHAR	258
#define WM_CHARTOITEM	47
#define WM_CHILDACTIVATE	34
#define WM_CHOOSEFONT_GETLOGFONT	1025
#define WM_CHOOSEFONT_SETLOGFONT	1125
#define WM_CHOOSEFONT_SETFLAGS	1126
#define WM_CLEAR	771
#define WM_CLOSE	16
#define WM_COMMAND	273
#define WM_COMPACTING	65
#define WM_COMPAREITEM	57
#define WM_CONTEXTMENU	123
#define WM_COPY	769
#define WM_COPYDATA	74
#define WM_CREATE	1
#define WM_CTLCOLORBTN	309
#define WM_CTLCOLORDLG	310
#define WM_CTLCOLOREDIT	307
#define WM_CTLCOLORLISTBOX	308
#define WM_CTLCOLORMSGBOX	306
#define WM_CTLCOLORSCROLLBAR	311
#define WM_CTLCOLORSTATIC	312
#define WM_CUT	768
#define WM_DEADCHAR	259
#define WM_DELETEITEM	45
#define WM_DESTROY	2
#define WM_DESTROYCLIPBOARD	775
#define WM_DEVICECHANGE	537
#define WM_DEVMODECHANGE	27
#define WM_DISPLAYCHANGE	126
#define WM_DRAWCLIPBOARD	776
#define WM_DRAWITEM	43
#define WM_DROPFILES	563
#define WM_ENABLE	10
#define WM_ENDSESSION	22
#define WM_ENTERIDLE	289
#define WM_ENTERMENULOOP	529
#define WM_ENTERSIZEMOVE	561
#define WM_ERASEBKGND	20
#define WM_EXITMENULOOP	530
#define WM_EXITSIZEMOVE	562
#define WM_FONTCHANGE	29
#define WM_GETDLGCODE	135
#define WM_GETFONT	49
#define WM_GETHOTKEY	51
#define WM_GETICON	127
#define WM_GETMINMAXINFO	36
#define WM_GETTEXT	13
#define WM_GETTEXTLENGTH	14
#define WM_HELP	83
#define WM_HOTKEY	786
#define WM_HSCROLL	276
#define WM_HSCROLLCLIPBOARD	782
#define WM_ICONERASEBKGND	39
#define WM_IME_CHAR	646
#define WM_IME_COMPOSITION	271
#define WM_IME_COMPOSITIONFULL	644
#define WM_IME_CONTROL	643
#define WM_IME_ENDCOMPOSITION	270
#define WM_IME_KEYDOWN	656
#define WM_IME_KEYUP	657
#define WM_IME_NOTIFY	642
#define WM_IME_SELECT	645
#define WM_IME_SETCONTEXT	641
#define WM_IME_STARTCOMPOSITION	269
#define WM_INITDIALOG	272
#define WM_INITMENU	278
#define WM_INITMENUPOPUP	279
#define WM_INPUTLANGCHANGE	81
#define WM_INPUTLANGCHANGEREQUEST	80
#define WM_INPUT 0xff
#define WM_KEYDOWN	256
#define WM_KEYUP	257
#define WM_KILLFOCUS	8
#define WM_LBUTTONDBLCLK	515
#define WM_LBUTTONDOWN	513
#define WM_LBUTTONUP	514
#define WM_MBUTTONDBLCLK	521
#define WM_MBUTTONDOWN	519
#define WM_MBUTTONUP	520
#define WM_MDIACTIVATE	546
#define WM_MDICASCADE	551
#define WM_MDICREATE	544
#define WM_MDIDESTROY	545
#define WM_MDIGETACTIVE	553
#define WM_MDIICONARRANGE	552
#define WM_MDIMAXIMIZE	549
#define WM_MDINEXT	548
#define WM_MDIREFRESHMENU	564
#define WM_MDIRESTORE	547
#define WM_MDISETMENU	560
#define WM_MDITILE	550
#define WM_MEASUREITEM	44
#define WM_MENUCHAR	288
#define WM_MENUSELECT	287
#define WM_MENURBUTTONUP 0x0122
#define WM_MENUDRAG	0x0123
#define WM_MENUGETOBJECT 0x0124
#define WM_UNINITMENUPOPUP 0x0125
#define WM_MENUCOMMAND	0x0126
#define WM_CHANGEUISTATE 0x0127
#define WM_UPDATEUISTATE 0x0128
#define WM_QUERYUISTATE	0x0129
#define UIS_SET	1
#define UIS_CLEAR	2
#define UIS_INITIALIZE 3
#define WM_MOUSEACTIVATE	33
#define WM_MOUSEMOVE	512
#define WM_MOUSEHOVER	0x2a1
#define WM_MOUSELEAVE	0x2a3
#define WM_MOUSEWHEEL	0x20A
#define WM_MOVE	3
#define WM_MOVING	534
#define WM_NCACTIVATE	134
#define WM_NCCALCSIZE	131
#define WM_NCCREATE	129
#define WM_NCDESTROY	130
#define WM_NCHITTEST	132
#define WM_NCLBUTTONDBLCLK	163
#define WM_NCLBUTTONDOWN	161
#define WM_NCLBUTTONUP	162
#define WM_NCMBUTTONDBLCLK	169
#define WM_NCMBUTTONDOWN	167
#define WM_NCMBUTTONUP	168
#define WM_NCMOUSEMOVE	160
#define WM_NCPAINT	133
#define WM_NCRBUTTONDBLCLK	166
#define WM_NCRBUTTONDOWN	164
#define WM_NCRBUTTONUP	165
#define WM_NEXTDLGCTL	40
#define WM_NOTIFY	78
#define WM_NOTIFYFORMAT	85
#define WM_PAINT	15
#define WM_PAINTCLIPBOARD	777
#define WM_PAINTICON	38
#define WM_PALETTECHANGED	785
#define WM_PALETTEISCHANGING	784
#define WM_PARENTNOTIFY	528
#define WM_PASTE	770
#define WM_PENWINFIRST	896
#define WM_SYNCPAINT	0x0088
#define WM_AFXFIRST	0x0360
#define WM_AFXLAST	0x037F
#define WM_HANDHELDFIRST 0x0358
#define WM_HANDHELDLAST 0x035F
#define WM_PENWINLAST	911
#define WM_POWER	72
#define WM_POWERBROADCAST	536
#define WM_PRINT	791
#define WM_PRINTCLIENT	792
#define WM_PSD_ENVSTAMPRECT	1029
#define WM_PSD_FULLPAGERECT	1025
#define WM_PSD_GREEKTEXTRECT	1028
#define WM_PSD_MARGINRECT	1027
#define WM_PSD_MINMARGINRECT	1026
#define WM_PSD_PAGESETUPDLG	1024
#define WM_PSD_YAFULLPAGERECT	1030
#define WM_QUERYDRAGICON	55
#define WM_QUERYENDSESSION	17
#define WM_QUERYNEWPALETTE	783
#define WM_QUERYOPEN	19
#define WM_QUEUESYNC	35
#define WM_QUIT	18
#define WM_RBUTTONDBLCLK	518
#define WM_RBUTTONDOWN	516
#define WM_RBUTTONUP	517
#define WM_RENDERALLFORMATS	774
#define WM_RENDERFORMAT	773
#define WM_SETCURSOR	32
#define WM_SETFOCUS	7
#define WM_SETFONT	48
#define WM_SETHOTKEY	50
#define WM_SETICON	128
#define WM_SETREDRAW	11
#define WM_SETTEXT	12
#define WM_SETTINGCHANGE	26
#define WM_SHOWWINDOW	24
#define WM_SIZE	5
#define WM_SIZECLIPBOARD	779
#define WM_SIZING	532
#define WM_SPOOLERSTATUS	42
#define WM_STYLECHANGED	125
#define WM_STYLECHANGING	124
#define WM_SYSCHAR	262
#define WM_SYSCOLORCHANGE	21
#define WM_SYSCOMMAND	274
#define WM_SYSDEADCHAR	263
#define WM_SYSKEYDOWN	260
#define WM_SYSKEYUP	261
#define WM_TCARD	82
#define WM_TIMECHANGE	30
#define WM_TIMER	275
#define WM_UNDO	772
#define WM_USER	1024
#define WM_USERCHANGED	84
#define WM_VKEYTOITEM	46
#define WM_VSCROLL	277
#define WM_VSCROLLCLIPBOARD	778
#define WM_WINDOWPOSCHANGED	71
#define WM_WINDOWPOSCHANGING	70
#define WM_XBUTTONDOWN	0x020B
#define WM_XBUTTONUP	0x020C
#define WM_XBUTTONDBLCLK	0x020D
#define WM_WININICHANGE	26
#define WM_KEYFIRST	256
#define WM_KEYLAST	264
#define WM_MOUSEFIRST	512
#define WM_MOUSELAST 0x020D
#define WM_NEXTMENU	0x0213
#define WM_CHANGEUISTATE	0x0127
#define WM_UPDATEUISTATE	0x0128
#define WM_QUERYUISTATE	0x0129
#define WM_WTSSESSION_CHANGE 0x02B1
#define WM_LBTRACKPOINT	0x0131
#define WM_GETOBJECT 0x003D
#define WM_COMMNOTIFY 0x0044
#define WM_TABLET_FIRST	0x02c0
#define WM_TABLET_LAST	0x02df
#define WM_IME_REQUEST	0x0288
#define WM_IME_KEYLAST 0x010F
#define WM_NCMOUSEHOVER	0x02A0
#define WM_NCMOUSELEAVE 0x02A2

#define COMCTL32_VERSION 6
#define CCM_SETVERSION (CCM_FIRST+0x7)
#define CCM_GETVERSION (CCM_FIRST+0x8)
#define CCM_SETNOTIFYWINDOW (CCM_FIRST+0x9)
#define CCM_SETWINDOWTHEME    (CCM_FIRST + 0xb)
#define CCM_DPISCALE        (CCM_FIRST + 0xc)
#define INFOTIPSIZE	1024
#define PGM_FIRST	0x1400
#define CCM_FIRST	0x2000
#define CCM_LAST	(CCM_FIRST + 0x200)
#define CCM_SETBKCOLOR	(CCM_FIRST + 1)
#define CCM_SETCOLORSCHEME	(CCM_FIRST + 2)
#define CCM_GETCOLORSCHEME	(CCM_FIRST + 3)
#define CCM_GETDROPTARGET	(CCM_FIRST + 4)
#define CCM_SETUNICODEFORMAT	(CCM_FIRST + 5)
#define CCM_GETUNICODEFORMAT	(CCM_FIRST + 6)
#define CBEM_INSERTITEMA	(WM_USER+1)
#define CBEM_SETIMAGELIST	(WM_USER+2)
#define CBEM_GETIMAGELIST	(WM_USER+3)
#define CBEM_GETITEMA		(WM_USER+4)
#define CBEM_SETITEMA		(WM_USER+5)
#define CBEM_DELETEITEM	CB_DELETESTRING
#define CBEM_GETCOMBOCONTROL	(WM_USER+6)
#define CBEM_GETEDITCONTROL	(WM_USER+7)
#define CBEM_SETEXSTYLE		(WM_USER+8)
#define CBEM_SETEXTENDEDSTYLE	(WM_USER+14)
#define CBEM_GETEXSTYLE		(WM_USER+9)
#define CBEM_GETEXTENDEDSTYLE	(WM_USER+9)
#define CBEM_SETUNICODEFORMAT	CCM_SETUNICODEFORMAT
#define CBEM_GETUNICODEFORMAT	CCM_GETUNICODEFORMAT
#define CBEM_HASEDITCHANGED	(WM_USER+10)
#define CBEM_INSERTITEMW	(WM_USER+11)
#define CBEM_SETITEMW	(WM_USER+12)
#define CBEM_GETITEMW	(WM_USER+13)
/* Defines.h WIN32 definitions */
#undef MAX_PATH
#define MAX_PATH	260
#define UNICODE_NULL ((WCHAR)0)
#define LF_FACESIZE	32
#define LF_FULLFACESIZE	64
#define ELF_VENDOR_SIZE	4
#define SECURITY_STATIC_TRACKING	0
#define SECURITY_DYNAMIC_TRACKING	1
#define MAX_DEFAULTCHAR	2
#define MAX_LEADBYTES	12
#define EXCEPTION_MAXIMUM_PARAMETERS	15
#define CCHDEVICENAME	32
#define CCHFORMNAME	32
#define MENU_TEXT_LEN	40
#define MAX_LANA	254
#define NCBNAMSZ	16
#define NETBIOS_NAME_LEN	16
#define OFS_MAXPATHNAME	128
#define MAX_TAB_STOPS	32
#define ANYSIZE_ARRAY	1
#define FILE_BEGIN	0
#define FILE_CURRENT	1
#define FILE_END	2
#define OF_READ	0
#define OF_READWRITE	2
#define OF_WRITE	1
#define OF_SHARE_COMPAT	0
#define OF_SHARE_DENY_NONE	64
#define OF_SHARE_DENY_READ	48
#define OF_SHARE_DENY_WRITE	32
#define OF_SHARE_EXCLUSIVE	16
#define OF_CANCEL	2048
#define OF_CREATE	4096
#define OF_DELETE	512
#define OF_EXIST	16384
#define OF_PARSE	256
#define OF_PROMPT	8192
#define OF_REOPEN	32768
#define OF_VERIFY	1024
#define HKL_NEXT	1
#define HKL_PREV	0
#define KLF_REORDER	8
#define KLF_UNLOADPREVIOUS	4
#define KLF_ACTIVATE	1
#define KLF_NOTELLSHELL	128
#define KLF_REPLACELANG	16
#define KLF_SUBSTITUTE_OK	2
#define MF_BITMAP	4
#define MF_CHECKED	8
#define MF_DISABLED	2
#define MF_ENABLED	0
#define MF_GRAYED	1
#define MF_MENUBARBREAK	32
#define MF_MENUBREAK	64
#define MF_OWNERDRAW	256
#define MF_POPUP	16
#define MF_SEPARATOR	0x800
#define MF_STRING	0
#define MF_UNCHECKED	0
#define MF_DEFAULT	4096
#define MF_SYSMENU	0x2000
#define MF_HELP		0x4000
#define MF_END	128
#define MF_RIGHTJUSTIFY 0x4000
#define MF_MOUSESELECT 0x8000
#define BLACKNESS	0x42
#define NOTSRCERASE	0x1100A6
#define NOTSRCCOPY	0x330008
#define SRCERASE	0x440328
#define DSTINVERT	0x550009
#define PATINVERT	0x5A0049
#define SRCINVERT	0x660046
#define SRCAND	0x8800C6
#define MERGEPAINT	0xBB0226
#define MERGECOPY	0xC000CA
#define SRCCOPY	0xCC0020
#define SRCPAINT	0xEE0086
#define PATCOPY	0xF00021
#define PATPAINT	0xFB0A09
#define WHITENESS	0xFF0062
#define NOMIRRORBITMAP	0x80000000
#define CAPTUREBLT	0x40000000
#define R2_BLACK	1
#define R2_COPYPEN	13
#define R2_MASKNOTPEN	3
#define R2_MASKPEN	9
#define R2_MASKPENNOT	5
#define R2_MERGENOTPEN	12
#define R2_MERGEPEN	15
#define R2_MERGEPENNOT	14
#define R2_NOP	11
#define R2_NOT	6
#define R2_NOTCOPYPEN	4
#define R2_NOTMASKPEN	8
#define R2_NOTMERGEPEN	2
#define R2_NOTXORPEN	10
#define R2_WHITE	16
#define R2_XORPEN	7
#define R2_LAST		16
#define BSF_FLUSHDISK	4
#define BSF_FORCEIFHUNG	32
#define BSF_IGNORECURRENTTASK	2
#define BSF_NOHANG	8
#define BSF_POSTMESSAGE	16
#define BSF_QUERY	1
#define BSM_ALLCOMPONENTS	0
#define BSM_APPLICATIONS	8
#define BSM_INSTALLABLEDRIVERS	4
#define BSM_NETDRIVER	2
#define BSM_VXDS	1
#define BROADCAST_QUERY_DENY	1112363332
#define NMPWAIT_NOWAIT	1
#define NMPWAIT_WAIT_FOREVER	(-1)
#define NMPWAIT_USE_DEFAULT_WAIT	0
#define MDITILE_SKIPDISABLED	2
#define MDITILE_HORIZONTAL	1
#define MDITILE_VERTICAL	0
#define HCBT_ACTIVATE	5
#define HCBT_CLICKSKIPPED	6
#define HCBT_CREATEWND	3
#define HCBT_DESTROYWND	4
#define HCBT_KEYSKIPPED	7
#define HCBT_MINMAX	1
#define HCBT_MOVESIZE	0
#define HCBT_QS	2
#define HCBT_SETFOCUS	9
#define HCBT_SYSCOMMAND	8
#define DM_BITSPERPEL	0x40000
#define DM_PELSWIDTH	0x80000
#define DM_PELSHEIGHT	0x100000
#define DM_DISPLAYFLAGS	0x200000
#define DM_DISPLAYFREQUENCY 0x400000
#define CDS_UPDATEREGISTRY	1
#define CDS_TEST	2
#define CDS_GLOBAL	8
#define CDS_FULLSCREEN	4
#define CDS_SETPRIMARY	16
#define CDS_VIDEOPARAMETERS 32
#define CDS_RESET	0x40000000
#define CDS_NORESET	0x10000000
#define DISP_CHANGE_SUCCESSFUL	0
#define DISP_CHANGE_RESTART	1
#define DISP_CHANGE_BADPARAM     (-5)
#define DISP_CHANGE_BADFLAGS	(-4)
#define DISP_CHANGE_FAILED	(-1)
#define DISP_CHANGE_BADMODE	(-2)
#define DISP_CHANGE_NOTUPDATED	(-3)
#define BST_CHECKED	1
#define BST_INDETERMINATE	2
#define BST_UNCHECKED	0
#define BST_FOCUS	8
#define BST_PUSHED	4
#define MF_BYCOMMAND	0
#define MF_BYPOSITION	0x400
#define MF_UNCHECKED	0
#define MF_HILITE	128
#define MF_UNHILITE	0
#define CWP_ALL	0
#define CWP_SKIPINVISIBLE	1
#define CWP_SKIPDISABLED	2
#define CWP_SKIPTRANSPARENT	4
#define CE_BREAK	16
#define CE_DNS	2048
#define CE_FRAME	8
#define CE_IOE	1024
#define CE_MODE	32768
#define CE_OOP	4096
#define CE_OVERRUN	2
#define CE_PTO	512
#define CE_RXOVER	1
#define CE_RXPARITY	4
#define CE_TXFULL	256
#define RGN_AND	1
#define RGN_COPY	5
#define RGN_DIFF	4
#define RGN_OR	2
#define RGN_XOR	3
#define NULLREGION	1
#define SIMPLEREGION	2
#define COMPLEXREGION	3
#define ERROR	0
#define RGN_ERROR	ERROR
#define RGN_MIN	RGN_AND
#define RGN_MAX	RGN_COPY
#define LOCALE_SYSTEM_DEFAULT	0x800
#define LOCALE_USER_DEFAULT	0x400
#define NORM_IGNORECASE	1
#define NORM_IGNOREKANATYPE	65536
#define NORM_IGNORENONSPACE	2
#define NORM_IGNORESYMBOLS	4
#define NORM_IGNOREWIDTH	131072
#define SORT_STRINGSORT	4096
#define LCMAP_BYTEREV	2048
#define LCMAP_FULLWIDTH	8388608
#define LCMAP_HALFWIDTH	4194304
#define LCMAP_HIRAGANA	1048576
#define LCMAP_KATAKANA	2097152
#define LCMAP_LOWERCASE	256
#define LCMAP_SORTKEY	1024
#define LCMAP_UPPERCASE	512
#define DBG_CONTINUE ((DWORD)0x10002)
#define DBG_TERMINATE_THREAD ((DWORD)0x40010003)
#define DBG_TERMINATE_PROCESS ((DWORD)0x40010004)
#define DBG_CONTROL_C ((DWORD)0x40010005)
#define DBG_CONTROL_BREAK ((DWORD)0x40010008)
#define DBG_EXCEPTION_NOT_HANDLED ((DWORD)0x80010001)
#define IMAGE_BITMAP	0
#define IMAGE_CURSOR	2
#define IMAGE_ENHMETAFILE	1
#define IMAGE_ICON	1
#define LR_COPYDELETEORG	8
#define LR_COPYRETURNORG	4
#define LR_MONOCHROME	1
#define LR_DEFAULTSIZE	64
#define DF_ALLOWOTHERACCOUNTHOOK	1
#define DESKTOP_CREATEMENU	4
#define DESKTOP_CREATEWINDOW	2
#define DESKTOP_ENUMERATE	64
#define DESKTOP_HOOKCONTROL	8
#define DESKTOP_JOURNALPLAYBACK	32
#define DESKTOP_JOURNALRECORD	16
#define DESKTOP_READOBJECTS	1
#define DESKTOP_SWITCHDESKTOP	256
#define DESKTOP_WRITEOBJECTS	128
#define WSF_VISIBLE	1
#define CBM_INIT	4
#define DIB_PAL_COLORS	1
#define DIB_RGB_COLORS	0
#define GENERIC_READ	0x80000000
#define GENERIC_WRITE	0x40000000
#define FILE_SHARE_READ	1
#define FILE_SHARE_WRITE	2
#define FILE_SHARE_DELETE 4
#define CONSOLE_TEXTMODE_BUFFER	1
#define CREATE_NEW	1
#define CREATE_ALWAYS	2
#define OPEN_EXISTING	3
#define OPEN_ALWAYS	4
#define TRUNCATE_EXISTING	5
#define FILE_ATTRIBUTE_ARCHIVE	32
#define FILE_ATTRIBUTE_COMPRESSED	2048
#define FILE_ATTRIBUTE_NORMAL	128
#define FILE_ATTRIBUTE_DIRECTORY	16
#define FILE_ATTRIBUTE_HIDDEN	2
#define FILE_ATTRIBUTE_READONLY	1
#define FILE_ATTRIBUTE_SYSTEM	4
#define FILE_ATTRIBUTE_TEMPORARY	256
#define FILE_ATTRIBUTE_SPARSE_FILE 0x200
#define FILE_ATTRIBUTE_REPARSE_POINT 0x400
#define FILE_ATTRIBUTE_OFFLINE 0x1000
#define FILE_ATTRIBUTE_NOT_CONTENT_INDEXED 0x00002000
#define FILE_ATTRIBUTE_ENCRYPTED 0x4000
#define FILE_FLAG_WRITE_THROUGH	0x80000000
#define FILE_FLAG_OVERLAPPED	1073741824
#define FILE_FLAG_NO_BUFFERING	536870912
#define FILE_FLAG_RANDOM_ACCESS	268435456
#define FILE_FLAG_SEQUENTIAL_SCAN	134217728
#define FILE_FLAG_DELETE_ON_CLOSE	67108864
#define FILE_FLAG_BACKUP_SEMANTICS	33554432
#define FILE_FLAG_POSIX_SEMANTICS	16777216
#define FILE_FLAG_OPEN_REPARSE_POINT	0x200000
#define FILE_FLAG_OPEN_NO_RECALL	0x100000
#define FILE_FLAG_FIRST_PIPE_INSTANCE	0x00080000
#define SECURITY_ANONYMOUS	0
#define SECURITY_IDENTIFICATION	65536
#define SECURITY_IMPERSONATION	131072
#define SECURITY_DELEGATION	196608
#define SECURITY_CONTEXT_TRACKING	262144
#define SECURITY_EFFECTIVE_ONLY	524288
#define SECURITY_SQOS_PRESENT	1048576
#define PAGE_READONLY	2
#define PAGE_READWRITE	4
#define PAGE_WRITECOPY	8
#define SEC_COMMIT	134217728
#define SEC_IMAGE	16777216
#define SEC_NOCACHE	268435456
#define SEC_RESERVE	67108864
#define MEM_COMMIT	4096
#define MEM_RESERVE	8192
#define MEM_TOP_DOWN	1048576
#define PAGE_EXECUTE	16
#define PAGE_EXECUTE_READ	32
#define PAGE_EXECUTE_READWRITE	64
#define PAGE_GUARD	256
#define PAGE_NOACCESS	1
#define PAGE_NOCACHE	512
#define MEM_COMMIT	4096
#define MEM_FREE	65536
#define MEM_RESERVE	8192
#define MEM_IMAGE	16777216
#define MEM_MAPPED	262144
#define MEM_PRIVATE	131072
#define MEM_DECOMMIT	16384
#define MEM_RELEASE	32768
#define WRITE_WATCH_FLAG_RESET 1
#define FILE_READ_DATA	1
#define FILE_LIST_DIRECTORY	1
#define FILE_WRITE_DATA	2
#define FILE_ADD_FILE	2
#define FILE_APPEND_DATA	4
#define FILE_ADD_SUBDIRECTORY	4
#define FILE_CREATE_PIPE_INSTANCE 4
#define FILE_READ_EA	8
#define FILE_WRITE_EA	0x10
#define FILE_EXECUTE	0x20
#define FILE_TRAVERSE	0x0020
#define FILE_DELETE_CHILD	0x0040
#define FILE_READ_ATTRIBUTES	0x0080
#define FILE_WRITE_ATTRIBUTES	0x100
#define FILE_ALL_ACCESS (STANDARD_RIGHTS_REQUIRED|SYNCHRONIZE|0x1FF)
#define FILE_GENERIC_READ (STANDARD_RIGHTS_READ|FILE_READ_DATA| FILE_READ_ATTRIBUTES|FILE_READ_EA|SYNCHRONIZE)
#define FILE_GENERIC_WRITE (STANDARD_RIGHTS_WRITE|FILE_WRITE_DATA|FILE_WRITE_ATTRIBUTES|FILE_WRITE_EA|FILE_APPEND_DATA|SYNCHRONIZE)
#define FILE_GENERIC_EXECUTE (STANDARD_RIGHTS_EXECUTE|FILE_READ_ATTRIBUTES|FILE_EXECUTE|SYNCHRONIZE)
#define PAGE_EXECUTE_WRITECOPY	128
#define EXCEPTION_GUARD_PAGE	0x80000001
#define SECTION_EXTEND_SIZE	16
#define SECTION_MAP_READ	4
#define SECTION_MAP_WRITE	2
#define SECTION_QUERY	1
#define SECTION_ALL_ACCESS	0xf001f
#define FW_DONTCARE	0
#define FW_THIN	100
#define FW_EXTRALIGHT	200
#define FW_LIGHT	300
#define FW_NORMAL	400
#define FW_REGULAR	400
#define FW_MEDIUM	500
#define FW_SEMIBOLD	600
#define FW_BOLD	700
#define FW_EXTRABOLD	800
#define FW_HEAVY	900
#define CLEARTYPE_QUALITY 5
#define ANSI_CHARSET	0
#define DEFAULT_CHARSET	1
#define SYMBOL_CHARSET	2
#define SHIFTJIS_CHARSET	128
#define HANGEUL_CHARSET	129
#define GB2312_CHARSET	134
#define CHINESEBIG5_CHARSET	136
#define GREEK_CHARSET	161
#define TURKISH_CHARSET	162
#define HEBREW_CHARSET	177
#define ARABIC_CHARSET	178
#define BALTIC_CHARSET	186
#define RUSSIAN_CHARSET	204
#define THAI_CHARSET	222
#define EASTEUROPE_CHARSET	238
#define OEM_CHARSET	255
#define OUT_DEFAULT_PRECIS	0
#define OUT_STRING_PRECIS	1
#define OUT_CHARACTER_PRECIS	2
#define OUT_STROKE_PRECIS	3
#define OUT_TT_PRECIS	4
#define OUT_DEVICE_PRECIS	5
#define OUT_RASTER_PRECIS	6
#define OUT_TT_ONLY_PRECIS	7
#define OUT_OUTLINE_PRECIS	8
#define CLIP_DEFAULT_PRECIS	0
#define CLIP_CHARACTER_PRECIS	1
#define CLIP_STROKE_PRECIS	2
#define CLIP_MASK	15
#define CLIP_LH_ANGLES	16
#define CLIP_TT_ALWAYS	32
#define CLIP_EMBEDDED	128
#define DEFAULT_QUALITY	0
#define DRAFT_QUALITY	1
#define PROOF_QUALITY	2
#define NONANTIALIASED_QUALITY	3
#define ANTIALIASED_QUALITY	4
#define DEFAULT_PITCH	0
#define FIXED_PITCH	1
#define VARIABLE_PITCH	2
#define FF_DECORATIVE	80
#define FF_DONTCARE	0
#define FF_MODERN	48
#define FF_ROMAN	16
#define FF_SCRIPT	64
#define FF_SWISS	32
#define HS_BDIAGONAL	3
#define HS_CROSS	4
#define HS_DIAGCROSS	5
#define HS_FDIAGONAL	2
#define HS_HORIZONTAL	0
#define HS_VERTICAL	1
#define LR_DEFAULTCOLOR	0
#define LR_LOADREALSIZE	128
#define LR_MONOCHROME	1
#define LR_COPYRETURNORG 4
#define LR_COPYDELETEORG 8
#define LR_LOADFROMFILE	16
#define LR_LOADTRANSPARENT 32
#define LR_DEFAULTSIZE	64
#define LR_VGACOLOR	0x80
#define LR_LOADMAP3DCOLORS 0x1000
#define LR_CREATEDIBSECTION 0x2000
#define LR_COPYFROMRESOURCE 0x4000
#define LR_SHARED	0x8000
#define MAILSLOT_WAIT_FOREVER	0xffffffff
#define MAILSLOT_NO_MESSAGE	0xffffffff
#define CMB_MASKED	2
#define PIPE_ACCESS_DUPLEX	3
#define PIPE_ACCESS_INBOUND	1
#define PIPE_ACCESS_OUTBOUND	2
#define WRITE_DAC	0x40000
#define WRITE_OWNER	0x80000
#define ACCESS_SYSTEM_SECURITY	0x1000000
#define PIPE_TYPE_BYTE	0
#define PIPE_TYPE_MESSAGE	4
#define PIPE_READMODE_BYTE	0
#define PIPE_READMODE_MESSAGE	2
#define PIPE_WAIT	0
#define PIPE_NOWAIT	1
#define PIPE_UNLIMITED_INSTANCES 255
#define PROGRESS_CONTINUE 0
#define PROGRESS_CANCEL	1
#define PROGRESS_STOP	2
#define PROGRESS_QUIET	3
#define CALLBACK_CHUNK_FINISHED 0
#define CALLBACK_STREAM_SWITCH	1
#define COPY_FILE_FAIL_IF_EXISTS 1
#define COPY_FILE_RESTARTABLE	2
#define COPY_FILE_OPEN_SOURCE_FOR_WRITE 4
#define COPY_FILE_ALLOW_DECRYPTED_DESTINATION 8
#define REPLACEFILE_WRITE_THROUGH 1
#define REPLACEFILE_IGNORE_MERGE_ERRORS 2
#define PS_GEOMETRIC	65536
#define PS_COSMETIC	0
#define PS_ALTERNATE	8
#define PS_SOLID	0
#define PS_DASH	1
#define PS_DOT	2
#define PS_DASHDOT	3
#define PS_DASHDOTDOT	4
#define PS_NULL	5
#define PS_USERSTYLE	7
#define PS_INSIDEFRAME	6
#define PS_ENDCAP_ROUND	0
#define PS_ENDCAP_SQUARE	256
#define PS_ENDCAP_FLAT	512
#define PS_JOIN_BEVEL	4096
#define PS_JOIN_MITER	8192
#define PS_JOIN_ROUND	0
#define PS_STYLE_MASK	15
#define PS_ENDCAP_MASK	3840
#define PS_TYPE_MASK	983040
#define ALTERNATE	1
#define WINDING	2
#define POLYFILL_LAST	2
#define LAYOUT_RTL	1
#define LAYOUT_BTT	2
#define LAYOUT_VBH	4
#define LAYOUT_BITMAPORIENTATIONPRESERVED	8
#define LAYOUT_ORIENTATIONMASK	(LAYOUT_RTL|LAYOUT_BTT|LAYOUT_VBH)
#define CREATE_NEW_CONSOLE	16
#define CREATE_NEW_PROCESS_GROUP	512
#define CREATE_SEPARATE_WOW_VDM	2048
#define CREATE_SUSPENDED	4
#define CREATE_UNICODE_ENVIRONMENT	1024
#define CREATE_BREAKAWAY_FROM_JOB 0x01000000
#define CREATE_PRESERVE_CODE_AUTHZ_LEVEL 0x02000000
#define CREATE_DEFAULT_ERROR_MODE 0x04000000
#define CREATE_NO_WINDOW 0x08000000
#define CREATE_SHARED_WOW_VDM 0x00001000
#define CREATE_FORCEDOS 0x00002000
#define PROFILE_USER 0x10000000
#define PROFILE_KERNEL 0x20000000
#define PROFILE_SERVER 0x40000000
#define DEBUG_PROCESS	1
#define DEBUG_ONLY_THIS_PROCESS	2
#define DETACHED_PROCESS	8
#define HIGH_PRIORITY_CLASS	128
#define IDLE_PRIORITY_CLASS	64
#define NORMAL_PRIORITY_CLASS	32
#define REALTIME_PRIORITY_CLASS	256
#define BELOW_NORMAL_PRIORITY_CLASS 0x04000
#define ABOVE_NORMAL_PRIORITY_CLASS 0x08000
#define DELETE	0x10000
#define READ_CONTROL	0x20000
#define GENERIC_EXECUTE	0x20000000
#define SERVICE_WIN32_OWN_PROCESS	16
#define SERVICE_WIN32_SHARE_PROCESS	32
#define SERVICE_KERNEL_DRIVER	1
#define SERVICE_FILE_SYSTEM_DRIVER	2
#define SERVICE_INTERACTIVE_PROCESS	256
#define SERVICE_BOOT_START	0
#define SERVICE_SYSTEM_START	1
#define SERVICE_AUTO_START	2
#define SERVICE_DEMAND_START	3
#define SERVICE_DISABLED	4
#define SERVICE_ERROR_IGNORE	0
#define SERVICE_ERROR_NORMAL	1
#define SERVICE_ERROR_SEVERE	2
#define SERVICE_ERROR_CRITICAL	3
#define TAPE_FIXED_PARTITIONS	0
#define TAPE_INITIATOR_PARTITIONS	2
#define TAPE_SELECT_PARTITIONS	1
#define TAPE_FILEMARKS	1
#define TAPE_LONG_FILEMARKS	3
#define TAPE_SETMARKS	0
#define TAPE_SHORT_FILEMARKS	2
#define CW_USEDEFAULT	0x80000000
#define WS_BORDER	0x800000
#define WS_CAPTION	0xc00000
#define WS_CHILD	0x40000000
#define WS_CHILDWINDOW	0x40000000
#define WS_CLIPCHILDREN	0x2000000
#define WS_CLIPSIBLINGS	0x4000000
#define WS_DISABLED	0x8000000
#define WS_DLGFRAME	0x400000
#define WS_GROUP	0x20000
#define WS_HSCROLL	0x100000
#define WS_ICONIC	0x20000000
#define WS_MAXIMIZE	0x1000000
#define WS_MAXIMIZEBOX	0x10000
#define WS_MINIMIZE	0x20000000
#define WS_MINIMIZEBOX	0x20000
#define WS_OVERLAPPED	0
#define WS_OVERLAPPEDWINDOW	0xcf0000
#define WS_POPUP	0x80000000
#define WS_POPUPWINDOW	0x80880000
#define WS_SIZEBOX	0x40000
#define WS_SYSMENU	0x80000
#define WS_TABSTOP	0x10000
#define WS_THICKFRAME	0x40000
#define WS_TILED	0
#define WS_TILEDWINDOW	0xcf0000
#define WS_VISIBLE	0x10000000
#define WS_VSCROLL	0x200000
#define MDIS_ALLCHILDSTYLES	1
#define BS_3STATE	5
#define BS_AUTO3STATE	6
#define BS_AUTOCHECKBOX	3
#define BS_AUTORADIOBUTTON	9
#define BS_BITMAP	128
#define BS_BOTTOM	0x800
#define BS_CENTER	0x300
#define BS_CHECKBOX	2
#define BS_DEFPUSHBUTTON	1
#define BS_GROUPBOX	7
#define BS_ICON	64
#define BS_LEFT	256
#define BS_LEFTTEXT	32
#define BS_MULTILINE	0x2000
#define BS_NOTIFY	0x4000
#define BS_OWNERDRAW	0xb
#define BS_PUSHBUTTON	0
#define BS_PUSHBOX	10
#define BS_PUSHLIKE	4096
#define BS_RADIOBUTTON	4
#define BS_RIGHT	512
#define BS_RIGHTBUTTON	32
#define BS_TEXT	0
#define BS_TOP	0x400
#define BS_USERBUTTON	8
#define BS_VCENTER	0xc00
#define BS_FLAT	0x8000
#define BUTTON_IMAGELIST_ALIGN_LEFT	0
#define BUTTON_IMAGELIST_ALIGN_RIGHT	1
#define BUTTON_IMAGELIST_ALIGN_TOP	2
#define BUTTON_IMAGELIST_ALIGN_BOTTOM	3
#define BUTTON_IMAGELIST_ALIGN_CENTER	4
#define CBS_AUTOHSCROLL	64
#define CBS_DISABLENOSCROLL	0x800
#define CBS_DROPDOWN	2
#define CBS_DROPDOWNLIST	3
#define CBS_HASSTRINGS	512
#define CBS_LOWERCASE	0x4000
#define CBS_NOINTEGRALHEIGHT	0x400
#define CBS_OEMCONVERT	128
#define CBS_OWNERDRAWFIXED	16
#define CBS_OWNERDRAWVARIABLE	32
#define CBS_SIMPLE	1
#define CBS_SORT	256
#define CBS_UPPERCASE	0x2000
#define ES_AUTOHSCROLL	128
#define ES_AUTOVSCROLL	64
#define ES_CENTER	1
#define ES_LEFT	0
#define ES_LOWERCASE	16
#define ES_MULTILINE	4
#define ES_NOHIDESEL	256
#define ES_NUMBER	0x2000
#define ES_OEMCONVERT	0x400
#define ES_PASSWORD	32
#define ES_READONLY	0x800
#define ES_RIGHT	2
#define ES_UPPERCASE	8
#define ES_WANTRETURN	4096
#define LBS_DISABLENOSCROLL	4096
#define LBS_EXTENDEDSEL	0x800
#define LBS_HASSTRINGS	64
#define LBS_MULTICOLUMN	512
#define LBS_MULTIPLESEL	8
#define LBS_NODATA	0x2000
#define LBS_NOINTEGRALHEIGHT	256
#define LBS_NOREDRAW	4
#define LBS_NOSEL	0x4000
#define LBS_NOTIFY	1
#define LBS_OWNERDRAWFIXED	16
#define LBS_OWNERDRAWVARIABLE	32
#define LBS_SORT	2
#define LBS_STANDARD	0xa00003
#define LBS_USETABSTOPS	128
#define LBS_WANTKEYBOARDINPUT	0x400
#define SBS_BOTTOMALIGN	4
#define SBS_HORZ	0
#define SBS_LEFTALIGN	2
#define SBS_RIGHTALIGN	4
#define SBS_SIZEBOX	8
#define SBS_SIZEBOXBOTTOMRIGHTALIGN	4
#define SBS_SIZEBOXTOPLEFTALIGN	2
#define SBS_SIZEGRIP	16
#define SBS_TOPALIGN	2
#define SBS_VERT	1
#define SS_BITMAP	0xe
#define SS_BLACKFRAME	7
#define SS_BLACKRECT	4
#define SS_CENTER	1
#define SS_CENTERIMAGE	512
#define SS_ENHMETAFILE	0xf
#define SS_ETCHEDFRAME	0x12
#define SS_ETCHEDHORZ	16
#define SS_ETCHEDVERT	0x11
#define SS_GRAYFRAME	8
#define SS_GRAYRECT	5
#define SS_ICON	3
#define SS_LEFT	0
#define SS_LEFTNOWORDWRAP	0xc
#define SS_TYPEMASK	0x1f
#define SS_ENDELLIPSIS	0x4000
#define SS_PATHELLIPSIS	0x8000
#define SS_WORDELLIPSIS	0xC000
#define SS_ELLIPSISMASK	0xC000
#define SS_REALSIZECONTROL	0x40
#define SS_NOPREFIX	128
#define SS_NOTIFY	256
#define SS_OWNERDRAW	0xd
#define SS_REALSIZEIMAGE	0x800
#define SS_RIGHT	2
#define SS_RIGHTJUST	0x400
#define SS_SIMPLE	11
#define SS_SUNKEN	4096
#define SS_WHITEFRAME	9
#define SS_WHITERECT	6
#define SS_USERITEM 10
#define DS_3DLOOK	4
#define DS_ABSALIGN	1
#define DS_CENTER	0x800
#define DS_CENTERMOUSE	4096
#define DS_CONTEXTHELP	0x2000
#define DS_CONTROL	0x400
#define DS_FIXEDSYS	8
#define DS_LOCALEDIT	32
#define DS_MODALFRAME	128
#define DS_NOFAILCREATE	16
#define DS_NOIDLEMSG	256
#define DS_SETFONT	64
#define DS_SETFOREGROUND	512
#define DS_SYSMODAL	2
#define DS_FIXEDSYS	8
#define DS_SHELLFONT	(DS_SETFONT|DS_FIXEDSYS)
#define WS_EX_ACCEPTFILES	16
#define WS_EX_APPWINDOW	0x40000
#define WS_EX_CLIENTEDGE	512
#define WS_EX_CONTEXTHELP	0x400
#define WS_EX_CONTROLPARENT	0x10000
#define WS_EX_DLGMODALFRAME	1
#define WS_EX_LEFT	0
#define WS_EX_LEFTSCROLLBAR	0x4000
#define WS_EX_LTRREADING	0
#define WS_EX_MDICHILD	64
#define WS_EX_NOPARENTNOTIFY	4
#define WS_EX_OVERLAPPEDWINDOW	0x300
#define WS_EX_PALETTEWINDOW	0x188
#define WS_EX_RIGHT	0x1000
#define WS_EX_RIGHTSCROLLBAR	0
#define WS_EX_RTLREADING	0x2000
#define WS_EX_STATICEDGE	0x20000
#define WS_EX_TOOLWINDOW	128
#define WS_EX_TOPMOST	8
#define WS_EX_TRANSPARENT	32
#define WS_EX_WINDOWEDGE	256
#define WS_EX_LAYERED	0x080000
#define WINSTA_ACCESSCLIPBOARD	4
#define WINSTA_ACCESSGLOBALATOMS	32
#define WINSTA_CREATEDESKTOP	8
#define WINSTA_ENUMDESKTOPS	1
#define WINSTA_ENUMERATE	256
#define WINSTA_EXITWINDOWS	64
#define WINSTA_READATTRIBUTES	2
#define WINSTA_READSCREEN	512
#define WINSTA_WRITEATTRIBUTES	16
#define WH_CALLWNDPROC	4
#define WH_CALLWNDPROCRET	12
#define WH_KEYBOARD_LL	13
#define WH_MOUSE_LL	14
#define WH_MAX 14
#define WH_MINHOOK WH_MIN
#define WH_MAXHOOK WH_MAX
#define HC_ACTION 0
#define HC_GETNEXT 1
#define HC_ACTION	0
#define HC_GETNEXT	1
#define HC_SKIP	2
#define HC_NOREMOVE	3
#define HC_NOREM	HC_NOREMOVE
#define HC_SYSMODALON	4
#define HC_SYSMODALOFF	5
#define HCBT_MOVESIZE	0
#define HCBT_MINMAX	1
#define HCBT_QS	2
#define HCBT_CREATEWND	3
#define HCBT_DESTROYWND	4
#define HCBT_ACTIVATE	5
#define HCBT_CLICKSKIPPED	6
#define HCBT_KEYSKIPPED	7
#define HCBT_SYSCOMMAND	8
#define HCBT_SETFOCUS	9
#define HC_SYSMODALON	4
#define WH_CBT	5
#define WH_DEBUG	9
#define WH_GETMESSAGE	3
#define WH_JOURNALPLAYBACK	1
#define WH_JOURNALRECORD	0
#define WH_KEYBOARD	2
#define WH_MOUSE	7
#define WH_MSGFILTER	(-1)
#define WH_SHELL	10
#define WH_SYSMSGFILTER	6
#define WH_MIN (-1)
#define WH_FOREGROUNDIDLE	11
#define DDD_RAW_TARGET_PATH	1
#define DDD_REMOVE_DEFINITION	2
#define DDD_EXACT_MATCH_ON_REMOVE	4
#define DDD_NO_BROADCAST_SYSTEM 8
#define DDD_LUID_BROADCAST_DRIVE 16
#define DC_BINNAMES	12
#define DC_BINS	6
#define DC_COPIES	18
#define DC_DRIVER	11
#define DC_DATATYPE_PRODUCED	21
#define DC_DUPLEX	7
#define DC_EMF_COMPLIANT	20
#define DC_ENUMRESOLUTIONS	13
#define DC_EXTRA	9
#define DC_FIELDS	1
#define DC_FILEDEPENDENCIES	14
#define DC_MAXEXTENT	5
#define DC_MINEXTENT	4
#define DC_ORIENTATION	17
#define DC_PAPERNAMES	16
#define DC_PAPERS	2
#define DC_PAPERSIZE	3
#define DC_SIZE	8
#define DC_TRUETYPE	15
#define DCTT_BITMAP	1
#define DCTT_DOWNLOAD	2
#define DCTT_SUBDEV	4
#define DC_VERSION	10
#define DC_BINADJUST	19
#define DC_EMF_COMPLIANT	20
#define DC_DATATYPE_PRODUCED	21
#define DDL_ARCHIVE	32
#define DDL_DIRECTORY	16
#define DDL_DRIVES	16384
#define DDL_EXCLUSIVE	32768
#define DDL_HIDDEN	2
#define DDL_READONLY	1
#define DDL_READWRITE	0
#define DDL_SYSTEM	4
#define DDL_POSTMSGS	8192
#define DLL_PROCESS_ATTACH	1
#define DLL_THREAD_ATTACH	2
#define DLL_PROCESS_DETACH	0
#define DLL_THREAD_DETACH	3
#define DM_IN_BUFFER	8
#define DM_MODIFY	8
#define DM_IN_PROMPT	4
#define DM_PROMPT	4
#define DM_OUT_BUFFER	2
#define DM_COPY	2
#define DM_UPDATE	1
#define IDANI_OPEN	1
#define IDANI_CLOSE	2
#define DC_ACTIVE	1
#define DC_SMALLCAP	2
#define DC_ICON	4
#define DC_TEXT	8
#define DC_INBUTTON	16
#define DC_GRADIENT	32
#define BDR_RAISEDINNER	4
#define BDR_SUNKENINNER	8
#define BDR_RAISEDOUTER	1
#define BDR_SUNKENOUTER	2
#define BDR_OUTER	(BDR_RAISEDOUTER|BDR_SUNKENOUTER)
#define BDR_INNER	(BDR_RAISEDINNER|BDR_SUNKENINNER)
#define BDR_RAISED	(BDR_RAISEDOUTER|BDR_RAISEDINNER)
#define BDR_SUNKEN	(BDR_SUNKENOUTER|BDR_SUNKENINNER)
#define EDGE_BUMP	9
#define EDGE_ETCHED	6
#define EDGE_RAISED	5
#define EDGE_SUNKEN	10
#define BF_ADJUST	8192
#define BF_BOTTOM	8
#define BF_BOTTOMLEFT	9
#define BF_BOTTOMRIGHT	12
#define BF_DIAGONAL	16
#define BF_DIAGONAL_ENDBOTTOMLEFT	25
#define BF_DIAGONAL_ENDBOTTOMRIGHT	28
#define BF_DIAGONAL_ENDTOPLEFT	19
#define BF_DIAGONAL_ENDTOPRIGHT	22
#define BF_FLAT	16384
#define BF_LEFT	1
#define BF_MIDDLE	2048
#define BF_MONO	32768
#define BF_RECT	15
#define BF_RIGHT	4
#define BF_SOFT	4096
#define BF_TOP	2
#define BF_TOPLEFT	3
#define BF_TOPRIGHT	6
#define DFC_BUTTON	4
#define DFC_CAPTION	1
#define DFC_MENU	2
#define DFC_SCROLL	3
#define DFCS_BUTTON3STATE	8
#define DFCS_BUTTONCHECK	0
#define DFCS_BUTTONPUSH	16
#define DFCS_BUTTONRADIO	4
#define DFCS_BUTTONRADIOIMAGE	1
#define DFCS_BUTTONRADIOMASK	2
#define DFCS_CAPTIONCLOSE	0
#define DFCS_CAPTIONHELP	4
#define DFCS_CAPTIONMAX	2
#define DFCS_CAPTIONMIN	1
#define DFCS_CAPTIONRESTORE	3
#define DFCS_MENUARROW	0
#define DFCS_MENUBULLET	2
#define DFCS_MENUCHECK	1
#define DFCS_SCROLLCOMBOBOX	5
#define DFCS_SCROLLDOWN	1
#define DFCS_SCROLLLEFT	2
#define DFCS_SCROLLRIGHT	3
#define DFCS_SCROLLSIZEGRIP	8
#define DFCS_SCROLLUP	0
#define DFCS_ADJUSTRECT	8192
#define DFCS_CHECKED	1024
#define DFCS_FLAT	16384
#define DFCS_INACTIVE	256
#define DFCS_MONO	32768
#define DFCS_PUSHED	512
#define DI_COMPAT	4
#define DI_DEFAULTSIZE	8
#define DI_IMAGE	2
#define DI_MASK	1
#define DI_NORMAL	3
#define DST_BITMAP	4
#define DST_COMPLEX	0
#define DST_ICON	3
#define DST_PREFIXTEXT	2
#define DST_TEXT	1
#define DSS_NORMAL	0
#define DSS_UNION	16
#define DSS_DISABLED	32
#define DSS_MONO	128
#define SBT_NOBORDERS	256
#define SBT_OWNERDRAW	4096
#define SBT_POPOUT	512
#define SBT_RTLREADING	1024
#define SBT_TOOLTIPS	0x800
#define SB_SIMPLEID	0x00ff
#define DT_BOTTOM	8
#define DT_CALCRECT	1024
#define DT_CENTER	1
#define DT_EDITCONTROL	8192
#define DT_END_ELLIPSIS	32768
#define DT_PATH_ELLIPSIS	16384
#define DT_EXPANDTABS	64
#define DT_EXTERNALLEADING	512
#define DT_LEFT	0
#define DT_MODIFYSTRING	65536
#define DT_NOCLIP	256
#define DT_NOPREFIX	2048
#define DT_RIGHT	2
#define DT_RTLREADING	131072
#define DT_SINGLELINE	32
#define DT_TABSTOP	128
#define DT_TOP	0
#define DT_VCENTER	4
#define DT_WORDBREAK	16
#define DT_INTERNAL	4096
#define DT_WORD_ELLIPSIS	0x40000
#define DT_NOFULLWIDTHCHARBREAK	0x80000
#define DT_HIDEPREFIX	0x100000
#define DT_PREFIXONLY	0x200000
#define DUPLICATE_CLOSE_SOURCE	1
#define DUPLICATE_SAME_ACCESS	2
#define FILE_MAP_ALL_ACCESS	0xf001f
#define FILE_MAP_READ	4
#define FILE_MAP_WRITE	2
#define FILE_MAP_COPY	1
#define MUTEX_ALL_ACCESS	0x1f0001
#define MUTEX_MODIFY_STATE	1
#define SYNCHRONIZE	0x100000
#define SEMAPHORE_ALL_ACCESS	0x1f0003
#define SEMAPHORE_MODIFY_STATE	2
#define S_NORMAL 0
#define S_LEGATO 1
#define S_STACCATO 2
#define S_PERIOD512 0
#define S_PERIOD1024 1
#define S_PERIOD2048 2
#define S_PERIODVOICE 3
#define S_SERDVNA (-1)
#define S_SEROFM (-2)
#define S_SERMACT (-3)
#define S_SERQFUL (-4)
#define S_SERBDNT (-5)
#define S_SERDLN (-6)
#define S_SERDCC (-7)
#define S_SERDTP (-8)
#define S_SERDV  (-9)
#define S_SERDMD (-10)
#define S_SERDSH (-11)
#define S_SERDPT (-12)
#define S_SERDFQ (-13)
#define S_SERDDR (-14)
#define S_SERDSR (-15)
#define S_SERDST (-16)
#define S_WHITE512 4
#define S_WHITE1024 5
#define S_WHITE2048 6
#define S_WHITEVOICE 7
#define EVENT_ALL_ACCESS	0x1f0003
#define EVENT_MODIFY_STATE	2
#define KEY_ALL_ACCESS	0xf003f
#define KEY_CREATE_LINK	32
#define KEY_CREATE_SUB_KEY	4
#define KEY_ENUMERATE_SUB_KEYS	8
#define KEY_EXECUTE	0x20019
#define KEY_NOTIFY	16
#define KEY_QUERY_VALUE	1
#define KEY_READ	0x20019
#define KEY_SET_VALUE	2
#define KEY_WRITE	0x20006
#define PROCESS_ALL_ACCESS	0x1f0fff
#define PROCESS_CREATE_PROCESS	128
#define PROCESS_CREATE_THREAD	2
#define PROCESS_DUP_HANDLE	64
#define PROCESS_QUERY_INFORMATION	1024
#define PROCESS_SET_INFORMATION	512
#define PROCESS_TERMINATE	1
#define PROCESS_VM_OPERATION	8
#define PROCESS_VM_READ	16
#define PROCESS_VM_WRITE	32
#define THREAD_ALL_ACCESS	0x1f03ff
#define THREAD_DIRECT_IMPERSONATION	512
#define THREAD_GET_CONTEXT	8
#define THREAD_IMPERSONATE	256
#define THREAD_QUERY_INFORMATION	64
#define THREAD_SET_CONTEXT	16
#define THREAD_SET_INFORMATION	32
#define THREAD_SET_THREAD_TOKEN	128
#define THREAD_SUSPEND_RESUME	2
#define THREAD_TERMINATE	1
#define WB_ISDELIMITER	2
#define WB_LEFT	0
#define WB_RIGHT	1
#define SB_BOTH	3
#define SB_CTL	2
#define SB_HORZ	0
#define SB_VERT	1
#define ESB_DISABLE_BOTH	3
#define ESB_DISABLE_DOWN	2
#define ESB_DISABLE_LEFT	1
#define ESB_DISABLE_LTUP	1
#define ESB_DISABLE_RIGHT	2
#define ESB_DISABLE_RTDN	2
#define ESB_DISABLE_UP	1
#define ESB_ENABLE_BOTH	0
#define SB_LINEUP	0
#define SB_LINEDOWN	1
#define SB_LINELEFT	0
#define SB_LINERIGHT	1
#define SB_PAGEUP	2
#define SB_PAGEDOWN	3
#define SB_PAGELEFT	2
#define SB_PAGERIGHT	3
#define SB_THUMBPOSITION	4
#define SB_THUMBTRACK	5
#define SB_ENDSCROLL	8
#define SB_LEFT	6
#define SB_RIGHT	7
#define SB_BOTTOM	7
#define SB_TOP	6
#define ENUM_ALL_CALENDARS	0xffffffff
#define DATE_SHORTDATE	1
#define DATE_LONGDATE	2
#define SERVICE_ACTIVE	1
#define SERVICE_INACTIVE	2
#define DEVICE_FONTTYPE	2
#define RASTER_FONTTYPE	1
#define TRUETYPE_FONTTYPE	4
#define OBJ_BRUSH	2
#define OBJ_PEN	1
#define OBJ_PAL	5
#define OBJ_FONT	6
#define OBJ_BITMAP	7
#define OBJ_EXTPEN	11
#define OBJ_REGION	8
#define OBJ_DC	3
#define OBJ_MEMDC	10
#define OBJ_METAFILE	9
#define OBJ_METADC	4
#define OBJ_ENHMETAFILE	13
#define OBJ_COLORSPACE	14
#define OBJ_ENHMETADC	12
#define IPPROTO_TCP	6
#define IPPROTO_UDP	17
#define RT_ACCELERATOR	MAKEINTRESOURCE(9)
#define RT_BITMAP	MAKEINTRESOURCE(2)
#define RT_DIALOG	MAKEINTRESOURCE(5)
#define RT_FONT	MAKEINTRESOURCE(8)
#define RT_FONTDIR	MAKEINTRESOURCE(7)
#define RT_MENU	MAKEINTRESOURCE(4)
#define RT_RCDATA	MAKEINTRESOURCE(0xa)
#define RT_STRING	MAKEINTRESOURCE(0x6)
#define RT_MESSAGETABLE	MAKEINTRESOURCE(0xb)
#define RT_CURSOR	MAKEINTRESOURCE(1)
#define RT_GROUP_CURSOR	MAKEINTRESOURCE(0xc)
#define RT_ICON	MAKEINTRESOURCE(3)
#define RT_GROUP_ICON	MAKEINTRESOURCE(0xe)
#define RT_VERSION	MAKEINTRESOURCE(16)
#define RT_VXD		MAKEINTRESOURCE(20)
#define RT_ANICURSOR	MAKEINTRESOURCE(21)
#define RT_ANIICON	MAKEINTRESOURCE(22)
#define RT_HTML		MAKEINTRESOURCE(23)
#define RT_DLGINCLUDE MAKEINTRESOURCE(0x11)
#define RT_PLUGPLAY	MAKEINTRESOURCE(19)
#define RT_HTML	MAKEINTRESOURCE(23)
#define SERVICE_WIN32	48
#define SERVICE_DRIVER	11
#define CP_INSTALLED	1
#define CP_SUPPORTED	2
#define LCID_INSTALLED	1
#define LCID_SUPPORTED	2
#define TAPE_ERASE_LONG	1
#define TAPE_ERASE_SHORT	0
#define PR_JOBSTATUS	0
#define SP_NOTREPORTED	0x4000
#define SP_ERROR	(-1)
#define SP_OUTOFDISK	(-4)
#define SP_OUTOFMEMORY	(-5)
#define SP_USERABORT	(-3)
#define SP_APPABORT	(-2)
#define PHYSICALWIDTH	110
#define PHYSICALHEIGHT	111
#define PHYSICALOFFSETX	112
#define PHYSICALOFFSETY	113
#define SCALINGFACTORX	114
#define SCALINGFACTORY	115
#define QUERYESCSUPPORT	8
#define ABORTDOC	2
#define ENDDOC	11
#define GETPHYSPAGESIZE	12
#define GETPRINTINGOFFSET	13
#define GETSCALINGFACTOR	14
#define NEWFRAME	1
#define NEXTBAND	3
#define PASSTHROUGH	19
#define SETABORTPROC	9
#define STARTDOC	10
#define SETCOLORTABLE	4
#define GETCOLORTABLE	5
#define FLUSHOUTPUT	6
#define DRAFTMODE	7
#define MFCOMMENT	15
#define GETPENWIDTH	16
#define SETCOPYCOUNT	17
#define SELECTPAPERSOURCE	18
#define DEVICEDATA	19
#define GETTECHNOLGY	20
#define GETTECHNOLOGY	20
#define SETLINECAP	21
#define SETLINEJOIN	22
#define SETMITERLIMIT	23
#define BANDINFO	24
#define DRAWPATTERNRECT	25
#define GETVECTORPENSIZE	26
#define GETVECTORBRUSHSIZE	27
#define ENABLEDUPLEX	28
#define GETSETPAPERBINS	29
#define GETSETPRINTORIENT	30
#define ENUMPAPERBINS	31
#define SETDIBSCALING	32
#define EPSPRINTING	33
#define ENUMPAPERMETRICS	34
#define GETSETPAPERMETRICS	35
#define POSTSCRIPT_DATA	37
#define POSTSCRIPT_IGNORE	38
#define MOUSETRAILS	39
#define GETDEVICEUNITS	42
#define GETEXTENDEDTEXTMETRICS	256
#define GETEXTENTTABLE	257
#define GETPAIRKERNTABLE	258
#define GETTRACKKERNTABLE	259
#define EXTTEXTOUT	512
#define GETFACENAME	513
#define DOWNLOADFACE	514
#define ENABLERELATIVEWIDTHS	768
#define ENABLEPAIRKERNING	769
#define SETKERNTRACK	770
#define SETALLJUSTVALUES	771
#define SETCHARSET	772
#define STRETCHBLT	2048
#define METAFILE_DRIVER	2049
#define GETSETSCREENPARAMS	3072
#define QUERYDIBSUPPORT	3073
#define BEGIN_PATH	4096
#define CLIP_TO_PATH	4097
#define END_PATH	4098
#define EXT_DEVICE_CAPS	4099
#define RESTORE_CTM	4100
#define SAVE_CTM	4101
#define SET_ARC_DIRECTION	4102
#define SET_BACKGROUND_COLOR	4103
#define SET_POLY_MODE	4104
#define SET_SCREEN_ANGLE	4105
#define SET_SPREAD	4106
#define TRANSFORM_CTM	4107
#define SET_CLIP_BOX	4108
#define SET_BOUNDS	4109
#define SET_MIRROR_MODE	4110
#define OPENCHANNEL	4110
#define DOWNLOADHEADER	4111
#define CLOSECHANNEL	4112
#define POSTSCRIPT_PASSTHROUGH	4115
#define ENCAPSULATED_POSTSCRIPT	4116
#define POSTSCRIPT_IDENTIFY	4117
#define POSTSCRIPT_INJECTION	4118
#define CHECKJPEGFORMAT	4119
#define CHECKPNGFORMAT	4120
#define GET_PS_FEATURESETTING	4121
#define SPCLPASSTHROUGH2	4568
#define PSIDENT_GDICENTRIC	0
#define PSIDENT_PSCENTRIC	1
#define PSINJECT_BEGINSTREAM	1
#define PSINJECT_PSADOBE	2
#define PSINJECT_PAGESATEND	3
#define PSINJECT_PAGES	4
#define PSINJECT_DOCNEEDEDRES	5
#define PSINJECT_DOCSUPPLIEDRES	6
#define PSINJECT_PAGEORDER	7
#define PSINJECT_ORIENTATION	8
#define PSINJECT_BOUNDINGBOX	9
#define PSINJECT_DOCUMENTPROCESSCOLORS	10
#define PSINJECT_COMMENTS	11
#define PSINJECT_BEGINDEFAULTS	12
#define PSINJECT_ENDDEFAULTS	13
#define PSINJECT_BEGINPROLOG	14
#define PSINJECT_ENDPROLOG	15
#define PSINJECT_BEGINSETUP	16
#define PSINJECT_ENDSETUP	17
#define PSINJECT_TRAILER	18
#define PSINJECT_EOF	19
#define PSINJECT_ENDSTREAM	20
#define PSINJECT_DOCUMENTPROCESSCOLORSATEND 21
#define PSINJECT_PAGENUMBER	100
#define PSINJECT_BEGINPAGESETUP	101
#define PSINJECT_ENDPAGESETUP	102
#define PSINJECT_PAGETRAILER	103
#define PSINJECT_PLATECOLOR	104
#define PSINJECT_SHOWPAGE	105
#define PSINJECT_PAGEBBOX	106
#define PSINJECT_ENDPAGECOMMENTS 107
#define PSINJECT_VMSAVE	200
#define PSINJECT_VMRESTORE	201
#define FEATURESETTING_NUP	0
#define FEATURESETTING_OUTPUT	1
#define FEATURESETTING_PSLEVEL	2
#define FEATURESETTING_CUSTPAPER 3
#define FEATURESETTING_MIRROR	4
#define FEATURESETTING_NEGATIVE	5
#define FEATURESETTING_PROTOCOL	6
#define PSPROTOCOL_ASCII	0
#define PSPROTOCOL_BCP	1
#define PSPROTOCOL_TBCP	2
#define PSPROTOCOL_BINARY	3
#define CLRDTR	6
#define CLRRTS	4
#define SETDTR	5
#define SETRTS	3
#define SETXOFF	1
#define SETXON	2
#define RESETDEV 7
#define SETBREAK	8
#define CLRBREAK	9
#define EWX_FORCE	4
#define EWX_LOGOFF	0
#define EWX_POWEROFF	8
#define EWX_REBOOT	2
#define EWX_SHUTDOWN	1
#define FLOODFILLBORDER	0
#define FLOODFILLSURFACE	1
#define ETO_CLIPPED	4
#define ETO_GLYPH_INDEX	16
#define ETO_OPAQUE	2
#define ETO_RTLREADING	128
#define ETO_PDY	0x2000
#define ETO_NUMERICSLOCAL	0x0400
#define ETO_NUMERICSLATIN	0x0800
#define ETO_IGNORELANGUAGE	0x1000
#define ASPECT_FILTERING	1
#define FOREGROUND_BLUE	1
#define FOREGROUND_GREEN	2
#define FOREGROUND_RED	4
#define FOREGROUND_INTENSITY	8
#define BACKGROUND_BLUE	16
#define BACKGROUND_GREEN	32
#define BACKGROUND_RED	64
#define BACKGROUND_INTENSITY	128
#define FILE_NOTIFY_CHANGE_FILE_NAME	1
#define FILE_NOTIFY_CHANGE_DIR_NAME	2
#define FILE_NOTIFY_CHANGE_ATTRIBUTES	4
#define FILE_NOTIFY_CHANGE_SIZE	8
#define FILE_NOTIFY_CHANGE_LAST_WRITE	16
#define FILE_NOTIFY_CHANGE_LAST_ACCESS 0x20
#define FILE_NOTIFY_CHANGE_CREATION 0x40
#define FILE_NOTIFY_CHANGE_SECURITY 256
#define FILE_ACTION_ADDED 1
#define FILE_ACTION_REMOVED 2
#define FILE_ACTION_MODIFIED	3
#define FILE_ACTION_RENAMED_OLD_NAME	4
#define FILE_ACTION_RENAMED_NEW_NAME	5
#define FILE_CASE_SENSITIVE_SEARCH	1
#define FILE_CASE_PRESERVED_NAMES	2
#define FILE_UNICODE_ON_DISK	4
#define FILE_PERSISTENT_ACLS	8
#define FILE_FILE_COMPRESSION	16
#define FILE_VOLUME_QUOTAS	32
#define FILE_SUPPORTS_SPARSE_FILES	0x40
#define FILE_SUPPORTS_REPARSE_POINTS	0x80
#define FILE_SUPPORTS_REMOTE_STORAGE	0x100
#define FILE_VOLUME_IS_COMPRESSED	0x08000
#define FILE_SUPPORTS_OBJECT_IDS	0x10000
#define FILE_SUPPORTS_ENCRYPTION	0x20000
#define MAP_FOLDCZONE	16
#define MAP_FOLDDIGITS	128
#define MAP_PRECOMPOSED	32
#define MAP_COMPOSITE	64
#define HC_ACTION	0
#define FORMAT_MESSAGE_ALLOCATE_BUFFER	256
#define FORMAT_MESSAGE_IGNORE_INSERTS	512
#define FORMAT_MESSAGE_FROM_STRING	1024
#define FORMAT_MESSAGE_FROM_HMODULE	2048
#define FORMAT_MESSAGE_FROM_SYSTEM	4096
#define FORMAT_MESSAGE_ARGUMENT_ARRAY	8192
#define FORMAT_MESSAGE_MAX_WIDTH_MASK	255
#define GDICOMMENT_WINDOWS_METAFILE	(-2147483647)
#define GDICOMMENT_BEGINGROUP	2
#define GDICOMMENT_ENDGROUP	3
#define GDICOMMENT_MULTIFORMATS	1073741828
#define GDICOMMENT_IDENTIFIER	1128875079
#define CTRL_C_EVENT	0
#define CTRL_BREAK_EVENT	1
#define CTRL_CLOSE_EVENT	2
#define CTRL_LOGOFF_EVENT	5
#define CTRL_SHUTDOWN_EVENT	6
#define AD_COUNTERCLOCKWISE	1
#define AD_CLOCKWISE	2
#define SCS_32BIT_BINARY	0
#define SCS_DOS_BINARY	1
#define SCS_OS216_BINARY	5
#define SCS_PIF_BINARY	3
#define SCS_POSIX_BINARY	4
#define SCS_WOW_BINARY	2
#define SCS_OS216_BINARY 5
#define SCS_64BIT_BINARY 6
#define DCB_DISABLE	8
#define DCB_ENABLE	4
#define DCB_RESET	1
#define DCB_SET	3
#define DCB_ACCUMULATE	2
#define DCB_DIRTY	DCB_ACCUMULATE
#define GCP_DBCS	1
#define GCP_ERROR	0x8000
#define GCP_CLASSIN	0x80000
#define GCP_DIACRITIC	256
#define GCP_DISPLAYZWG	0x400000
#define GCP_GLYPHSHAPE	16
#define GCP_JUSTIFY	0x10000
#define GCP_JUSTIFYIN	0x200000
#define GCP_KASHIDA	1024
#define GCP_LIGATE	32
#define GCP_MAXEXTENT	0x100000
#define GCP_NEUTRALOVERRIDE	0x2000000
#define GCP_NUMERICOVERRIDE	0x1000000
#define GCP_NUMERICSLATIN	0x4000000
#define GCP_NUMERICSLOCAL	0x8000000
#define GCP_REORDER	2
#define GCP_SYMSWAPOFF	0x800000
#define GCP_USEKERNING	8
#define FLI_GLYPHS	0x40000
#define FLI_MASK	0x103b
#define GCW_ATOM	(-32)
#define GCL_CBCLSEXTRA	(-20)
#define GCL_CBWNDEXTRA	(-18)
#define GCL_HBRBACKGROUND	(-10)
#define GCL_HCURSOR	(-12)
#define GCL_HICON	(-14)
#define GCL_HICONSM	(-34)
#define GCL_HMODULE	(-16)
#define GCL_MENUNAME	(-8)
#define GCL_STYLE	(-26)
#define GCL_WNDPROC	(-24)
#define GCLP_MENUNAME	(-8)
#define GCLP_HBRBACKGROUND	(-10)
#define GCLP_HCURSOR	(-12)
#define GCLP_HICON	(-14)
#define GCLP_HMODULE	(-16)
#define GCLP_WNDPROC	(-24)
#define GCLP_HICONSM	(-34)
#define CF_BITMAP	2
#define CF_DIB	8
#define CF_PALETTE	9
#define CF_ENHMETAFILE	14
#define CF_METAFILEPICT	3
#define CF_OEMTEXT	7
#define CF_TEXT	1
#define CF_UNICODETEXT	13
#define CF_DIF	5
#define CF_DSPBITMAP	130
#define CF_DSPENHMETAFILE	142
#define CF_DSPMETAFILEPICT	131
#define CF_DSPTEXT	129
#define CF_GDIOBJFIRST	768
#define CF_GDIOBJLAST	1023
#define CF_HDROP	15
#define CF_LOCALE	16
#define CF_OWNERDISPLAY	128
#define CF_PENDATA	10
#define CF_PRIVATEFIRST	512
#define CF_PRIVATELAST	767
#define CF_RIFF	11
#define CF_SYLK	4
#define CF_WAVE	12
#define CF_TIFF	6
#define EV_BREAK	64
#define EV_CTS	8
#define EV_DSR	16
#define EV_ERR	128
#define EV_EVENT1	2048
#define EV_EVENT2	4096
#define EV_PERR	512
#define EV_RING	256
#define EV_RLSD	32
#define EV_RX80FULL	1024
#define EV_RXCHAR	1
#define EV_RXFLAG	2
#define EV_TXEMPTY	4
#define MS_CTS_ON	16
#define MS_DSR_ON	32
#define MS_RING_ON	64
#define MS_RLSD_ON	128
#define MAX_COMPUTERNAME_LENGTH	15
#define ENABLE_LINE_INPUT	2
#define ENABLE_ECHO_INPUT	4
#define ENABLE_PROCESSED_INPUT	1
#define ENABLE_WINDOW_INPUT	8
#define ENABLE_MOUSE_INPUT	16
#define ENABLE_PROCESSED_OUTPUT	1
#define ENABLE_WRAP_AT_EOL_OUTPUT	2
#define CP_ACP	0
#define CP_MACCP	2
#define CP_OEMCP	1
#define CP_THREAD_ACP 3
#define CP_SYMBOL 42
#define CP_UTF7 65000
#define CP_UTF8 65001
#define DATE_SHORTDATE	1
#define DATE_LONGDATE	2
#define DATE_USE_ALT_CALENDAR	4
#define DCX_WINDOW	1
#define DCX_CACHE	2
#define DCX_PARENTCLIP	32
#define DCX_CLIPSIBLINGS	16
#define DCX_CLIPCHILDREN	8
#define DCX_NORESETATTRS	4
#define DCX_LOCKWINDOWUPDATE	0x400
#define DCX_EXCLUDERGN	64
#define DCX_INTERSECTRGN	128
#define DCX_VALIDATE	0x200000
#define DRIVERVERSION	0
#define TECHNOLOGY	2
#define DT_PLOTTER	0
#define DT_RASDISPLAY	1
#define DT_RASPRINTER	2
#define DT_RASCAMERA	3
#define DT_CHARSTREAM	4
#define DT_METAFILE	5
#define DT_DISPFILE	6
#define HORZSIZE	4
#define VERTSIZE	6
#define HORZRES	8
#define VERTRES	10
#define LOGPIXELSX	88
#define LOGPIXELSY	90
#define BITSPIXEL	12
#define PLANES	14
#define NUMBRUSHES	16
#define NUMPENS	18
#define NUMFONTS	22
#define NUMCOLORS	24
#define	NUMMARKERS	20
#define ASPECTX	40
#define ASPECTY	42
#define ASPECTXY	44
#define PDEVICESIZE	26
#define CLIPCAPS	36
#define SIZEPALETTE	104
#define NUMRESERVED	106
#define COLORRES	108
#define VREFRESH	116
#define DESKTOPHORZRES	118
#define DESKTOPVERTRES	117
#define BLTALIGNMENT	119
#define RASTERCAPS	38
#define RC_BANDING	2
#define RC_BITBLT	1
#define RC_BITMAP64	8
#define RC_DI_BITMAP	128
#define RC_DIBTODEV	512
#define RC_FLOODFILL	4096
#define RC_GDI20_OUTPUT	16
#define RC_PALETTE	256
#define RC_SCALING	4
#define RC_STRETCHBLT	2048
#define RC_STRETCHDIB	8192
#define RC_DEVBITS	0x8000
#define RC_OP_DX_OUTPUT	0x4000
#define CURVECAPS	28
#define CC_NONE	0
#define CC_CIRCLES	1
#define CC_PIE	2
#define CC_CHORD	4
#define CC_ELLIPSES	8
#define CC_WIDE	16
#define CC_STYLED	32
#define CC_WIDESTYLED	64
#define CC_INTERIORS	128
#define CC_ROUNDRECT	256
#define LINECAPS	30
#define LC_NONE	0
#define LC_POLYLINE	2
#define LC_MARKER	4
#define LC_POLYMARKER	8
#define LC_WIDE	16
#define LC_STYLED	32
#define LC_WIDESTYLED	64
#define LC_INTERIORS	128
#define POLYGONALCAPS	32
#define RC_BANDING	2
#define RC_BIGFONT	1024
#define RC_BITBLT	1
#define RC_BITMAP64	8
#define RC_DEVBITS	0x8000
#define RC_DI_BITMAP	128
#define RC_GDI20_OUTPUT	16
#define RC_GDI20_STATE	32
#define RC_NONE	0
#define RC_OP_DX_OUTPUT	0x4000
#define RC_PALETTE	256
#define RC_SAVEBITMAP	64
#define RC_SCALING	4
#define PC_NONE	0
#define PC_POLYGON	1
#define PC_POLYPOLYGON	256
#define PC_PATHS	512
#define PC_RECTANGLE	2
#define PC_WINDPOLYGON	4
#define PC_SCANLINE	8
#define PC_TRAPEZOID	4
#define PC_WIDE	16
#define PC_STYLED	32
#define PC_WIDESTYLED	64
#define PC_INTERIORS	128
#define TEXTCAPS	34
#define TC_OP_CHARACTER	1
#define TC_OP_STROKE	2
#define TC_CP_STROKE	4
#define TC_CR_90	8
#define TC_CR_ANY	16
#define TC_SF_X_YINDEP	32
#define TC_SA_DOUBLE	64
#define TC_SA_INTEGER	128
#define TC_SA_CONTIN	256
#define TC_EA_DOUBLE	512
#define TC_IA_ABLE	1024
#define TC_UA_ABLE	2048
#define TC_SO_ABLE	4096
#define TC_RA_ABLE	8192
#define TC_VA_ABLE	16384
#define TC_RESERVED	32768
#define TC_SCROLLBLT	65536
#define PC_PATHS	512
#define CP_NONE	0
#define CP_RECTANGLE	1
#define CP_REGION	2
#define DRIVE_REMOVABLE	2
#define DRIVE_FIXED	3
#define DRIVE_REMOTE	4
#define DRIVE_CDROM	5
#define DRIVE_RAMDISK	6
#define DRIVE_UNKNOWN	0
#define DRIVE_NO_ROOT_DIR	1
#define EXCEPTION_ACCESS_VIOLATION	0xc0000005
#define EXCEPTION_BREAKPOINT	0x80000003
#define EXCEPTION_DATATYPE_MISALIGNMENT	0x80000002
#define EXCEPTION_SINGLE_STEP	0x80000004
#define EXCEPTION_ARRAY_BOUNDS_EXCEEDED	0xc000008c
#define EXCEPTION_FLT_DENORMAL_OPERAND	0xc000008d
#define EXCEPTION_FLT_DIVIDE_BY_ZERO	0xc000008e
#define EXCEPTION_FLT_INEXACT_RESULT	0xc000008f
#define EXCEPTION_FLT_INVALID_OPERATION	0xc0000090
#define EXCEPTION_FLT_OVERFLOW	0xc0000091
#define EXCEPTION_FLT_STACK_CHECK	0xc0000092
#define EXCEPTION_FLT_UNDERFLOW	0xc0000093
#define EXCEPTION_INT_DIVIDE_BY_ZERO	0xc0000094
#define EXCEPTION_INT_OVERFLOW	0xc0000095
#define EXCEPTION_PRIV_INSTRUCTION	0xc0000096
#define EXCEPTION_IN_PAGE_ERROR		0xC0000025
#define EXCEPTION_ILLEGAL_INSTRUCTION     STATUS_ILLEGAL_INSTRUCTION
#define EXCEPTION_INVALID_HANDLE        STATUS_INVALID_HANDLE
#define EXCEPTION_NONCONTINUABLE_EXCEPTION	0xc0000025
#define EXCEPTION_NONCONTINUABLE	1
#define EXCEPTION_STACK_OVERFLOW	0xc00000fd
#define EXCEPTION_INVALID_DISPOSITION	0xc0000026
#define EXCEPTION_POSSIBLE_DEADLOCK 0xC0000194L
#define CS_ENABLE 1
#define CS_DISABLE 2
#define CS_DELETE_TRANSFORM 3
#define LCS_SIGNATURE 'PSOC'
#define LCS_sRGB 'sRGB'
#define LCS_WINDOWS_COLOR_SPACE 'Win '
#define LCS_CALIBRATED_RGB	0
#define LCS_DEVICE_RGB	1
#define LCS_DEVICE_CMYK	2
#define LCS_GM_BUSINESS	1
#define LCS_GM_GRAPHICS	2
#define LCS_GM_IMAGES	4
#define ICM_ADDPROFILE	1
#define ICM_DELETEPROFILE	2
#define ICM_QUERYPROFILE	3
#define ICM_SETDEFAULTPROFILE	4
#define ICM_REGISTERICMATCHER	5
#define ICM_UNREGISTERICMATCHER 6
#define ICM_QUERYMATCH	7
#define CM_OUT_OF_GAMUT	255
#define CM_IN_GAMUT	0
#define FILE_TYPE_UNKNOWN	0
#define FILE_TYPE_DISK	1
#define FILE_TYPE_CHAR	2
#define FILE_TYPE_PIPE	3
#define FILE_TYPE_REMOTE 0x8000
#define GGO_BITMAP	1
#define GGO_NATIVE	2
#define GGO_METRICS	0
#define GGO_GRAY2_BITMAP	4
#define GGO_GRAY4_BITMAP	5
#define GGO_GRAY8_BITMAP	6
#define GDI_ERROR	0xffffffff
#define HGDI_ERROR (LongToHandle(0xFFFFFFFFL))
#define GM_COMPATIBLE	1
#define GM_ADVANCED	2

//#if(WINVER >= 0x0500)
#define WS_EX_NOINHERITLAYOUT  0x00100000L
#define WS_EX_LAYOUTRTL      0x00400000L
//#endif

//#if(_WIN32_WINNT >= 0x0501)
#define WS_EX_COMPOSITED     0x02000000L
//#endif
//#if(_WIN32_WINNT >= 0x0500)
#define WS_EX_NOACTIVATE     0x08000000L
//#endif
#define HANDLE_FLAG_INHERIT	1
#define HANDLE_FLAG_PROTECT_FROM_CLOSE	2
#define IE_BADID  (-1)
#define IE_OPEN   (-2)
#define IE_NOPEN  (-3)
#define IE_MEMORY (-4)
#define IE_DEFAULT (-5)
#define IE_HARDWARE (-10)
#define IE_BYTESIZE (-11)
#define IE_BAUDRATE (-12)
#define IDC_HAND	MAKEINTRESOURCE(32649)
#define IDC_ARROW	MAKEINTRESOURCE(32512)
#define IDC_IBEAM	MAKEINTRESOURCE(32513)
#define IDC_WAIT	MAKEINTRESOURCE(32514)
#define IDC_CROSS	MAKEINTRESOURCE(32515)
#define IDC_UPARROW	MAKEINTRESOURCE(32516)
#define IDC_SIZENWSE	MAKEINTRESOURCE(32642)
#define IDC_SIZENESW	MAKEINTRESOURCE(32643)
#define IDC_SIZEWE	MAKEINTRESOURCE(32644)
#define IDC_SIZENS	MAKEINTRESOURCE(32645)
#define IDC_SIZEALL	MAKEINTRESOURCE(32646)
#define IDC_ICON	MAKEINTRESOURCE(32641)
#define IDC_SIZE	MAKEINTRESOURCE(32640)
#define IDC_NO	MAKEINTRESOURCE(32648)
#define IDC_APPSTARTING	MAKEINTRESOURCE(32650)
#define IDC_HELP	MAKEINTRESOURCE(32651)
#define IDI_APPLICATION	MAKEINTRESOURCE(32512)
#define IDI_HAND	MAKEINTRESOURCE(32513)
#define IDI_QUESTION	MAKEINTRESOURCE(32514)
#define IDI_EXCLAMATION	MAKEINTRESOURCE(32515)
#define IDI_ASTERISK	MAKEINTRESOURCE(32516)
#define IDI_WINLOGO	MAKEINTRESOURCE(32517)
#define IDI_WARNING	IDI_EXCLAMATION
#define IDI_ERROR	IDI_HAND
#define IDI_INFORMATION IDI_ASTERISK
#define MM_ANISOTROPIC	8
#define MM_HIENGLISH	5
#define MM_HIMETRIC	3
#define MM_ISOTROPIC	7
#define MM_LOENGLISH	4
#define MM_LOMETRIC	2
#define MM_TEXT	1
#define MM_TWIPS	6
#define GMDI_GOINTOPOPUPS	2
#define GMDI_USEDISABLED	1
#define PM_NOREMOVE	0
#define PM_REMOVE	1
#define PM_NOYIELD	2
#define PIPE_NOWAIT	1
#define PIPE_READMODE_MESSAGE	2
#define PIPE_CLIENT_END	0
#define PIPE_SERVER_END	1
#define GW_HWNDNEXT	2
#define GW_HWNDPREV	3
#define GW_CHILD	5
#define GW_HWNDFIRST	0
#define GW_HWNDLAST	1
#define GW_OWNER	4
#define GetNextWindow(HWND,cmd) GetWindow(HWND,cmd)
#define PT_MOVETO	6
#define PT_LINETO	2
#define PT_BEZIERTO	4
#define PT_CLOSEFIGURE	1
#define SHUTDOWN_NORETRY	1
#define QS_ALLEVENTS	191
#define QS_ALLINPUT	255
#define QS_HOTKEY	128
#define QS_INPUT	7
#define QS_KEY	1
#define QS_MOUSE	6
#define QS_MOUSEBUTTON	4
#define QS_MOUSEMOVE	2
#define QS_PAINT	32
#define QS_POSTMESSAGE	8
#define QS_SENDMESSAGE	64
#define QS_TIMER	16
#define SIF_TRACKPOS	16
#define SIF_PAGE	2
#define SIF_POS	4
#define SIF_RANGE	1
#define SIF_DISABLENOSCROLL	8
#define SIF_ALL	(SIF_RANGE|SIF_PAGE|SIF_POS|SIF_TRACKPOS)
//#ifndef __stdio_h__
#define STD_INPUT_HANDLE	(DWORD)(0xfffffff6)
#define STD_OUTPUT_HANDLE	(DWORD)(0xfffffff5)
#define STD_ERROR_HANDLE	(DWORD)(0xfffffff4)
//#endif
#define INVALID_HANDLE_VALUE	(HANDLE)(0xffffffff)
#define INVALID_FILE_SIZE ((DWORD)0xFFFFFFFF)
#define INVALID_SET_FILE_POINTER ((DWORD)-1)
#define INVALID_FILE_ATTRIBUTES ((DWORD)-1)
#define BLACK_BRUSH	4
#define DKGRAY_BRUSH	3
#define GRAY_BRUSH	2
#define HOLLOW_BRUSH	5
#define LTGRAY_BRUSH	1
#define NULL_BRUSH	5
#define WHITE_BRUSH	0
#define BLACK_PEN	7
#define NULL_PEN	8
#define WHITE_PEN	6
#define ANSI_FIXED_FONT	11
#define ANSI_VAR_FONT	12
#define DEVICE_DEFAULT_FONT	14
#define DEFAULT_GUI_FONT	17
#define OEM_FIXED_FONT	10
#define SYSTEM_FONT	13
#define SYSTEM_FIXED_FONT	16

//#if(WINVER >= 0x0400)
#define DEFAULT_GUI_FONT	17
//#endif
#define DC_BRUSH        18
#define DC_PEN         19
//#if (_WIN32_WINNT >= _WIN32_WINNT_WIN2K)
#define STOCK_LAST       19
//#elif (WINVER >= 0x0400)
//#define STOCK_LAST       17
//#else
//#define STOCK_LAST       16
//#endif

#define DEFAULT_PALETTE	15
#define CT_CTYPE1	1
#define CT_CTYPE2	2
#define CT_CTYPE3	4
#define C1_UPPER	1
#define C1_LOWER	2
#define C1_DIGIT	4
#define C1_SPACE	8
#define C1_PUNCT	16
#define C1_CNTRL	32
#define C1_BLANK	64
#define C1_XDIGIT	128
#define C1_ALPHA	256
#define C2_LEFTTORIGHT	1
#define C2_RIGHTTOLEFT	2
#define C2_EUROPENUMBER	3
#define C2_EUROPESEPARATOR	4
#define C2_EUROPETERMINATOR	5
#define C2_ARABICNUMBER	6
#define C2_COMMONSEPARATOR	7
#define C2_BLOCKSEPARATOR	8
#define C2_SEGMENTSEPARATOR	9
#define C2_WHITESPACE	10
#define C2_OTHERNEUTRAL	11
#define C2_NOTAPPLICABLE	0
#define C3_NONSPACING	1
#define C3_DIACRITIC	2
#define C3_VOWELMARK	4
#define C3_SYMBOL	8
#define C3_KATAKANA	16
#define C3_HIRAGANA	32
#define C3_HALFWIDTH	64
#define C3_FULLWIDTH	128
#define C3_IDEOGRAPH	256
#define C3_KASHIDA	512
#define C3_ALPHA	32768
#define C3_NOTAPPLICABLE	0
#define COLOR_HOTLIGHT	26
#define COLOR_GRADIENTACTIVECAPTION 27
#define COLOR_GRADIENTINACTIVECAPTION 28
#define COLOR_MENUHILIGHT	29
#define COLOR_MENUBAR	30
#define COLOR_3DDKSHADOW	21
#define COLOR_3DFACE	15
#define COLOR_3DHILIGHT	20
#define COLOR_3DHIGHLIGHT	20
#define COLOR_3DLIGHT	22
#define COLOR_BTNHILIGHT	20
#define COLOR_3DSHADOW	16
#define COLOR_ACTIVEBORDER	10
#define COLOR_ACTIVECAPTION	2
#define COLOR_APPWORKSPACE	12
#define COLOR_BACKGROUND	1
#define COLOR_DESKTOP	1
#define COLOR_BTNFACE	15
#define COLOR_BTNHIGHLIGHT	20
#define COLOR_BTNSHADOW	16
#define COLOR_BTNTEXT	18
#define COLOR_CAPTIONTEXT	9
#define COLOR_GRAYTEXT	17
#define COLOR_HIGHLIGHT	13
#define COLOR_HIGHLIGHTTEXT	14
#define COLOR_INACTIVEBORDER	11
#define COLOR_INACTIVECAPTION	3
#define COLOR_INACTIVECAPTIONTEXT	19
#define COLOR_INFOBK	24
#define COLOR_INFOTEXT	23
#define COLOR_MENU	4
#define COLOR_MENUTEXT	7
#define COLOR_SCROLLBAR	0
#define COLOR_WINDOW	5
#define COLOR_WINDOWFRAME	6
#define COLOR_WINDOWTEXT	8
#define CTLCOLOR_MSGBOX 0
#define CTLCOLOR_EDIT 1
#define CTLCOLOR_LISTBOX 2
#define CTLCOLOR_BTN 3
#define CTLCOLOR_DLG 4
#define CTLCOLOR_SCROLLBAR 5
#define CTLCOLOR_STATIC 6
#define CTLCOLOR_MAX 7
#define	SM_CXSCREEN	0
#define	SM_CYSCREEN	1
#define	SM_CXVSCROLL	2
#define	SM_CYHSCROLL	3
#define	SM_CYCAPTION	4
#define	SM_CXBORDER	5
#define	SM_CYBORDER	6
#define	SM_CXDLGFRAME	7
#define	SM_CYDLGFRAME	8
#define	SM_CYVTHUMB	9
#define	SM_CXHTHUMB	10
#define	SM_CXICON	11
#define	SM_CYICON	12
#define	SM_CXCURSOR	13
#define	SM_CYCURSOR	14
#define	SM_CYMENU	15
#define	SM_CXFULLSCREEN	16
#define	SM_CYFULLSCREEN	17
#define	SM_CYKANJIWINDOW	18
#define	SM_MOUSEPRESENT	19
#define	SM_CYVSCROLL	20
#define	SM_CXHSCROLL	21
#define	SM_DEBUG	22
#define	SM_SWAPBUTTON	23
#define	SM_RESERVED1	24
#define	SM_RESERVED2	25
#define	SM_RESERVED3	26
#define	SM_RESERVED4	27
#define	SM_CXMIN	28
#define	SM_CYMIN	29
#define	SM_CXSIZE	30
#define	SM_CYSIZE	31
#define	SM_CXFRAME	32
#define	SM_CYFRAME	33
#define	SM_CXMINTRACK	34
#define	SM_CYMINTRACK	35
#define	SM_CXDOUBLECLK	36
#define	SM_CYDOUBLECLK	37
#define	SM_CXICONSPACING	38
#define	SM_CYICONSPACING	39
#define	SM_MENUDROPALIGNMENT	40
#define	SM_PENWINDOWS	41
#define	SM_DBCSENABLED	42
#define	SM_CMOUSEBUTTONS	43
#define	SM_CXFIXEDFRAME	SM_CXDLGFRAME
#define	SM_CYFIXEDFRAME	SM_CYDLGFRAME
#define	SM_CXSIZEFRAME	SM_CXFRAME
#define	SM_CYSIZEFRAME	SM_CYFRAME
#define	SM_SECURE	44
#define	SM_CXEDGE	45
#define	SM_CYEDGE	46
#define	SM_CXMINSPACING	47
#define	SM_CYMINSPACING	48
#define	SM_CXSMICON	49
#define	SM_CYSMICON	50
#define	SM_CYSMCAPTION	51
#define	SM_CXSMSIZE	52
#define	SM_CYSMSIZE	53
#define	SM_CXMENUSIZE	54
#define	SM_CYMENUSIZE	55
#define	SM_ARRANGE	56
#define	SM_CXMINIMIZED	57
#define	SM_CYMINIMIZED	58
#define	SM_CXMAXTRACK	59
#define	SM_CYMAXTRACK	60
#define	SM_CXMAXIMIZED	61
#define	SM_CYMAXIMIZED	62
#define	SM_NETWORK	63
#define	SM_CLEANBOOT	67
#define	SM_CXDRAG	68
#define	SM_CYDRAG	69
#define	SM_SHOWSOUNDS	70
#define	SM_CXMENUCHECK	71
#define	SM_CYMENUCHECK	72
#define	SM_SLOWMACHINE	73
#define	SM_MIDEASTENABLED	74
#define	SM_MOUSEWHEELPRESENT	75
#define	SM_XVIRTUALSCREEN	76
#define	SM_YVIRTUALSCREEN	77
#define	SM_CXVIRTUALSCREEN	78
#define	SM_CYVIRTUALSCREEN	79
#define	SM_CMONITORS	80
#define	SM_SAMEDISPLAYFORMAT	81
#define	SM_CMETRICS	76
#define ARW_BOTTOMLEFT	0
#define ARW_BOTTOMRIGHT	1
#define ARW_HIDE	8
#define ARW_TOPLEFT	2
#define ARW_TOPRIGHT	3
#define ARW_DOWN	4
#define ARW_LEFT	0
#define ARW_RIGHT	0
#define ARW_UP	4
#define SYSPAL_NOSTATIC	2
#define SYSPAL_STATIC	1
#define SYSPAL_ERROR	0
#define GET_TAPE_MEDIA_INFORMATION	0
#define GET_TAPE_DRIVE_INFORMATION	1
#define SET_TAPE_MEDIA_INFORMATION	0
#define SET_TAPE_DRIVE_INFORMATION	1
#define TAPE_ABSOLUTE_POSITION	0
#define TAPE_LOGICAL_POSITION	1
#define TA_BASELINE	24
#define TA_BOTTOM	8
#define TA_TOP	0
#define TA_CENTER	6
#define TA_LEFT	0
#define TA_RIGHT	2
#define TA_RTLREADING	256
#define TA_MASK	(TA_BASELINE+TA_CENTER+TA_UPDATECP+TA_RTLREADING)
#define TA_NOUPDATECP	0
#define TA_UPDATECP	1
#define VTA_BASELINE	24
#define VTA_CENTER	6
#define VTA_LEFT	TA_BOTTOM
#define VTA_RIGHT	TA_TOP
#define VTA_BOTTOM	TA_RIGHT
#define VTA_TOP	TA_LEFT
#define THREAD_PRIORITY_ABOVE_NORMAL	1
#define THREAD_PRIORITY_BELOW_NORMAL	(-1)
#define THREAD_PRIORITY_HIGHEST	2
#define THREAD_PRIORITY_IDLE	(-15)
#define THREAD_PRIORITY_LOWEST	(-2)
#define THREAD_PRIORITY_NORMAL	0
#define THREAD_PRIORITY_TIME_CRITICAL	15
#define THREAD_PRIORITY_ERROR_RETURN	2147483647
#define TLS_MINIMUM_AVAILABLE	64
#define TIME_NOMINUTESORSECONDS	1
#define TIME_NOSECONDS	2
#define TIME_NOTIMEMARKER	4
#define TIME_FORCE24HOURFORMAT	8
#define TIME_ZONE_ID_UNKNOWN	0
#define TIME_ZONE_ID_STANDARD	1
#define TIME_ZONE_ID_DAYLIGHT	2
#define UOI_FLAGS	1
#define UOI_NAME	2
#define UOI_TYPE	3
#define FS_CASE_IS_PRESERVED	2
#define FS_CASE_SENSITIVE	1
#define FS_UNICODE_STORED_ON_DISK	4
#define FS_PERSISTENT_ACLS	8
#define FS_FILE_COMPRESSION	16
#define FS_VOL_IS_COMPRESSED	32768
#define FS_FILE_ENCRYPTION FILE_SUPPORTS_ENCRYPTION
#define GWL_EXSTYLE	(-20)
#define GWL_STYLE	(-16)
#define GWL_WNDPROC	(-4)
#define GWL_HINSTANCE	(-6)
#define GWL_HWNDPARENT	(-8)
#define GWL_ID	(-12)
#define GWL_USERDATA	(-21)
#define GWLP_WNDPROC	(-4)
#define GWLP_HINSTANCE	(-6)
#define GWLP_HWNDPARENT	(-8)
#define GWLP_USERDATA	(-21)
#define GWLP_ID	(-12)
#define DWL_DLGPROC	4
#define DWL_MSGRESULT	0
#define DWL_USER	8
#define DWLP_MSGRESULT	0
#define DWLP_DLGPROC	DWLP_MSGRESULT+sizeof(LRESULT)
#define DWLP_USER	DWLP_DLGPROC+sizeof(DLGPROC)
#define GMEM_FIXED	0
#define GMEM_MOVEABLE	2
#define GMEM_MODIFY 128
#define GMEM_VALID_FLAGS 0x7F72
#define GPTR	64
#define GHND	66
#define GMEM_DDESHARE	8192
#define GMEM_DISCARDABLE	256
#define GMEM_LOWER	4096
#define GMEM_NOCOMPACT	16
#define GMEM_NODISCARD	32
#define GMEM_NOT_BANKED	4096
#define GMEM_NOTIFY	16384
#define GMEM_SHARE	8192
#define GMEM_ZEROINIT	64
#define GMEM_DISCARDED	16384
#define GMEM_INVALID_HANDLE	32768
#define GMEM_LOCKCOUNT	255
#define GlobalLRUNewest(h) ((HANDLE)(h))
#define GlobalLRUOldest(h) ((HANDLE)(h))
#define HEAP_GENERATE_EXCEPTIONS	4
#define HEAP_NO_SERIALIZE	1
#define HEAP_ZERO_MEMORY	8
#define STATUS_WAIT_0	0
#define STATUS_ABANDONED_WAIT_0	0x80
#define STATUS_USER_APC	0xC0
#define STATUS_TIMEOUT	0x102
#define STATUS_PENDING	0x103
#define STATUS_SEGMENT_NOTIFICATION	0x40000005
#define STATUS_GUARD_PAGE_VIOLATION	0x80000001
#define STATUS_DATATYPE_MISALIGNMENT	0x80000002
#define STATUS_BREAKPOINT	0x80000003
#define STATUS_SINGLE_STEP	0x80000004
#define STATUS_ACCESS_VIOLATION	0xC0000005
#define STATUS_IN_PAGE_ERROR	0xC0000006
#define STATUS_NO_MEMORY	0xC0000017
#define STATUS_ILLEGAL_INSTRUCTION	0xC000001D
#define STATUS_NONCONTINUABLE_EXCEPTION	0xC0000025
#define STATUS_INVALID_DISPOSITION	0xC0000026
#define STATUS_ARRAY_BOUNDS_EXCEEDED	0xC000008C
#define STATUS_FLOAT_DENORMAL_OPERAND	0xC000008D
#define STATUS_FLOAT_DIVIDE_BY_ZERO	0xC000008E
#define STATUS_FLOAT_INEXACT_RESULT	0xC000008F
#define STATUS_FLOAT_INVALID_OPERATION	0xC0000090
#define STATUS_FLOAT_OVERFLOW	0xC0000091
#define STATUS_FLOAT_STACK_CHECK	0xC0000092
#define STATUS_FLOAT_UNDERFLOW	0xC0000093
#define STATUS_INTEGER_DIVIDE_BY_ZERO	0xC0000094
#define STATUS_INTEGER_OVERFLOW	0xC0000095
#define STATUS_PRIVILEGED_INSTRUCTION	0xC0000096
#define STATUS_STACK_OVERFLOW	0xC00000FD
#define STATUS_CONTROL_C_EXIT	0xC000013A
#define STATUS_INVALID_HANDLE ((DWORD)0xC0000008L)
#define STATUS_POSSIBLE_DEADLOCK 0xC0000194L
#define ILC_COLOR	0
#define ILC_COLOR4	4
#define ILC_COLOR8	8
#define ILC_COLOR16	16
#define ILC_COLOR24	24
#define ILC_COLOR32	32
#define ILC_COLORDDB	254
#define ILC_MASK	1
#define ILC_MIRROR	0x00002000
#define ILC_PERITEMMIRROR	0x00008000
#define ILC_PALETTE	2048
#define ILD_BLEND25	2
#define ILD_BLEND50	4
#define ILD_SELECTED	4
#define ILD_BLEND	4
#define ILD_FOCUS	2
#define ILD_MASK	16
#define ILD_NORMAL	0
#define ILD_TRANSPARENT	1
#define ILD_IMAGE	0x00000020
#define ILD_ROP	0x040
#define ILD_BLEND25 2
#define ILD_BLEND50 4
#define ILD_OVERLAYMASK 0x0F00
#define INDEXTOOVERLAYMASK(i)	((i) << 8)
#define ILD_PRESERVEALPHA 0x1000
#define ILD_SCALE	0x00002000
#define ILD_DPISCALE	0x00004000
#define ILS_NORMAL	0
#define ILS_GLOW	1
#define ILS_SHADOW	2
#define ILS_SATURATE	4
#define ILS_ALPHA	8
#define ILCF_MOVE	0
#define ILCF_SWAP	1
#define CLR_NONE	0xffffffff
#define CLR_INVALID	CLR_NONE
#define CLR_DEFAULT	0xff000000
#define LR_DEFAULTCOLOR	0
#define LR_LOADFROMFILE	16
#define LR_LOADTRANSPARENT	32
#define LR_MONOCHROME	1
#define IME_CONFIG_GENERAL	1
#define IME_CONFIG_REGISTERWORD	2
#define IME_CONFIG_SELECTDICTIONARY	3
#define GCL_CONVERSION	1
#define GCL_REVERSECONVERSION	2
#define GCL_REVERSE_LENGTH	3
#define CPS_CANCEL	4
#define CPS_COMPLETE	1
#define CPS_CONVERT	2
#define CPS_REVERT	3
#define SECURITY_DESCRIPTOR_REVISION	1
#define SECURITY_DESCRIPTOR_REVISION1	1
#define IS_TEXT_UNICODE_ASCII16	1
#define IS_TEXT_UNICODE_REVERSE_ASCII16	16
#define IS_TEXT_UNICODE_STATISTICS	2
#define IS_TEXT_UNICODE_REVERSE_STATISTICS	32
#define IS_TEXT_UNICODE_CONTROLS	4
#define IS_TEXT_UNICODE_REVERSE_CONTROLS	64
#define IS_TEXT_UNICODE_SIGNATURE	8
#define IS_TEXT_UNICODE_REVERSE_SIGNATURE	128
#define IS_TEXT_UNICODE_ILLEGAL_CHARS	256
#define IS_TEXT_UNICODE_ODD_LENGTH	512
#define IS_TEXT_UNICODE_NULL_BYTES	4096
#define IS_TEXT_UNICODE_UNICODE_MASK	15
#define IS_TEXT_UNICODE_REVERSE_MASK	240
#define IS_TEXT_UNICODE_NOT_UNICODE_MASK	3840
#define IS_TEXT_UNICODE_NOT_ASCII_MASK	61440
#define HC_GETNEXT	1
#define HC_SKIP	2
#define HC_SYSMODALOFF	5
#define HC_SYSMODALON	4
#define HC_NOREMOVE	3
#define KEYEVENTF_EXTENDEDKEY	1
#define KEYEVENTF_KEYUP	2
#define OBM_BTNCORNERS	32758
#define OBM_BTSIZE	32761
#define OBM_CHECK	32760
#define OBM_CHECKBOXES	32759
#define OBM_CLOSE	32754
#define OBM_COMBO	32738
#define OBM_DNARROW	32752
#define OBM_DNARROWD	32742
#define OBM_DNARROWI	32736
#define OBM_LFARROW	32750
#define OBM_LFARROWI	32734
#define OBM_LFARROWD	32740
#define OBM_MNARROW	32739
#define OBM_OLD_CLOSE	32767
#define OBM_OLD_DNARROW	32764
#define OBM_OLD_LFARROW	32762
#define OBM_OLD_REDUCE	32757
#define OBM_OLD_RESTORE	32755
#define OBM_OLD_RGARROW	32763
#define OBM_OLD_UPARROW	32765
#define OBM_OLD_ZOOM	32756
#define OBM_REDUCE	32749
#define OBM_REDUCED	32746
#define OBM_RESTORE	32747
#define OBM_RESTORED	32744
#define OBM_RGARROW	32751
#define OBM_RGARROWD	32741
#define OBM_RGARROWI	32735
#define OBM_SIZE	32766
#define OBM_UPARROW	32753
#define OBM_UPARROWD	32743
#define OBM_UPARROWI	32737
#define OBM_ZOOM	32748
#define OBM_ZOOMD	32745
#define DONT_RESOLVE_DLL_REFERENCES	1
#define LOAD_LIBRARY_AS_DATAFILE	2
#define LOAD_WITH_ALTERED_SEARCH_PATH	8
#define LMEM_FIXED	0
#define LMEM_MOVEABLE	2
#define LPTR	64
#define LHND	66
#define NONZEROLHND	2
#define NONZEROLPTR	0
#define LMEM_NONZEROLHND	2
#define LMEM_NONZEROLPTR	0
#define LMEM_DISCARDABLE	3840
#define LMEM_NOCOMPACT	16
#define LMEM_NODISCARD	32
#define LMEM_ZEROINIT	64
#define LMEM_DISCARDED	16384
#define LMEM_MODIFY	128
#define LMEM_INVALID_HANDLE	32768
#define LMEM_LOCKCOUNT	255
#define LOCKFILE_FAIL_IMMEDIATELY	1
#define LOCKFILE_EXCLUSIVE_LOCK	2
#define MB_USERICON	128
#define MB_ICONASTERISK	64
#define MB_ICONEXCLAMATION	0x30
#define MB_ICONWARNING	0x30
#define MB_ICONERROR	16
#define MB_ICONHAND	16
#define MB_ICONQUESTION	32
#define MB_OK	0
#define MB_ABORTRETRYIGNORE	2
#define MB_APPLMODAL	0
#define MB_DEFAULT_DESKTOP_ONLY	0x20000
#define MB_HELP	0x4000
#define MB_RIGHT	0x80000
#define MB_RTLREADING	0x100000
#define MB_TOPMOST	0x40000
#define MB_DEFBUTTON1	0
#define MB_DEFBUTTON2	256
#define MB_DEFBUTTON3	512
#define MB_DEFBUTTON4	0x300
#define MB_ICONINFORMATION	64
#define MB_ICONSTOP	16
#define MB_OKCANCEL	1
#define MB_RETRYCANCEL	0x5
#define MB_SERVICE_NOTIFICATION	0x40000
#define MB_SETFOREGROUND	0x10000
#define MB_SYSTEMMODAL	4096
#define MB_TASKMODAL	0x2000
#define MB_YESNO	4
#define MB_YESNOCANCEL	3
#define IDABORT	3
#define IDCANCEL	2
#define IDCLOSE	8
#define IDHELP	9
#define IDIGNORE	5
#define IDNO	7
#define IDOK	1
#define IDRETRY	4
#define IDYES	6
#define MSGF_DIALOGBOX	0
#define MSGF_MENU	2
#define MSGF_NEXTWINDOW	6
#define MSGF_SCROLLBAR	5
#define MSGF_MAINLOOP	8
#define MSGF_USER	4096
#define MWT_IDENTITY	1
#define MWT_LEFTMULTIPLY	2
#define MWT_RIGHTMULTIPLY	3
#define MWT_MIN	MWT_IDENTITY
#define MWT_MAX	MWT_RIGHTMULTIPLY
#define MOUSEEVENTF_ABSOLUTE	32768
#define MOUSEEVENTF_MOVE	1
#define MOUSEEVENTF_LEFTDOWN	2
#define MOUSEEVENTF_LEFTUP	4
#define MOUSEEVENTF_RIGHTDOWN	8
#define MOUSEEVENTF_RIGHTUP	16
#define MOUSEEVENTF_MIDDLEDOWN	32
#define MOUSEEVENTF_MIDDLEUP	64
#define MOVEFILE_REPLACE_EXISTING	1
#define MOVEFILE_COPY_ALLOWED	2
#define MOVEFILE_DELAY_UNTIL_REBOOT	4
#define MOVEFILE_WRITE_THROUGH	8
#define MOVEFILE_CREATE_HARD_LINK 16
#define MOVEFILE_FAIL_IF_NOT_TRACKABLE 32
#define MOVEFILE_CREATE_HARDLINK 16
#define MOVEFILE_FAIL_IF_NOT_TRACKABLE 32
#define WAIT_OBJECT_0	0
#define WAIT_ABANDONED_0	128
#define WAIT_TIMEOUT	0x102
#define WAIT_IO_COMPLETION	0xc0
#define WAIT_ABANDONED	128
#define WAIT_FAILED	0xffffffff
#define MAXIMUM_WAIT_OBJECTS	64
#define MAXIMUM_SUSPEND_COUNT	0x7f
#define MB_PRECOMPOSED	1
#define MB_COMPOSITE	2
#define MB_ERR_INVALID_CHARS	8
#define MB_USEGLYPHCHARS	4
#define TOKEN_ADJUST_DEFAULT	128
#define TOKEN_ADJUST_GROUPS	64
#define TOKEN_ADJUST_PRIVILEGES	32
#define TOKEN_ALL_ACCESS	0xf00ff
#define TOKEN_ASSIGN_PRIMARY	1
#define TOKEN_DUPLICATE	2
#define TOKEN_EXECUTE	0x20000
#define TOKEN_IMPERSONATE	4
#define TOKEN_QUERY	8
#define TOKEN_QUERY_SOURCE	16
#define TOKEN_READ	0x20008
#define TOKEN_WRITE	0x200e0
#define HWND_BROADCAST	(HWND)65535
#define CopyMemory	RtlCopyMemory
#define RtlCopyMemory	memcpy
#define TAPE_FORMAT	5
#define TAPE_LOAD	0
#define TAPE_LOCK	3
#define TAPE_TENSION	2
#define TAPE_UNLOAD	1
#define TAPE_UNLOCK	4
#define IS_PSREBOOTSYSTEM	3
#define IS_PSRESTARTWINDOWS	2
#define PSPCB_CREATE	2
#define PSPCB_RELEASE	1
#define PURGE_TXABORT	1
#define PURGE_RXABORT	2
#define PURGE_TXCLEAR	4
#define PURGE_RXCLEAR	8
#define LPTx 0x80
#define OWNER_SECURITY_INFORMATION	1
#define GROUP_SECURITY_INFORMATION	2
#define DACL_SECURITY_INFORMATION	4
#define SACL_SECURITY_INFORMATION	8
#define EVENTLOG_FORWARDS_READ	4
#define EVENTLOG_BACKWARDS_READ	8
#define EVENTLOG_SEEK_READ	2
#define EVENTLOG_SEQUENTIAL_READ	1
#define EVENTLOG_ERROR_TYPE	1
#define EVENTLOG_WARNING_TYPE	2
#define EVENTLOG_INFORMATION_TYPE	4
#define EVENTLOG_AUDIT_SUCCESS	8
#define EVENTLOG_AUDIT_FAILURE	16
#define RDW_ERASE	4
#define RDW_FRAME	1024
#define RDW_INTERNALPAINT	2
#define RDW_INVALIDATE	1
#define RDW_NOERASE	32
#define RDW_NOFRAME	2048
#define RDW_NOINTERNALPAINT	16
#define RDW_VALIDATE	8
#define RDW_ERASENOW	512
#define RDW_UPDATENOW	256
#define RDW_ALLCHILDREN	128
#define RDW_NOCHILDREN	64
#define HKEY_CLASSES_ROOT	(HKEY)0x80000000
#define HKEY_CURRENT_USER	(HKEY)0x80000001
#define HKEY_LOCAL_MACHINE	(HKEY)0x80000002
#define HKEY_USERS	(HKEY)(-2147483645)
#define HKEY_PERFORMANCE_DATA	(HKEY)(-2147483644)
#define HKEY_CURRENT_CONFIG	(HKEY)(-2147483643)

//#ifndef HKEY_DYN_DATA
#define HKEY_DYN_DATA	((HKEY)(0x80000006))
//#endif
#define REG_OPTION_VOLATILE	1
#define REG_OPTION_NON_VOLATILE	0
#define REG_CREATED_NEW_KEY	1
#define REG_OPENED_EXISTING_KEY	2
#define REG_BINARY	3
#define REG_DWORD	4
#define REG_DWORD_LITTLE_ENDIAN	4
#define REG_DWORD_BIG_ENDIAN	5
#define REG_EXPAND_SZ	2
#define REG_LINK	6
#define REG_MULTI_SZ	7
#define REG_NONE	0
#define REG_RESOURCE_LIST	8
#define REG_FULL_RESOURCE_DESCRIPTOR 9
#define REG_RESOURCE_REQUIREMENTS_LIST 10
#define REG_SZ	1
#define MOD_ALT	1
#define MOD_CONTROL	2
#define MOD_SHIFT	4
#define MOD_WIN	8
#define IDHOT_SNAPDESKTOP	(-2)
#define IDHOT_SNAPWINDOW	(-1)
#define REG_NOTIFY_CHANGE_NAME	1
#define REG_NOTIFY_CHANGE_ATTRIBUTES	2
#define REG_NOTIFY_CHANGE_LAST_SET	4
#define REG_NOTIFY_CHANGE_SECURITY	8
#define SW_ERASE	4
#define SW_INVALIDATE	2
#define SW_SCROLLCHILDREN	1
#define SMTO_ABORTIFHUNG	2
#define SMTO_BLOCK	1
#define SMTO_NORMAL	0
#define OPAQUE	2
#define TRANSPARENT	1
#define SLE_ERROR	1
#define SLE_MINORERROR	2
#define SLE_WARNING	3
#define SEM_FAILCRITICALERRORS	1
#define SEM_NOALIGNMENTFAULTEXCEPT	4
#define SEM_NOGPFAULTERRORBOX	2
#define SEM_NOOPENFILEERRORBOX	32768
#define ICM_ON	2
#define ICM_OFF	1
#define ICM_QUERY	3
#define LOCALE_ILANGUAGE	1
#define LOCALE_SLANGUAGE	2
#define LOCALE_SENGLANGUAGE	4097
#define LOCALE_SABBREVLANGNAME	3
#define LOCALE_SNATIVELANGNAME	4
#define LOCALE_ICOUNTRY	5
#define LOCALE_SCOUNTRY	6
#define LOCALE_SENGCOUNTRY	4098
#define LOCALE_SABBREVCTRYNAME	7
#define LOCALE_SNATIVECTRYNAME	8
#define LOCALE_IDEFAULTLANGUAGE	9
#define LOCALE_IDEFAULTCOUNTRY	10
#define LOCALE_IDEFAULTANSICODEPAGE	4100
#define LOCALE_IDEFAULTCODEPAGE	11
#define LOCALE_SLIST	12
#define LOCALE_IMEASURE	13
#define LOCALE_SDECIMAL	14
#define LOCALE_STHOUSAND	15
#define LOCALE_SGROUPING	16
#define LOCALE_IDIGITS	17
#define LOCALE_ILZERO	18
#define LOCALE_INEGNUMBER	4112
#define LOCALE_SCURRENCY	20
#define LOCALE_SMONDECIMALSEP	22
#define LOCALE_SMONTHOUSANDSEP	23
#define LOCALE_SMONGROUPING	24
#define LOCALE_ICURRDIGITS	25
#define LOCALE_ICURRENCY	27
#define LOCALE_INEGCURR	28
#define LOCALE_SDATE	29
#define LOCALE_STIME	30
#define LOCALE_STIMEFORMAT	4099
#define LOCALE_SSHORTDATE	31
#define LOCALE_SLONGDATE	32
#define LOCALE_IDATE	33
#define LOCALE_ILDATE	34
#define LOCALE_ITIME	35
#define LOCALE_ITLZERO	37
#define LOCALE_IDAYLZERO	38
#define LOCALE_IMONLZERO	39
#define LOCALE_S1159	40
#define LOCALE_S2359	41
#define LOCALE_ICALENDARTYPE	4105
#define LOCALE_IOPTIONALCALENDAR	4107
#define LOCALE_IFIRSTDAYOFWEEK	4108
#define LOCALE_IFIRSTWEEKOFYEAR	4109
#define LOCALE_SDAYNAME1	42
#define LOCALE_SDAYNAME2	43
#define LOCALE_SDAYNAME3	44
#define LOCALE_SDAYNAME4	45
#define LOCALE_SDAYNAME5	46
#define LOCALE_SDAYNAME6	47
#define LOCALE_SDAYNAME7	48
#define LOCALE_SABBREVDAYNAME1	49
#define LOCALE_SABBREVDAYNAME2	50
#define LOCALE_SABBREVDAYNAME3	51
#define LOCALE_SABBREVDAYNAME4	52
#define LOCALE_SABBREVDAYNAME5	53
#define LOCALE_SABBREVDAYNAME6	54
#define LOCALE_SABBREVDAYNAME7	55
#define LOCALE_SMONTHNAME1	56
#define LOCALE_SMONTHNAME2	57
#define LOCALE_SMONTHNAME3	58
#define LOCALE_SMONTHNAME4	59
#define LOCALE_SMONTHNAME5	60
#define LOCALE_SMONTHNAME6	61
#define LOCALE_SMONTHNAME7	62
#define LOCALE_SMONTHNAME8	63
#define LOCALE_SMONTHNAME9	64
#define LOCALE_SMONTHNAME10	65
#define LOCALE_SMONTHNAME11	66
#define LOCALE_SMONTHNAME12	67
#define LOCALE_SMONTHNAME13	4110
#define LOCALE_SABBREVMONTHNAME1	68
#define LOCALE_SABBREVMONTHNAME2	69
#define LOCALE_SABBREVMONTHNAME3	70
#define LOCALE_SABBREVMONTHNAME4	71
#define LOCALE_SABBREVMONTHNAME5	72
#define LOCALE_SABBREVMONTHNAME6	73
#define LOCALE_SABBREVMONTHNAME7	74
#define LOCALE_SABBREVMONTHNAME8	75
#define LOCALE_SABBREVMONTHNAME9	76
#define LOCALE_SABBREVMONTHNAME10	77
#define LOCALE_SABBREVMONTHNAME11	78
#define LOCALE_SABBREVMONTHNAME12	79
#define LOCALE_SABBREVMONTHNAME13	4111
#define LOCALE_SPOSITIVESIGN	80
#define LOCALE_SNEGATIVESIGN	81
#define LOCALE_IPOSSIGNPOSN	82
#define LOCALE_INEGSIGNPOSN	83
#define LOCALE_IPOSSYMPRECEDES	84
#define LOCALE_IPOSSEPBYSPACE	85
#define LOCALE_INEGSYMPRECEDES	86
#define LOCALE_INEGSEPBYSPACE	87
#define LOCALE_NOUSEROVERRIDE	0x80000000
#define CAL_ICALINTVALUE	1
#define CAL_IYEAROFFSETRANGE	3
#define CAL_SABBREVDAYNAME1	14
#define CAL_SABBREVDAYNAME2	15
#define CAL_SABBREVDAYNAME3	16
#define CAL_SABBREVDAYNAME4	17
#define CAL_SABBREVDAYNAME5	18
#define CAL_SABBREVDAYNAME6	19
#define CAL_SABBREVDAYNAME7	20
#define CAL_SABBREVMONTHNAME1	34
#define CAL_SABBREVMONTHNAME2	35
#define CAL_SABBREVMONTHNAME3	36
#define CAL_SABBREVMONTHNAME4	37
#define CAL_SABBREVMONTHNAME5	38
#define CAL_SABBREVMONTHNAME6	39
#define CAL_SABBREVMONTHNAME7	40
#define CAL_SABBREVMONTHNAME8	41
#define CAL_SABBREVMONTHNAME9	42
#define CAL_SABBREVMONTHNAME10	43
#define CAL_SABBREVMONTHNAME11	44
#define CAL_SABBREVMONTHNAME12	45
#define CAL_SABBREVMONTHNAME13	46
#define CAL_SCALNAME	2
#define CAL_SDAYNAME1	7
#define CAL_SDAYNAME2	8
#define CAL_SDAYNAME3	9
#define CAL_SDAYNAME4	10
#define CAL_SDAYNAME5	11
#define CAL_SDAYNAME6	12
#define CAL_SDAYNAME7	13
#define CAL_SERASTRING	4
#define CAL_SLONGDATE	6
#define CAL_SMONTHNAME1	21
#define CAL_SMONTHNAME2	22
#define CAL_SMONTHNAME3	23
#define CAL_SMONTHNAME4	24
#define CAL_SMONTHNAME5	25
#define CAL_SMONTHNAME6	26
#define CAL_SMONTHNAME7	27
#define CAL_SMONTHNAME8	28
#define CAL_SMONTHNAME9	29
#define CAL_SMONTHNAME10	30
#define CAL_SMONTHNAME11	31
#define CAL_SMONTHNAME12	32
#define CAL_SMONTHNAME13	33
#define CAL_SSHORTDATE	5
#define PROCESS_SET_QUOTA	256
#define BLACKONWHITE	1
#define COLORONCOLOR	3
#define HALFTONE	4
#define MAXSTRETCHBLTMODE	4
#define STRETCH_ANDSCANS	1
#define STRETCH_DELETESCANS	3
#define STRETCH_HALFTONE	4
#define STRETCH_ORSCANS	2
#define WHITEONBLACK	2
#define OCR_NORMAL	32512
#define OCR_IBEAM	32513
#define OCR_WAIT	32514
#define OCR_CROSS	32515
#define OCR_UP	32516
#define OCR_SIZE	32640
#define OCR_ICON	32641
#define OCR_SIZENWSE	32642
#define OCR_SIZENESW	32643
#define OCR_SIZEWE	32644
#define OCR_SIZENS	32645
#define OCR_SIZEALL	32646
#define OCR_NO	32648
#define OCR_APPSTARTING	32650
#define TAPE_ABSOLUTE_BLOCK	1
#define TAPE_LOGICAL_BLOCK	2
#define TAPE_REWIND	0
#define TAPE_SPACE_END_OF_DATA	4
#define TAPE_SPACE_FILEMARKS	6
#define TAPE_SPACE_RELATIVE_BLOCKS	5
#define TAPE_SPACE_SEQUENTIAL_FMKS	7
#define TAPE_SPACE_SEQUENTIAL_SMKS	9
#define TAPE_SPACE_SETMARKS	8
#define EXCEPTION_EXECUTE_HANDLER	1
#define EXCEPTION_CONTINUE_EXECUTION	-1
#define EXCEPTION_CONTINUE_SEARCH	0
#define HWND_BOTTOM	(HWND)1
#define HWND_NOTOPMOST	(HWND)(-2)
#define HWND_TOP	(HWND)0
#define HWND_TOPMOST	(HWND)(-1)
#define SWP_DRAWFRAME	32
#define SWP_FRAMECHANGED	32
#define SWP_HIDEWINDOW	128
#define SWP_NOACTIVATE	16
#define SWP_NOCOPYBITS	256
#define SWP_NOMOVE	2
#define SWP_NOSIZE	1
#define SWP_NOREDRAW	8
#define SWP_NOZORDER	4
#define SWP_SHOWWINDOW	64
#define SWP_NOOWNERZORDER	512
#define SWP_NOREPOSITION	512
#define SWP_NOSENDCHANGING	1024
#define HSHELL_ACTIVATESHELLWINDOW	3
#define HSHELL_GETMINRECT	5
#define HSHELL_LANGUAGE	8
#define HSHELL_REDRAW	6
#define HSHELL_TASKMAN	7
#define HSHELL_WINDOWACTIVATED	4
#define HSHELL_WINDOWCREATED	1
#define HSHELL_WINDOWDESTROYED	2
#define HSHELL_ACCESSIBILITYSTATE	11
#define HSHELL_APPCOMMAND	12
#define SW_HIDE	0
#define SW_NORMAL 1
#define SW_MAXIMIZE	3
#define SW_MINIMIZE	6
#define SW_RESTORE	9
#define SW_SHOW	5
#define SW_SHOWDEFAULT	10
#define SW_SHOWMAXIMIZED	3
#define SW_SHOWMINIMIZED	2
#define SW_SHOWMINNOACTIVE	7
#define SW_SHOWNA	8
#define SW_SHOWNOACTIVATE	4
#define SW_SHOWNORMAL	1
#define WPF_RESTORETOMAXIMIZED	2
#define WPF_SETMINPOSITION	1
#define INFINITE	(-1)
#define SPI_GETACCESSTIMEOUT	60
#define SPI_GETANIMATION	72
#define SPI_GETBEEP	1
#define SPI_GETBORDER	5
#define SPI_GETDEFAULTINPUTLANG	89
#define SPI_GETDRAGFULLWINDOWS	38
#define SPI_GETFASTTASKSWITCH	35
#define SPI_GETFILTERKEYS	50
#define SPI_GETFONTSMOOTHING	74
#define SPI_GETGRIDGRANULARITY	18
#define SPI_GETHIGHCONTRAST	66
#define SPI_GETICONMETRICS	45
#define SPI_GETICONTITLELOGFONT	31
#define SPI_GETICONTITLEWRAP	25
#define SPI_GETKEYBOARDDELAY	22
#define SPI_GETKEYBOARDPREF	68
#define SPI_GETKEYBOARDSPEED	10
#define SPI_GETLOWPOWERACTIVE	83
#define SPI_GETLOWPOWERTIMEOUT	79
#define SPI_GETMENUDROPALIGNMENT	27
#define SPI_GETMINIMIZEDMETRICS	43
#define SPI_GETMOUSE	3
#define SPI_GETMOUSEKEYS	54
#define SPI_GETMOUSETRAILS	94
#define SPI_GETNONCLIENTMETRICS	41
#define SPI_GETPOWEROFFACTIVE	84
#define SPI_GETPOWEROFFTIMEOUT	80
#define SPI_GETSCREENREADER	70
#define SPI_GETSCREENSAVEACTIVE	16
#define SPI_GETSCREENSAVETIMEOUT	14
#define SPI_GETSERIALKEYS	62
#define SPI_GETSHOWSOUNDS	56
#define SPI_GETSOUNDSENTRY	64
#define SPI_GETSTICKYKEYS	58
#define SPI_GETTOGGLEKEYS	52
#define SPI_GETMOUSESPEED	0x70
#define SPI_SETMOUSESPEED	0x71
#define SPI_GETSCREENSAVERRUNNING 0x72
#define SPI_GETDESKWALLPAPER	0x73
#define SPI_GETWINDOWSEXTENSION	92
#define SPI_GETWORKAREA	48
#define SPI_GETACTIVEWINDOWTRACKING	0x1000
#define SPI_SETACTIVEWINDOWTRACKING	0x1001
#define SPI_GETMENUANIMATION	0x1002
#define SPI_SETMENUANIMATION	0x1003
#define SPI_GETCOMBOBOXANIMATION	0x1004
#define SPI_SETCOMBOBOXANIMATION	0x1005
#define SPI_GETLISTBOXSMOOTHSCROLLING	0x1006
#define SPI_SETLISTBOXSMOOTHSCROLLING	0x1007
#define SPI_GETGRADIENTCAPTIONS	0x1008
#define SPI_SETGRADIENTCAPTIONS	0x1009
#define SPI_GETKEYBOARDCUES	0x100A
#define SPI_SETKEYBOARDCUES	0x100B
#define SPI_GETMENUUNDERLINES	SPI_GETKEYBOARDCUES
#define SPI_SETMENUUNDERLINES	SPI_SETKEYBOARDCUES
#define SPI_GETACTIVEWNDTRKZORDER	0x100C
#define SPI_SETACTIVEWNDTRKZORDER	0x100D
#define SPI_GETHOTTRACKING	0x100E
#define SPI_SETHOTTRACKING	0x100F
#define SPI_GETMENUFADE	0x1012
#define SPI_SETMENUFADE	0x1013
#define SPI_GETSELECTIONFADE	0x1014
#define SPI_SETSELECTIONFADE	0x1015
#define SPI_GETTOOLTIPANIMATION	0x1016
#define SPI_SETTOOLTIPANIMATION	0x1017
#define SPI_GETTOOLTIPFADE	0x1018
#define SPI_SETTOOLTIPFADE	0x1019
#define SPI_GETCURSORSHADOW	0x101A
#define SPI_SETCURSORSHADOW	0x101B
#define SPI_GETMOUSESONAR	0x101C
#define SPI_SETMOUSESONAR	0x101D
#define SPI_GETMOUSECLICKLOCK	0x101E
#define SPI_SETMOUSECLICKLOCK	0x101F
#define SPI_GETMOUSEVANISH	0x1020
#define SPI_SETMOUSEVANISH	0x1021
#define SPI_GETFLATMENU	0x1022
#define SPI_SETFLATMENU	0x1023
#define SPI_GETDROPSHADOW	0x1024
#define SPI_SETDROPSHADOW	0x1025
#define SPI_GETMOUSECLICKLOCKTIME	0x2008
#define SPI_SETMOUSECLICKLOCKTIME	0x2009
#define SPI_GETFONTSMOOTHINGTYPE	0x200A
#define SPI_SETFONTSMOOTHINGTYPE	0x200B
#define FE_FONTSMOOTHINGSTANDARD	0x0001
#define FE_FONTSMOOTHINGCLEARTYPE	0x0002
#define FE_FONTSMOOTHINGDOCKING	0x8000
#define SPI_GETFONTSMOOTHINGCONTRAST	2
#define SPI_SETFONTSMOOTHINGCONTRAST	2
#define SPI_GETFOCUSBORDERWIDTH	0x200E
#define SPI_SETFOCUSBORDERWIDTH	0x200F
#define SPI_GETFOCUSBORDERHEIGHT	0x2010
#define SPI_SETFOCUSBORDERHEIGHT	0x2011
#define SPI_ICONHORIZONTALSPACING	13
#define SPI_ICONVERTICALSPACING	24
#define SPI_LANGDRIVER	12
#define SPI_SCREENSAVERRUNNING	97
#define SPI_SETACCESSTIMEOUT	61
#define SPI_SETANIMATION	73
#define SPI_SETBEEP	2
#define SPI_SETBORDER	6
#define SPI_SETDEFAULTINPUTLANG	90
#define SPI_SETDESKPATTERN	21
#define SPI_SETDESKWALLPAPER	20
#define SPI_SETDOUBLECLICKTIME	32
#define SPI_SETDOUBLECLKHEIGHT	30
#define SPI_SETDOUBLECLKWIDTH	29
#define SPI_SETDRAGFULLWINDOWS	37
#define SPI_SETDRAGHEIGHT	77
#define SPI_SETDRAGWIDTH	76
#define SPI_SETFASTTASKSWITCH	36
#define SPI_SETFILTERKEYS	51
#define SPI_SETFONTSMOOTHING	75
#define SPI_SETGRIDGRANULARITY	19
#define SPI_SETHANDHELD	78
#define SPI_SETHIGHCONTRAST	67
#define SPI_SETICONMETRICS	46
#define SPI_SETICONTITLELOGFONT	34
#define SPI_SETICONTITLEWRAP	26
#define SPI_SETKEYBOARDDELAY	23
#define SPI_SETKEYBOARDPREF	69
#define SPI_SETKEYBOARDSPEED	11
#define SPI_SETLANGTOGGLE	91
#define SPI_SETLOWPOWERACTIVE	85
#define SPI_SETLOWPOWERTIMEOUT	81
#define SPI_SETMENUDROPALIGNMENT	28
#define SPI_SETMINIMIZEDMETRICS	44
#define SPI_SETMOUSE	4
#define SPI_SETMOUSEBUTTONSWAP	33
#define SPI_SETMOUSEKEYS	55
#define SPI_SETMOUSETRAILS	93
#define SPI_SETNONCLIENTMETRICS	42
#define SPI_SETPENWINDOWS	49
#define SPI_SETPOWEROFFACTIVE	86
#define SPI_SETPOWEROFFTIMEOUT	82
#define SPI_SETSCREENREADER	71
#define SPI_SETSCREENSAVEACTIVE	17
#define SPI_SETSCREENSAVETIMEOUT	15
#define SPI_SETSERIALKEYS	63
#define SPI_SETSHOWSOUNDS	57
#define SPI_SETSOUNDSENTRY	65
#define SPI_SETSTICKYKEYS	59
#define SPI_SETTOGGLEKEYS	53
#define SPI_SETWORKAREA	47
#define SPIF_UPDATEINIFILE	1
#define SPIF_SENDWININICHANGE	2
#define SPIF_SENDCHANGE	2
#define TPM_CENTERALIGN	4
#define TPM_LEFTALIGN	0
#define TPM_RIGHTALIGN	8
#define TPM_LEFTBUTTON	0
#define TPM_RIGHTBUTTON	2
#define TPM_HORIZONTAL	0
#define TPM_VERTICAL	64
#define TPM_TOPALIGN 0
#define TPM_VCENTERALIGN 16
#define TPM_BOTTOMALIGN 32
#define TPM_NONOTIFY 128
#define TPM_RETURNCMD 256
#define TPM_RECURSE	1
#define TPM_HORPOSANIMATION 0x0400
#define TPM_HORNEGANIMATION 0x0800
#define TPM_VERPOSANIMATION 0x1000
#define TPM_VERNEGANIMATION 0x2000
#define TPM_NOANIMATION	0x4000
#define TCI_SRCCHARSET	1
#define TCI_SRCCODEPAGE	2
#define TCI_SRCFONTSIG	3
#define WC_COMPOSITECHECK	512
#define WC_DISCARDNS	16
#define WC_SEPCHARS	32
#define WC_DEFAULTCHAR	64
#define WC_DIALOG	MAKEINTATOM(0x8002)
#define HELP_COMMAND	0x102
#define HELP_CONTENTS	3
#define HELP_CONTEXT	1
#define HELP_CONTEXTPOPUP	8
#define HELP_FORCEFILE	9
#define HELP_HELPONHELP	4
#define HELP_INDEX	3
#define HELP_KEY	0x101
#define HELP_MULTIKEY	0x201
#define HELP_PARTIALKEY	0x105
#define HELP_QUIT	2
#define HELP_SETCONTENTS	5
#define HELP_SETINDEX	5
#define HELP_CONTEXTMENU	0xa
#define HELP_FINDER	0xb
#define HELP_WM_HELP	0xc
#define HELP_TCARD	0x8000
#define HELP_TCARD_DATA	16
#define HELP_TCARD_OTHER_CALLER	0x11
#define WNNC_NET_MSNET 0x010000
#define WNNC_NET_LANMAN 0x020000
#define WNNC_NET_NETWARE 0x030000
#define WNNC_NET_VINES 0x040000
#define WNNC_NET_10NET 0x050000
#define WNNC_NET_LOCUS 0x060000
#define WNNC_NET_SUN_PC_NFS 0x070000
#define WNNC_NET_LANSTEP 0x080000
#define WNNC_NET_9TILES 0x090000
#define WNNC_NET_LANTASTIC 0x0A0000
#define WNNC_NET_AS400 0x0B0000
#define WNNC_NET_FTP_NFS 0x0C0000
#define WNNC_NET_PATHWORKS 0x0D0000
#define WNNC_NET_LIFENET 0x0E0000
#define WNNC_NET_POWERLAN 0x0F0000
#define WNNC_NET_BWNFS 0x100000
#define WNNC_NET_COGENT 0x110000
#define WNNC_NET_FARALLON 0x120000
#define WNNC_NET_APPLETALK 0x130000
#define WNNC_NET_INTERGRAPH 0x140000
#define WNNC_NET_SYMFONET 0x150000
#define WNNC_NET_CLEARCASE 0x160000
#define WNNC_NET_FRONTIER 0x170000
#define WNNC_NET_BMC 0x180000
#define WNNC_NET_DCE 0x190000
#define WNNC_NET_DECORB 0x200000
#define WNNC_NET_PROTSTOR 0x210000
#define WNNC_NET_FJ_REDIR 0x220000
#define WNNC_NET_DISTINCT 0x230000
#define WNNC_NET_TWINS 0x240000
#define WNNC_NET_RDR2SAMPLE 0x250000
#define WNFMT_MULTILINE 1
#define WNFMT_ABBREVIATED 2
#define WNFMT_INENUM 16
#define WNFMT_CONNECTION	0x20
#define WNCON_FORNETCARD	1
#define WNCON_NOTROUTED	2
#define WNCON_SLOWLINK	4
#define WNCON_DYNAMIC	8
#define NETINFO_DLL16	1
#define NETINFO_DISKRED	4
#define NETINFO_PRINTERRED	8
#define NETPROPERTY_PERSISTENT	1
#define CONNECT_UPDATE_PROFILE	1
#define CONNECT_UPDATE_RECENT	2
#define CONNECT_TEMPORARY	4
#define CONNECT_INTERACTIVE	8
#define CONNECT_PROMPT		16
#define CONNECT_NEED_DRIVE	32
#define CONNECT_REFCOUNT	64
#define CONNECT_REDIRECT	0x80
#define CONNECT_LOCALDRIVE	0x100
#define CONNECT_CURRENT_MEDIA	0x200
#define CONNECT_DEFERRED	0x400
#define CONNECT_RESERVED	0xFF000000
#define CONNDLG_RO_PATH		1
#define CONNDLG_CONN_POINT	2
#define CONNDLG_USE_MRU		4
#define CONNDLG_HIDE_BOX	8
#define CONNDLG_PERSIST		16
#define CONNDLG_NOT_PERSIST	32
#define DISC_UPDATE_PROFILE	1
#define DISC_NO_FORCE		0x40
#define RESOURCETYPE_DISK	1
#define RESOURCETYPE_PRINT	2
#define RESOURCETYPE_ANY	0
#define RESOURCE_CONNECTED	1
#define RESOURCE_GLOBALNET	2
#define RESOURCE_REMEMBERED	3
#define RESOURCEUSAGE_CONNECTABLE	1
#define RESOURCEUSAGE_CONTAINER	2
#define WN_SUCCESS NO_ERROR
#define WN_NO_ERROR NO_ERROR
#define WN_NOT_SUPPORTED ERROR_NOT_SUPPORTED
#define WN_CANCEL ERROR_CANCELLED
#define WN_RETRY ERROR_RETRY
#define WN_NET_ERROR ERROR_UNEXP_NET_ERR
#define WN_MORE_DATA ERROR_MORE_DATA
#define WN_BAD_POINTER ERROR_INVALID_ADDRESS
#define WN_BAD_VALUE ERROR_INVALID_PARAMETER
#define WN_BAD_USER ERROR_BAD_USERNAME
#define WN_BAD_PASSWORD ERROR_INVALID_PASSWORD
#define WN_ACCESS_DENIED ERROR_ACCESS_DENIED
#define WN_FUNCTION_BUSY ERROR_BUSY
#define WN_WINDOWS_ERROR ERROR_UNEXP_NET_ERR
#define WN_OUT_OF_MEMORY ERROR_NOT_ENOUGH_MEMORY
#define WN_NO_NETWORK ERROR_NO_NETWORK
#define WN_EXTENDED_ERROR ERROR_EXTENDED_ERROR
#define WN_BAD_LEVEL ERROR_INVALID_LEVEL
#define WN_BAD_HANDLE ERROR_INVALID_HANDLE
#define WN_NOT_INITIALIZING ERROR_ALREADY_INITIALIZED
#define WN_NO_MORE_DEVICES ERROR_NO_MORE_DEVICES
#define WN_NOT_CONNECTED ERROR_NOT_CONNECTED
#define WN_OPEN_FILES ERROR_OPEN_FILES
#define WN_DEVICE_IN_USE ERROR_DEVICE_IN_USE
#define WN_BAD_NETNAME ERROR_BAD_NET_NAME
#define WN_BAD_LOCALNAME ERROR_BAD_DEVICE
#define WN_ALREADY_CONNECTED ERROR_ALREADY_ASSIGNED
#define WN_DEVICE_ERROR ERROR_GEN_FAILURE
#define WN_CONNECTION_CLOSED ERROR_CONNECTION_UNAVAIL
#define WN_NO_NET_OR_BAD_PATH ERROR_NO_NET_OR_BAD_PATH
#define WN_BAD_PROVIDER ERROR_BAD_PROVIDER
#define WN_CANNOT_OPEN_PROFILE ERROR_CANNOT_OPEN_PROFILE
#define WN_BAD_PROFILE ERROR_BAD_PROFILE
#define WN_BAD_DEV_TYPE ERROR_BAD_DEV_TYPE
#define WN_DEVICE_ALREADY_REMEMBERED ERROR_DEVICE_ALREADY_REMEMBERED
#define WN_CONNECTED_OTHER_PASSWORD ERROR_CONNECTED_OTHER_PASSWORD
#define WN_NO_MORE_ENTRIES ERROR_NO_MORE_ITEMS
#define WN_NOT_CONTAINER ERROR_NOT_CONTAINER
#define WN_NOT_AUTHENTICATED ERROR_NOT_AUTHENTICATED
#define WN_NOT_LOGGED_ON ERROR_NOT_LOGGED_ON
#define WN_NOT_VALIDATED ERROR_NO_LOGON_SERVERS
#define UNIVERSAL_NAME_INFO_LEVEL	1
#define REMOTE_NAME_INFO_LEVEL	2
#define STILL_ACTIVE	0x103
#define SP_SERIALCOMM	1
#define BAUD_075	1
#define BAUD_110	2
#define BAUD_134_5	4
#define BAUD_150	8
#define BAUD_300	16
#define BAUD_600	32
#define BAUD_1200	64
#define BAUD_1800	128
#define BAUD_2400	256
#define BAUD_4800	512
#define BAUD_7200	0x400
#define BAUD_9600	0x800
#define BAUD_14400	4096
#define BAUD_19200	0x2000
#define BAUD_38400	0x4000
#define BAUD_56K	0x8000
#define BAUD_57600	0x40000
#define BAUD_115200	0x20000
#define BAUD_128K	0x10000
#define BAUD_USER	0x10000000
#define PST_FAX	0x21
#define PST_LAT	0x101
#define PST_MODEM	6
#define PST_NETWORK_BRIDGE	256
#define PST_PARALLELPORT	2
#define PST_RS232	1
#define PST_RS422	3
#define PST_RS423	4
#define PST_RS449	5
#define PST_SCANNER	0x22
#define PST_TCPIP_TELNET	0x102
#define PST_UNSPECIFIED	0
#define PST_X25	0x103
#define PCF_16BITMODE	512
#define PCF_DTRDSR	1
#define PCF_INTTIMEOUTS	128
#define PCF_PARITY_CHECK	8
#define PCF_RLSD	4
#define PCF_RTSCTS	2
#define PCF_SETXCHAR	32
#define PCF_SPECIALCHARS	256
#define PCF_TOTALTIMEOUTS	64
#define PCF_XONXOFF	16
#define SP_BAUD	2
#define SP_DATABITS	4
#define SP_HANDSHAKING	0x10
#define SP_PARITY	1
#define SP_PARITY_CHECK	32
#define SP_RLSD	64
#define SP_STOPBITS	8
#define DATABITS_5	1
#define DATABITS_6	2
#define DATABITS_7	4
#define DATABITS_8	8
#define DATABITS_16	16
#define DATABITS_16X	32
#define STOPBITS_10	1
#define STOPBITS_15	2
#define STOPBITS_20	4
#define PARITY_NONE	256
#define PARITY_ODD	512
#define PARITY_EVEN	1024
#define PARITY_MARK	2048
#define PARITY_SPACE	4096
#define COMMPROP_INITIALIZED	0xe73cf52e
#define CBR_110	110
#define CBR_300	300
#define CBR_600	600
#define CBR_1200	1200
#define CBR_2400	2400
#define CBR_4800	4800
#define CBR_9600	9600
#define CBR_14400	14400
#define CBR_19200	19200
#define CBR_38400	38400
#define CBR_56000	56000
#define CBR_57600	57600
#define CBR_115200	115200
#define CBR_128000	128000
#define CBR_256000	256000
#define DTR_CONTROL_DISABLE	0
#define DTR_CONTROL_ENABLE	1
#define DTR_CONTROL_HANDSHAKE	2
#define RTS_CONTROL_DISABLE	0
#define RTS_CONTROL_ENABLE	1
#define RTS_CONTROL_HANDSHAKE	2
#define RTS_CONTROL_TOGGLE	3
#define EVENPARITY	2
#define MARKPARITY	3
#define NOPARITY	0
#define SPACEPARITY	4
#define ODDPARITY	1
#define ONESTOPBIT	0
#define ONE5STOPBITS	1
#define TWOSTOPBITS	2
#define CREATE_FOR_IMPORT 1
#define CREATE_FOR_DIR 2
#define OVERWRITE_HIDDEN 4
#define CREATE_PROCESS_DEBUG_EVENT	3
#define CREATE_THREAD_DEBUG_EVENT	2
#define EXCEPTION_DEBUG_EVENT	1
#define EXIT_PROCESS_DEBUG_EVENT	5
#define EXIT_THREAD_DEBUG_EVENT	4
#define LOAD_DLL_DEBUG_EVENT	6
#define OUTPUT_DEBUG_STRING_EVENT	8
#define UNLOAD_DLL_DEBUG_EVENT	7
#define RIP_EVENT	9
#define PROCESS_HEAP_REGION	1
#define PROCESS_HEAP_UNCOMMITTED_RANGE	2
#define PROCESS_HEAP_ENTRY_BUSY	4
#define PROCESS_HEAP_ENTRY_MOVEABLE	16
#define PROCESS_HEAP_ENTRY_DDESHARE	32
#define HINSTANCE_ERROR	32
#define BACKUP_INVALID	0
#define BACKUP_DATA	1
#define BACKUP_EA_DATA	2
#define BACKUP_SECURITY_DATA	3
#define BACKUP_ALTERNATE_DATA	4
#define BACKUP_LINK	5
#define BACKUP_PROPERTY_DATA	6
#define BACKUP_OBJECT_ID	7
#define BACKUP_REPARSE_DATA	8
#define BACKUP_SPARSE_BLOCK	9
#define STREAM_NORMAL_ATTRIBUTE	0
#define STREAM_MODIFIED_WHEN_READ	1
#define STREAM_CONTAINS_SECURITY	2
#define STREAM_CONTAINS_PROPERTIES	4
#define STREAM_SPARSE_ATTRIBUTE	8
#define STARTF_USESHOWWINDOW	1
#define STARTF_USEPOSITION	4
#define STARTF_USESIZE	2
#define STARTF_RUNFULLSCREEN	0x20
#define STARTF_USECOUNTCHARS	8
#define STARTF_USEFILLATTRIBUTE	16
#define STARTF_FORCEONFEEDBACK	64
#define STARTF_FORCEOFFFEEDBACK	128
#define STARTF_USESTDHANDLES	256
#define STARTF_USEHOTKEY	0x0200
#define VER_PLATFORM_WIN32s	0
#define VER_PLATFORM_WIN32_WINDOWS 1
#define VER_PLATFORM_WIN32_NT	2
#define MAXPROPPAGES	100
#define PSP_DEFAULT	0
#define PSP_HASHELP	32
#define PSP_USECALLBACK	128
#define PSP_USEHICON	2
#define PSP_USEICONID	4
#define PSP_USEREFPARENT	64
#define PSP_USETITLE	8
#define PSP_RTLREADING	16
#define PSP_DLGINDIRECT	1
#define PSH_DEFAULT	0
#define PSH_HASHELP	512
#define PSH_MODELESS	1024
#define PSH_NOAPPLYNOW	128
#define PSH_PROPSHEETPAGE	8
#define PSH_PROPTITLE	1
#define PSH_USECALLBACK	256
#define PSH_USEHICON	2
#define PSH_USEICONID	4
#define PSH_USEPSTARTPAGE	64
#define PSH_WIZARD	32
#define PSH_RTLREADING	2048
#define PSCB_INITIALIZED	1
#define PSCB_PRECREATE	2
#define PSNRET_NOERROR	0
#define PSNRET_INVALID_NOCHANGEPAGE	2
#define PSBTN_APPLYNOW	4
#define PSBTN_BACK	0
#define PSBTN_CANCEL	5
#define PSBTN_FINISH	2
#define PSBTN_HELP	6
#define PSBTN_NEXT	1
#define PSBTN_OK	3
#define PSWIZB_BACK	1
#define PSWIZB_NEXT	2
#define PSWIZB_FINISH	4
#define PSWIZB_DISABLEDFINISH	8
#define ID_PSREBOOTSYSTEM	3
#define ID_PSRESTARTWINDOWS	2
#define WIZ_BODYCX	184
#define WIZ_BODYX	92
#define WIZ_CXBMP	80
#define WIZ_CXDLG	276
#define WIZ_CYDLG	140
#define PAN_ANY	0
#define PAN_NO_FIT	1
#define PAN_FAMILY_TEXT_DISPLAY	2
#define PAN_FAMILY_SCRIPT	3
#define PAN_FAMILY_DECORATIVE	4
#define PAN_FAMILY_PICTORIAL	5
#define PAN_SERIF_COVE	2
#define PAN_SERIF_OBTUSE_COVE	3
#define PAN_SERIF_SQUARE_COVE	4
#define PAN_SERIF_OBTUSE_SQUARE_COVE	5
#define PAN_SERIF_SQUARE	6
#define PAN_SERIF_THIN	7
#define PAN_SERIF_BONE	8
#define PAN_SERIF_EXAGGERATED	9
#define PAN_SERIF_TRIANGLE	10
#define PAN_SERIF_NORMAL_SANS	11
#define PAN_SERIF_OBTUSE_SANS	12
#define PAN_SERIF_PERP_SANS	13
#define PAN_SERIF_FLARED	14
#define PAN_SERIF_ROUNDED	15
#define PAN_WEIGHT_VERY_LIGHT	2
#define PAN_WEIGHT_LIGHT	3
#define PAN_WEIGHT_THIN	4
#define PAN_WEIGHT_BOOK	5
#define PAN_WEIGHT_MEDIUM	6
#define PAN_WEIGHT_DEMI	7
#define PAN_WEIGHT_BOLD	8
#define PAN_WEIGHT_HEAVY	9
#define PAN_WEIGHT_BLACK	10
#define PAN_WEIGHT_NORD	11
#define PAN_PROP_OLD_STYLE	2
#define PAN_PROP_MODERN	3
#define PAN_PROP_EVEN_WIDTH	4
#define PAN_PROP_EXPANDED	5
#define PAN_PROP_CONDENSED	6
#define PAN_PROP_VERY_EXPANDED	7
#define PAN_PROP_VERY_CONDENSED	8
#define PAN_PROP_MONOSPACED	9
#define PAN_CONTRAST_NONE	2
#define PAN_CONTRAST_VERY_LOW	3
#define PAN_CONTRAST_LOW	4
#define PAN_CONTRAST_MEDIUM_LOW	5
#define PAN_CONTRAST_MEDIUM	6
#define PAN_CONTRAST_MEDIUM_HIGH	7
#define PAN_CONTRAST_HIGH	8
#define PAN_CONTRAST_VERY_HIGH	9
#define PAN_STROKE_GRADUAL_DIAG	2
#define PAN_STROKE_GRADUAL_TRAN	3
#define PAN_STROKE_GRADUAL_VERT	4
#define PAN_STROKE_GRADUAL_HORZ	5
#define PAN_STROKE_RAPID_VERT	6
#define PAN_STROKE_RAPID_HORZ	7
#define PAN_STROKE_INSTANT_VERT	8
#define PAN_STRAIGHT_ARMS_HORZ	2
#define PAN_STRAIGHT_ARMS_WEDGE	3
#define PAN_STRAIGHT_ARMS_VERT	4
#define PAN_STRAIGHT_ARMS_SINGLE_SERIF	5
#define PAN_STRAIGHT_ARMS_DOUBLE_SERIF	6
#define PAN_BENT_ARMS_HORZ	7
#define PAN_BENT_ARMS_VERT	9
#define PAN_BENT_ARMS_WEDGE	8
#define PAN_BENT_ARMS_SINGLE_SERIF	10
#define PAN_BENT_ARMS_DOUBLE_SERIF	11
#define PAN_LETT_NORMAL_CONTACT	2
#define PAN_LETT_NORMAL_WEIGHTED	3
#define PAN_LETT_NORMAL_BOXED	4
#define PAN_LETT_NORMAL_FLATTENED	5
#define PAN_LETT_NORMAL_ROUNDED	6
#define PAN_LETT_NORMAL_OFF_CENTER	7
#define PAN_LETT_NORMAL_SQUARE	8
#define PAN_LETT_OBLIQUE_CONTACT	9
#define PAN_LETT_OBLIQUE_WEIGHTED	10
#define PAN_LETT_OBLIQUE_BOXED	11
#define PAN_LETT_OBLIQUE_FLATTENED	12
#define PAN_LETT_OBLIQUE_ROUNDED	13
#define PAN_LETT_OBLIQUE_OFF_CENTER	14
#define PAN_LETT_OBLIQUE_SQUARE	15
#define PAN_MIDLINE_STANDARD_TRIMMED	2
#define PAN_MIDLINE_STANDARD_POINTED	3
#define PAN_MIDLINE_STANDARD_SERIFED	4
#define PAN_MIDLINE_HIGH_TRIMMED	5
#define PAN_MIDLINE_HIGH_POINTED	6
#define PAN_MIDLINE_HIGH_SERIFED	7
#define PAN_MIDLINE_CONSTANT_TRIMMED	8
#define PAN_MIDLINE_CONSTANT_POINTED	9
#define PAN_MIDLINE_CONSTANT_SERIFED	10
#define PAN_MIDLINE_LOW_TRIMMED	11
#define PAN_MIDLINE_LOW_POINTED	12
#define PAN_MIDLINE_LOW_SERIFED	13
#define PAN_XHEIGHT_CONSTANT_SMALL	2
#define PAN_XHEIGHT_CONSTANT_STD	3
#define PAN_XHEIGHT_CONSTANT_LARGE	4
#define PAN_XHEIGHT_DUCKING_SMALL	5
#define PAN_XHEIGHT_DUCKING_STD	6
#define PAN_XHEIGHT_DUCKING_LARGE	7
#define PC_EXPLICIT	2
#define PC_NOCOLLAPSE	4
#define PC_RESERVED	1
#define BS_DIBPATTERN	5
#define BS_DIBPATTERN8X8	8
#define BS_DIBPATTERNPT	6
#define BS_HATCHED	2
#define BS_HOLLOW	1
#define BS_NULL	1
#define BS_PATTERN	3
#define BS_PATTERN8X8	7
#define BS_SOLID	0
#define DM_ORIENTATION	1
#define DM_PAPERSIZE	2
#define DM_PAPERLENGTH	4
#define DM_PAPERWIDTH	8
#define DM_SCALE	16
#define DM_COPIES	256
#define DM_DEFAULTSOURCE	512
#define DM_PRINTQUALITY	0x400
#define DM_COLOR	0x800
#define DM_DUPLEX	4096
#define DM_YRESOLUTION	0x2000
#define DM_TTOPTION	0x4000
#define DM_COLLATE	0x8000
#define DM_FORMNAME	0x10000
#define DM_LOGPIXELS	0x20000
#define DM_ICMMETHOD	0x800000
#define DM_ICMINTENT	0x1000000
#define DM_MEDIATYPE	0x2000000
#define DM_DITHERTYPE	0x4000000
#define DMORIENT_LANDSCAPE	2
#define DMORIENT_PORTRAIT	1
#define DMPAPER_FIRST	1
#define DMPAPER_LETTER	1
#define DMPAPER_LEGAL	5
#define DMPAPER_A4	9
#define DMPAPER_CSHEET	24
#define DMPAPER_DSHEET	25
#define DMPAPER_ESHEET	26
#define DMPAPER_LETTERSMALL	2
#define DMPAPER_TABLOID	3
#define DMPAPER_LEDGER	4
#define DMPAPER_STATEMENT	6
#define DMPAPER_EXECUTIVE	7
#define DMPAPER_A3	8
#define DMPAPER_A4SMALL	10
#define DMPAPER_A5	11
#define DMPAPER_B4	12
#define DMPAPER_B5	13
#define DMPAPER_FOLIO	14
#define DMPAPER_QUARTO	15
#define DMPAPER_10X14	16
#define DMPAPER_11X17	17
#define DMPAPER_NOTE	18
#define DMPAPER_ENV_9	19
#define DMPAPER_ENV_10	20
#define DMPAPER_ENV_11	21
#define DMPAPER_ENV_12	22
#define DMPAPER_ENV_14	23
#define DMPAPER_ENV_DL	27
#define DMPAPER_ENV_C5	28
#define DMPAPER_ENV_C3	29
#define DMPAPER_ENV_C4	30
#define DMPAPER_ENV_C6	31
#define DMPAPER_ENV_C65	32
#define DMPAPER_ENV_B4	33
#define DMPAPER_ENV_B5	34
#define DMPAPER_ENV_B6	35
#define DMPAPER_ENV_ITALY	36
#define DMPAPER_ENV_MONARCH	37
#define DMPAPER_ENV_PERSONAL	38
#define DMPAPER_FANFOLD_US	39
#define DMPAPER_FANFOLD_STD_GERMAN	40
#define DMPAPER_FANFOLD_LGL_GERMAN	41
#define DMPAPER_ISO_B4	42
#define DMPAPER_JAPANESE_POSTCARD	43
#define DMPAPER_9X11	44
#define DMPAPER_10X11	45
#define DMPAPER_15X11	46
#define DMPAPER_ENV_INVITE	47
#define DMPAPER_RESERVED_48	48
#define DMPAPER_RESERVED_49	49
#define DMPAPER_LETTER_EXTRA	50
#define DMPAPER_LEGAL_EXTRA	51
#define DMPAPER_TABLOID_EXTRA	52
#define DMPAPER_A4_EXTRA	53
#define DMPAPER_LETTER_TRANSVERSE	54
#define DMPAPER_A4_TRANSVERSE	55
#define DMPAPER_LETTER_EXTRA_TRANSVERSE	56
#define DMPAPER_A_PLUS	57
#define DMPAPER_B_PLUS	58
#define DMPAPER_LETTER_PLUS	59
#define DMPAPER_A4_PLUS	60
#define DMPAPER_A5_TRANSVERSE	61
#define DMPAPER_B5_TRANSVERSE	62
#define DMPAPER_A3_EXTRA	63
#define DMPAPER_A5_EXTRA	64
#define DMPAPER_B5_EXTRA	65
#define DMPAPER_A2	66
#define DMPAPER_A3_TRANSVERSE	67
#define DMPAPER_A3_EXTRA_TRANSVERSE	68
#define DMPAPER_DBL_JAPANESE_POSTCARD 69
#define DMPAPER_A6 70
#define DMPAPER_JENV_KAKU2 71
#define DMPAPER_JENV_KAKU3 72
#define DMPAPER_JENV_CHOU3 73
#define DMPAPER_JENV_CHOU4 74
#define DMPAPER_LETTER_ROTATED 75
#define DMPAPER_A3_ROTATED 76
#define DMPAPER_A4_ROTATED 77
#define DMPAPER_A5_ROTATED 78
#define DMPAPER_B4_JIS_ROTATED 79
#define DMPAPER_B5_JIS_ROTATED 80
#define DMPAPER_JAPANESE_POSTCARD_ROTATED 81
#define DMPAPER_DBL_JAPANESE_POSTCARD_ROTATED 82
#define DMPAPER_A6_ROTATED 83
#define DMPAPER_JENV_KAKU2_ROTATED 84
#define DMPAPER_JENV_KAKU3_ROTATED 85
#define DMPAPER_JENV_CHOU3_ROTATED 86
#define DMPAPER_JENV_CHOU4_ROTATED 87
#define DMPAPER_B6_JIS 88
#define DMPAPER_B6_JIS_ROTATED 89
#define DMPAPER_12X11 90
#define DMPAPER_JENV_YOU4 91
#define DMPAPER_JENV_YOU4_ROTATED 92
#define DMPAPER_P16K 93
#define DMPAPER_P32K 94
#define DMPAPER_P32KBIG 95
#define DMPAPER_PENV_1 96
#define DMPAPER_PENV_2 97
#define DMPAPER_PENV_3 98
#define DMPAPER_PENV_4 99
#define DMPAPER_PENV_5 100
#define DMPAPER_PENV_6 101
#define DMPAPER_PENV_7 102
#define DMPAPER_PENV_8 103
#define DMPAPER_PENV_9 104
#define DMPAPER_PENV_10 105
#define DMPAPER_P16K_ROTATED 106
#define DMPAPER_P32K_ROTATED 107
#define DMPAPER_P32KBIG_ROTATED 108
#define DMPAPER_PENV_1_ROTATED 109
#define DMPAPER_PENV_2_ROTATED 110
#define DMPAPER_PENV_3_ROTATED 111
#define DMPAPER_PENV_4_ROTATED 112
#define DMPAPER_PENV_5_ROTATED 113
#define DMPAPER_PENV_6_ROTATED 114
#define DMPAPER_PENV_7_ROTATED 115
#define DMPAPER_PENV_8_ROTATED 116
#define DMPAPER_PENV_9_ROTATED 117
#define DMPAPER_PENV_10_ROTATED 118
#define DMPAPER_LAST 118
#define DMPAPER_USER 256
#define DMBIN_FIRST	1
#define DMBIN_UPPER	1
#define DMBIN_ONLYONE	1
#define DMBIN_LOWER	2
#define DMBIN_MIDDLE	3
#define DMBIN_MANUAL	4
#define DMBIN_ENVELOPE	5
#define DMBIN_ENVMANUAL	6
#define DMBIN_AUTO	7
#define DMBIN_TRACTOR	8
#define DMBIN_SMALLFMT	9
#define DMBIN_LARGEFMT	10
#define DMBIN_LARGECAPACITY	11
#define DMBIN_CASSETTE	14
#define DMBIN_FORMSOURCE	15
#define DMBIN_LAST	15
#define DMBIN_USER	256
#define DMRES_HIGH	(-4)
#define DMRES_MEDIUM	(-3)
#define DMRES_LOW	(-2)
#define DMRES_DRAFT	(-1)
#define DMCOLOR_COLOR	2
#define DMCOLOR_MONOCHROME	1
#define DMDUP_SIMPLEX	1
#define DMDUP_HORIZONTAL	3
#define DMDUP_VERTICAL	2
#define DMTT_BITMAP	1
#define DMTT_DOWNLOAD	2
#define DMTT_SUBDEV	3
#define DMCOLLATE_TRUE	1
#define DMCOLLATE_FALSE	0
#define DM_GRAYSCALE	1
#define DM_INTERLACED	2
#define DMICMMETHOD_NONE	1
#define DMICMMETHOD_SYSTEM	2
#define DMICMMETHOD_DRIVER	3
#define DMICMMETHOD_DEVICE	4
#define DMICMMETHOD_USER	256
#define DMICM_SATURATE	1
#define DMICM_CONTRAST	2
#define DMICM_COLORMETRIC	3
#define DMICM_USER	256
#define DMMEDIA_STANDARD	1
#define DMMEDIA_GLOSSY	3
#define DMMEDIA_TRANSPARENCY	2
#define DMMEDIA_USER	256
#define DMDITHER_NONE	1
#define DMDITHER_COARSE	2
#define DMDITHER_FINE	3
#define DMDITHER_LINEART	4
#define DMDITHER_GRAYSCALE	10
#define DMDITHER_USER	256
#define DISPLAY_DEVICE_ATTACHED_TO_DESKTOP 1
#define DISPLAY_DEVICE_MULTI_DRIVER	2
#define DISPLAY_DEVICE_PRIMARY_DEVICE	4
#define DISPLAY_DEVICE_MIRRORING_DRIVER 8
#define DISPLAY_DEVICE_VGA_COMPATIBLE	0x10
#define DISPLAY_DEVICE_REMOVABLE	0x20
#define DISPLAY_DEVICE_MODESPRUNED	0x08000000
#define DISPLAY_DEVICE_REMOTE	0x04000000
#define DISPLAY_DEVICE_DISCONNECT 0x02000000
#define RDH_RECTANGLES	1
#define TT_POLYGON_TYPE	24
#define TT_PRIM_LINE	1
#define TT_PRIM_QSPLINE	2
#define GCPCLASS_ARABIC	2
#define GCPCLASS_HEBREW	2
#define GCPCLASS_LATIN	1
#define GCPCLASS_LATINNUMBER	5
#define GCPCLASS_LOCALNUMBER	4
#define GCPCLASS_LATINNUMERICSEPARATOR	7
#define GCPCLASS_LATINNUMERICTERMINATOR	6
#define GCPCLASS_NEUTRAL	3
#define GCPCLASS_NUMERICSEPARATOR	8
#define GCPCLASS_PREBOUNDLTR	128
#define GCPCLASS_PREBOUNDRTL	64
#define GCPCLASS_POSTBOUNDLTR	32
#define GCPCLASS_POSTBOUNDRTL	16
#define GCPGLYPH_LINKBEFORE	32768
#define GCPGLYPH_LINKAFTER	16384
#define TT_AVAILABLE	1
#define TT_ENABLED	2
#define CA_NEGATIVE	1
#define CA_LOG_FILTER	2
#define ILLUMINANT_DEVICE_DEFAULT	0
#define ILLUMINANT_A	1
#define ILLUMINANT_B	2
#define ILLUMINANT_C	3
#define ILLUMINANT_D50	4
#define ILLUMINANT_D55	5
#define ILLUMINANT_D65	6
#define ILLUMINANT_D75	7
#define ILLUMINANT_F2	8
#define ILLUMINANT_TUNGSTEN	1
#define ILLUMINANT_DAYLIGHT	3
#define ILLUMINANT_FLUORESCENT	8
#define ILLUMINANT_NTSC	3
#define ILLUMINANT_MAX_INDEX	ILLUMINANT_F2
#define REFERENCE_WHITE_MIN	(WORD)6000
#define REFERENCE_WHITE_MAX	(WORD)10000
#define REFERENCE_BLACK_MIN	(WORD)0
#define REFERENCE_BLACK_MAX	(WORD)4000
#define DI_APPBANDING	1
#define EMR_HEADER	1
#define EMR_POLYBEZIER	2
#define EMR_POLYGON	3
#define EMR_POLYLINE	4
#define EMR_POLYBEZIERTO	5
#define EMR_POLYLINETO	6
#define EMR_POLYPOLYLINE	7
#define EMR_POLYPOLYGON	8
#define EMR_SETWINDOWEXTEX	9
#define EMR_SETWINDOWORGEX	10
#define EMR_SETVIEWPORTEXTEX	11
#define EMR_SETVIEWPORTORGEX	12
#define EMR_SETBRUSHORGEX	13
#define EMR_EOF	14
#define EMR_SETPIXELV	15
#define EMR_SETMAPPERFLAGS	16
#define EMR_SETMAPMODE	17
#define EMR_SETBKMODE	18
#define EMR_SETPOLYFILLMODE	19
#define EMR_SETROP2	20
#define EMR_SETSTRETCHBLTMODE	21
#define EMR_SETTEXTALIGN	22
#define EMR_SETCOLORADJUSTMENT	23
#define EMR_SETTEXTCOLOR	24
#define EMR_SETBKCOLOR	25
#define EMR_OFFSETCLIPRGN	26
#define EMR_MOVETOEX	27
#define EMR_SETMETARGN	28
#define EMR_EXCLUDECLIPRECT	29
#define EMR_INTERSECTCLIPRECT	30
#define EMR_SCALEVIEWPORTEXTEX	31
#define EMR_SCALEWINDOWEXTEX	32
#define EMR_SAVEDC	33
#define EMR_RESTOREDC	34
#define EMR_SETWORLDTRANSFORM	35
#define EMR_MODIFYWORLDTRANSFORM	36
#define EMR_SELECTOBJECT	37
#define EMR_CREATEPEN	38
#define EMR_CREATEBRUSHINDIRECT	39
#define EMR_DELETEOBJECT	40
#define EMR_ANGLEARC	41
#define EMR_ELLIPSE	42
#define EMR_RECTANGLE	43
#define EMR_ROUNDRECT	44
#define EMR_ARC	45
#define EMR_CHORD	46
#define EMR_PIE	47
#define EMR_SELECTPALETTE	48
#define EMR_CREATEPALETTE	49
#define EMR_SETPALETTEENTRIES	50
#define EMR_RESIZEPALETTE	51
#define EMR_REALIZEPALETTE	52
#define EMR_EXTFLOODFILL	53
#define EMR_LINETO	54
#define EMR_ARCTO	55
#define EMR_POLYDRAW	56
#define EMR_SETARCDIRECTION	57
#define EMR_SETMITERLIMIT	58
#define EMR_BEGINPATH	59
#define EMR_ENDPATH	60
#define EMR_CLOSEFIGURE	61
#define EMR_FILLPATH	62
#define EMR_STROKEANDFILLPATH	63
#define EMR_STROKEPATH	64
#define EMR_FLATTENPATH	65
#define EMR_WIDENPATH	66
#define EMR_SELECTCLIPPATH	67
#define EMR_ABORTPATH	68
#define EMR_GDICOMMENT	70
#define EMR_FILLRGN	71
#define EMR_FRAMERGN	72
#define EMR_INVERTRGN	73
#define EMR_PAINTRGN	74
#define EMR_EXTSELECTCLIPRGN	75
#define EMR_BITBLT	76
#define EMR_STRETCHBLT	77
#define EMR_MASKBLT	78
#define EMR_PLGBLT	79
#define EMR_SETDIBITSTODEVICE	80
#define EMR_STRETCHDIBITS	81
#define EMR_EXTCREATEFONTINDIRECTW	82
#define EMR_EXTTEXTOUTA	83
#define EMR_EXTTEXTOUTW	84
#define EMR_POLYBEZIER16	85
#define EMR_POLYGON16	86
#define EMR_POLYLINE16	87
#define EMR_POLYBEZIERTO16	88
#define EMR_POLYLINETO16	89
#define EMR_POLYPOLYLINE16	90
#define EMR_POLYPOLYGON16	91
#define EMR_POLYDRAW16	92
#define EMR_CREATEMONOBRUSH	93
#define EMR_CREATEDIBPATTERNBRUSHPT	94
#define EMR_EXTCREATEPEN	95
#define EMR_POLYTEXTOUTA	96
#define EMR_POLYTEXTOUTW	97
#define EMR_SETICMMODE	98
#define EMR_CREATECOLORSPACE	99
#define EMR_SETCOLORSPACE	100
#define EMR_DELETECOLORSPACE	101
#define EMR_GLSRECORD	102
#define EMR_GLSBOUNDEDRECORD	103
#define EMR_PIXELFORMAT	104
#define EMR_RESERVED_105 105
#define EMR_RESERVED_106 106
#define EMR_RESERVED_107 107
#define EMR_RESERVED_108 108
#define EMR_RESERVED_109 109
#define EMR_RESERVED_110 110
#define EMR_COLORCORRECTPALETTE 111
#define EMR_SETICMPROFILEA 112
#define EMR_SETICMPROFILEW 113
#define EMR_ALPHABLEND 114
#define EMR_SETLAYOUT 115
#define EMR_TRANSPARENTBLT 116
#define EMR_RESERVED_117 117
#define EMR_GRADIENTFILL 118
#define EMR_RESERVED_119 119
#define EMR_RESERVED_120 120
#define EMR_COLORMATCHTOTARGETW 121
#define EMR_CREATECOLORSPACEW 122
#define ENHMETA_SIGNATURE	1179469088
#define ENM_NONE	0
#define ENM_CHANGE	1
#define ENM_UPDATE	2
#define ENM_SCROLL	4
#define ENM_KEYEVENTS 0x10000
#define ENM_MOUSEEVENTS 0x20000
#define ENM_REQUESTRESIZE 0x40000
#define ENM_SELCHANGE 0x80000
#define ENM_DROPFILES 0x100000
#define ENM_PROTECTED 0x200000
#define ENM_CORRECTTEXT 0x400000
#define ENM_SCROLLEVENTS	8
#define ENM_DRAGDROPDONE	16
#define ENM_PARAGRAPHEXPANDED	32
#define ENM_IMECHANGE	0x800000
#define ENM_LANGCHANGE	0x1000000
#define ENM_OBJECTPOSITIONS	0x2000000
#define ES_DISABLENOSCROLL	0x2000

//#if (WINVER > 1024)
#define ES_EX_NOCALLOLEINIT 0
//#else
//#define ES_EX_NOCALLOLEINIT 16777216
//#endif
#define ES_NOIME	0x80000
#define ES_SAVESEL	0x8000
#define ES_SELFIME	0x40000
#define ES_SUNKEN	0x4000
#define ES_VERTICAL	0x400000
#define ES_SELECTIONBAR	0x1000000
#define ECOOP_SET	1
#define ECOOP_OR	2
#define ECOOP_AND	3
#define ECOOP_XOR	4
#define ECO_AUTOWORDSELECTION	1
#define ECO_AUTOVSCROLL	64
#define ECO_AUTOHSCROLL	128
#define ECO_NOHIDESEL	256
#define ECO_READONLY	2048
#define ECO_WANTRETURN	4096
#define ECO_SAVESEL	0x8000
#define ECO_SELECTIONBAR	0x1000000
#define ECO_VERTICAL	0x400000
#define SCF_WORD	2
#define SCF_SELECTION	1
#define SF_TEXT	1
#define SF_RTF	2
#define SF_RTFNOOBJS	3
#define SF_TEXTIZED	4
#define SFF_SELECTION	0x8000
#define SFF_PLAINRTF	0x4000
#define WB_CLASSIFY	3
#define WB_ISDELIMITER	2
#define WB_LEFT	0
#define WB_LEFTBREAK	6
#define WB_PREVBREAK	6
#define WB_MOVEWORDLEFT	4
#define WB_MOVEWORDPREV	4
#define WB_MOVEWORDRIGHT	5
#define WB_MOVEWORDNEXT	5
#define WB_RIGHT	1
#define WB_RIGHTBREAK	7
#define WB_NEXTBREAK	7
#define PC_LEADING	2
#define PC_FOLLOWING	1
#define PC_DELIMITER	4
#define PC_OVERFLOW	3
#define WBF_WORDWRAP	16
#define WBF_WORDBREAK	32
#define WBF_OVERFLOW	64
#define WBF_LEVEL1	128
#define WBF_LEVEL2	256
#define WBF_CUSTOM	512
#define WBF_BREAKAFTER	64
#define WBF_BREAKLINE	32
#define WBF_ISWHITE	16
#define CFM_BOLD	1
#define CFM_COLOR	0x40000000
#define CFM_FACE	0x20000000
#define CFM_ITALIC	2
#define CFM_OFFSET	0x10000000
#define CFM_PROTECTED	16
#define CFM_SIZE	0x80000000
#define CFM_STRIKEOUT	8
#define CFM_UNDERLINE	4
#define CFE_AUTOCOLOR	0x40000000
#define CFE_BOLD	1
#define CFE_ITALIC	2
#define CFE_STRIKEOUT	8
#define CFE_UNDERLINE	4
#define CFE_PROTECTED	16
#define PFM_ALIGNMENT	8
#define PFM_NUMBERING	32
#define PFM_OFFSET	4
#define PFM_OFFSETINDENT	0x80000000
#define PFM_RIGHTINDENT	2
#define PFM_STARTINDENT	1
#define PFM_TABSTOPS	16
#define PFN_BULLET	1
#define PFA_LEFT	1
#define PFA_RIGHT	2
#define PFA_CENTER	3
#define SEL_EMPTY	0
#define SEL_TEXT	1
#define SEL_OBJECT	2
#define SEL_MULTICHAR	4
#define SEL_MULTIOBJECT	8
#define CF_RTF	TEXT("Rich Text Format")
#define CF_RETEXTOBJ	TEXT("RichEdit Text and Objects")
#define ODT_BUTTON	4
#define ODT_COMBOBOX	3
#define ODT_LISTBOX	2
#define ODT_LISTVIEW	102
#define ODT_MENU	1
#define ODT_STATIC	5
#define ODT_TAB	101
#define ODT_HEADER	100
#define ODA_DRAWENTIRE	1
#define ODA_FOCUS	4
#define ODA_SELECT	2
#define ODS_CHECKED	8
#define ODS_COMBOBOXEDIT	4096
#define ODS_DEFAULT	32
#define ODS_DISABLED	4
#define ODS_FOCUS	16
#define ODS_GRAYED	2
#define ODS_SELECTED	1
#define ANIMATE_CLASSW	L"SysAnimate32"
#define HOTKEY_CLASSW	L"msctls_hotkey32"
#define PROGRESS_CLASSW	L"msctls_progress32"
#define STATUSCLASSNAMEW	L"msctls_statusbar32"
#define REBARCLASSNAMEW		L"ReBarWindow32"
#define TOOLBARCLASSNAMEW	L"ToolbarWindow32"
#define TOOLTIPS_CLASSW	L"tooltips_class32"
#define TRACKBAR_CLASSW	L"msctls_trackbar32"
#define UPDOWN_CLASSW	L"msctls_updown32"
#define WC_HEADERW	L"SysHeader32"
#define WC_LISTVIEWW	L"SysListView32"
#define WC_TABCONTROLW	L"SysTabControl32"
#define WC_TREEVIEWW	L"SysTreeView32"
#define WC_PAGESCROLLERW	L"SysPager"
#define WC_PAGESCROLLERA	"SysPager"
#define DATETIMEPICK_CLASSW	L"SysDateTimePick32"
#define DATETIMEPICK_CLASSA	"SysDateTimePick32"
#define CCS_ADJUSTABLE	32
#define CCS_BOTTOM	3
#define CCS_NODIVIDER	64
#define CCS_NOMOVEY	2
#define CCS_NOPARENTALIGN	8
#define CCS_NORESIZE	4
#define CCS_TOP	1
#define CCS_VERT 0x80
#define CCS_LEFT 0x81
#define CCS_RIGHT	(CCS_VERT|CCS_BOTTOM)
#define CCS_NOMOVEX	(CCS_VERT|CCS_NOMOVEY)
#define RICHEDIT_CLASSA         "RichEdit20A"
#define RICHEDIT_CLASS10A   "RICHEDIT"

//#ifndef _RICHEDIT_VER
#define _RICHEDIT_VER  0x0210
//#endif

#define RICHEDIT_CLASSA      "RichEdit20A"
#define RICHEDIT_CLASS10A     "RICHEDIT"
#define RICHEDIT_CLASSW      L"RichEdit20W"
//#if (_RICHEDIT_VER >= 0x0200 )

#ifdef UNICODE
	#define RICHEDIT_CLASS       RICHEDIT_CLASSW
#else
	#define RICHEDIT_CLASS       RICHEDIT_CLASSA
#endif
//#else
//#define RICHEDIT_CLASS       RICHEDIT_CLASS10A
//#endif /* _RICHEDIT_VER >= 0x0200 */

#define ANIMATE_CLASSA	"SysAnimate32"
#define HOTKEY_CLASSA	"msctls_hotkey32"
#define PROGRESS_CLASSA	"msctls_progress32"
#define STATUSCLASSNAMEA	"msctls_statusbar32"
#define REBARCLASSNAMEA	"ReBarWindow32"
#define TOOLBARCLASSNAMEA	"ToolbarWindow32"
#define TOOLTIPS_CLASSA	"tooltips_class32"
#define TRACKBAR_CLASSA	"msctls_trackbar32"
#define UPDOWN_CLASSA	"msctls_updown32"
#define WC_HEADERA	"SysHeader32"
#define WC_LISTVIEWA	"SysListView32"
#define WC_TABCONTROLA	"SysTabControl32"
#define WC_TREEVIEWA	"SysTreeView32"
#define HDS_BUTTONS	2
#define HDS_HIDDEN	8
#define HDS_HOTTRACK	4
#define HDS_DRAGDROP	0x40
#define HDS_FULLDRAG	0x80
#define HDS_FILTERBAR	0x100
#define HDS_HORZ	0
#define HDS_FLAT	0x0200
#define HDFT_ISSTRING	0
#define HDFT_ISNUMBER	1
#define HDFT_HASNOVALUE 0x8000
#define HDI_BITMAP	16
#define HDI_FORMAT	4
#define HDI_HEIGHT	1
#define HDI_LPARAM	8
#define HDI_TEXT	2
#define HDI_WIDTH	1
#define HDI_IMAGE	0x20
#define HDI_DI_SETITEM	0x40
#define HDI_ORDER	0x80
#define HDI_FILTER	0x100
#define HDF_CENTER	2
#define HDF_LEFT	0
#define HDF_RIGHT	1
#define HDF_RTLREADING	4
#define HDF_BITMAP	8192
#define HDF_OWNERDRAW	32768
#define HDF_STRING	16384
#define HDF_BITMAP_ON_RIGHT 0x1000
#define HDF_IMAGE	0x800
#define HDF_SORTUP	0x0400
#define HDF_SORTDOWN	0x0200
#define HDF_JUSTIFYMASK	3
#define HHT_NOWHERE	1
#define HHT_ONDIVIDER	4
#define HHT_ONDIVOPEN	8
#define HHT_ONHEADER	2
#define HHT_TOLEFT	2048
#define HHT_TORIGHT	1024
#define HHT_ONFILTER	0x0010
#define HHT_ONFILTERBUTTON 0x0020
#define HHT_ABOVE	0x0100
#define HHT_BELOW	0x0200
#define HINST_COMMCTRL	((HANDLE)-1)
#define IDB_STD_LARGE_COLOR	1
#define IDB_STD_SMALL_COLOR	0
#define IDB_VIEW_LARGE_COLOR	5
#define IDB_VIEW_SMALL_COLOR	4
#define IDB_HIST_SMALL_COLOR	8
#define IDB_HIST_LARGE_COLOR	9
#define STD_COPY	1
#define STD_CUT	0
#define STD_DELETE	5
#define STD_FILENEW	6
#define STD_FILEOPEN	7
#define STD_FILESAVE	8
#define STD_FIND	12
#define STD_HELP	11
#define STD_PASTE	2
#define STD_PRINT	14
#define STD_PRINTPRE	9
#define STD_PROPERTIES	10
#define STD_REDOW	4
#define STD_REPLACE	13
#define STD_UNDO	3
#define VIEW_LARGEICONS	0
#define VIEW_SMALLICONS	1
#define VIEW_LIST	2
#define VIEW_DETAILS	3
#define VIEW_SORTNAME	4
#define VIEW_SORTSIZE	5
#define VIEW_SORTDATE	6
#define VIEW_SORTTYPE	7
#define VIEW_PARENTFOLDER	8
#define VIEW_NETCONNECT	9
#define VIEW_NETDISCONNECT	10
#define VIEW_NEWFOLDER	11
#define VIEW_VIEWMENU	12
#define HIST_BACK	0
#define HIST_FORWARD	1
#define HIST_FAVORITES	2
#define HIST_ADDTOFAVORITES	3
#define HIST_VIEWTREE	4
#define TBSTYLE_FLAT	2048
#define TBSTYLE_ALTDRAG	1024
#define TBSTYLE_TOOLTIPS	256
#define TBSTYLE_WRAPABLE	512
#define TBSTYLE_BUTTON	0
#define TBSTYLE_CHECK	2
#define TBSTYLE_CHECKGROUP	6
#define TBSTYLE_GROUP	4
#define TBSTYLE_SEP	1
#define TBSTYLE_DROPDOWN	8
#define TBSTYLE_AUTOSIZE	16
#define TBSTYLE_NOPREFIX	32
#define TBSTYLE_LIST	0x1000
#define TBSTYLE_CUSTOMERASE	0x2000
#define TBSTYLE_REGISTERDROP	0x4000
#define TBSTYLE_TRANSPARENT	0x8000
#define TBSTYLE_EX_DRAWDDARROWS	1
#define TBSTYLE_EX_MIXEDBUTTONS	0x8
#define TBSTYLE_EX_HIDECLIPPEDBUTTONS	0x10
#define TBSTYLE_EX_DOUBLEBUFFER 0x80
#define TBCDRF_NOEDGES	0x00010000
#define TBCDRF_HILITEHOTTRACK	0x00020000
#define TBCDRF_NOOFFSET	0x040000
#define TBCDRF_NOMARK	0x00080000
#define TBCDRF_NOETCHEDEFFECT	0x00100000
#define TBCDRF_BLENDICON	0x00200000
#define TBCDRF_NOBACKGROUND	0x00400000
#define BTNS_BUTTON	TBSTYLE_BUTTON
#define BTNS_SEP	TBSTYLE_SEP
#define BTNS_CHECK	TBSTYLE_CHECK
#define BTNS_GROUP	TBSTYLE_GROUP
#define BTNS_CHECKGROUP TBSTYLE_CHECKGROUP
#define BTNS_DROPDOWN	TBSTYLE_DROPDOWN
#define BTNS_AUTOSIZE	TBSTYLE_AUTOSIZE
#define BTNS_NOPREFIX	TBSTYLE_NOPREFIX
#define BTNS_SHOWTEXT	0x0040
#define BTNS_WHOLEDROPDOWN	0x0080
#define TBSTATE_CHECKED	1
#define TBSTATE_ENABLED	4
#define TBSTATE_HIDDEN	8
#define TBSTATE_INDETERMINATE	16
#define TBSTATE_PRESSED	2
#define TBSTATE_WRAP	32
#define TBSTATE_ELLIPSES	0x40
#define TBSTATE_MARKED	0x80
#define TBIMHT_AFTER	1
#define TBIMHT_BACKGROUND	2
#define TTS_ALWAYSTIP	1
#define TTS_NOPREFIX	2
#define TTS_NOANIMATE	0x10
#define TTS_NOFADE	0x20
#define TTS_BALLOON	0x40
#define TTS_CLOSE	0x80
#define TTF_IDISHWND	1
#define TTF_CENTERTIP	2
#define TTF_RTLREADING	4
#define TTF_SUBCLASS	16
#define TTF_TRACK	0x0020
#define TTF_ABSOLUTE	0x0080
#define TTF_PARSELINKS	0x1000
#define TTF_DI_SETITEM	0x8000
#define TTI_NONE	0
#define TTI_INFO	1
#define TTI_WARNING	2
#define TTI_ERROR	3
#define TTM_GETBUBBLESIZE	(WM_USER + 30)
#define TTM_POPUP	(WM_USER + 34)
#define TTM_GETTITLE	(WM_USER + 35)
#define TTDT_AUTOMATIC	0
#define TTDT_AUTOPOP	2
#define TTDT_INITIAL	3
#define TTDT_RESHOW	1
#define SBARS_SIZEGRIP	256
#define SBARS_SIZEGRIP	256
#define RBS_TOOLTIPS	0x0100
#define RBS_VARHEIGHT	0x0200
#define RBS_BANDBORDERS	0x0400
#define RBS_FIXEDORDER	0x0800
#define RBS_REGISTERDROP	0x1000
#define RBS_AUTOSIZE	0x2000
#define RBS_VERTICALGRIPPER 0x4000
#define RBS_DBLCLKTOGGLE	0x8000
#define RBIM_IMAGELIST	1
#define RB_INSERTBANDA	(WM_USER+1)
#define RB_DELETEBAND	(WM_USER+2)
#define RB_GETBARINFO	(WM_USER+3)
#define RB_SETBARINFO	(WM_USER+4)
#define RB_GETBANDINFO	(WM_USER+5)
#define RB_SETBANDINFOA	(WM_USER+6)
#define RB_SETPARENT	(WM_USER+7)
#define RB_HITTEST	(WM_USER+8)
#define RB_GETRECT	(WM_USER+9)
#define RB_INSERTBANDW	(WM_USER+10)
#define RB_SETBANDINFOW	(WM_USER+11)
#define RB_GETBANDCOUNT (WM_USER+12)
#define RB_GETROWCOUNT	(WM_USER+13)
#define RB_GETROWHEIGHT	(WM_USER+14)
#define RB_IDTOINDEX (WM_USER+16)
#define RB_GETTOOLTIPS (WM_USER+17)
#define RB_SETTOOLTIPS (WM_USER+18)
#define RB_SETBKCOLOR (WM_USER+19)
#define RB_GETBKCOLOR (WM_USER+20)
#define RB_SETTEXTCOLOR (WM_USER+21)
#define RB_GETTEXTCOLOR (WM_USER+22)
#define RB_SIZETORECT (WM_USER+23)
#define RB_BEGINDRAG	(WM_USER+24)
#define RB_ENDDRAG	(WM_USER+25)
#define RB_DRAGMOVE	(WM_USER+26)
#define RB_GETBARHEIGHT	(WM_USER+27)
#define RB_GETBANDINFOW (WM_USER+28)
#define RB_GETBANDINFOA (WM_USER+29)
#define RB_MINIMIZEBAND (WM_USER+30)
#define RB_MAXIMIZEBAND (WM_USER+31)
#define RB_GETBANDBORDERS (WM_USER+34)
#define RB_SHOWBAND	(WM_USER+35)
#define RB_SETPALETTE	(WM_USER+37)
#define RB_GETPALETTE	(WM_USER+38)
#define RB_SETCOLORSCHEME CCM_SETCOLORSCHEME
#define RB_GETCOLORSCHEME CCM_GETCOLORSCHEME
#define RB_GETDROPTARGET (CCM_GETDROPTARGET)
#define RB_SETUNICODEFORMAT CCM_SETUNICODEFORMAT
#define RB_GETUNICODEFORMAT CCM_GETUNICODEFORMAT
#define RB_GETBANDMARGINS	(WM_USER + 40)
#define RB_SETWINDOWTHEME	CCM_SETWINDOWTHEME
#define RB_PUSHCHEVRON	(WM_USER + 43)
#define RB_MOVEBAND	(WM_USER + 39)
#define RBBIM_STYLE	1
#define RBBIM_COLORS	2
#define RBBIM_TEXT	4
#define RBBIM_IMAGE	8
#define RBBIM_CHILD	16
#define RBBIM_CHILDSIZE	32
#define RBBIM_SIZE	64
#define RBBIM_BACKGROUND	0x80
#define RBBIM_ID	0x100
#define RBBIM_IDEALSIZE	0x200
#define RBBIM_LPARAM	0x400
#define RBBIM_HEADERSIZE	0x800
#define RBBS_BREAK	1
#define RBBS_FIXEDSIZE	2
#define RBBS_CHILDEDGE	4
#define RBBS_HIDDEN	8
#define RBBS_NOVERT	16
#define RBBS_FIXEDBMP	32
#define RBBS_VARIABLEHEIGHT	0x40
#define RBBS_GRIPPERALWAYS	0x80
#define RBBS_NOGRIPPER	0x100
#define RBBS_USECHEVRON	0x200
#define RBBS_HIDETITLE	0x400
#define RBBS_TOPALIGN	0x0800
#define RBHT_NOWHERE	1
#define RBHT_CAPTION	2
#define RBHT_CLIENT	3
#define RBHT_GRABBER	4
#define RBHT_CHEVRON	8
#define RB_INSERTBANDA	(WM_USER+1)
#define RB_DELETEBAND	(WM_USER+2)
#define RB_GETBARINFO	(WM_USER+3)
#define RB_SETBARINFO	(WM_USER+4)
#define RB_GETBANDINFO	(WM_USER+5)
#define RB_SETBANDINFOA	(WM_USER+6)
#define RB_SETPARENT	(WM_USER+7)
#define RB_HITTEST (WM_USER+8)
#define RB_GETRECT (WM_USER+9)
#define RB_INSERTBANDW (WM_USER+10)
#define RB_SETBANDINFOW (WM_USER+11)
#define RB_GETBANDCOUNT (WM_USER+12)
#define RB_GETROWCOUNT (WM_USER+13)
#define RB_GETROWHEIGHT (WM_USER+14)
#define RB_IDTOINDEX (WM_USER+16)
#define RB_GETTOOLTIPS (WM_USER+17)
#define RB_SETTOOLTIPS (WM_USER+18)
#define RB_SETBKCOLOR (WM_USER+19)
#define RB_GETBKCOLOR (WM_USER+20)
#define RB_SETTEXTCOLOR (WM_USER+21)
#define RB_GETTEXTCOLOR (WM_USER+22)
#define RB_SIZETORECT (WM_USER+23)
#define DL_MOVECURSOR	3
#define DL_COPYCURSOR	2
#define DL_STOPCURSOR	1
#define UDS_ALIGNLEFT	8
#define UDS_ALIGNRIGHT	4
#define UDS_ARROWKEYS	32
#define UDS_AUTOBUDDY	16
#define UDS_HORZ	64
#define UDS_NOTHOUSANDS	128
#define UDS_HOTTRACK	256
#define UDS_SETBUDDYINT	2
#define UDS_WRAP	1
#define PBS_SMOOTH 1
#define PBS_VERTICAL 4
#define UD_MAXVAL	32767
#define UD_MINVAL	(-32767)
#define HOTKEYF_ALT	4
#define HOTKEYF_CONTROL	2
#define HOTKEYF_EXT	8
#define HOTKEYF_SHIFT	1
#define HKCOMB_A	8
#define HKCOMB_C	4
#define HKCOMB_CA	64
#define HKCOMB_NONE	1
#define HKCOMB_S	2
#define HKCOMB_SA	32
#define HKCOMB_SC	16
#define HKCOMB_SCA	128
#define CBES_EX_NOEDITIMAGE	1
#define CBES_EX_NOEDITIMAGEINDENT	2
#define CBES_EX_PATHWORDBREAKPROC	4
#define CBES_EX_NOSIZELIMIT	8
#define CBES_EX_CASESENSITIVE	0x10
#define TBS_HORZ	0
#define TBS_VERT	2
#define TBS_AUTOTICKS	1
#define TBS_NOTICKS	16
#define TBS_TOP	4
#define TBS_BOTTOM	0
#define TBS_LEFT	4
#define TBS_RIGHT	0
#define TBS_BOTH	8
#define TBS_ENABLESELRANGE	32
#define TBS_FIXEDLENGTH	64
#define TBS_NOTHUMB	128
#define TBS_TOOLTIPS	256
#define TBS_REVERSED	0x200
#define TB_BOTTOM	7
#define TB_ENDTRACK	8
#define TB_LINEDOWN	1
#define TB_LINEUP	0
#define TB_PAGEDOWN	3
#define TB_PAGEUP	2
#define TB_THUMBPOSITION	4
#define TB_THUMBTRACK	5
#define TB_TOP	6
#define TB_MARKBUTTON	(WM_USER + 6)
#define TB_ISBUTTONHIGHLIGHTED (WM_USER + 14)
#define LVS_ALIGNLEFT	2048
#define LVS_ALIGNTOP	0
#define LVS_AUTOARRANGE	256
#define LVS_EDITLABELS	512
#define LVS_ICON	0
#define LVS_LIST	3
#define LVS_NOCOLUMNHEADER	16384
#define LVS_NOLABELWRAP	128
#define LVS_NOSCROLL	8192
#define LVS_NOSORTHEADER	32768
#define LVS_OWNERDRAWFIXED	1024
#define LVS_REPORT	1
#define LVS_SHAREIMAGELISTS	64
#define LVS_SHOWSELALWAYS	8
#define LVS_SINGLESEL	4
#define LVS_SMALLICON	2
#define LVS_SORTASCENDING	16
#define LVS_SORTDESCENDING	32
#define LVS_TYPESTYLEMASK	64512
#define LVS_TYPEMASK	3
#define LVS_ALIGNMASK	0xc00
#define LVS_OWNERDATA	0x1000
#define LVS_EX_GRIDLINES	1
#define LVS_EX_SUBITEMIMAGES	2
#define LVS_EX_CHECKBOXES	4
#define LVS_EX_TRACKSELECT	8
#define LVS_EX_HEADERDRAGDROP	16
#define LVS_EX_FULLROWSELECT	32
#define LVS_EX_ONECLICKACTIVATE 64
#define LVS_EX_TWOCLICKACTIVATE	128
#define LVS_EX_FLATSB	256
#define LVS_EX_REGIONAL	512
#define LVS_EX_INFOTIP	1024
#define LVS_EX_UNDERLINEHOT	0x800
#define LVS_EX_UNDERLINECOLD	0x1000
#define LVS_EX_MULTIWORKAREAS	0x2000
#define LVS_EX_LABELTIP	0x4000
#define LVS_EX_BORDERSELECT	0x8000
#define LVS_EX_LABELTIP	0x4000
#define LVS_EX_BORDERSELECT	0x8000
#define LVS_EX_DOUBLEBUFFER	0x10000
#define LVS_EX_HIDELABELS	0x20000
#define LVS_EX_SINGLEROW	0x40000
#define LVS_EX_SNAPTOGRID	0x80000
#define LVS_EX_SIMPLESELECT	0x100000
#define LVSIL_NORMAL	0
#define LVSIL_SMALL	1
#define LVSIL_STATE	2
#define LVIS_CUT	4
#define LVIS_DROPHILITED	8
#define LVIS_FOCUSED	1
#define LVIS_SELECTED	2
#define LVIS_OVERLAYMASK	3840
#define LVIS_STATEIMAGEMASK	61440
#define INDEXTOSTATEIMAGEMASK(i) ((i) << 12)
#define LPSTR_TEXTCALLBACKW	((LPWSTR)-1)
#define LPSTR_TEXTCALLBACKA	((LPSTR)-1)
#define LVIF_TEXT	1
#define LVIF_IMAGE	2
#define LVIF_PARAM	4
#define LVIF_STATE	8
#define LVIF_DI_SETITEM	4096
#define LVNI_ABOVE	256
#define LVNI_ALL	0
#define LVNI_BELOW	512
#define LVNI_TOLEFT	1024
#define LVNI_TORIGHT	2048
#define LVNI_CUT	4
#define LVNI_DROPHILITED	8
#define LVNI_FOCUSED	1
#define LVNI_SELECTED	2
#define LVFI_PARAM	1
#define LVFI_PARTIAL	8
#define LVFI_STRING	2
#define LVFI_WRAP	32
#define LVFI_NEARESTXY	64
#define LVHT_ABOVE	8
#define LVHT_BELOW	16
#define LVHT_NOWHERE	1
#define LVHT_ONITEMICON	2
#define LVHT_ONITEMLABEL	4
#define LVHT_ONITEMSTATEICON	8
#define LVHT_TOLEFT	64
#define LVHT_TORIGHT	32
#define LVHT_ONITEM	(LVHT_ONITEMICON|LVHT_ONITEMLABEL|LVHT_ONITEMSTATEICON)
#define LVCF_FMT	1
#define LVCF_SUBITEM	8
#define LVCF_TEXT	4
#define LVCF_WIDTH	2
#define LVCF_IMAGE         0x0010
#define LVCF_ORDER         0x0020
#define LVCFMT_CENTER	2
#define LVCFMT_LEFT	0
#define LVCFMT_RIGHT	1
#define LVCFMT_IMAGE        0x0800
#define LVCFMT_BITMAP_ON_RIGHT 0x1000
#define LVCFMT_COL_HAS_IMAGES  0x8000
#define LVCFMT_JUSTIFYMASK   0x0003
#define LVIR_BOUNDS	0
#define LVIR_ICON	1
#define LVIR_LABEL	2
#define LVIR_SELECTBOUNDS	3
#define LVA_ALIGNLEFT	1
#define LVA_ALIGNTOP	2
#define LVA_DEFAULT	0
#define LVA_SNAPTOGRID	5
#define LVSCW_AUTOSIZE	(-1)
#define LVSCW_AUTOSIZE_USEHEADER	(-2)
#define MONTHCAL_CLASSW	L"SysMonthCal32"
#define MONTHCAL_CLASSA	"SysMonthCal32"
#define MCM_FIRST	0x1000
#define MCM_GETCURSEL	(MCM_FIRST + 1)
#define MonthCal_GetCurSel(h,p) (BOOL)SNDMSG(h,MCM_GETCURSEL,0,(LPARAM)(p))
#define MCM_SETCURSEL	(MCM_FIRST+2)
#define MonthCal_SetCurSel(h,p) (BOOL)SNDMSG(h,MCM_SETCURSEL,0,(LPARAM)(p))
#define MCM_GETMAXSELCOUNT (MCM_FIRST+3)
#define MonthCal_GetMaxSelCount(h) (DWORD)SNDMSG(h,MCM_GETMAXSELCOUNT,0,0)
#define MCM_SETMAXSELCOUNT (MCM_FIRST+4)
#define MonthCal_SetMaxSelCount(h,n) (BOOL)SNDMSG(h,MCM_SETMAXSELCOUNT,(WPARAM)(n),0)
#define MCM_GETSELRANGE (MCM_FIRST+5)
#define MonthCal_GetSelRange(h,r) SNDMSG(h,MCM_GETSELRANGE,0,(LPARAM)(r))
#define MCM_SETSELRANGE	(MCM_FIRST+6)
#define MonthCal_SetSelRange(h,r) SNDMSG(h,MCM_SETSELRANGE,0,(LPARAM)(r))
#define MCM_GETMONTHRANGE (MCM_FIRST+7)
#define MonthCal_GetMonthRange(h,g,r) (DWORD)SNDMSG(h,MCM_GETMONTHRANGE,(WPARAM)(g),(LPARAM)(r))
#define MCM_SETDAYSTATE (MCM_FIRST+8)
#define MonthCal_SetDayState(h,c,r) SNDMSG(h,MCM_SETDAYSTATE,(WPARAM)(c),(LPARAM)(r))
#define MCM_GETMINREQRECT	(MCM_FIRST+9)
#define MonthCal_GetMinReqRect(h,p) SNDMSG(h,MCM_GETMINREQRECT,0,(LPARAM)(p))
#define MCM_SETCOLOR (MCM_FIRST + 10)
#define MonthCal_SetColor(h,i,c) SNDMSG(h,MCM_SETCOLOR,i,c)
#define MCM_GETCOLOR (MCM_FIRST+11)
#define MonthCal_GetColor(h,i) SNDMSG(h,MCM_GETCOLOR,i,0)
#define MCSC_BACKGROUND	0
#define MCSC_TEXT	1
#define MCSC_TITLEBK	2
#define MCSC_TITLETEXT	3
#define MCSC_MONTHBK	4
#define MCSC_TRAILINGTEXT	5
#define MCM_SETTODAY	(MCM_FIRST+12)
#define MonthCal_SetToday(h,p) SNDMSG(h,MCM_SETTODAY,0,(LPARAM)(p))
#define MCM_GETTODAY	(MCM_FIRST+13)
#define MonthCal_GetToday(h,p)	(BOOL)SNDMSG(h,MCM_GETTODAY,0,(LPARAM)(p))
#define MCM_HITTEST	(MCM_FIRST+14)
#define MonthCal_HitTest(h,p) SNDMSG(h, MCM_HITTEST, 0, (LPARAM)(PMCHITTESTINFO)(p))
#define MCHT_TITLE	0x10000
#define MCHT_CALENDAR	0x20000
#define MCHT_TODAYLINK	0x30000
#define MCHT_NEXT	0x1000000
#define MCHT_PREV	0x2000000
#define MCHT_NOWHERE	0
#define MCHT_TITLEBK	(MCHT_TITLE)
#define MCHT_TITLEMONTH	(MCHT_TITLE|1)
#define MCHT_TITLEYEAR	(MCHT_TITLE|2)
#define MCHT_TITLEBTNNEXT	(MCHT_TITLE|MCHT_NEXT|3)
#define MCHT_TITLEBTNPREV	(MCHT_TITLE|MCHT_PREV|3)
#define MCHT_CALENDARBK	(MCHT_CALENDAR)
#define MCHT_CALENDARDATE	(MCHT_CALENDAR|1)
#define MCHT_CALENDARDATENEXT	(MCHT_CALENDARDATE|MCHT_NEXT)
#define MCHT_CALENDARDATEPREV	(MCHT_CALENDARDATE|MCHT_PREV)
#define MCHT_CALENDARDAY	(MCHT_CALENDAR | 0x0002)
#define MCHT_CALENDARWEEKNUM	(MCHT_CALENDAR | 0x0003)
#define MCM_SETFIRSTDAYOFWEEK (MCM_FIRST+15)
#define MonthCal_SetFirstDayOfWeek(h,i) SNDMSG(h,MCM_SETFIRSTDAYOFWEEK,0,i)
#define MCM_GETFIRSTDAYOFWEEK (MCM_FIRST+16)
#define MonthCal_GetFirstDayOfWeek(h) (DWORD)SNDMSG(h,MCM_GETFIRSTDAYOFWEEK,0,0)
#define MCM_GETRANGE (MCM_FIRST+17)
#define MonthCal_GetRange(h, r) (DWORD)SNDMSG(h,MCM_GETRANGE,0,(LPARAM)(r))
#define MCM_SETRANGE (MCM_FIRST+18)
#define MonthCal_SetRange(h,g,r) (BOOL)SNDMSG(h,MCM_SETRANGE,(WPARAM)(g),(LPARAM)(r))
#define MCM_GETMONTHDELTA (MCM_FIRST + 19)
#define MonthCal_GetMonthDelta(hmc) (int)SNDMSG(h,MCM_GETMONTHDELTA,0,0)
#define MCM_SETMONTHDELTA (MCM_FIRST+20)
#define MonthCal_SetMonthDelta(h,n) (int)SNDMSG(h,MCM_SETMONTHDELTA,n,0)
#define MCM_GETMAXTODAYWIDTH (MCM_FIRST+21)
#define MonthCal_GetMaxTodayWidth(hmc) (DWORD)SNDMSG(h,MCM_GETMAXTODAYWIDTH,0,0)

//#if (_WIN32_IE >= 0x0400)
#define MCM_SETUNICODEFORMAT	CCM_SETUNICODEFORMAT
#define MonthCal_SetUnicodeFormat(h,f) (BOOL)SNDMSG((h),MCM_SETUNICODEFORMAT,(WPARAM)(f),0)
#define MCM_GETUNICODEFORMAT	CCM_GETUNICODEFORMAT
#define MonthCal_GetUnicodeFormat(h) (BOOL)SNDMSG((h),MCM_GETUNICODEFORMAT,0,0)
//#endif
#define MCN_SELCHANGE	(MCN_FIRST+1)
#define MCN_GETDAYSTATE	(MCN_FIRST+3)
#define MCN_SELECT	(MCN_FIRST+4)
#define MCS_DAYSTATE	1
#define MCS_MULTISELECT	2
#define MCS_WEEKNUMBERS	4
#define MCS_NOTODAYCIRCLE	8
#define MCS_NOTODAY	16
#define GMR_VISIBLE	0
#define GMR_DAYSTATE	1
#define TVS_DISABLEDRAGDROP	16
#define TVS_EDITLABELS	8
#define TVS_HASBUTTONS	1
#define TVS_HASLINES	2
#define TVS_LINESATROOT	4
#define TVS_SHOWSELALWAYS	32
#define TVS_NOTOOLTIPS	0x80
#define TVS_CHECKBOXES	0x100
#define TVS_TRACKSELECT	0x200
#define TVS_SINGLEEXPAND	0x400
#define TVS_INFOTIP	0x800
#define TVS_FULLROWSELECT	0x1000
#define TVS_NOSCROLL	0x2000
#define TVS_NONEVENHEIGHT	0x4000
#define TVS_NOHSCROLL	0x8000
#define TVS_RTLREADING	0x40
#define TVIS_BOLD	16
#define TVIS_CUT	4
#define TVIS_DROPHILITED	8
#define TVIS_EXPANDED	32
#define TVIS_EXPANDEDONCE	64
#define TVIS_FOCUSED	1
#define TVIS_OVERLAYMASK	3840
#define TVIS_SELECTED	2
#define TVIS_STATEIMAGEMASK	61440
#define TVIS_USERMASK	61440
#define TVIF_CHILDREN	64
#define TVIF_HANDLE	16
#define TVIF_IMAGE	2
#define TVIF_PARAM	4
#define TVIF_SELECTEDIMAGE	32
#define TVIF_STATE	8
#define TVIF_TEXT	1
#define TVIF_DI_SETITEM	0x1000
#define I_CHILDRENCALLBACK	(-1)
#define I_IMAGECALLBACK	(-1)
#define I_IMAGENONE	(-2)
#define TVI_ROOT	((HTREEITEM)(-65536))
#define TVI_FIRST	((HTREEITEM)(-65535))
#define TVI_LAST	((HTREEITEM)(-65534))
#define TVI_SORT	((HTREEITEM)(-65533))
#define TVHT_ABOVE	256
#define TVHT_BELOW	512
#define TVHT_NOWHERE	1
#define TVHT_ONITEM	70
#define TVHT_ONITEMBUTTON	16
#define TVHT_ONITEMICON	2
#define TVHT_ONITEMINDENT	8
#define TVHT_ONITEMLABEL	4
#define TVHT_ONITEMRIGHT	32
#define TVHT_ONITEMSTATEICON	64
#define TVHT_TOLEFT	2048
#define TVHT_TORIGHT	1024
#define TVE_COLLAPSE	1
#define TVE_COLLAPSERESET	32768
#define TVE_EXPAND	2
#define TVE_TOGGLE	3
#define TVSIL_NORMAL	0
#define TVSIL_STATE	2
#define TVGN_CARET	9
#define TVGN_CHILD	4
#define TVGN_DROPHILITE	8
#define TVGN_FIRSTVISIBLE	5
#define TVGN_NEXT	1
#define TVGN_NEXTVISIBLE	6
#define TVGN_PARENT	3
#define TVGN_PREVIOUS	2
#define TVGN_PREVIOUSVISIBLE	7
#define TVGN_ROOT	0
#define TVC_BYKEYBOARD	2
#define TVC_BYMOUSE	1
#define TVC_UNKNOWN	0
#define TCS_BUTTONS	256
#define TCS_FIXEDWIDTH	1024
#define TCS_FOCUSNEVER	32768
#define TCS_FOCUSONBUTTONDOWN	4096
#define TCS_FORCEICONLEFT	16
#define TCS_FORCELABELLEFT	32
#define TCS_MULTILINE	512
#define TCS_OWNERDRAWFIXED	8192
#define TCS_RAGGEDRIGHT	2048
#define TCS_RIGHTJUSTIFY	0
#define TCS_SINGLELINE	0
#define TCS_TABS	0
#define TCS_TOOLTIPS	16384
#define TCS_SCROLLOPPOSITE	1
#define TCS_BOTTOM	2
#define TCS_RIGHT	2
#define TCS_BOTTOM	2
#define TCS_MULTISELECT	4
#define TCS_HOTTRACK	0x40
#define TCS_VERTICAL	0x80
#define TCS_FLATBUTTONS	8
#define TCS_HOTTRACK	0x40
#define TCS_VERTICAL	0x80
#define TCS_TABS	0
#define TCS_SINGLELINE	0
#define TCS_RIGHTJUSTIFY	0
#define TCS_RAGGEDRIGH	0x800
#define TCS_EX_FLATSEPARATORS	1
#define TCS_EX_REGISTERDROP	2
#define TCIF_TEXT	1
#define TCIF_IMAGE	2
#define TCIF_PARAM	8
#define TCIF_RTLREADING	4
#define TCIF_STATE	0x10
#define TCIS_BUTTONPRESSED	1
#define TCIS_HIGHLIGHTED	2
#define TCHT_NOWHERE	1
#define TCHT_ONITEM	6
#define TCHT_ONITEMICON	2
#define TCHT_ONITEMLABEL	4
#define LPTC_HITTESTINFO	LPTCHITTESTINFO
#define TC_HITTESTINFO	TCHITTESTINFO
#define ACS_AUTOPLAY	4
#define ACS_CENTER	1
#define ACS_TRANSPARENT	2
#define ACS_TIMER	8
#define DIALOPTION_BILLING	64
#define DIALOPTION_QUIET	128
#define DIALOPTION_DIALTONE	256
#define MDMVOLFLAG_LOW	1
#define MDMVOLFLAG_MEDIUM	2
#define MDMVOLFLAG_HIGH	4
#define MDMVOL_LOW	0
#define MDMVOL_MEDIUM	1
#define MDMVOL_HIGH	2
#define MDMSPKRFLAG_OFF	1
#define MDMSPKRFLAG_DIAL	2
#define MDMSPKRFLAG_ON	4
#define MDMSPKRFLAG_CALLSETUP	8
#define MDMSPKR_OFF	0
#define MDMSPKR_DIAL	1
#define MDMSPKR_ON	2
#define MDMSPKR_CALLSETUP	3
#define MDM_BLIND_DIAL	512
#define MDM_CCITT_OVERRIDE	64
#define MDM_CELLULAR	8
#define MDM_COMPRESSION	1
#define MDM_ERROR_CONTROL	2
#define MDM_FLOWCONTROL_HARD	16
#define MDM_FLOWCONTROL_SOFT	32
#define MDM_FORCED_EC	4
#define MDM_SPEED_ADJUST	128
#define MDM_TONE_DIAL	256
#define MDM_V23_OVERRIDE	1024
#define MINCHAR	0x80
#define MAXCHAR	0x7f
#define MINSHORT	0x8000
#define MAXSHORT	0x7fff
#define MINLONG	0x80000000
#define MAXLONG	0x7fffffff
#define MAXBYTE	0xff
#define MAXWORD	0xffff
#define MAXDWORD	0xffffffff
#define LANG_BULGARIAN	2
#define LANG_CHINESE	4
#define LANG_CROATIAN	26
#define LANG_CZECH	5
#define LANG_DANISH	6
#define LANG_DUTCH	19
#define LANG_ENGLISH	9
#define LANG_FINNISH	11
#define LANG_FRENCH	12
#define LANG_GERMAN	7
#define LANG_GREEK	8
#define LANG_HUNGARIAN	14
#define LANG_ICELANDIC	15
#define LANG_ITALIAN	16
#define LANG_JAPANESE	17
#define LANG_KOREAN	18
#define LANG_NEUTRAL	0
#define LANG_NORWEGIAN	20
#define LANG_POLISH	21
#define LANG_PORTUGUESE	22
#define LANG_ROMANIAN	24
#define LANG_RUSSIAN	25
#define LANG_SLOVAK	27
#define LANG_SLOVENIAN	36
#define LANG_SPANISH	10
#define LANG_SWEDISH	29
#define LANG_TURKISH	31
#define SUBLANG_CHINESE_SIMPLIFIED	2
#define SUBLANG_CHINESE_TRADITIONAL	1
#define SUBLANG_CHINESE_HONGKONG	3
#define SUBLANG_CHINESE_SINGAPORE	4
#define SUBLANG_DEFAULT	1
#define SUBLANG_DUTCH	1
#define SUBLANG_DUTCH_BELGIAN	2
#define SUBLANG_ENGLISH_AUS	3
#define SUBLANG_ENGLISH_CAN	4
#define SUBLANG_ENGLISH_EIRE	6
#define SUBLANG_ENGLISH_NZ	5
#define SUBLANG_ENGLISH_UK	2
#define SUBLANG_ENGLISH_US	1
#define SUBLANG_FRENCH	1
#define SUBLANG_FRENCH_BELGIAN	2
#define SUBLANG_FRENCH_CANADIAN	3
#define SUBLANG_FRENCH_SWISS	4
#define SUBLANG_GERMAN	1
#define SUBLANG_GERMAN_AUSTRIAN	3
#define SUBLANG_GERMAN_SWISS	2
#define SUBLANG_ITALIAN	1
#define SUBLANG_ITALIAN_SWISS	2
#define SUBLANG_NEUTRAL	0
#define SUBLANG_NORWEGIAN_BOKMAL	1
#define SUBLANG_NORWEGIAN_NYNORSK	2
#define SUBLANG_PORTUGUESE	2
#define SUBLANG_PORTUGUESE_BRAZILIAN	1
#define SUBLANG_SPANISH	1
#define SUBLANG_SPANISH_MEXICAN	2
#define SUBLANG_SPANISH_MODERN	3
#define SUBLANG_SYS_DEFAULT	2
#define NLS_VALID_LOCALE_MASK	1048575
#define SORT_DEFAULT	0
#define SORT_JAPANESE_XJIS	0
#define SORT_JAPANESE_UNICODE	1
#define SORT_CHINESE_BIG5	0
#define SORT_CHINESE_UNICODE	1
#define SORT_KOREAN_KSC	0
#define SORT_KOREAN_UNICODE	1
#define NM_LAST	(-99U)
#define LVN_FIRST	((unsigned)-100)
#define LVN_LAST	(-199U)
#define HDN_FIRST	(-300U)
#define HDN_LAST	(-399U)
#define TVN_FIRST	(-400U)
#define TVN_LAST	(-499U)
#define TTN_FIRST	(-520U)
#define TTN_LAST	(-549U)
#define TCN_FIRST	(-550U)
#define TCN_LAST	(-580U)
#define CDN_FIRST	(-601U)
#define CDN_LAST	(-699U)
#define TBN_FIRST	(-700U)
#define TBN_LAST	(-720U)
#define UDN_FIRST	(-721)
#define UDN_LAST	(-740)
#define MCN_FIRST	(-750U)
#define MCN_LAST	(-759U)
#define DTN_FIRST	(-760U)
#define DTN_LAST	(-799U)
#define DTM_FIRST	0x1000
#define CBEN_FIRST	(0xfffffce0)
#define CBEN_GETDISPINFO CBEN_FIRST
#define CBEN_GETDISPINFOA CBEN_FIRST
#define CBEN_GETDISPINFOW (CBEN_FIRST-7)
#define CBEN_BEGINEDIT	(CBEN_FIRST-4)
#define CBEN_ENDEDITA	(CBEN_FIRST-5)
#define CBEN_ENDEDITW	(CBEN_FIRST-6)
#define CBEN_INSERTITEM	(CBEN_FIRST-1)
#define CBEN_DELETEITEM	(CBEN_FIRST-2)

#ifdef UNICODE
#define TVM_INSERTITEM	TVM_INSERTITEMW
#define CBEN_ENDEDIT CBEN_ENDEDITW
#define CBEN_DRAGBEGIN CBEN_DRAGBEGINW
#define MONTHCAL_CLASS	MONTHCAL_CLASSW
#define WC_PAGESCROLLER	WC_PAGESCROLLERW
#define TTM_SETTITLE	TTM_SETTITLEW
#else
#define TTM_SETTITLE	TTM_SETTITLEA
#define TVM_INSERTITEM	TVM_INSERTITEMA
#define CBEN_ENDEDIT CBEN_ENDEDITA
#define CBEN_DRAGBEGIN CBEN_DRAGBEGINA
#define MONTHCAL_CLASS	MONTHCAL_CLASSA
#define WC_PAGESCROLLER	WC_PAGESCROLLERA
#endif

#define CBENF_KILLFOCUS	1
#define CBENF_RETURN	2
#define CBENF_ESCAPE	3
#define CBENF_DROPDOWN	4
#define CBEMAXSTRLEN 260
#define CBEN_DRAGBEGINA	(CBEN_FIRST - 8)
#define CBEN_DRAGBEGINW	(CBEN_FIRST - 9)
#define CBEN_LAST	(-830U)
#define RBN_FIRST	(0U-831U)
#define RBN_LAST	(0U-859U)
#define RBN_HEIGHTCHANGE	(RBN_FIRST - 0)
#define RBN_GETOBJECT	(RBN_FIRST - 1)
#define RBN_LAYOUTCHANGED	(RBN_FIRST - 2)
#define RBN_AUTOSIZE	(RBN_FIRST - 3)
#define RBN_BEGINDRAG	(RBN_FIRST - 4)
#define RBN_ENDDRAG	(RBN_FIRST - 5)
#define RBN_DELETINGBAND	(RBN_FIRST - 6)
#define RBN_DELETEDBAND	(RBN_FIRST - 7)
#define RBN_CHILDSIZE	(RBN_FIRST - 8)
#define RBN_CHEVRONPUSHED	(RBN_FIRST - 10)
#define RBN_MINMAX	(RBN_FIRST - 21)
#define RBN_AUTOBREAK	(RBN_FIRST - 22)
#define RBNM_ID	1
#define RBNM_STYLE	2
#define RBNM_LPARAM	4
#define IPN_FIRST	(-860U)
#define IPN_LAST	(-879U)
#define PGN_FIRST	(-900U)
#define PGN_LAST	(-950U)
#define SBN_FIRST	(-880U)
#define SBN_LAST	(-899U)
#define DTM_GETSYSTEMTIME	(DTM_FIRST+1)
#define DTM_SETSYSTEMTIME	(DTM_FIRST+2)
#define DTM_GETRANGE	(DTM_FIRST+3)
#define DTM_SETRANGE	(DTM_FIRST+4)
#define DTM_SETFORMATA	(DTM_FIRST+5)
#define DTM_SETFORMATW	(DTM_FIRST+50)
#define DTM_SETMCCOLOR	(DTM_FIRST+6)
#define DTM_GETMCCOLOR	(DTM_FIRST+7)
#define DTM_GETMONTHCAL	(DTM_FIRST+8)
#define DTM_SETMCFONT	(DTM_FIRST+9)
#define DTM_GETMCFONT	(DTM_FIRST+10)
#define DTS_UPDOWN	1
#define DTS_SHOWNONE	2
#define DTS_SHORTDATEFORMAT 0
#define DTS_LONGDATEFORMAT 4
#define DTS_TIMEFORMAT	9
#define DTS_APPCANPARSE	16
#define DTS_RIGHTALIGN	32
#define DTS_SHORTDATECENTURYFORMAT 0xC
#define DTN_DATETIMECHANGE (DTN_FIRST+1)
#define DTN_USERSTRINGA	(DTN_FIRST+2)
#define DTN_USERSTRINGW	(DTN_FIRST+15)
#define DTN_WMKEYDOWNA	(DTN_FIRST+3)
#define DTN_WMKEYDOWNW	(DTN_FIRST+16)
#define DTN_FORMATA	(DTN_FIRST + 4)
#define DTN_FORMATW	(DTN_FIRST+17)
#define DTN_FORMATQUERYA	(DTN_FIRST+5)
#define DTN_FORMATQUERYW	(DTN_FIRST+18)
#define DTN_DROPDOWN	(DTN_FIRST + 6)
#define DTN_CLOSEUP	(DTN_FIRST + 7)
#define GDTR_MIN	1
#define GDTR_MAX	2
#define GDT_ERROR	-1
#define GDT_VALID	0
#define GDT_NONE	1
#define CDRF_DODEFAULT	0
#define CDRF_NEWFONT	2
#define CDRF_SKIPDEFAULT	4
#define CDRF_NOTIFYPOSTPAINT	16
#define CDRF_NOTIFYITEMDRAW	32
#define CDRF_NOTIFYSUBITEMDRAW	32
#define CDRF_NOTIFYPOSTERASE	0x40
#define CDDS_PREPAINT	1
#define CDDS_POSTPAINT	2
#define CDDS_PREERASE	3
#define CDDS_POSTERASE	4
#define CDDS_ITEM	0x10000
#define CDDS_ITEMPREPAINT	(CDDS_ITEM | CDDS_PREPAINT)
#define CDDS_ITEMPOSTPAINT	(CDDS_ITEM | CDDS_POSTPAINT)
#define CDDS_ITEMPREERASE	(CDDS_ITEM | CDDS_PREERASE)
#define CDDS_ITEMPOSTERASE	(CDDS_ITEM | CDDS_POSTERASE)
#define CDDS_SUBITEM	0x20000
#define CDIS_SELECTED	1
#define CDIS_GRAYED	2
#define CDIS_DISABLED	4
#define CDIS_CHECKED	8
#define CDIS_FOCUS	16
#define CDIS_DEFAULT	32
#define CDIS_HOT	64
#define CDIS_MARKED	0x80
#define CDIS_INDETERMINATE	0x0100
#define CLR_HILIGHT	CLR_DEFAULT
#define PROCESSOR_INTEL_386	386
#define PROCESSOR_INTEL_486	486
#define PROCESSOR_INTEL_PENTIUM	586
#define PROCESSOR_MIPS_R4000	4000
#define PROCESSOR_ALPHA_21064	21064
#define COMPRESSION_FORMAT_NONE	0
#define COMPRESSION_FORMAT_DEFAULT	1
#define COMPRESSION_FORMAT_LZNT1	2
#define TAPE_DRIVE_COMPRESSION	131072
#define TAPE_DRIVE_ECC	65536
#define TAPE_DRIVE_ERASE_BOP_ONLY	64
#define TAPE_DRIVE_ERASE_LONG	32
#define TAPE_DRIVE_ERASE_IMMEDIATE	128
#define TAPE_DRIVE_ERASE_SHORT	16
#define TAPE_DRIVE_FIXED	1
#define TAPE_DRIVE_FIXED_BLOCK	1024
#define TAPE_DRIVE_INITIATOR	4
#define TAPE_DRIVE_PADDING	262144
#define TAPE_DRIVE_GET_ABSOLUTE_BLK	1048576
#define TAPE_DRIVE_GET_LOGICAL_BLK	2097152
#define TAPE_DRIVE_REPORT_SMKS	524288
#define TAPE_DRIVE_SELECT	2
#define TAPE_DRIVE_SET_EOT_WZ_SIZE	4194304
#define TAPE_DRIVE_TAPE_CAPACITY	256
#define TAPE_DRIVE_TAPE_REMAINING	512
#define TAPE_DRIVE_VARIABLE_BLOCK	2048
#define TAPE_DRIVE_WRITE_PROTECT	4096
#define TAPE_DRIVE_ABS_BLK_IMMED	(-2147475456)
#define TAPE_DRIVE_ABSOLUTE_BLK	(-2147479552)
#define TAPE_DRIVE_END_OF_DATA	(-2147418112)
#define TAPE_DRIVE_FILEMARKS	(-2147221504)
#define TAPE_DRIVE_LOAD_UNLOAD	(-2147483647)
#define TAPE_DRIVE_LOAD_UNLD_IMMED	(-2147483616)
#define TAPE_DRIVE_LOCK_UNLOCK	(-2147483644)
#define TAPE_DRIVE_LOCK_UNLK_IMMED	(-2147483520)
#define TAPE_DRIVE_LOG_BLK_IMMED	(-2147450880)
#define TAPE_DRIVE_LOGICAL_BLK	(-2147467264)
#define TAPE_DRIVE_RELATIVE_BLKS	(-2147352576)
#define TAPE_DRIVE_REVERSE_POSITION	(-2143289344)
#define TAPE_DRIVE_REWIND_IMMEDIATE	(-2147483640)
#define TAPE_DRIVE_SEQUENTIAL_FMKS	(-2146959360)
#define TAPE_DRIVE_SEQUENTIAL_SMKS	(-2145386496)
#define TAPE_DRIVE_SET_BLOCK_SIZE	(-2147483632)
#define TAPE_DRIVE_SET_COMPRESSION	(-2147483136)
#define TAPE_DRIVE_SET_ECC	(-2147483392)
#define TAPE_DRIVE_SET_PADDING	(-2147482624)
#define TAPE_DRIVE_SET_REPORT_SMKS	(-2147481600)
#define TAPE_DRIVE_SETMARKS	(-2146435072)
#define TAPE_DRIVE_SPACE_IMMEDIATE	(-2139095040)
#define TAPE_DRIVE_TENSION	(-2147483646)
#define TAPE_DRIVE_TENSION_IMMED	(-2147483584)
#define TAPE_DRIVE_WRITE_FILEMARKS	(-2113929216)
#define TAPE_DRIVE_WRITE_LONG_FMKS	(-2013265920)
#define TAPE_DRIVE_WRITE_MARK_IMMED	(-1879048192)
#define TAPE_DRIVE_WRITE_SETMARKS	(-2130706432)
#define TAPE_DRIVE_WRITE_SHORT_FMKS	(-2080374784)
#define STANDARD_RIGHTS_REQUIRED	0xf0000
#define STANDARD_RIGHTS_WRITE	0x20000
#define STANDARD_RIGHTS_READ	0x20000
#define STANDARD_RIGHTS_EXECUTE	0x20000
#define STANDARD_RIGHTS_ALL	0x1f0000
#define SPECIFIC_RIGHTS_ALL	0xffff
#define MAXIMUM_ALLOWED	0x2000000
#define GENERIC_ALL	0x10000000
#define SECURITY_NULL_RID	0
#define SECURITY_WORLD_RID	0
#define SECURITY_LOCAL_RID	0
#define SECURITY_CREATOR_OWNER_RID	0
#define SECURITY_CREATOR_GROUP_RID	1
#define SECURITY_DIALUP_RID	1
#define SECURITY_NETWORK_RID	2
#define SECURITY_BATCH_RID	3
#define SECURITY_INTERACTIVE_RID	4
#define SECURITY_LOGON_IDS_RID	5
#define SECURITY_LOGON_IDS_RID_COUNT	3
#define SECURITY_SERVICE_RID	6
#define SECURITY_LOCAL_SYSTEM_RID	0x12
#define SECURITY_BUILTIN_DOMAIN_RID	32
#define DOMAIN_USER_RID_ADMIN	0x1f4
#define DOMAIN_USER_RID_GUEST	0x1f5
#define DOMAIN_GROUP_RID_ADMINS	512
#define DOMAIN_GROUP_RID_USERS	0x201
#define DOMAIN_ALIAS_RID_ADMINS	0x220
#define DOMAIN_ALIAS_RID_USERS	0x221
#define DOMAIN_ALIAS_RID_GUESTS	0x222
#define DOMAIN_ALIAS_RID_POWER_USERS	0x223
#define DOMAIN_ALIAS_RID_ACCOUNT_OPS	0x224
#define DOMAIN_ALIAS_RID_SYSTEM_OPS	0x225
#define DOMAIN_ALIAS_RID_PRINT_OPS	0x226
#define DOMAIN_ALIAS_RID_BACKUP_OPS	0x227
#define DOMAIN_ALIAS_RID_REPLICATOR	0x228
#define SE_GROUP_MANDATORY	1
#define SE_GROUP_ENABLED_BY_DEFAULT	2
#define SE_GROUP_ENABLED	4
#define SE_GROUP_OWNER	8
#define SE_GROUP_LOGON_ID	0xc0000000
#define SECURITY_DESCRIPTOR_REVISION	1
#define SECURITY_DESCRIPTOR_MIN_LENGTH	20
#define SE_OWNER_DEFAULTED	1
#define SE_GROUP_DEFAULTED	2
#define SE_DACL_PRESENT	4
#define SE_DACL_DEFAULTED	8
#define SE_SACL_PRESENT	16
#define SE_SACL_DEFAULTED	32
#define SE_SELF_RELATIVE	32768
#define SE_PRIVILEGE_ENABLED_BY_DEFAULT	1
#define SE_PRIVILEGE_ENABLED	2
#define SE_PRIVILEGE_USED_FOR_ACCESS	0x80000000
#define PRIVILEGE_SET_ALL_NECESSARY	1
#define OFN_ALLOWMULTISELECT	512
#define OFN_CREATEPROMPT	0x2000
#define OFN_ENABLEHOOK	32
#define OFN_ENABLETEMPLATE	64
#define OFN_ENABLETEMPLATEHANDLE	128
#define OFN_EXPLORER	0x80000
#define OFN_EXTENSIONDIFFERENT	0x400
#define OFN_FILEMUSTEXIST	0x1000
#define OFN_HIDEREADONLY	4
#define OFN_LONGNAMES	0x200000
#define OFN_NOCHANGEDIR	8
#define OFN_NODEREFERENCELINKS	0x100000
#define OFN_NOLONGNAMES	0x40000
#define OFN_NONETWORKBUTTON	0x20000
#define OFN_NOREADONLYRETURN	0x8000
#define OFN_NOTESTFILECREATE	0x10000
#define OFN_NOVALIDATE	256
#define OFN_OVERWRITEPROMPT	2
#define OFN_PATHMUSTEXIST	0x800
#define OFN_READONLY	1
#define OFN_SHAREAWARE	0x4000
#define OFN_SHOWHELP	16
#define OFN_SHAREFALLTHROUGH	2
#define OFN_SHARENOWARN	1
#define OFN_SHAREWARN	0
#define CDN_INITDONE	0xfffffda7
#define CDN_SELCHANGE	0xfffffda6
#define CDN_FOLDERCHANGE	0xfffffda5
#define CDN_SHAREVIOLATION	0xfffffda4
#define CDN_HELP	0xfffffda3
#define CDN_FILEOK	0xfffffda2
#define CDN_TYPECHANGE	0xfffffda1
#define CDM_GETFILEPATH	0x465
#define CDM_GETFOLDERIDLIST	0x467
#define CDM_GETFOLDERPATH	0x466
#define CDM_GETSPEC	0x464
#define CDM_HIDECONTROL	0x469
#define CDM_SETCONTROLTEXT	0x468
#define CDM_SETDEFEXT	0x46a
#define CC_ENABLEHOOK	16
#define CC_ENABLETEMPLATE	32
#define CC_ENABLETEMPLATEHANDLE	64
#define CC_FULLOPEN	2
#define CC_PREVENTFULLOPEN	4
#define CC_RGBINIT	1
#define CC_SHOWHELP	8
#define CC_SOLIDCOLOR	128
#define FR_DIALOGTERM	64
#define FR_DOWN	1
#define FR_ENABLEHOOK	256
#define FR_ENABLETEMPLATE	512
#define FR_ENABLETEMPLATEHANDLE	0x2000
#define FR_FINDNEXT	8
#define FR_HIDEUPDOWN	0x4000
#define FR_HIDEMATCHCASE	0x8000
#define FR_HIDEWHOLEWORD	0x10000
#define FR_MATCHCASE	4
#define FR_NOMATCHCASE	0x800
#define FR_NOUPDOWN	0x400
#define FR_NOWHOLEWORD	4096
#define FR_REPLACE	16
#define FR_REPLACEALL	32
#define FR_SHOWHELP	128
#define FR_WHOLEWORD	2
#define FR_PRIVATE	0x10
#define FR_NOT_ENUM	0x20
#define CF_APPLY	512
#define CF_ANSIONLY	0x400
#define CF_BOTH	3
#define CF_TTONLY	0x40000
#define CF_EFFECTS	256
#define CF_ENABLEHOOK	8
#define CF_ENABLETEMPLATE	16
#define CF_ENABLETEMPLATEHANDLE	32
#define CF_FIXEDPITCHONLY	0x4000
#define CF_FORCEFONTEXIST	0x10000
#define CF_INITTOLOGFONTSTRUCT	64
#define CF_LIMITSIZE	0x2000
#define CF_NOOEMFONTS	0x800
#define CF_NOFACESEL	0x80000
#define CF_NOSCRIPTSEL	0x800000
#define CF_NOSTYLESEL	0x100000
#define CF_NOSIZESEL	0x200000
#define CF_NOSIMULATIONS	4096
#define CF_NOVECTORFONTS	0x800
#define CF_NOVERTFONTS	0x1000000
#define CF_PRINTERFONTS	2
#define CF_SCALABLEONLY	0x20000
#define CF_SCREENFONTS	1
#define CF_SCRIPTSONLY	0x400
#define CF_SELECTSCRIPT	0x400000
#define CF_SHOWHELP	4
#define CF_USESTYLE	128
#define CF_WYSIWYG	0x8000
#define BOLD_FONTTYPE	256
#define ITALIC_FONTTYPE	512
#define PRINTER_FONTTYPE	0x4000
#define REGULAR_FONTTYPE	0x400
#define SCREEN_FONTTYPE	0x2000
#define SIMULATED_FONTTYPE	0x8000
#define COLOROKSTRINGW	L"commdlg_ColorOK"
#define FILEOKSTRINGW	L"commdlg_FileNameOK"
#define FINDMSGSTRINGW	L"commdlg_FindReplace"
#define HELPMSGSTRINGW	L"commdlg_help"
#define LBSELCHSTRINGW	L"commdlg_LBSelChangedNotify"
#define SETRGBSTRINGW	L"commdlg_SetRGBColor"
#define SHAREVISTRINGW	L"commdlg_ShareViolation"
#define COLOROKSTRINGA	"commdlg_ColorOK"
#define FILEOKSTRINGA	"commdlg_FileNameOK"
#define FINDMSGSTRINGA	"commdlg_FindReplace"
#define HELPMSGSTRINGA	"commdlg_help"
#define LBSELCHSTRINGA	"commdlg_LBSelChangedNotify"
#define SETRGBSTRINGA	"commdlg_SetRGBColor"
#define SHAREVISTRINGA	"commdlg_ShareViolation"
#define TBNOTIFYA NMTOOLBARA
#define TBNOTIFYW NMTOOLBARW
#define LPTBNOTIFYA LPNMTOOLBARA
#define LPTBNOTIFYW LPNMTOOLBARW
#define TBNOTIFY	NMTOOLBAR
#define LPTBNOTIFY	LPNMTOOLBAR

#ifdef UNICODE
#define COLOROKSTRING COLOROKSTRINGW
#define FILEOKSTRING FILEOKSTRINGW
#define FINDMSGSTRING FINDMSGSTRINGW
#define HELPMSGSTRING HELPMSGSTRINGW
#define LBSELCHSTRING LBSELCHSTRINGW
#define SETRGBSTRING SETRGBSTRINGW
#define SHAREVISTRING SHAREVISTRINGW
#define LVITEM	LVITEMW
#else
#define COLOROKSTRING COLOROKSTRINGA
#define FILEOKSTRING FILEOKSTRINGA
#define FINDMSGSTRING FINDMSGSTRINGA
#define HELPMSGSTRING HELPMSGSTRINGA
#define LBSELCHSTRING LBSELCHSTRINGA
#define SETRGBSTRING SETRGBSTRINGA
#define SHAREVISTRING SHAREVISTRINGA
#define LVITEM	LVITEMA
#endif

#define CD_LBSELCHANGE	0
#define CD_LBSELADD	2
#define CD_LBSELSUB	1
#define CD_LBSELNOITEMS	(-1)
#define DN_DEFAULTPRN	1
#define PD_ALLPAGES	0
#define PD_COLLATE	16
#define PD_DISABLEPRINTTOFILE	524288
#define PD_ENABLEPRINTHOOK	4096
#define PD_ENABLEPRINTTEMPLATE	16384
#define PD_ENABLEPRINTTEMPLATEHANDLE	65536
#define PD_ENABLESETUPHOOK	8192
#define PD_ENABLESETUPTEMPLATE	32768
#define PD_ENABLESETUPTEMPLATEHANDLE	131072
#define PD_HIDEPRINTTOFILE	1048576
#define PD_NOPAGENUMS	8
#define PD_NOSELECTION	4
#define PD_NOWARNING	128
#define PD_PAGENUMS	2
#define PD_PRINTSETUP	64
#define PD_PRINTTOFILE	32
#define PD_RETURNDC	256
#define PD_RETURNDEFAULT	1024
#define PD_RETURNIC	512
#define PD_SELECTION	1
#define PD_SHOWHELP	2048
#define PD_USEDEVMODECOPIES	262144
#define PD_USEDEVMODECOPIESANDCOLLATE	262144
#define PSD_DEFAULTMINMARGINS	0
#define PSD_DISABLEMARGINS	16
#define PSD_DISABLEORIENTATION	256
#define PSD_DISABLEPAGEPAINTING	524288
#define PSD_DISABLEPAPER	512
#define PSD_DISABLEPRINTER	32
#define PSD_ENABLEPAGEPAINTHOOK	262144
#define PSD_ENABLEPAGESETUPHOOK	8192
#define PSD_ENABLEPAGESETUPTEMPLATE	32768
#define PSD_ENABLEPAGESETUPTEMPLATEHANDLE	131072
#define PSD_INHUNDREDTHSOFMILLIMETERS	8
#define PSD_INTHOUSANDTHSOFINCHES	4
#define PSD_INWININIINTLMEASURE	0
#define PSD_MARGINS	2
#define PSD_MINMARGINS	1
#define PSD_NOWARNING	128
#define PSD_RETURNDEFAULT	1024
#define PSD_SHOWHELP	2048
#define SW_OTHERUNZOOM	4
#define SW_OTHERZOOM	2
#define SW_PARENTCLOSING	1
#define SW_PARENTOPENING	3
#define AW_HOR_POSITIVE	1
#define AW_HOR_NEGATIVE	2
#define AW_VER_POSITIVE	4
#define AW_VER_NEGATIVE	8
#define AW_CENTER	0x10
#define AW_HIDE	0x10000
#define AW_ACTIVATE	0x20000
#define AW_SLIDE	0x40000
#define AW_BLEND	0x80000
#define VK_LBUTTON	1
#define VK_RBUTTON	2
#define VK_CANCEL	3
#define VK_MBUTTON	4
#define VK_BACK	8
#define VK_TAB	9
#define VK_CLEAR	12
#define VK_RETURN	13
#define VK_SHIFT	16
#define VK_CONTROL	17
#define VK_MENU	18
#define VK_PAUSE	19
#define VK_PRINT	42
#define VK_CAPITAL	20
#define VK_KANA	0x15
#define VK_HANGEUL	0x15
#define VK_HANGUL	0x15
#define VK_JUNJA	0x17
#define VK_FINAL	0x18
#define VK_HANJA	0x19
#define VK_KANJI	0x19
#define VK_CONVERT	0x1C
#define VK_NONCONVERT	0x1D
#define VK_ACCEPT	0x1E
#define VK_MODECHANGE	0x1F
#define VK_ESCAPE	27
#define VK_SPACE	32
#define VK_PRIOR	33
#define VK_NEXT	34
#define VK_END	35
#define VK_HOME	36
#define VK_LEFT	37
#define VK_UP	38
#define VK_RIGHT	39
#define VK_DOWN	40
#define VK_SELECT	41
#define VK_EXECUTE	43
#define VK_SNAPSHOT	44
#define VK_INSERT	45
#define VK_DELETE	46
#define VK_HELP	47
#define VK_0	48
#define VK_1	49
#define VK_2	50
#define VK_3	51
#define VK_4	52
#define VK_5	53
#define VK_6	54
#define VK_7	55
#define VK_8	56
#define VK_9	57
#define VK_A	65
#define VK_B	66
#define VK_C	67
#define VK_D	68
#define VK_E	69
#define VK_F	70
#define VK_G	71
#define VK_H	72
#define VK_I	73
#define VK_J	74
#define VK_K	75
#define VK_L	76
#define VK_M	77
#define VK_N	78
#define VK_O	79
#define VK_P	80
#define VK_Q	81
#define VK_R	82
#define VK_S	83
#define VK_T	84
#define VK_U	85
#define VK_V	86
#define VK_W	87
#define VK_X	88
#define VK_Y	89
#define VK_Z	90
#define VK_LWIN	0x5B
#define VK_RWIN	0x5C
#define VK_APPS	0x5D
#define VK_NUMPAD0	96
#define VK_NUMPAD1	97
#define VK_NUMPAD2	98
#define VK_NUMPAD3	99
#define VK_NUMPAD4	100
#define VK_NUMPAD5	101
#define VK_NUMPAD6	102
#define VK_NUMPAD7	103
#define VK_NUMPAD8	104
#define VK_NUMPAD9	105
#define VK_MULTIPLY	106
#define VK_ADD	107
#define VK_SEPARATOR	108
#define VK_SUBTRACT	109
#define VK_DECIMAL	110
#define VK_DIVIDE	111
#define VK_F1	112
#define VK_F2	113
#define VK_F3	114
#define VK_F4	115
#define VK_F5	116
#define VK_F6	117
#define VK_F7	118
#define VK_F8	119
#define VK_F9	120
#define VK_F10	121
#define VK_F11	122
#define VK_F12	123
#define VK_F13	124
#define VK_F14	125
#define VK_F15	126
#define VK_F16	127
#define VK_F17	128
#define VK_F18	129
#define VK_F19	130
#define VK_F20	131
#define VK_F21	132
#define VK_F22	133
#define VK_F23	134
#define VK_F24	135
#define VK_NUMLOCK	144
#define VK_SCROLL	145
#define VK_LSHIFT	160
#define VK_LCONTROL	162
#define VK_LMENU	164
#define VK_RSHIFT	161
#define VK_RCONTROL	163
#define VK_RMENU	165
#define VK_PROCESSKEY	229
#define KF_ALTDOWN	8192
#define KF_DLGMODE	2048
#define KF_EXTENDED	256
#define KF_MENUMODE	4096
#define KF_REPEAT	16384
#define KF_UP	32768
#define KL_NAMELENGTH	9
#define WA_ACTIVE	1
#define WA_CLICKACTIVE	2
#define WA_INACTIVE	0
#define PWR_CRITICALRESUME	3
#define PWR_SUSPENDREQUEST	1
#define PWR_SUSPENDRESUME	2
#define PWR_FAIL	(-1)
#define PWR_OK	1
#define NF_QUERY	3
#define NF_REQUERY	4
#define NFR_ANSI	1
#define NFR_UNICODE	2
#define WMSZ_BOTTOM	6
#define WMSZ_BOTTOMLEFT	7
#define WMSZ_BOTTOMRIGHT	8
#define WMSZ_LEFT	1
#define WMSZ_RIGHT	2
#define WMSZ_TOP	3
#define WMSZ_TOPLEFT	4
#define WMSZ_TOPRIGHT	5
#define WMSZ_BOTTOM 6
#define WMSZ_BOTTOMLEFT 7
#define WMSZ_BOTTOMRIGHT 8
#define MA_ACTIVATE	1
#define MA_ACTIVATEANDEAT	2
#define MA_NOACTIVATE	3
#define MA_NOACTIVATEANDEAT	4
#define ICON_SMALL	0
#define ICON_BIG	1
#define SIZE_MAXHIDE	4
#define SIZE_MAXIMIZED	2
#define SIZEFULLSCREEN	2
#define SIZE_MAXSHOW	3
#define SIZE_MINIMIZED	1
#define SIZEICONIC	1
#define SIZE_RESTORED	0
#define SIZENORMAL	0
#define WVR_ALIGNTOP	16
#define WVR_ALIGNLEFT	32
#define WVR_ALIGNBOTTOM	64
#define WVR_ALIGNRIGHT	128
#define WVR_HREDRAW	256
#define WVR_VREDRAW	512
#define WVR_REDRAW	768
#define WVR_VALIDRECTS	1024
#define HTBOTTOM	15
#define HTBOTTOMLEFT	16
#define HTBOTTOMRIGHT	17
#define HTCAPTION	2
#define HTCLIENT	1
#define HTERROR	(-2)
#define HTGROWBOX	4
#define HTHSCROLL	6
#define HTLEFT	10
#define HTMENU	5
#define HTNOWHERE	0
#define HTREDUCE	8
#define HTRIGHT	11
#define HTSIZE	4
#define HTSYSMENU	3
#define HTTOP	12
#define HTTOPLEFT	13
#define HTTOPRIGHT	14
#define HTTRANSPARENT	(-1)
#define HTVSCROLL	7
#define HTZOOM	9
#define HTOBJECT	19
#define HTCLOSE	20
#define HTHELP	21
#define HTBORDER	18
#define HTMINBUTTON 8
#define HTMAXBUTTON 9
#define MK_CONTROL	8
#define MK_LBUTTON	1
#define MK_MBUTTON	16
#define MK_RBUTTON	2
#define MK_SHIFT	4
#define CS_BYTEALIGNCLIENT	4096
#define CS_BYTEALIGNWINDOW	8192
#define CS_KEYCVTWINDOW	4
#define	CS_NOKEYCVT	256
#define CS_CLASSDC	64
#define CS_DBLCLKS	8
#define CS_GLOBALCLASS	16384
#define CS_IME	0x10000
#define CS_DROPSHADOW	0x20000
#define CS_HREDRAW	2
#define CS_NOCLOSE	512
#define CS_OWNDC	32
#define CS_PARENTDC	128
#define CS_SAVEBITS	2048
#define CS_VREDRAW	1
#define DLGWINDOWEXTRA	30
#define FALT	16
#define FCONTROL	8
#define FNOINVERT	2
#define FSHIFT	4
#define FVIRTKEY	1
#define MIIM_CHECKMARKS	8
#define MIIM_DATA	32
#define MIIM_ID	2
#define MIIM_STATE	1
#define MIIM_SUBMENU	4
#define MIIM_TYPE	16
#define MIIM_STRING	0x040
#define MIIM_BITMAP	0x080
#define MIIM_FTYPE	0x0100
#define MFT_BITMAP	4
#define MFT_MENUBARBREAK	32
#define MFT_MENUBREAK	64
#define MFT_OWNERDRAW	256
#define MFT_RADIOCHECK	512
#define MFT_RIGHTJUSTIFY	0x4000
#define MFT_SEPARATOR	0x800
#define MFT_STRING	0
#define MFS_CHECKED	8
#define MFS_DEFAULT	4096
#define MFS_DISABLED	3
#define MFS_ENABLED	0
#define MFS_GRAYED	3
#define MFS_HILITE	128
#define MFS_UNCHECKED	0
#define MFS_UNHILITE	0
#define SERKF_AVAILABLE	2
#define SERKF_INDICATOR	4
#define SERKF_SERIALKEYSON	1
#define FKF_AVAILABLE	2
#define FKF_CLICKON	64
#define FKF_FILTERKEYSON	1
#define FKF_HOTKEYACTIVE	4
#define FKF_HOTKEYSOUND	16
#define FKF_CONFIRMHOTKEY	8
#define FKF_INDICATOR	32
#define HELPINFO_MENUITEM	2
#define HELPINFO_WINDOW	1
#define PRF_CHECKVISIBLE	1
#define PRF_CHILDREN	16
#define PRF_CLIENT	4
#define PRF_ERASEBKGND	8
#define PRF_NONCLIENT	2
#define PRF_OWNED	32
#define HWND_DESKTOP	(HWND)0
#define SC_CLOSE	61536
#define SC_CONTEXTHELP	61824
#define SC_DEFAULT	61792
#define SC_HOTKEY	61776
#define SC_HSCROLL	61568
#define SC_KEYMENU	61696
#define SC_MAXIMIZE	61488
#define SC_ZOOM	61488
#define SC_MINIMIZE	61472
#define SC_ICON	61472
#define SC_MONITORPOWER	61808
#define SC_MOUSEMENU	61584
#define SC_MOVE	61456
#define SC_NEXTWINDOW	61504
#define SC_PREVWINDOW	61520
#define SC_RESTORE	61728
#define SC_SCREENSAVE	61760
#define SC_SIZE	61440
#define SC_TASKLIST	61744
#define SC_VSCROLL	61552
#define SC_ARRANGE	61712
#define DC_HASDEFID	21323
#define DLGC_BUTTON	8192
#define DLGC_DEFPUSHBUTTON	16
#define DLGC_HASSETSEL	8
#define DLGC_RADIOBUTTON	64
#define DLGC_STATIC	256
#define DLGC_UNDEFPUSHBUTTON	32
#define DLGC_WANTALLKEYS	4
#define DLGC_WANTARROWS	1
#define DLGC_WANTCHARS	128
#define DLGC_WANTMESSAGE	4
#define DLGC_WANTTAB	2
#define EC_LEFTMARGIN	1
#define EC_RIGHTMARGIN	2
#define EC_USEFONTINFO	65535
#define LB_ERR	(-1)
#define LB_ERRSPACE	(-2)
#define CB_ERR	(-1)
#define CB_ERRSPACE	(-2)
#define SKF_AUDIBLEFEEDBACK	64
#define SKF_AVAILABLE	2
#define SKF_CONFIRMHOTKEY	8
#define SKF_HOTKEYACTIVE	4
#define SKF_HOTKEYSOUND	16
#define SKF_INDICATOR	32
#define SKF_STICKYKEYSON	1
#define SKF_TRISTATE	128
#define SKF_TWOKEYSOFF	256
#define MKF_AVAILABLE	2
#define MKF_CONFIRMHOTKEY	8
#define MKF_HOTKEYACTIVE	4
#define MKF_HOTKEYSOUND	16
#define MKF_INDICATOR	32
#define MKF_MOUSEKEYSON	1
#define MKF_MODIFIERS	64
#define MKF_REPLACENUMBERS	128
#define SSF_AVAILABLE	2
#define SSF_SOUNDSENTRYON	1
#define SSTF_BORDER	2
#define SSTF_CHARS	1
#define SSTF_DISPLAY	3
#define SSTF_NONE	0
#define SSGF_DISPLAY	3
#define SSGF_NONE	0
#define SSWF_CUSTOM	4
#define SSWF_DISPLAY	3
#define SSWF_NONE	0
#define SSWF_TITLE	1
#define SSWF_WINDOW	2
#define ATF_ONOFFFEEDBACK	2
#define ATF_TIMEOUTON	1
#define HCF_AVAILABLE	2
#define HCF_CONFIRMHOTKEY	8
#define HCF_HIGHCONTRASTON	1
#define HCF_HOTKEYACTIVE	4
#define HCF_HOTKEYAVAILABLE	64
#define HCF_HOTKEYSOUND	16
#define HCF_INDICATOR	32
#define TKF_AVAILABLE	2
#define TKF_CONFIRMHOTKEY	8
#define TKF_HOTKEYACTIVE	4
#define TKF_HOTKEYSOUND	16
#define TKF_TOGGLEKEYSON	1
#define PP_DISPLAYERRORS	1
#define RESOURCEDISPLAYTYPE_DOMAIN	1
#define RESOURCEDISPLAYTYPE_FILE	4
#define RESOURCEDISPLAYTYPE_GENERIC	0
#define RESOURCEDISPLAYTYPE_GROUP	5
#define RESOURCEDISPLAYTYPE_SERVER	2
#define RESOURCEDISPLAYTYPE_SHARE	3
#define CAPSLOCK_ON	128
#define ENHANCED_KEY	256
#define LEFT_ALT_PRESSED	2
#define LEFT_CTRL_PRESSED	8
#define NUMLOCK_ON	32
#define RIGHT_ALT_PRESSED	1
#define RIGHT_CTRL_PRESSED	4
#define SCROLLLOCK_ON	64
#define SHIFT_PRESSED	16
#define FROM_LEFT_1ST_BUTTON_PRESSED	1
#define RIGHTMOST_BUTTON_PRESSED	2
#define FROM_LEFT_2ND_BUTTON_PRESSED	4
#define FROM_LEFT_3RD_BUTTON_PRESSED	8
#define FROM_LEFT_4TH_BUTTON_PRESSED	16
#define DOUBLE_CLICK	2
#define MOUSE_MOVED	1
#define KEY_EVENT	1
#define MOUSE_EVENT	2
#define WINDOW_BUFFER_SIZE_EVENT	4
#define MENU_EVENT	8
#define FOCUS_EVENT	16
#define BI_RGB 0
#define BI_RLE8 1
#define BI_RLE4 2
#define BI_BITFIELDS 3
#define BI_JPEG 4
#define BI_PNG 5
#define HFILE_ERROR ((HFILE)-1)
#define CONTEXT_i386 0x10000
#define CONTEXT_i486 0x10000
#define CONTEXT_CONTROL (CONTEXT_i386 | 1)
#define CONTEXT_INTEGER (CONTEXT_i386 | 2)
#define CONTEXT_SEGMENTS (CONTEXT_i386 | 4)
#define CONTEXT_FLOATING_POINT (CONTEXT_i386 | 8)
#define CONTEXT_DEBUG_REGISTERS (CONTEXT_i386|0x10)
#define CONTEXT_EXTENDED_REGISTERS (CONTEXT_i386 | 0x00000020L)
#define CONTEXT_FULL (CONTEXT_CONTROL|CONTEXT_INTEGER|CONTEXT_SEGMENTS)
#define MAX_MODULE_NAME32 255
#define TH32CS_SNAPHEAPLIST 1
#define TH32CS_SNAPPROCESS 2
#define TH32CS_SNAPTHREAD 4
#define TH32CS_SNAPMODULE 8
#define TH32CS_SNAPALL (TH32CS_SNAPHEAPLIST|TH32CS_SNAPPROCESS|TH32CS_SNAPTHREAD|TH32CS_SNAPMODULE)
#define TH32CS_INHERIT 0x80000000
#define HF32_DEFAULT 1
#define HF32_SHARED 2
#define LF32_FIXED 1
#define LF32_FREE 2
#define LF32_MOVEABLE 4
#define UnlockResource(r) ((r),0)
#define METHOD_BUFFERED 0
#define METHOD_IN_DIRECT 1
#define METHOD_OUT_DIRECT 2
#define METHOD_NEITHER 3
#define FILE_ANY_ACCESS 0
#define FILE_READ_ACCESS 1
#define FILE_WRITE_ACCESS 2
#define TMPF_FIXED_PITCH 1
#define TMPF_VECTOR 2
#define TMPF_DEVICE 8
#define TMPF_TRUETYPE 4
#define NTM_REGULAR 0x40
#define NTM_BOLD 0x20
#define NTM_ITALIC 1
#define NTM_NONNEGATIVE_AC	0x00010000
#define NTM_PS_OPENTYPE	0x00020000
#define NTM_TT_OPENTYPE	0x00040000
#define NTM_MULTIPLEMASTER	0x00080000
#define NTM_TYPE1	0x00100000
#define NTM_DSIG	0x00200000
#define META_ANIMATEPALETTE	0x436
#define META_ARC	0x817
#define META_BITBLT	0x922
#define META_CHORD	0x830
#define META_CREATEBRUSHINDIRECT	0x2FC
#define META_CREATEFONTINDIRECT	0x2FB
#define META_CREATEPALETTE	0xf7
#define META_CREATEPATTERNBRUSH	0x1F9
#define META_CREATEPENINDIRECT	0x2FA
#define META_CREATEREGION	0x6FF
#define META_DELETEOBJECT	0x1f0
#define META_DIBBITBLT	0x940
#define META_DIBCREATEPATTERNBRUSH	0x142
#define META_DIBSTRETCHBLT	0xb41
#define META_ELLIPSE	0x418
#define META_ESCAPE	0x626
#define META_EXCLUDECLIPRECT	0x415
#define META_EXTFLOODFILL	0x548
#define META_EXTTEXTOUT	0xa32
#define META_FILLREGION	0x228
#define META_FLOODFILL	0x419
#define META_FRAMEREGION	0x429
#define META_INTERSECTCLIPRECT	0x416
#define META_INVERTREGION	0x12A
#define META_LINETO	0x213
#define META_MOVETO	0x214
#define META_OFFSETCLIPRGN	0x220
#define META_OFFSETVIEWPORTORG	0x211
#define META_OFFSETWINDOWORG	0x20F
#define META_PAINTREGION	0x12B
#define META_PATBLT	0x61D
#define META_PIE	0x81A
#define META_POLYGON	0x324
#define META_POLYLINE	0x325
#define META_POLYPOLYGON	0x538
#define META_REALIZEPALETTE	0x35
#define META_RECTANGLE	0x41B
#define META_RESIZEPALETTE	0x139
#define META_RESTOREDC	0x127
#define META_ROUNDRECT	0x61C
#define META_SAVEDC	0x1E
#define META_SCALEVIEWPORTEXT	0x412
#define META_SCALEWINDOWEXT	0x410
#define META_SELECTCLIPREGION	0x12C
#define META_SELECTOBJECT	0x12D
#define META_SELECTPALETTE	0x234
#define META_SETBKCOLOR	0x201
#define META_SETBKMODE	0x102
#define META_SETDIBTODEV	0xd33
#define META_SETMAPMODE	0x103
#define META_SETMAPPERFLAGS	0x231
#define META_SETPALENTRIES	0x37
#define META_SETPIXEL	0x41F
#define META_SETPOLYFILLMODE	0x106
#define META_SETRELABS	0x105
#define META_SETROP2	0x104
#define META_SETSTRETCHBLTMODE	0x107
#define META_SETTEXTALIGN	0x12E
#define META_SETTEXTCHAREXTRA	0x108
#define META_SETTEXTCOLOR	0x209
#define META_SETTEXTJUSTIFICATION	0x20A
#define META_SETVIEWPORTEXT	0x20E
#define META_SETVIEWPORTORG	0x20D
#define META_SETWINDOWEXT	0x20C
#define META_SETWINDOWORG	0x20B
#define META_STRETCHBLT	0xB23
#define META_STRETCHDIB	0xf43
#define META_TEXTOUT	0x521
#define PFD_DOUBLEBUFFER 1
#define PFD_STEREO 2
#define PFD_DRAW_TO_WINDOW 4
#define PFD_DRAW_TO_BITMAP 8
#define PFD_SUPPORT_GDI 0x10
#define PFD_SUPPORT_OPENGL 0x20
#define PFD_GENERIC_FORMAT 0x40
#define PFD_NEED_PALETTE 0x80
#define PFD_NEED_SYSTEM_PALETTE 0x100
#define PFD_SWAP_EXCHANGE 0x200
#define PFD_SWAP_COPY 0x400
#define PFD_SWAP_LAYER_BUFFERS 0x800
#define PFD_GENERIC_ACCELERATED	0x1000
#define PFD_TYPE_RGBA 0
#define PFD_TYPE_COLORINDEX 1
#define PFD_MAIN_PLANE 0
#define PFD_OVERLAY_PLANE 1
#define PFD_UNDERLAY_PLANE (-1)
#define QDI_SETDIBITS	1
#define QDI_GETDIBITS	2
#define QDI_DIBTOSCREEN	4
#define QDI_STRETCHDIB	8
#define RAS_MaxDeviceType	16
#define RAS_MaxPhoneNumber	128
#define RAS_MaxIpAddress	15
#define RAS_MaxIpxAddress	21
#define RAS_MaxEntryName	256
#define RAS_MaxDeviceName	128
#define RAS_MaxAreaCode	10
#define RAS_MaxPadType	32
#define RAS_MaxX25Address	200
#define RAS_MaxFacilities	200
#define RAS_MaxUserData	200
#define TME_HOVER 1
#define TME_LEAVE 2
#define TME_NONCLIENT 16
#define TME_QUERY	0x40000000
#define TME_CANCEL	0x80000000
#define HOVER_DEFAULT 0xFFFFFFFF
#define	GA_PARENT	1
#define	GA_ROOT	2
#define	GA_ROOTOWNER	3
#define CBEIF_TEXT	1
#define CBEIF_IMAGE	2
#define CBEIF_SELECTEDIMAGE	4
#define CBEIF_OVERLAY	8
#define CBEIF_INDENT	16
#define CBEIF_LPARAM	32
#define CBEIF_DI_SETITEM	0x10000000
#define HW_PROFILE_GUIDLEN 39
#define MAX_PROFILE_LEN	80
#define DOCKINFO_UNDOCKED	1
#define DOCKINFO_DOCKED	2
#define DOCKINFO_USER_SUPPLIED	4
#define DOCKINFO_USER_UNDOCKED (DOCKINFO_USER_SUPPLIED | DOCKINFO_UNDOCKED)
#define DOCKINFO_USER_DOCKED (DOCKINFO_USER_SUPPLIED | DOCKINFO_DOCKED)
#define FIND_FIRST_EX_CASE_SENSITIVE 1
#define ALL_TRANSPORTS "M\0\0\0"
#define MS_NBF "MNBF"
#define NCBCALL 0x10
#define NCBLISTEN 0x11
#define NCBHANGUP 0x12
#define NCBSEND 0x14
#define NCBRECV 0x15
#define NCBRECVANY 0x16
#define NCBCHAINSEND 0x17
#define NCBDGSEND 0x20
#define NCBDGRECV 0x21
#define NCBDGSENDBC 0x22
#define NCBDGRECVBC 0x23
#define NCBADDNAME 0x30
#define NCBDELNAME 0x31
#define NCBRESET 0x32
#define NCBASTAT 0x33
#define NCBSSTAT 0x34
#define NCBCANCEL 0x35
#define NCBADDGRNAME 0x36
#define NCBENUM 0x37
#define NCBUNLINK 0x70
#define NCBSENDNA 0x71
#define NCBCHAINSENDNA 0x72
#define NCBLANSTALERT 0x73
#define NCBACTION 0x77
#define NCBFINDNAME 0x78
#define NCBTRACE 0x79
#define ASYNCH 0x80
#define NRC_GOODRET 0x00
#define NRC_BUFLEN 0x01
#define NRC_ILLCMD 0x03
#define NRC_CMDTMO 0x05
#define NRC_INCOMP 0x06
#define NRC_BADDR 0x07
#define NRC_SNUMOUT 0x08
#define NRC_NORES 0x09
#define NRC_SCLOSED 0x0a
#define NRC_CMDCAN 0x0b
#define NRC_DUPNAME 0x0d
#define NRC_NAMTFUL 0x0e
#define NRC_ACTSES 0x0f
#define NRC_LOCTFUL 0x11
#define NRC_REMTFUL 0x12
#define NRC_ILLNN 0x13
#define NRC_NOCALL 0x14
#define NRC_NOWILD 0x15
#define NRC_INUSE 0x16
#define NRC_NAMERR 0x17
#define NRC_SABORT 0x18
#define NRC_NAMCONF 0x19
#define NRC_IFBUSY 0x21
#define NRC_TOOMANY 0x22
#define NRC_BRIDGE 0x23
#define NRC_CANOCCR 0x24
#define NRC_CANCEL 0x26
#define NRC_DUPENV 0x30
#define NRC_ENVNOTDEF 0x34
#define NRC_OSRESNOTAV 0x35
#define NRC_MAXAPPS 0x36
#define NRC_NOSAPS 0x37
#define NRC_NORESOURCES 0x38
#define NRC_INVADDRESS 0x39
#define NRC_INVDDID 0x3B
#define NRC_LOCKFAIL 0x3C
#define NRC_OPENERR 0x3f
#define NRC_SYSTEM 0x40
#define NRC_PENDING 0xff
#define NCB_POST void CALLBACK
#define ACL_REVISION	2
#define ACL_REVISION_DS	4
#define ACL_REVISION1	1
#define MIN_ACL_REVISION ACL_REVISION2
#define ACL_REVISION2	2
#define ACL_REVISION3	3
#define ACL_REVISION4	4
#define MAX_ACL_REVISION ACL_REVISION4
#define CONTAINING_RECORD(a,t,f) ((t *)((PCHAR)(a) - (ULONG_PTR)(&((t *)0)->f)))
#define LOGON32_LOGON_INTERACTIVE	2
#define LOGON32_LOGON_NETWORK	3
#define LOGON32_LOGON_BATCH	4
#define LOGON32_LOGON_SERVICE	5
#define LOGON32_LOGON_UNLOCK	7
#define LOGON32_LOGON_NETWORK_CLEARTEXT 8
#define LOGON32_LOGON_NEW_CREDENTIALS 9
#define LOGON32_PROVIDER_DEFAULT	0
#define LOGON32_PROVIDER_WINNT35	1
#define LOGON32_PROVIDER_WINNT40	2
#define LOGON32_PROVIDER_WINNT50	3
#define LOGON_WITH_PROFILE	1
#define LOGON_NETCREDENTIALS_ONLY	2
#define LOGON_ZERO_PASSWORD_BUFFER	0x80000000
#define WINEVENT_OUTOFCONTEXT	0
#define WINEVENT_SKIPOWNTHREAD	1
#define WINEVENT_SKIPOWNPROCESS	2
#define WINEVENT_INCONTEXT	4
#define GetKValue(cmyk)	((BYTE)(cmyk))
#define GetYValue(cmyk)	((BYTE)((cmyk)>> 8))
#define GetMValue(cmyk)	((BYTE)((cmyk)>>16))
#define GetCValue(cmyk)	((BYTE)((cmyk)>>24))
#define GR_GDIOBJECTS	0
#define GR_USEROBJECTS	1
#define ENUM_CURRENT_SETTINGS ((DWORD)-1)
#define ENUM_REGISTRY_SETTINGS ((DWORD)-2)
#define NFS_EDIT	1
#define NFS_STATIC	2
#define NFS_LISTCOMBO	4
#define NFS_BUTTON	8
#define NFS_ALL	0x10
#define NFS_USEFONTASSOC	0x20
#define ENDSESSION_LOGOFF	0x80000000
#define GET_RAWINPUT_CODE_WPARAM(wParam)	((wParam)&0xff)
#define RIM_INPUT	0
#define RIM_INPUTSINK	1
#define RIM_TYPEMOUSE	0
#define RIM_TYPEKEYBOARD	1
#define RIM_TYPEHID	2
#define RI_MOUSE_LEFT_BUTTON_DOWN	1
#define RI_MOUSE_LEFT_BUTTON_UP	2
#define RI_MOUSE_RIGHT_BUTTON_DOWN	4
#define RI_MOUSE_RIGHT_BUTTON_UP	8
#define RI_MOUSE_MIDDLE_BUTTON_DOWN	16
#define RI_MOUSE_MIDDLE_BUTTON_UP	0x20
#define RI_MOUSE_BUTTON_1_DOWN	RI_MOUSE_LEFT_BUTTON_DOWN
#define RI_MOUSE_BUTTON_1_UP	RI_MOUSE_LEFT_BUTTON_UP
#define RI_MOUSE_BUTTON_2_DOWN	RI_MOUSE_RIGHT_BUTTON_DOWN
#define RI_MOUSE_BUTTON_2_UP	RI_MOUSE_RIGHT_BUTTON_UP
#define RI_MOUSE_BUTTON_3_DOWN	RI_MOUSE_MIDDLE_BUTTON_DOWN
#define RI_MOUSE_BUTTON_3_UP	RI_MOUSE_MIDDLE_BUTTON_UP
#define RI_MOUSE_BUTTON_4_DOWN	0x0040
#define RI_MOUSE_BUTTON_4_UP	0x0080
#define RI_MOUSE_BUTTON_5_DOWN	0x0100
#define RI_MOUSE_BUTTON_5_UP	0x0200
#define RI_MOUSE_WHEEL	0x0400
#define MOUSE_MOVE_RELATIVE	0
#define MOUSE_MOVE_ABSOLUTE	1
#define MOUSE_VIRTUAL_DESKTOP	2
#define MOUSE_ATTRIBUTES_CHANGED 4
#define KEYBOARD_OVERRUN_MAKE_CODE	0xFF
#define RI_KEY_MAKE	0
#define RI_KEY_BREAK	1
#define RI_KEY_E0	2
#define RI_KEY_E1	4
#define RI_KEY_TERMSRV_SET_LED	8
#define RI_KEY_TERMSRV_SHADOW	0x10
#define RAWINPUT_ALIGN(x)	(((x) + sizeof(DWORD) - 1) & ~(sizeof(DWORD) - 1))
#define NEXTRAWINPUTBLOCK(ptr) ((PRAWINPUT)RAWINPUT_ALIGN((ULONG_PTR)((PBYTE)(ptr) + (ptr)->header.dwSize)))
#define RID_INPUT	0x10000003
#define RID_HEADER	0x10000005
#define RIDI_PREPARSEDDATA	0x20000005
#define RIDI_DEVICENAME	0x20000007
#define RIDI_DEVICEINFO	0x2000000b
#define RIDEV_REMOVE	1
#define RIDEV_EXCLUDE	0x10
#define RIDEV_PAGEONLY	0x20
#define RIDEV_NOLEGACY	0x30
#define RIDEV_CAPTUREMOUSE	0x200
#define RIDEV_NOHOTKEYS	0x200
#define RIDEV_EXMODEMASK	0x0F0
#define RIDEV_EXMODE(mode) ((mode)&RIDEV_EXMODEMASK)
#define WTS_CONSOLE_CONNECT	0x1
#define WTS_CONSOLE_DISCONNECT	0x2
#define WTS_REMOTE_CONNECT	0x3
#define WTS_REMOTE_DISCONNECT	0x4
#define WTS_SESSION_LOGON	0x5
#define WTS_SESSION_LOGOFF	0x6
#define WTS_SESSION_LOCK	0x7
#define WTS_SESSION_UNLOCK	0x8
#define APPCOMMAND_BROWSER_BACKWARD 1
#define APPCOMMAND_BROWSER_FORWARD 2
#define APPCOMMAND_BROWSER_REFRESH 3
#define APPCOMMAND_BROWSER_STOP 4
#define APPCOMMAND_BROWSER_SEARCH 5
#define APPCOMMAND_BROWSER_FAVORITES 6
#define APPCOMMAND_BROWSER_HOME 7
#define APPCOMMAND_VOLUME_MUTE 8
#define APPCOMMAND_VOLUME_DOWN 9
#define APPCOMMAND_VOLUME_UP 10
#define APPCOMMAND_MEDIA_NEXTTRACK 11
#define APPCOMMAND_MEDIA_PREVIOUSTRACK 12
#define APPCOMMAND_MEDIA_STOP 13
#define APPCOMMAND_MEDIA_PLAY_PAUSE 14
#define APPCOMMAND_LAUNCH_MAIL 15
#define APPCOMMAND_LAUNCH_MEDIA_SELECT 16
#define APPCOMMAND_LAUNCH_APP1 17
#define APPCOMMAND_LAUNCH_APP2 18
#define APPCOMMAND_BASS_DOWN 19
#define APPCOMMAND_BASS_BOOST 20
#define APPCOMMAND_BASS_UP 21
#define APPCOMMAND_TREBLE_DOWN 22
#define APPCOMMAND_TREBLE_UP 23
#define APPCOMMAND_MICROPHONE_VOLUME_MUTE 24
#define APPCOMMAND_MICROPHONE_VOLUME_DOWN 25
#define APPCOMMAND_MICROPHONE_VOLUME_UP 26
#define APPCOMMAND_HELP 27
#define APPCOMMAND_FIND 28
#define APPCOMMAND_NEW 29
#define APPCOMMAND_OPEN 30
#define APPCOMMAND_CLOSE 31
#define APPCOMMAND_SAVE 32
#define APPCOMMAND_PRINT 33
#define APPCOMMAND_UNDO 34
#define APPCOMMAND_REDO 35
#define APPCOMMAND_COPY 36
#define APPCOMMAND_CUT 37
#define APPCOMMAND_PASTE 38
#define APPCOMMAND_REPLY_TO_MAIL 39
#define APPCOMMAND_FORWARD_MAIL 40
#define APPCOMMAND_SEND_MAIL 41
#define APPCOMMAND_SPELL_CHECK 42
#define APPCOMMAND_DICTATE_OR_COMMAND_CONTROL_TOGGLE 43
#define APPCOMMAND_MIC_ON_OFF_TOGGLE 44
#define APPCOMMAND_CORRECTION_LIST 45
#define FAPPCOMMAND_MOUSE 0x8000
#define FAPPCOMMAND_KEY 0
#define FAPPCOMMAND_OEM 0x1000
#define FAPPCOMMAND_MASK 0xF000
#define GET_APPCOMMAND_LPARAM(lParam) ((short)(HIWORD(lParam) & ~FAPPCOMMAND_MASK))
#define GET_DEVICE_LPARAM(lParam) ((WORD)(HIWORD(lParam) & FAPPCOMMAND_MASK))
#define GET_MOUSEORKEY_LPARAM GET_DEVICE_LPARAM
#define GET_FLAGS_LPARAM(lParam) (LOWORD(lParam))
#define GET_KEYSTATE_LPARAM(lParam) GET_FLAGS_LPARAM(lParam)
#define UISF_HIDEFOCUS	1
#define UISF_HIDEACCEL	2
#define UISF_ACTIVE	4
#define UIS_SET	1
#define UIS_CLEAR	2
#define UIS_INITIALIZE	3
#define FLS_OUT_OF_INDEXES ((DWORD)0xFFFFFFFF)
#define TLS_OUT_OF_INDEXES ((DWORD)0xFFFFFFFF)
#define META_SETLAYOUT 0x0149
#define MSGF_MESSAGEBOX 1
#define MSGF_MAX 8
#define ACCESS_STICKYKEYS 1
#define ACCESS_FILTERKEYS 2
#define ACCESS_MOUSEKEYS 3
#define LLKHF_EXTENDED (KF_EXTENDED >> 8)
#define LLKHF_INJECTED 0x00000010
#define LLKHF_ALTDOWN (KF_ALTDOWN >> 8)
#define LLKHF_UP (KF_UP >> 8)
#define LLMHF_INJECTED 1
#define ACCESS_OBJECT_GUID	0
#define ACCESS_PROPERTY_SET_GUID 1
#define ACCESS_PROPERTY_GUID	2
#define ACCESS_MAX_LEVEL	4
#define VER_NT_WORKSTATION	1
#define VER_NT_DOMAIN_CONTROLLER	2
#define VER_NT_SERVER	3
#define VER_SERVER_NT	0x80000000
#define VER_WORKSTATION_NT	0x40000000
#define VER_SUITE_SMALLBUSINESS	1
#define VER_SUITE_ENTERPRISE	2
#define VER_SUITE_BACKOFFICE	4
#define VER_SUITE_COMMUNICATIONS 8
#define VER_SUITE_TERMINAL	0x10
#define VER_SUITE_SMALLBUSINESS_RESTRICTED 0x20
#define VER_SUITE_EMBEDDEDNT	0x40
#define VER_SUITE_DATACENTER	0x80
#define VER_SUITE_SINGLEUSERTS	0x100
#define VER_SUITE_PERSONAL	0x200
#define VER_SUITE_BLADE	0x400
#define VER_SUITE_EMBEDDED_RESTRICTED	0x800
#define VER_SUITE_SECURITY_APPLIANCE 0x1000
#define AC_LINE_OFFLINE	0
#define AC_LINE_ONLINE	1
#define AC_LINE_BACKUP_POWER	2
#define AC_LINE_UNKNOWN	0xFF
#define BATTERY_FLAG_HIGH	1
#define BATTERY_FLAG_LOW	2
#define BATTERY_FLAG_CRITICAL	4
#define BATTERY_FLAG_CHARGING	8
#define BATTERY_FLAG_NO_BATTERY	0x80
#define BATTERY_FLAG_UNKNOWN	0xFF
#define BATTERY_PERCENTAGE_UNKNOWN	0xFF
#define BATTERY_LIFE_UNKNOWN	0xFFFFFFFF
#define JOB_OBJECT_MSG_END_OF_JOB_TIME 1
#define JOB_OBJECT_MSG_END_OF_PROCESS_TIME 2
#define JOB_OBJECT_MSG_ACTIVE_PROCESS_LIMIT 3
#define JOB_OBJECT_MSG_ACTIVE_PROCESS_ZERO 4
#define JOB_OBJECT_MSG_NEW_PROCESS 6
#define JOB_OBJECT_MSG_EXIT_PROCESS 7
#define JOB_OBJECT_MSG_ABNORMAL_EXIT_PROCESS 8
#define JOB_OBJECT_MSG_PROCESS_MEMORY_LIMIT 9
#define JOB_OBJECT_MSG_JOB_MEMORY_LIMIT 10
#define JOB_OBJECT_LIMIT_WORKINGSET	1
#define JOB_OBJECT_LIMIT_PROCESS_TIME	2
#define JOB_OBJECT_LIMIT_JOB_TIME	4
#define JOB_OBJECT_LIMIT_ACTIVE_PROCESS	8
#define JOB_OBJECT_LIMIT_AFFINITY	0x10
#define JOB_OBJECT_LIMIT_PRIORITY_CLASS	0x20
#define JOB_OBJECT_LIMIT_PRESERVE_JOB_TIME 0x40
#define JOB_OBJECT_LIMIT_SCHEDULING_CLASS	0x80
#define JOB_OBJECT_LIMIT_PROCESS_MEMORY	0x100
#define JOB_OBJECT_LIMIT_JOB_MEMORY	0x200
#define JOB_OBJECT_LIMIT_DIE_ON_UNHANDLED_EXCEPTION 0x400
#define JOB_OBJECT_LIMIT_BREAKAWAY_OK	0x800
#define JOB_OBJECT_LIMIT_SILENT_BREAKAWAY_OK	0x1000
#define JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE	0x2000
#define JOB_OBJECT_LIMIT_RESERVED2 0x4000
#define JOB_OBJECT_LIMIT_RESERVED3 0x8000
#define JOB_OBJECT_LIMIT_RESERVED4 0x10000
#define JOB_OBJECT_LIMIT_RESERVED5 0x20000
#define JOB_OBJECT_LIMIT_RESERVED6 0x40000
#define JOB_OBJECT_LIMIT_VALID_FLAGS	0x7ffff
#define JOB_OBJECT_BASIC_LIMIT_VALID_FLAGS 0x0ff
#define JOB_OBJECT_EXTENDED_LIMIT_VALID_FLAGS 0x003fff
#define JOB_OBJECT_RESERVED_LIMIT_VALID_FLAGS 0x07ffff
#define JOB_OBJECT_UILIMIT_NONE	0
#define JOB_OBJECT_UILIMIT_HANDLES	1
#define JOB_OBJECT_UILIMIT_READCLIPBOARD	2
#define JOB_OBJECT_UILIMIT_WRITECLIPBOARD	4
#define JOB_OBJECT_UILIMIT_SYSTEMPARAMETERS	8
#define JOB_OBJECT_UILIMIT_DISPLAYSETTINGS	0x10
#define JOB_OBJECT_UILIMIT_GLOBALATOMS	0x20
#define JOB_OBJECT_UILIMIT_DESKTOP	0x40
#define JOB_OBJECT_UILIMIT_EXITWINDOWS	0x80
#define JOB_OBJECT_UILIMIT_ALL	0xFF
#define JOB_OBJECT_UI_VALID_FLAGS 0xFF
#define JOB_OBJECT_SECURITY_NO_ADMIN	1
#define JOB_OBJECT_SECURITY_RESTRICTED_TOKEN	2
#define JOB_OBJECT_SECURITY_ONLY_TOKEN	4
#define JOB_OBJECT_SECURITY_FILTER_TOKENS	8
#define JOB_OBJECT_SECURITY_VALID_FLAGS	0xf
#define SEF_DACL_AUTO_INHERIT	1
#define SEF_SACL_AUTO_INHERIT	2
#define SEF_DEFAULT_DESCRIPTOR_FOR_OBJECT	4
#define SEF_AVOID_PRIVILEGE_CHECK	8
#define SEF_AVOID_OWNER_CHECK	0x10
#define SEF_DEFAULT_OWNER_FROM_PARENT	0x20
#define SEF_DEFAULT_GROUP_FROM_PARENT	0x40
#define MIM_MAXHEIGHT 1
#define MIM_BACKGROUND 2
#define MIM_HELPID 4
#define MIM_MENUDATA 8
#define MIM_STYLE 0x10
#define MIM_APPLYTOSUBMENUS 0x80000000
#define MNS_NOCHECK 0x80000000
#define MNS_MODELESS 0x40000000
#define MNS_DRAGDROP 0x20000000
#define MNS_AUTODISMISS 0x10000000
#define MNS_NOTIFYBYPOS 0x8000000
#define MNS_CHECKORBMP 0x4000000
#define QUERY_ACTCTX_FLAG_USE_ACTIVE_ACTCTX 4
#define QUERY_ACTCTX_FLAG_ACTCTX_IS_HMODULE 8
#define QUERY_ACTCTX_FLAG_ACTCTX_IS_ADDRESS 0x10
#define QUERY_ACTCTX_FLAG_NO_ADDREF 0x80000000
#define EVENTLOG_FULL_INFO 0
//#if (_WIN32_IE >= 0x0300)
#define LPTV_HITTESTINFO	LPTVHITTESTINFO
#define TV_HITTESTINFO	TVHITTESTINFO
//#else
//#define tagTVHITTESTINFO	_TV_HITTESTINFO
//#define TVHITTESTINFO	TV_HITTESTINFO
//#define LPTVHITTESTINFO	LPTV_HITTESTINFO
//#endif
#define LWA_COLORKEY	1
#define LWA_ALPHA	2
#define ULW_COLORKEY	1
#define ULW_ALPHA	2
#define ULW_OPAQUE	4
#define ACTCTX_FLAG_PROCESSOR_ARCHITECTURE_VALID 1
#define ACTCTX_FLAG_LANGID_VALID 2
#define ACTCTX_FLAG_ASSEMBLY_DIRECTORY_VALID 4
#define ACTCTX_FLAG_RESOURCE_NAME_VALID 8
#define ACTCTX_FLAG_SET_PROCESS_DEFAULT 0x10
#define ACTCTX_FLAG_APPLICATION_NAME_VALID 0x20
#define ACTCTX_FLAG_SOURCE_IS_ASSEMBLYREF 0x040
#define ACTCTX_FLAG_HMODULE_VALID 0x080
#define TIME_ZONE_ID_INVALID ((DWORD)0xFFFFFFFF)
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A "GetSystemWow64DirectoryA"
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W L"GetSystemWow64DirectoryA"
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T TEXT("GetSystemWow64DirectoryA")
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A "GetSystemWow64DirectoryW"
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W L"GetSystemWow64DirectoryW"
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T TEXT("GetSystemWow64DirectoryW")
#define HEAP_NO_SERIALIZE	1
#define HEAP_GROWABLE	2
#define HEAP_GENERATE_EXCEPTIONS	4
#define HEAP_ZERO_MEMORY	8
#define HEAP_REALLOC_IN_PLACE_ONLY	0x10
#define HEAP_TAIL_CHECKING_ENABLED	0x020
#define HEAP_FREE_CHECKING_ENABLED	0x040
#define HEAP_DISABLE_COALESCE_ON_FREE	0x080
#define HEAP_CREATE_ALIGN_16	0x010000
#define HEAP_CREATE_ENABLE_TRACING	0x00020000
#define HEAP_CREATE_ENABLE_EXECUTE	0x00040000
#define HEAP_MAXIMUM_TAG	0x0FFF
#define HEAP_PSEUDO_TAG_FLAG 0x8000
#define HEAP_TAG_SHIFT            18
#define HEAP_MAKE_TAG_FLAGS(b,o) ((DWORD)((b)+((o)<<18)))
#define FILE_ENCRYPTABLE 0
#define FILE_IS_ENCRYPTED 1
#define FILE_SYSTEM_ATTR 2
#define FILE_ROOT_DIR 3
#define FILE_SYSTEM_DIR 4
#define FILE_UNKNOWN 5
#define FILE_SYSTEM_NOT_SUPPORT 6
#define FILE_USER_DISALLOWED 7
#define FILE_READ_ONLY 8
#define FILE_DIR_DISALLOWED 9
#define HasOverlappedIoCompleted(lpOverlapped) (((DWORD)(lpOverlapped)->Internal) != STATUS_PENDING)
#define FIBER_FLAG_FLOAT_SWITCH 1
#define DEACTIVATE_ACTCTX_FLAG_FORCE_EARLY_DEACTIVATION 1
#define GET_MODULE_HANDLE_EX_FLAG_PIN 1
#define GET_MODULE_HANDLE_EX_FLAG_UNCHANGED_REFCOUNT 2
#define GET_MODULE_HANDLE_EX_FLAG_FROM_ADDRESS	4
#define FreeModule(hLibModule) FreeLibrary((hLibModule))
#define PROFILE_LINKED	'LINK'
#define PROFILE_EMBEDDED	'MBED'
#define LVCF_IMAGE	0x0010
#define LVCF_ORDER	0x0020
#define LVCFMT_IMAGE	0x0800
#define LVCFMT_BITMAP_ON_RIGHT	0x1000
#define LVCFMT_COL_HAS_IMAGES	0x8000
#define LVCFMT_JUSTIFYMASK	0x0003

#ifdef UNICODE
#define HD_TEXTFILTER HD_TEXTFILTERW
#define HDTEXTFILTER HD_TEXTFILTERW
#define LPHD_TEXTFILTER LPHD_TEXTFILTERW
#define LPHDTEXTFILTER LPHD_TEXTFILTERW
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A GET_SYSTEM_WOW64_DIRECTORY_NAME_W_A
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W GET_SYSTEM_WOW64_DIRECTORY_NAME_W_W
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T GET_SYSTEM_WOW64_DIRECTORY_NAME_W_T
#else
#define HD_TEXTFILTER HD_TEXTFILTERA
#define HDTEXTFILTER HD_TEXTFILTERA
#define LPHD_TEXTFILTER LPHD_TEXTFILTERA
#define LPHDTEXTFILTER LPHD_TEXTFILTERA
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_A GET_SYSTEM_WOW64_DIRECTORY_NAME_A_A
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_W GET_SYSTEM_WOW64_DIRECTORY_NAME_A_W
#define GET_SYSTEM_WOW64_DIRECTORY_NAME_T_T GET_SYSTEM_WOW64_DIRECTORY_NAME_A_T
#endif

#define INVALID_LINK_INDEX (-1)
#define MAX_LINKID_TEXT	48
#define L_MAX_URL_LENGTH	(2048 + 32 + sizeof("://"))
#define LWS_TRANSPARENT 1
#define LWS_IGNORERETURN 2
#define LIF_ITEMINDEX 1
#define LIF_STATE 2
#define LIF_ITEMID 4
#define LIF_URL	8
#define LIS_FOCUSED 1
#define LIS_ENABLED 2
#define LIS_VISITED 4
/* Structures.h */
typedef struct tagACTCTXA {
	ULONG     cbSize;
	DWORD     dwFlags;
	LPCSTR    lpSource;
	USHORT    wProcessorArchitecture;
	LANGID    wLangId;
	LPCSTR    lpAssemblyDirectory;
	LPCSTR    lpResourceName;
	LPCSTR    lpApplicationName;
	HMODULE   hModule;
} ACTCTXA, *PACTCTXA;
typedef struct tagACTCTXW {
	ULONG     cbSize;
	DWORD     dwFlags;
	LPCWSTR   lpSource;
	USHORT    wProcessorArchitecture;
	LANGID    wLangId;
	LPCWSTR   lpAssemblyDirectory;
	LPCWSTR   lpResourceName;
	LPCWSTR   lpApplicationName;
	HMODULE   hModule;
} ACTCTXW, *PACTCTXW;
typedef const ACTCTXA *PCACTCTXA;
typedef const ACTCTXW *PCACTCTXW;

//#if !defined(ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED)
//typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION {
//	HANDLE hActCtx;
//	DWORD  dwFlags;
//} ACTIVATION_CONTEXT_BASIC_INFORMATION, *PACTIVATION_CONTEXT_BASIC_INFORMATION;
//typedef const struct _ACTIVATION_CONTEXT_BASIC_INFORMATION *PCACTIVATION_CONTEXT_BASIC_INFORMATION;
//#define ACTIVATION_CONTEXT_BASIC_INFORMATION_DEFINED 1
//#endif

typedef struct tagWTSSESSION_NOTIFICATION { DWORD cbSize; DWORD dwSessionId; } WTSSESSION_NOTIFICATION, *PWTSSESSION_NOTIFICATION;
//#ifndef RC_INVOKED
typedef struct tagKBDLLHOOKSTRUCT {
	DWORD vkCode;
	DWORD scanCode;
	DWORD flags;
	DWORD time;
	ULONG_PTR dwExtraInfo;
} KBDLLHOOKSTRUCT, *LPKBDLLHOOKSTRUCT, *PKBDLLHOOKSTRUCT;
typedef struct tagHARDWAREHOOKSTRUCT {
	HWND hwnd;
	UINT message;
	WPARAM wParam;
	LPARAM lParam;
} HARDWAREHOOKSTRUCT, *LPHARDWAREHOOKSTRUCT, *PHARDWAREHOOKSTRUCT;
typedef struct tagRAWHID{DWORD dwSizeHid;DWORD dwCount;BYTE bRawData[1];}RAWHID,*PRAWHID,*LPRAWHID;
typedef struct tagRID_DEVICE_INFO_MOUSE {
	DWORD dwId;
	DWORD dwNumberOfButtons;
	DWORD dwSampleRate;
} RID_DEVICE_INFO_MOUSE, *PRID_DEVICE_INFO_MOUSE;
typedef struct tagRID_DEVICE_INFO_KEYBOARD {
	DWORD dwType;
	DWORD dwSubType;
	DWORD dwKeyboardMode;
	DWORD dwNumberOfFunctionKeys;
	DWORD dwNumberOfIndicators;
	DWORD dwNumberOfKeysTotal;
} RID_DEVICE_INFO_KEYBOARD, *PRID_DEVICE_INFO_KEYBOARD;
typedef struct tagRID_DEVICE_INFO_HID {
	DWORD dwVendorId;
	DWORD dwProductId;
	DWORD dwVersionNumber;
	USHORT usUsagePage;
	USHORT usUsage;
} RID_DEVICE_INFO_HID, *PRID_DEVICE_INFO_HID;
typedef struct tagRID_DEVICE_INFO {
	DWORD cbSize;
	DWORD dwType;
	union {
		RID_DEVICE_INFO_MOUSE mouse;
		RID_DEVICE_INFO_KEYBOARD keyboard;
		RID_DEVICE_INFO_HID hid;
	};
} RID_DEVICE_INFO, *PRID_DEVICE_INFO, *LPRID_DEVICE_INFO;
typedef struct tagRAWKEYBOARD {
	USHORT MakeCode;
	USHORT Flags;
	USHORT Reserved;
	USHORT VKey;
	UINT Message;
	ULONG ExtraInformation;
} RAWKEYBOARD, *PRAWKEYBOARD, *LPRAWKEYBOARD;
typedef struct tagRAWINPUTHEADER {
	DWORD dwType;
	DWORD dwSize;
	HANDLE hDevice;
	WPARAM wParam;
} RAWINPUTHEADER, *PRAWINPUTHEADER, *LPRAWINPUTHEADER;
typedef struct tagRAWMOUSE {
	USHORT usFlags;
	union {
		ULONG ulButtons;
		struct {
		USHORT usButtonFlags;
		USHORT usButtonData;
		};
	};
	ULONG ulRawButtons;
	LONG lLastX;
	LONG lLastY;
	ULONG ulExtraInformation;
} RAWMOUSE, *PRAWMOUSE, *LPRAWMOUSE;
typedef struct tagRAWINPUT {
	RAWINPUTHEADER header;
	union {
		RAWMOUSE mouse;
		RAWKEYBOARD keyboard;
		RAWHID hid;
	} data;
} RAWINPUT, *PRAWINPUT, *LPRAWINPUT;
typedef struct tagRAWINPUTDEVICE {
	USHORT usUsagePage;
	USHORT usUsage;
	DWORD dwFlags;
	HWND hwndTarget;
} RAWINPUTDEVICE, *PRAWINPUTDEVICE, *LPRAWINPUTDEVICE;
typedef CONST RAWINPUTDEVICE* PCRAWINPUTDEVICE;
typedef struct tagRAWINPUTDEVICELIST { HANDLE hDevice; DWORD dwType;} RAWINPUTDEVICELIST, *PRAWINPUTDEVICELIST;
typedef union _LARGE_INTEGER {
	struct { DWORD LowPart; LONG HighPart;};
	struct { DWORD LowPart; LONG HighPart; } u;
	long long int QuadPart;
} LARGE_INTEGER,*PLARGE_INTEGER;
typedef DWORD (WINAPI *LPPROGRESS_ROUTINE)(LARGE_INTEGER,LARGE_INTEGER,LARGE_INTEGER,LARGE_INTEGER,DWORD,DWORD,HANDLE,HANDLE,LPVOID);
typedef struct _ABC {
	int abcA;
	UINT abcB;
	int abcC;
} ABC,*LPABC;
typedef struct _ABCFLOAT {
	FLOAT abcfA;
	FLOAT abcfB;
	FLOAT abcfC;
} ABCFLOAT,*LPABCFLOAT;
#pragma pack(push,2)
typedef struct tagACCEL {
	BYTE fVirt;
	WORD key;
	WORD cmd;
} ACCEL,*LPACCEL;
#pragma pack(pop)
typedef struct _ACE_HEADER {
	BYTE AceType;
	BYTE AceFlags;
	WORD AceSize;
} ACE_HEADER;
typedef DWORD ACCESS_MASK;
typedef ACCESS_MASK REGSAM;
typedef struct _ACCESS_ALLOWED_ACE {
	ACE_HEADER Header;
	ACCESS_MASK Mask;
	DWORD SidStart;
} ACCESS_ALLOWED_ACE;
typedef struct _ACCESS_DENIED_ACE {
	ACE_HEADER Header;
	ACCESS_MASK Mask;
	DWORD SidStart;
} ACCESS_DENIED_ACE;
typedef struct tagACCESSTIMEOUT {
	UINT cbSize;
	DWORD dwFlags;
	DWORD iTimeOutMSec;
} ACCESSTIMEOUT;
typedef struct _ACL {
	BYTE AclRevision;
	BYTE Sbz1;
	WORD AclSize;
	WORD AceCount;
	WORD Sbz2;
} ACL,*PACL;
typedef struct _ACL_REVISION_INFORMATION {
	DWORD AclRevision;
} ACL_REVISION_INFORMATION;
typedef struct _ACL_SIZE_INFORMATION {
	DWORD AceCount;
	DWORD AclBytesInUse;
	DWORD AclBytesFree;
} ACL_SIZE_INFORMATION;
typedef struct _ACTION_HEADER {
	ULONG transport_id;
	USHORT action_code;
	USHORT reserved;
} ACTION_HEADER;
typedef struct _ADAPTER_STATUS {
	UCHAR adapter_address[6];
	UCHAR rev_major;
	UCHAR reserved0;
	UCHAR adapter_type;
	UCHAR rev_minor;
	WORD duration;
	WORD frmr_recv;
	WORD frmr_xmit;
	WORD iframe_recv_err;
	WORD xmit_aborts;
	DWORD xmit_success;
	DWORD recv_success;
	WORD iframe_xmit_err;
	WORD recv_buff_unavail;
	WORD t1_timeouts;
	WORD ti_timeouts;
	DWORD reserved1;
	WORD free_ncbs;
	WORD max_cfg_ncbs;
	WORD max_ncbs;
	WORD xmit_buf_unavail;
	WORD max_dgram_size;
	WORD pending_sess;
	WORD max_cfg_sess;
	WORD max_sess;
	WORD max_sess_pkt_size;
	WORD name_count;
} ADAPTER_STATUS;
typedef struct tagANIMATIONINFO {
	UINT cbSize;
	int iMinAnimate;
} ANIMATIONINFO,*LPANIMATIONINFO;
typedef struct _RECT {
	LONG left;
	LONG top;
	LONG right;
	LONG bottom;
} RECT,*LPRECT;
typedef struct _RECT *PRECT;
typedef const RECT *LPCRECT;
typedef struct _RECTL {
	LONG left;
	LONG top;
	LONG right;
	LONG bottom;
} RECTL,*LPRECTL;
typedef const RECTL *LPCRECTL;
typedef struct tagBITMAP {
	LONG bmType;
	LONG bmWidth;
	LONG bmHeight;
	LONG bmWidthBytes;
	WORD bmPlanes;
	WORD bmBitsPixel;
	LPVOID bmBits;
} BITMAP,*PBITMAP,*NPBITMAP,*LPBITMAP;
typedef struct tagBITMAPCOREHEADER {
	DWORD bcSize;
	WORD bcWidth;
	WORD bcHeight;
	WORD bcPlanes;
	WORD bcBitCount;
} BITMAPCOREHEADER;
 /* was missing jn */
typedef BITMAPCOREHEADER *LPBITMAPCOREHEADER;
typedef struct tagRGBTRIPLE {
	BYTE rgbtBlue;
	BYTE rgbtGreen;
	BYTE rgbtRed;
} RGBTRIPLE;
typedef struct _BITMAPCOREINFO {
	BITMAPCOREHEADER bmciHeader;
	RGBTRIPLE bmciColors[1];
} BITMAPCOREINFO;
/* was missing jn */
typedef BITMAPCOREINFO *LPBITMAPCOREINFO;
#pragma pack(1)
typedef struct tagBITMAPFILEHEADER {
	WORD bfType;
	DWORD bfSize;
	WORD bfReserved1;
	WORD bfReserved2;
	DWORD bfOffBits;
} BITMAPFILEHEADER,*LPBITMAPFILEHEADER,*PBITMAPFILEHEADER;
#pragma pack()
typedef struct tagBITMAPINFOHEADER {
	DWORD biSize;
	LONG biWidth;
	LONG biHeight;
	WORD biPlanes;
	WORD biBitCount;
	DWORD biCompression;
	DWORD biSizeImage;
	LONG biXPelsPerMeter;
	LONG biYPelsPerMeter;
	DWORD biClrUsed;
	DWORD biClrImportant;
} BITMAPINFOHEADER,*LPBITMAPINFOHEADER,*PBITMAPINFOHEADER;
typedef struct tagRGBQUAD {
	BYTE rgbBlue;
	BYTE rgbGreen;
	BYTE rgbRed;
	BYTE rgbReserved;
} RGBQUAD,*LPRGBQUAD;
typedef struct tagBITMAPINFO {
	BITMAPINFOHEADER bmiHeader;
	RGBQUAD bmiColors[1];
} BITMAPINFO,*LPBITMAPINFO,*PBITMAPINFO;
typedef long FXPT2DOT30,*LPFXPT2DOT30;
typedef struct tagCIEXYZ {
	FXPT2DOT30 ciexyzX;
	FXPT2DOT30 ciexyzY;
	FXPT2DOT30 ciexyzZ;
} CIEXYZ;
typedef CIEXYZ *LPCIEXYZ;
typedef struct tagICEXYZTRIPLE {
	CIEXYZ ciexyzRed;
	CIEXYZ ciexyzGreen;
	CIEXYZ ciexyzBlue;
} CIEXYZTRIPLE, *LPCIEXYZTRIPLE;
typedef struct {
	DWORD bV4Size;
	LONG bV4Width;
	LONG bV4Height;
	WORD bV4Planes;
	WORD bV4BitCount;
	DWORD bV4V4Compression;
	DWORD bV4SizeImage;
	LONG bV4XPelsPerMeter;
	LONG bV4YPelsPerMeter;
	DWORD bV4ClrUsed;
	DWORD bV4ClrImportant;
	DWORD bV4RedMask;
	DWORD bV4GreenMask;
	DWORD bV4BlueMask;
	DWORD bV4AlphaMask;
	DWORD bV4CSType;
	CIEXYZTRIPLE bV4Endpoints;
	DWORD bV4GammaRed;
	DWORD bV4GammaGreen;
	DWORD bV4GammaBlue;
} BITMAPV4HEADER,*LPBITMAPV4HEADER,*PBITMAPV4HEADER;
typedef struct {
	DWORD bV5Size;
	LONG bV5Width;
	LONG bV5Height;
	WORD bV5Planes;
	WORD bV5BitCount;
	DWORD bV5Compression;
	DWORD bV5SizeImage;
	LONG bV5XPelsPerMeter;
	LONG bV5YPelsPerMeter;
	DWORD bV5ClrUsed;
	DWORD bV5ClrImportant;
	DWORD bV5RedMask;
	DWORD bV5GreenMask;
	DWORD bV5BlueMask;
	DWORD bV5AlphaMask;
	DWORD bV5CSType;
	CIEXYZTRIPLE bV5Endpoints;
	DWORD bV5GammaRed;
	DWORD bV5GammaGreen;
	DWORD bV5GammaBlue;
	DWORD bV5Intent;
	DWORD bV5ProfileData;
	DWORD bV5ProfileSize;
	DWORD bV5Reserved;
} BITMAPV5HEADER, *LPBITMAPV5HEADER, *PBITMAPV5HEADER;

//#ifndef _SHITEMID_DEFINED
typedef struct _SHITEMID { USHORT cb; BYTE abID[1]; } SHITEMID,*LPSHITEMID;
#define _SHITEMID_DEFINED
//#endif
typedef const SHITEMID *LPCSHITEMID;
//#ifndef _ITEMIDLIST_DEFINED
#define _ITEMIDLIST_DEFINED
typedef struct _ITEMIDLIST { SHITEMID mkid; } ITEMIDLIST,*LPITEMIDLIST;
//#endif
typedef const ITEMIDLIST *LPCITEMIDLIST;
typedef struct _browseinfo {
	HWND hwndOwner;
	LPCITEMIDLIST pidlRoot;
	LPSTR pszDisplayName;
	LPCSTR lpszTitle;
	UINT ulFlags;
	BFFCALLBACK lpfn;
	LPARAM lParam;
	int iImage;
} BROWSEINFO,*PBROWSEINFO,*LPBROWSEINFO;
typedef struct tagFILETIME {
	DWORD dwLowDateTime;
	DWORD dwHighDateTime;
} FILETIME,*LPFILETIME,*PFILETIME;
#define _FILETIME
typedef struct _BY_HANDLE_FILE_INFORMATION {
	DWORD dwFileAttributes;
	FILETIME ftCreationTime;
	FILETIME ftLastAccessTime;
	FILETIME ftLastWriteTime;
	DWORD dwVolumeSerialNumber;
	DWORD nFileSizeHigh;
	DWORD nFileSizeLow;
	DWORD nNumberOfLinks;
	DWORD nFileIndexHigh;
	DWORD nFileIndexLow;
} BY_HANDLE_FILE_INFORMATION,*LPBY_HANDLE_FILE_INFORMATION;
typedef struct _FIXED {
	WORD fract;
	short value;
} FIXED;
typedef struct tagPOINT {
	LONG x;
	LONG y;
} POINT,*PPOINT;
#define LPPOINT PPOINT
typedef struct tagPOINTFX {
	FIXED x;
	FIXED y;
} POINTFX;
typedef struct _POINTL {
	LONG x;
	LONG y;
} POINTL;
typedef struct tagPOINTS {
	SHORT x;
	SHORT y;
} POINTS;
typedef struct tagCREATESTRUCT {
	LPVOID lpCreateParams;
	HINSTANCE hInstance;
	HMENU hMenu;
	HWND hwndParent;
	int cy;
	int cx;
	int y;
	int x;
	LONG style;
	LPCTSTR lpszName;
	LPCTSTR lpszClass;
	DWORD dwExStyle;
} CREATESTRUCT,*LPCREATESTRUCT;
typedef struct tagCBT_CREATEWNDA {
	struct tagCREATESTRUCTA *lpcs;
	HWND	hwndInsertAfter;
} CBT_CREATEWNDA, *LPCBT_CREATEWNDA;
typedef struct tagCBT_CREATEWNDW {
	struct tagCREATESTRUCTW *lpcs;
	HWND hwndInsertAfter;
} CBT_CREATEWNDW, *LPCBT_CREATEWNDW;

#ifdef UNICODE
typedef ACTCTXW ACTCTX;
typedef PACTCTXW PACTCTX;
typedef CBT_CREATEWNDW CBT_CREATEWND;
typedef LPCBT_CREATEWNDW LPCBT_CREATEWND;
#else
typedef ACTCTXA ACTCTX;
typedef PACTCTXA PACTCTX;
typedef CBT_CREATEWNDA CBT_CREATEWND;
typedef LPCBT_CREATEWNDA LPCBT_CREATEWND;
#endif

typedef struct tagCBTACTIVATESTRUCT {
	BOOL fMouse;
	HWND hWndActive;
} CBTACTIVATESTRUCT, *LPCBTACTIVATESTRUCT;
#define WTS_CONSOLE_CONNECT		1
#define WTS_CONSOLE_DISCONNECT		2
#define WTS_REMOTE_CONNECT		3
#define WTS_REMOTE_DISCONNECT		4
#define WTS_SESSION_LOGON		5
#define WTS_SESSION_LOGOFF		6
#define WTS_SESSION_LOCK		7
#define WTS_SESSION_UNLOCK		8
#define WTS_SESSION_REMOTE_CONTROL	9
typedef struct _CHAR_INFO {
	union { WCHAR UnicodeChar; CHAR AsciiChar; } Char;
	WORD Attributes;
} CHAR_INFO,*PCHAR_INFO;
typedef struct tagMSLLHOOKSTRUCT {
	POINT pt;
	DWORD mouseData;
	DWORD flags;
	DWORD time;
	ULONG_PTR dwExtraInfo;
} MSLLHOOKSTRUCT, *LPMSLLHOOKSTRUCT, *PMSLLHOOKSTRUCT;
#ifndef _CHARRANGE_DEFINED
#define _CHARRANGE_DEFINED
typedef struct _charrange { LONG cpMin; LONG cpMax; } CHARRANGE;
#endif
typedef struct tagCHARSET { DWORD aflBlock[3]; DWORD flLang; } CHARSET;
typedef struct tagFONTSIGNATURE { DWORD fsUsb[4]; DWORD fsCsb[2]; }
	FONTSIGNATURE,*LPFONTSIGNATURE;
typedef struct {
	UINT ciCharset;
	UINT ciACP;
	FONTSIGNATURE fs;
} CHARSETINFO,*LPCHARSETINFO;
typedef struct {
	DWORD lStructSize;
	HWND hwndOwner;
	HWND hInstance;
	COLORREF rgbResult;
	COLORREF *lpCustColors;
	DWORD Flags;
	LPARAM lCustData;
	LPCCHOOKPROC lpfnHook;
	LPCTSTR lpTemplateName;
} CHOOSECOLOR,*LPCHOOSECOLOR;
typedef struct tagLOGFONTA {
	LONG	lfHeight;
	LONG	lfWidth;
	LONG	lfEscapement;
	LONG	lfOrientation;
	LONG	lfWeight;
	BYTE	lfItalic;
	BYTE	lfUnderline;
	BYTE	lfStrikeOut;
	BYTE	lfCharSet;
	BYTE	lfOutPrecision;
	BYTE	lfClipPrecision;
	BYTE	lfQuality;
	BYTE	lfPitchAndFamily;
	CHAR	lfFaceName[LF_FACESIZE];
} LOGFONTA, *PLOGFONTA, NEAR *NPLOGFONTA, FAR *LPLOGFONTA;
typedef struct tagLOGFONTW
{
	LONG	lfHeight;
	LONG	lfWidth;
	LONG	lfEscapement;
	LONG	lfOrientation;
	LONG	lfWeight;
	BYTE	lfItalic;
	BYTE	lfUnderline;
	BYTE	lfStrikeOut;
	BYTE	lfCharSet;
	BYTE	lfOutPrecision;
	BYTE	lfClipPrecision;
	BYTE	lfQuality;
	BYTE	lfPitchAndFamily;
	WCHAR	lfFaceName[LF_FACESIZE];
} LOGFONTW, *PLOGFONTW, *NPLOGFONTW, *LPLOGFONTW;
#ifdef UNICODE
typedef LOGFONTW LOGFONT;
typedef PLOGFONTW PLOGFONT;
typedef NPLOGFONTW NPLOGFONT;
typedef LPLOGFONTW LPLOGFONT;
#else
typedef LOGFONTA LOGFONT;
typedef PLOGFONTA PLOGFONT;
typedef NPLOGFONTA NPLOGFONT;
typedef LPLOGFONTA LPLOGFONT;
#endif
typedef struct {
	DWORD lStructSize;
	HWND hwndOwner;
	HDC hDC;
	LPLOGFONT lpLogFont;
	INT iPointSize;
	DWORD Flags;
	DWORD rgbColors;
	LPARAM lCustData;
	LPCFHOOKPROC lpfnHook;
	LPCTSTR lpTemplateName;
	HINSTANCE hInstance;
	LPTSTR lpszStyle;
	WORD nFontType;
	WORD ___MISSING_ALIGNMENT__;
	INT nSizeMin;
	INT nSizeMax;
} CHOOSEFONT,*LPCHOOSEFONT;
#ifndef _IDA_DEFINED
#define _IDA_DEFINED
typedef struct _IDA { UINT cidl; UINT aoffset[1]; } CIDA,*LPIDA;
#endif
typedef struct tagCLIENTCREATESTRUCT {
	HANDLE hWindowMenu;
	UINT idFirstChild;
} CLIENTCREATESTRUCT;
typedef struct tagCOLORADJUSTMENT {
	WORD caSize;
	WORD caFlags;
	WORD caIlluminantIndex;
	WORD caRedGamma;
	WORD caGreenGamma;
	WORD caBlueGamma;
	WORD caReferenceBlack;
	WORD caReferenceWhite;
	SHORT caContrast;
	SHORT caBrightness;
	SHORT caColorfulness;
	SHORT caRedGreenTint;
} COLORADJUSTMENT,*LPCOLORADJUSTMENT;
typedef struct _COLORMAP {
	COLORREF from;
	COLORREF to;
} COLORMAP,*LPCOLORMAP;
typedef struct _DCB {
	DWORD DCBlength;
	DWORD BaudRate;
	unsigned fBinary:1;
	unsigned fParity:1;
	unsigned fOutxCtsFlow:1;
	unsigned fOutxDsrFlow:1;
	unsigned fDtrControl:2;
	unsigned fDsrSensitivity:1;
	unsigned fTXContinueOnXoff:1;
	unsigned fOutX:1;
	unsigned fInX:1;
	unsigned fErrorChar:1;
	unsigned fNull:1;
	unsigned fRtsControl:2;
	unsigned fAbortOnError:1;
	unsigned fDummy2:17;
	WORD wReserved;
	WORD XonLim;
	WORD XoffLim;
	BYTE ByteSize;
	BYTE Parity;
	BYTE StopBits;
	char XonChar;
	char XoffChar;
	char ErrorChar;
	char EofChar;
	char EvtChar;
	WORD wReserved1;
} DCB,*LPDCB;
typedef struct _DEC { USHORT wReserved; BYTE scale; BYTE sign;
 ULONG Hi32; long long int Lo64; } DECIMAL;
typedef struct tagBLOB { ULONG cbSize; BYTE *pBlobData; } BLOB;
typedef struct tagBLOB *LPBLOB;
#define _LPBLOB_DEFINED
typedef struct _COMM_CONFIG {
	DWORD dwSize;
	WORD wVersion;
	WORD wReserved;
	DCB dcb;
	DWORD dwProviderSubType;
	DWORD dwProviderOffset;
	DWORD dwProviderSize;
	WCHAR wcProviderData[2];
} COMMCONFIG,*LPCOMMCONFIG;
typedef struct _COMMPROP {
	WORD wPacketLength;
	WORD wPacketVersion;
	DWORD dwServiceMask;
	DWORD dwReserved1;
	DWORD dwMaxTxQueue;
	DWORD dwMaxRxQueue;
	DWORD dwMaxBaud;
	DWORD dwProvSubType;
	DWORD dwProvCapabilities;
	DWORD dwSettableParams;
	DWORD dwSettableBaud;
	WORD wSettableData;
	WORD wSettableStopParity;
	DWORD dwCurrentTxQueue;
	DWORD dwCurrentRxQueue;
	DWORD dwProvSpec1;
	DWORD dwProvSpec2;
	WCHAR wcProvChar[1];
} COMMPROP,*LPCOMMPROP;
typedef struct _COMMTIMEOUTS {
	DWORD ReadIntervalTimeout;
	DWORD ReadTotalTimeoutMultiplier;
	DWORD ReadTotalTimeoutConstant;
	DWORD WriteTotalTimeoutMultiplier;
	DWORD WriteTotalTimeoutConstant;
} COMMTIMEOUTS,*LPCOMMTIMEOUTS;
typedef struct tagCOMPAREITEMSTRUCT {
	UINT CtlType;
	UINT CtlID;
	HWND hwndItem;
	UINT itemID1;
	DWORD itemData1;
	UINT itemID2;
	DWORD itemData2;
} COMPAREITEMSTRUCT;
typedef struct _COMSTAT {
	unsigned fCtsHold:1;
	unsigned fDsrHold:1;
	unsigned fRlsdHold:1;
	unsigned fXoffHold:1;
	unsigned fXoffSent:1;
	unsigned fEof:1;
	unsigned fTxim:1;
	unsigned fReserved:25;
	DWORD cbInQue;
	DWORD cbOutQue;
} COMSTAT,*LPCOMSTAT;
typedef struct _CONSOLE_CURSOR_INFO {
	DWORD dwSize;
	BOOL bVisible;
} CONSOLE_CURSOR_INFO,*PCONSOLE_CURSOR_INFO;
typedef struct _COORD {
	SHORT X;
	SHORT Y;
} COORD;
typedef struct _SMALL_RECT {
	SHORT Left;
	SHORT Top;
	SHORT Right;
	SHORT Bottom;
} SMALL_RECT,*PSMALL_RECT;
typedef struct _CONSOLE_SCREEN_BUFFER_INFO {
	COORD dwSize;
	COORD dwCursorPosition;
	WORD wAttributes;
	SMALL_RECT srWindow;
	COORD dwMaximumWindowSize;
} CONSOLE_SCREEN_BUFFER_INFO,*PCONSOLE_SCREEN_BUFFER_INFO;
#ifndef _CONTEXT_DEFINED_
#define _CONTEXT_DEFINED_
#define MAXIMUM_SUPPORTED_EXTENSION	512
typedef struct _FLOATING_SAVE_AREA {
	DWORD ControlWord;
	DWORD StatusWord;
	DWORD TagWord;
	DWORD ErrorOffset;
	DWORD ErrorSelector;
	DWORD DataOffset;
	DWORD DataSelector;
	BYTE RegisterArea[80];
	DWORD Cr0NpxState;
} FLOATING_SAVE_AREA;
typedef struct _CONTEXT {
	DWORD ContextFlags;
	DWORD Dr0;
	DWORD Dr1;
	DWORD Dr2;
	DWORD Dr3;
	DWORD Dr6;
	DWORD Dr7;
	FLOATING_SAVE_AREA FloatSave;
	DWORD SegGs;
	DWORD SegFs;
	DWORD SegEs;
	DWORD SegDs;
	DWORD Edi;
	DWORD Esi;
	DWORD Ebx;
	DWORD Edx;
	DWORD Ecx;
	DWORD Eax;
	DWORD Ebp;
	DWORD Eip;
	DWORD SegCs;
	DWORD EFlags;
	DWORD Esp;
	DWORD SegSs;
	BYTE ExtendedRegisters[MAXIMUM_SUPPORTED_EXTENSION];
} CONTEXT,*PCONTEXT,*LPCONTEXT;
#endif
typedef struct _POWER_DEVICE_TIMEOUTS {
 DWORD ConservationIdleTime;
 DWORD PerformanceIdleTime;
} POWER_DEVICE_TIMEOUTS, *PPOWER_DEVICE_TIMEOUTS;
typedef struct _LIST_ENTRY {
	struct _LIST_ENTRY *Flink;
	struct _LIST_ENTRY *Blink;
} LIST_ENTRY,*PLIST_ENTRY;
typedef struct _RTL_CRITICAL_SECTION_DEBUG {
	WORD Type;
	WORD CreatorBackTraceIndex;
	struct _RTL_CRITICAL_SECTION *CriticalSection;
	LIST_ENTRY ProcessLocksList;
	DWORD EntryCount;
	DWORD ContentionCount;
	DWORD Spare[ 2];
} RTL_CRITICAL_SECTION_DEBUG,*PRTL_CRITICAL_SECTION_DEBUG,RTL_RESOURCE_DEBUG,*PRTL_RESOURCE_DEBUG;
typedef struct _SECURITY_QUALITY_OF_SERVICE {
	DWORD Length;
	SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
	BOOL ContextTrackingMode;
	BOOLEAN EffectiveOnly;
} SECURITY_QUALITY_OF_SERVICE;
typedef struct tagCONVCONTEXT {
	UINT cb;
	UINT wFlags;
	UINT wCountryID;
	int iCodePage;
	DWORD dwLangID;
	DWORD dwSecurity;
	SECURITY_QUALITY_OF_SERVICE qos;
} CONVCONTEXT;
typedef struct tagCONVINFO {
	DWORD cb;
	DWORD hUser;
	HCONV hConvPartner;
	HSZ hszSvcPartner;
	HSZ hszServiceReq;
	HSZ hszTopic;
	HSZ hszItem;
	UINT wFmt;
	UINT wType;
	UINT wStatus;
	UINT wConvst;
	UINT wLastError;
	HCONVLIST hConvList;
	CONVCONTEXT ConvCtxt;
	HWND hwnd;
	HWND hwndPartner;
} CONVINFO;
typedef struct tagCOPYDATASTRUCT {
	DWORD dwData;
	DWORD cbData;
	PVOID lpData;
} COPYDATASTRUCT,*PCOPYDATASTRUCT;
typedef struct tagMDINEXTMENU {
	HMENU hmenuIn;
	HMENU hmenuNext;
	HWND hwndNext;
} MDINEXTMENU,*PMDINEXTMENU, *LPMDINEXTMENU;
typedef struct _cpinfo {
	UINT MaxCharSize;
	BYTE DefaultChar[MAX_DEFAULTCHAR];
	BYTE LeadByte[MAX_LEADBYTES];
} CPINFO,*LPCPINFO;
typedef struct _CREATE_PROCESS_DEBUG_INFO {
	HANDLE hFile;
	HANDLE hProcess;
	HANDLE hThread;
	LPVOID lpBaseOfImage;
	DWORD dwDebugInfoFileOffset;
	DWORD nDebugInfoSize;
	LPVOID lpThreadLocalBase;
	LPTHREAD_START_ROUTINE lpStartAddress;
	LPVOID lpImageName;
	WORD fUnicode;
} CREATE_PROCESS_DEBUG_INFO,*LPCREATE_PROCESS_DEBUG_INFO;
typedef struct _CREATE_THREAD_DEBUG_INFO {
	HANDLE hThread;
	LPVOID lpThreadLocalBase;
	LPTHREAD_START_ROUTINE lpStartAddress;
} CREATE_THREAD_DEBUG_INFO,*LPCREATE_THREAD_DEBUG_INFO;
typedef struct _currencyfmtA {
	UINT NumDigits;
	UINT LeadingZero;
	UINT Grouping;
	LPSTR lpDecimalSep;
	LPSTR lpThousandSep;
	UINT NegativeOrder;
	UINT PositiveOrder;
	LPTSTR lpCurrencySymbol;
} CURRENCYFMTA,*LPCURRENCYFMTA;
typedef struct _currencyfmtW {
	UINT NumDigits;
	UINT LeadingZero;
	UINT Grouping;
	LPWSTR lpDecimalSep;
	LPWSTR lpThousandSep;
	UINT NegativeOrder;
	UINT PositiveOrder;
	LPWSTR lpCurrencySymbol;
} CURRENCYFMTW,*LPCURRENCYFMTW;
typedef struct tagCURSORSHAPE {
	int xHotSpot;
	int yHotSpot;
	int cx;
	int cy;
	int cbWidth;
	BYTE Planes;
	BYTE BitsPixel;
} CURSORSHAPE,*LPCURSORSHAPE;
typedef struct tagCWPRETSTRUCT {
	LRESULT lResult;
	LPARAM lParam;
	WPARAM wParam;
	DWORD message;
	HWND hwnd;
} CWPRETSTRUCT;
typedef struct tagCWPSTRUCT {
	LPARAM lParam;
	WPARAM wParam;
	UINT message;
	HWND hwnd;
} CWPSTRUCT,*PWCWPSTRUCT;
typedef struct {
	unsigned bAppReturnCode:8,reserved:6,fBusy:1,fAck:1;
} DDEACK;
typedef struct {
	unsigned reserved:14,fDeferUpd:1,fAckReq:1;
	short cfFormat;
} DDEADVISE;
typedef struct {
	unsigned unused:12,fResponse:1,fRelease:1,reserved:1,fAckReq:1;
	short cfFormat;
	BYTE Value[1];
} DDEDATA;
typedef struct {
	unsigned unused:13,fRelease:1,fDeferUpd:1,fAckReq:1;
	short cfFormat;
} DDELN;
typedef struct tagDDEML_MSG_HOOK_DATA {
	UINT uiLo;
	UINT uiHi;
	DWORD cbData;
	DWORD Data[8];
} DDEML_MSG_HOOK_DATA;
typedef struct {
	unsigned unused:13,fRelease:1,fReserved:2;
	short cfFormat;
	BYTE Value[1];
} DDEPOKE;
typedef struct {
	unsigned unused:12,fAck:1,fRelease:1,fReserved:1,fAckReq:1;
	short cfFormat;
	BYTE rgb[1];
} DDEUP;
#ifndef _EXCEPTION_RECORD_DEFINED_
#define _EXCEPTION_RECORD_DEFINED_
typedef struct _EXCEPTION_RECORD {
	DWORD ExceptionCode;
	DWORD ExceptionFlags;
	struct _EXCEPTION_RECORD *ExceptionRecord;
	PVOID ExceptionAddress;
	DWORD NumberParameters;
	DWORD ExceptionInformation[EXCEPTION_MAXIMUM_PARAMETERS];
} EXCEPTION_RECORD,*PEXCEPTION_RECORD,*LPEXCEPTION_RECORD;
#endif
typedef struct _EXCEPTION_DEBUG_INFO {
	EXCEPTION_RECORD ExceptionRecord;
	DWORD dwFirstChance;
} EXCEPTION_DEBUG_INFO;
typedef struct _EXIT_PROCESS_DEBUG_INFO {
	DWORD dwExitCode;
} EXIT_PROCESS_DEBUG_INFO;
typedef struct _EXIT_THREAD_DEBUG_INFO {
	DWORD dwExitCode;
} EXIT_THREAD_DEBUG_INFO;
typedef struct _LOAD_DLL_DEBUG_INFO {
	HANDLE hFile;
	LPVOID lpBaseOfDll;
	DWORD dwDebugInfoFileOffset;
	DWORD nDebugInfoSize;
	LPVOID lpImageName;
	WORD fUnicode;
} LOAD_DLL_DEBUG_INFO;
typedef struct _UNLOAD_DLL_DEBUG_INFO {
	LPVOID lpBaseOfDll;
} UNLOAD_DLL_DEBUG_INFO;
typedef struct _OUTPUT_DEBUG_STRING_INFO {
	LPSTR lpDebugStringData;
	WORD fUnicode;
	WORD nDebugStringLength;
} OUTPUT_DEBUG_STRING_INFO;
typedef struct _RIP_INFO {
	DWORD dwError;
	DWORD dwType;
} RIP_INFO;
typedef struct _DEBUG_EVENT {
	DWORD dwDebugEventCode;
	DWORD dwProcessId;
	DWORD dwThreadId;
	union {
		EXCEPTION_DEBUG_INFO Exception;
		CREATE_THREAD_DEBUG_INFO CreateThread;
		CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
		EXIT_THREAD_DEBUG_INFO ExitThread;
		EXIT_PROCESS_DEBUG_INFO ExitProcess;
		LOAD_DLL_DEBUG_INFO LoadDll;
		UNLOAD_DLL_DEBUG_INFO UnloadDll;
		OUTPUT_DEBUG_STRING_INFO DebugString;
		RIP_INFO RipInfo;
	} u;
} DEBUG_EVENT,*LPDEBUG_EVENT;
typedef struct tagDEBUGHOOKINFO {
	DWORD idThread;
	DWORD idThreadInstaller;
	LPARAM lParam;
	WPARAM wParam;
	int code;
} DEBUGHOOKINFO;
#ifndef _EXCEPTION_POINTERS_DEFINED_
#define _EXCEPTION_POINTERS_DEFINED_
typedef struct _EXCEPTION_POINTERS {
	PEXCEPTION_RECORD ExceptionRecord;
	PCONTEXT ContextRecord;
} EXCEPTION_POINTERS,*PEXCEPTION_POINTERS,*LPEXCEPTION_POINTERS;
#endif
typedef LONG( * PTOP_LEVEL_EXCEPTION_FILTER) (struct _EXCEPTION_POINTERS * ExceptionInfo);
typedef PTOP_LEVEL_EXCEPTION_FILTER LPTOP_LEVEL_EXCEPTION_FILTER;
typedef struct tagDELETEITEMSTRUCT {
	UINT CtlType;
	UINT CtlID;
	UINT itemID;
	HWND hwndItem;
	UINT itemData;
} DELETEITEMSTRUCT,*LPDELETEITEMSTRUCT,*PDELETEITEMSTRUCT;
typedef struct _DEV_BROADCAST_HDR {
	ULONG dbch_size;
	ULONG dbch_devicetype;
	ULONG dbch_reserved;
} DEV_BROADCAST_HDR;
typedef DEV_BROADCAST_HDR *PDEV_BROADCAST_HDR;
typedef struct _DEV_BROADCAST_OEM {
	ULONG dbco_size;
	ULONG dbco_devicetype;
	ULONG dbco_reserved;
	ULONG dbco_identifier;
	ULONG dbco_suppfunc;
} DEV_BROADCAST_OEM;
typedef DEV_BROADCAST_OEM *PDEV_BROADCAST_OEM;
typedef struct _DEV_BROADCAST_PORT {
	ULONG dbcp_size;
	ULONG dbcp_devicetype;
	ULONG dbcp_reserved;
	char dbcp_name[1];
} DEV_BROADCAST_PORT;
typedef DEV_BROADCAST_PORT *PDEV_BROADCAST_PORT;
struct _DEV_BROADCAST_USERDEFINED {
	struct _DEV_BROADCAST_HDR dbud_dbh;
	char dbud_szName[1];
	BYTE dbud_rgbUserDefined[1];
};
typedef struct _DEV_BROADCAST_VOLUME {
	ULONG dbcv_size;
	ULONG dbcv_devicetype;
	ULONG dbcv_reserved;
	ULONG dbcv_unitmask;
	USHORT dbcv_flags;
} DEV_BROADCAST_VOLUME;
typedef DEV_BROADCAST_VOLUME *PDEV_BROADCAST_VOLUME;
typedef struct _devicemodeA {
	BYTE dmDeviceName[CCHDEVICENAME];
	WORD dmSpecVersion;
	WORD dmDriverVersion;
	WORD dmSize;
	WORD dmDriverExtra;
	DWORD dmFields;
	union {
	struct { short dmOrientation; short dmPaperSize; short dmPaperLength;
		short dmPaperWidth; };
	POINTL dmPosition;
	};
	short dmScale;
	short dmCopies;
	short dmDefaultSource;
	short dmPrintQuality;
	short dmColor;
	short dmDuplex;
	short dmYResolution;
	short dmTTOption;
	short dmCollate;
	BYTE dmFormName[CCHFORMNAME];
	WORD dmLogPixels;
	DWORD dmBitsPerPel;
	DWORD dmPelsWidth;
	DWORD dmPelsHeight;
	DWORD dmDisplayFlags;
	DWORD dmDisplayFrequency;
#if(WINVER >= 0x0400)
	DWORD dmICMMethod;
	DWORD dmICMIntent;
	DWORD dmMediaType;
	DWORD dmDitherType;
	DWORD dmReserved1;
	DWORD dmReserved2;
#if (WINVER >= 0x0500)
	DWORD dmPanningWidth;
	DWORD dmPanningHeight;
#endif
#endif
} DEVMODEA,*PDEVMODEA,*NPDEVMODEA,*LPDEVMODEA;
typedef struct _devicemodeW {
	WCHAR dmDeviceName[CCHDEVICENAME];
	WORD dmSpecVersion;
	WORD dmDriverVersion;
	WORD dmSize;
	WORD dmDriverExtra;
	DWORD dmFields;
	union {
	struct {
	short dmOrientation; short dmPaperSize; short dmPaperLength; short dmPaperWidth; };
	POINTL dmPosition;
	};
	short dmScale;
	short dmCopies;
	short dmDefaultSource;
	short dmPrintQuality;
	short dmColor;
	short dmDuplex;
	short dmYResolution;
	short dmTTOption;
	short dmCollate;
	WCHAR dmFormName[CCHFORMNAME];
	WORD dmLogPixels;
	DWORD dmBitsPerPel;
	DWORD dmPelsWidth;
	DWORD dmPelsHeight;
	DWORD dmDisplayFlags;
	DWORD dmDisplayFrequency;
#if(WINVER >= 0x0400)
	DWORD dmICMMethod;
	DWORD dmICMIntent;
	DWORD dmMediaType;
	DWORD dmDitherType;
	DWORD dmReserved1;
	DWORD dmReserved2;
#if (WINVER >= 0x0500)
	DWORD dmPanningWidth;
	DWORD dmPanningHeight;
#endif
#endif
} DEVMODEW, *PDEVMODEW, *NPDEVMODEW, *LPDEVMODEW;
#ifdef UNICODE
typedef DEVMODEW DEVMODE;
typedef PDEVMODEW PDEVMODE;
typedef NPDEVMODEW NPDEVMODE;
typedef LPDEVMODEW LPDEVMODE;
typedef CURRENCYFMTW CURRENCYFMT;
typedef LPCURRENCYFMTW LPCURRENCYFMT;
#else
typedef DEVMODEA DEVMODE;
typedef PDEVMODEA PDEVMODE;
typedef NPDEVMODEA NPDEVMODE;
typedef LPDEVMODEA LPDEVMODE;
typedef CURRENCYFMTA CURRENCYFMT;
typedef LPCURRENCYFMTA LPCURRENCYFMT;
#endif
typedef struct tagDEVNAMES {
	WORD wDriverOffset;
	WORD wDeviceOffset;
	WORD wOutputOffset;
	WORD wDefault;
} DEVNAMES,*LPDEVNAMES;
typedef struct tagDIBSECTION {
	BITMAP dsBm;
	BITMAPINFOHEADER dsBmih;
	DWORD dsBitfields[3];
	HANDLE dshSection;
	DWORD dsOffset;
} DIBSECTION,*LPDIBSECTION,*PDIBSECTION;
typedef struct {
	DWORD style;
	DWORD dwExtendedStyle;
	short x;
	short y;
	short cx;
	short cy;
	WORD id;
} DLGITEMTEMPLATE,*LPDLGITEMTEMPLATE;
typedef struct {
	DWORD style;
	DWORD dwExtendedStyle;
	WORD cdit;
	short x;
	short y;
	short cx;
	short cy;
} DLGTEMPLATE,*LPDLGTEMPLATE;
typedef const DLGTEMPLATE *LPCDLGTEMPLATE;
typedef struct {
	int cbSize;
	LPCTSTR lpszDocName;
	LPCTSTR lpszOutput;
	LPCTSTR lpszDatatype;
	DWORD fwType;
} DOCINFO;
typedef struct {
	UINT uNotification;
	HWND hWnd;
	POINT ptCursor;
} DRAGLISTINFO,*LPDRAGLISTINFO;
typedef struct tagDRAWITEMSTRUCT {
	UINT CtlType;
	UINT CtlID;
	UINT itemID;
	UINT itemAction;
	UINT itemState;
	HWND hwndItem;
	HDC hDC;
	RECT rcItem;
	DWORD itemData;
} DRAWITEMSTRUCT,*LPDRAWITEMSTRUCT,*PDRAWITEMSTRUCT;
typedef struct {
	UINT cbSize;
	int iTabLength;
	int iLeftMargin;
	int iRightMargin;
	UINT uiLengthDrawn;
} DRAWTEXTPARAMS,*LPDRAWTEXTPARAMS;
typedef struct tagEMR {
	DWORD iType;
	DWORD nSize;
} EMR,*PEMR;
typedef struct tagEMRANGLEARC {
	EMR emr;
	POINTL ptlCenter;
	DWORD nRadius;
	FLOAT eStartAngle;
	FLOAT eSweepAngle;
} EMRANGLEARC,*PEMRANGLEARC;
typedef struct tagEMRARC {
	EMR emr;
	RECTL rclBox;
	POINTL ptlStart;
	POINTL ptlEnd;
} EMRARC,*PEMRARC,
EMRARCTO,*PEMRARCTO,
EMRCHORD,*PEMRCHORD,
EMRPIE,*PEMRPIE;
typedef struct _XFORM {
	FLOAT eM11;
	FLOAT eM12;
	FLOAT eM21;
	FLOAT eM22;
	FLOAT eDx;
	FLOAT eDy;
} XFORM,*PXFORM,*LPXFORM;
typedef struct tagEMRBITBLT {
	EMR emr;
	RECTL rclBounds;
	LONG xDest;
	LONG yDest;
	LONG cxDest;
	LONG cyDest;
	DWORD dwRop;
	LONG xSrc;
	LONG ySrc;
	XFORM xformSrc;
	COLORREF crBkColorSrc;
	DWORD iUsageSrc;
	DWORD offBmiSrc;
	DWORD offBitsSrc;
	DWORD cbBitsSrc;
} EMRBITBLT,*PEMRBITBLT;
typedef struct tagLOGBRUSH {
	UINT lbStyle;
	COLORREF lbColor;
	LONG lbHatch;
} LOGBRUSH,*LPLOGBRUSH;
typedef struct tagLOGBRUSH32 {
	UINT	lbStyle;
	COLORREF	lbColor;
	ULONG	lbHatch;
} LOGBRUSH32, *PLOGBRUSH32, *NPLOGBRUSH32, *LPLOGBRUSH32;
typedef struct tagEMRCREATEBRUSHINDIRECT {
	EMR emr;
	DWORD ihBrush;
	LOGBRUSH lb;
} EMRCREATEBRUSHINDIRECT,*PEMRCREATEBRUSHINDIRECT;
typedef LONG LCSCSTYPE;
typedef LONG LCSGAMUTMATCH;
typedef struct tagLOGCOLORSPACE {
	DWORD lcsSignature;
	DWORD lcsVersion;
	DWORD lcsSize;
	LCSCSTYPE lcsCSType;
	LCSGAMUTMATCH lcsIntent;
	CIEXYZTRIPLE lcsEndpoints;
	DWORD lcsGammaRed;
	DWORD lcsGammaGreen;
	DWORD lcsGammaBlue;
	TCHAR lcsFilename[MAX_PATH];
} LOGCOLORSPACE,*LPLOGCOLORSPACE;
typedef struct tagEMRCREATECOLORSPACE {
	EMR emr;
	DWORD ihCS;
	LOGCOLORSPACE lcs;
} EMRCREATECOLORSPACE,*PEMRCREATECOLORSPACE;
typedef struct tagEMRCREATEDIBPATTERNBRUSHPT {
	EMR emr;
	DWORD ihBrush;
	DWORD iUsage;
	DWORD offBmi;
	DWORD cbBmi;
	DWORD offBits;
	DWORD cbBits;
} EMRCREATEDIBPATTERNBRUSHPT,
PEMRCREATEDIBPATTERNBRUSHPT;
typedef struct tagEMRCREATEMONOBRUSH {
	EMR emr;
	DWORD ihBrush;
	DWORD iUsage;
	DWORD offBmi;
	DWORD cbBmi;
	DWORD offBits;
	DWORD cbBits;
} EMRCREATEMONOBRUSH,*PEMRCREATEMONOBRUSH;
typedef struct tagPALETTEENTRY {
	BYTE peRed;
	BYTE peGreen;
	BYTE peBlue;
	BYTE peFlags;
} PALETTEENTRY,*LPPALETTEENTRY,*PPALETTEENTRY;
typedef struct tagLOGPALETTE {
	WORD palVersion;
	WORD palNumEntries;
	PALETTEENTRY palPalEntry[1];
} LOGPALETTE,*PLOGPALETTE;
typedef LOGPALETTE *LPLOGPALETTE;
typedef struct tagEMRCREATEPALETTE {
	EMR emr;
	DWORD ihPal;
	LOGPALETTE lgpl;
} EMRCREATEPALETTE,*PEMRCREATEPALETTE;
typedef struct tagLOGPEN {
	UINT lopnStyle;
	POINT lopnWidth;
	COLORREF lopnColor;
} LOGPEN,*LPLOGPEN;
typedef struct tagEMRCREATEPEN {
	EMR emr;
	DWORD ihPen;
	LOGPEN lopn;
} EMRCREATEPEN,*PEMRCREATEPEN;
typedef struct tagEMRELLIPSE {
	EMR emr;
	RECTL rclBox;
} EMRELLIPSE,*PEMRELLIPSE,
EMRRECTANGLE,*PEMRRECTANGLE;
typedef struct tagEMREOF {
	EMR emr;
	DWORD nPalEntries;
	DWORD offPalEntries;
	DWORD nSizeLast;
} EMREOF,*PEMREOF;
typedef struct tagEMREXCLUDECLIPRECT {
	EMR emr;
	RECTL rclClip;
} EMREXCLUDECLIPRECT,*PEMREXCLUDECLIPRECT,
EMRINTERSECTCLIPRECT,*PEMRINTERSECTCLIPRECT;
typedef struct tagPANOSE {
	BYTE bFamilyType;
	BYTE bSerifStyle;
	BYTE bWeight;
	BYTE bProportion;
	BYTE bContrast;
	BYTE bStrokeVariation;
	BYTE bArmStyle;
	BYTE bLetterform;
	BYTE bMidline;
	BYTE bXHeight;
} PANOSE,*LPPANOSE;
typedef struct tagEXTLOGFONT {
	LOGFONT elfLogFont;
	BCHAR elfFullName[LF_FULLFACESIZE];
	BCHAR elfStyle[LF_FACESIZE];
	DWORD elfVersion;
	DWORD elfStyleSize;
	DWORD elfMatch;
	DWORD elfReserved;
	BYTE elfVendorId[ELF_VENDOR_SIZE];
	DWORD elfCulture;
	PANOSE elfPanose;
} EXTLOGFONT,*LPEXTLOGFONT;
typedef struct tagEMREXTCREATEFONTINDIRECTW {
	EMR emr;
	DWORD ihFont;
	EXTLOGFONT elfw;
} EMREXTCREATEFONTINDIRECTW, *PEMREXTCREATEFONTINDIRECTW;
typedef struct tagEXTLOGPEN {
	UINT elpPenStyle;
	UINT elpWidth;
	UINT elpBrushStyle;
	COLORREF elpColor;
	LONG elpHatch;
	DWORD elpNumEntries;
	DWORD elpStyleEntry[1];
} EXTLOGPEN,*LPEXTLOGPEN,*NPEXTLOGPEN;
typedef struct tagEMREXTCREATEPEN {
	EMR emr;
	DWORD ihPen;
	DWORD offBmi;
	DWORD cbBmi;
	DWORD offBits;
	DWORD cbBits;
	EXTLOGPEN elp;
} EMREXTCREATEPEN,*PEMREXTCREATEPEN;
typedef struct tagEMREXTFLOODFILL {
	EMR emr;
	POINTL ptlStart;
	COLORREF crColor;
	DWORD iMode;
} EMREXTFLOODFILL,*PEMREXTFLOODFILL;
typedef struct tagEMREXTSELECTCLIPRGN {
	EMR emr;
	DWORD cbRgnData;
	DWORD iMode;
	BYTE RgnData[1];
} EMREXTSELECTCLIPRGN,*PEMREXTSELECTCLIPRGN;
typedef struct tagEMRTEXT {
	POINTL ptlReference;
	DWORD nChars;
	DWORD offString;
	DWORD fOptions;
	RECTL rcl;
	DWORD offDx;
} EMRTEXT,*PEMRTEXT;
typedef struct tagEMREXTTEXTOUTA {
	EMR emr;
	RECTL rclBounds;
	DWORD iGraphicsMode;
	FLOAT exScale;
	FLOAT eyScale;
	EMRTEXT emrtext;
} EMREXTTEXTOUTA,*PEMREXTTEXTOUTA,
EMREXTTEXTOUTW,*PEMREXTTEXTOUTW;
typedef struct tagEMRFILLPATH {
	EMR emr;
	RECTL rclBounds;
} EMRFILLPATH,*PEMRFILLPATH,
EMRSTROKEANDFILLPATH,*PEMRSTROKEANDFILLPATH,
EMRSTROKEPATH,*PEMRSTROKEPATH;
typedef struct tagEMRFILLRGN {
	EMR emr;
	RECTL rclBounds;
	DWORD cbRgnData;
	DWORD ihBrush;
	BYTE RgnData[1];
} EMRFILLRGN,*PEMRFILLRGN;
typedef struct tagEMRFORMAT {
	DWORD dSignature;
	DWORD nVersion;
	DWORD cbData;
	DWORD offData;
} EMRFORMAT;
typedef struct tagSIZE {
	LONG cx;
	LONG cy;
} SIZE,*PSIZE,*LPSIZE,SIZEL,*PSIZEL,*LPSIZEL;
typedef struct tagEMRFRAMERGN {
	EMR emr;
	RECTL rclBounds;
	DWORD cbRgnData;
	DWORD ihBrush;
	SIZEL szlStroke;
	BYTE RgnData[1];
} EMRFRAMERGN,*PEMRFRAMERGN;
typedef struct tagEMRGDICOMMENT {
	EMR emr;
	DWORD cbData;
	BYTE Data[1];
} EMRGDICOMMENT,*PEMRGDICOMMENT;
typedef struct tagEMRINVERTRGN {
	EMR emr;
	RECTL rclBounds;
	DWORD cbRgnData;
	BYTE RgnData[1];
} EMRINVERTRGN,*PEMRINVERTRGN,
EMRPAINTRGN,*PEMRPAINTRGN;
typedef struct tagEMRLINETO {
	EMR emr;
	POINTL ptl;
} EMRLINETO,*PEMRLINETO,
EMRMOVETOEX,*PEMRMOVETOEX;
typedef struct tagEMRMASKBLT {
	EMR emr;
	RECTL rclBounds;
	LONG xDest;
	LONG yDest;
	LONG cxDest;
	LONG cyDest;
	DWORD dwRop;
	LONG xSrc;
	LONG ySrc;
	XFORM xformSrc;
	COLORREF crBkColorSrc;
	DWORD iUsageSrc;
	DWORD offBmiSrc;
	DWORD cbBmiSrc;
	DWORD offBitsSrc;
	DWORD cbBitsSrc;
	LONG xMask;
	LONG yMask;
	DWORD iUsageMask;
	DWORD offBmiMask;
	DWORD cbBmiMask;
	DWORD offBitsMask;
	DWORD cbBitsMask;
} EMRMASKBLT,*PEMRMASKBLT;
typedef struct tagEMRMODIFYWORLDTRANSFORM {
	EMR emr;
	XFORM xform;
	DWORD iMode;
} EMRMODIFYWORLDTRANSFORM,
PEMRMODIFYWORLDTRANSFORM;
typedef struct tagEMROFFSETCLIPRGN {
	EMR emr;
	POINTL ptlOffset;
} EMROFFSETCLIPRGN,*PEMROFFSETCLIPRGN;
typedef struct tagEMRPLGBLT {
	EMR emr;
	RECTL rclBounds;
	POINTL aptlDest[3];
	LONG xSrc;
	LONG ySrc;
	LONG cxSrc;
	LONG cySrc;
	XFORM xformSrc;
	COLORREF crBkColorSrc;
	DWORD iUsageSrc;
	DWORD offBmiSrc;
	DWORD cbBmiSrc;
	DWORD offBitsSrc;
	DWORD cbBitsSrc;
	LONG xMask;
	LONG yMask;
	DWORD iUsageMask;
	DWORD offBmiMask;
	DWORD cbBmiMask;
	DWORD offBitsMask;
	DWORD cbBitsMask;
} EMRPLGBLT,*PEMRPLGBLT;
typedef struct tagEMRPOLYDRAW {
	EMR emr;
	RECTL rclBounds;
	DWORD cptl;
	POINTL aptl[1];
	BYTE abTypes[1];
} EMRPOLYDRAW,*PEMRPOLYDRAW;
typedef struct tagEMRPOLYDRAW16 {
	EMR emr;
	RECTL rclBounds;
	DWORD cpts;
	POINTS apts[1];
	BYTE abTypes[1];
} EMRPOLYDRAW16,*PEMRPOLYDRAW16;
typedef struct tagEMRPOLYLINE {
	EMR emr;
	RECTL rclBounds;
	DWORD cptl;
	POINTL aptl[1];
} EMRPOLYLINE,*PEMRPOLYLINE,
EMRPOLYBEZIER,*PEMRPOLYBEZIER,
EMRPOLYGON,*PEMRPOLYGON,
EMRPOLYBEZIERTO,*PEMRPOLYBEZIERTO,
EMRPOLYLINETO,*PEMRPOLYLINETO;
typedef struct tagEMRPOLYLINE16 {
	EMR emr;
	RECTL rclBounds;
	DWORD cpts;
	POINTL apts[1];
} EMRPOLYLINE16,*PEMRPOLYLINE16,
EMRPOLYBEZIER16,*PEMRPOLYBEZIER16,
EMRPOLYGON16,*PEMRPOLYGON16,
EMRPOLYBEZIERTO16,*PEMRPOLYBEZIERTO16,
EMRPOLYLINETO16,*PEMRPOLYLINETO16;
typedef struct tagEMRPOLYPOLYLINE {
	EMR emr;
	RECTL rclBounds;
	DWORD nPolys;
	DWORD cptl;
	DWORD aPolyCounts[1];
	POINTL aptl[1];
} EMRPOLYPOLYLINE,*PEMRPOLYPOLYLINE,
EMRPOLYPOLYGON,*PEMRPOLYPOLYGON;
typedef struct tagEMRPOLYPOLYLINE16 {
	EMR emr;
	RECTL rclBounds;
	DWORD nPolys;
	DWORD cpts;
	DWORD aPolyCounts[1];
	POINTS apts[1];
} EMRPOLYPOLYLINE16,*PEMRPOLYPOLYLINE16,
EMRPOLYPOLYGON16,*PEMRPOLYPOLYGON16;
typedef struct tagEMRPOLYTEXTOUTA {
	EMR emr;
	RECTL rclBounds;
	DWORD iGraphicsMode;
	FLOAT exScale;
	FLOAT eyScale;
	LONG cStrings;
	EMRTEXT aemrtext[1];
} EMRPOLYTEXTOUTA,*PEMRPOLYTEXTOUTA,
EMRPOLYTEXTOUTW,*PEMRPOLYTEXTOUTW;
typedef struct tagEMRRESIZEPALETTE {
	EMR emr;
	DWORD ihPal;
	DWORD cEntries;
} EMRRESIZEPALETTE,*PEMRRESIZEPALETTE;
typedef struct tagEMRRESTOREDC {
	EMR emr;
	LONG iRelative;
} EMRRESTOREDC,*PEMRRESTOREDC;
typedef struct tagEMRROUNDRECT {
	EMR emr;
	RECTL rclBox;
	SIZEL szlCorner;
} EMRROUNDRECT,*PEMRROUNDRECT;
typedef struct tagEMRSCALEVIEWPORTEXTEX {
	EMR emr;
	LONG xNum;
	LONG xDenom;
	LONG yNum;
	LONG yDenom;
} EMRSCALEVIEWPORTEXTEX,*PEMRSCALEVIEWPORTEXTEX,
EMRSCALEWINDOWEXTEX,*PEMRSCALEWINDOWEXTEX;
typedef struct tagEMRSELECTCOLORSPACE {
	EMR emr;
	DWORD ihCS;
} EMRSELECTCOLORSPACE,*PEMRSELECTCOLORSPACE,
EMRDELETECOLORSPACE,*PEMRDELETECOLORSPACE;
typedef struct tagEMRSELECTOBJECT {
	EMR emr;
	DWORD ihObject;
} EMRSELECTOBJECT,*PEMRSELECTOBJECT,
EMRDELETEOBJECT,*PEMRDELETEOBJECT;
typedef struct tagEMRSELECTPALETTE {
	EMR emr;
	DWORD ihPal;
} EMRSELECTPALETTE,*PEMRSELECTPALETTE;
typedef struct tagEMRSETARCDIRECTION {
	EMR emr;
	DWORD iArcDirection;
} EMRSETARCDIRECTION,*PEMRSETARCDIRECTION;
typedef struct tagEMRSETTEXTCOLOR {
	EMR emr;
	COLORREF crColor;
} EMRSETBKCOLOR,*PEMRSETBKCOLOR,
EMRSETTEXTCOLOR,*PEMRSETTEXTCOLOR;
typedef struct tagEMRSETCOLORADJUSTMENT {
	EMR emr;
	COLORADJUSTMENT ColorAdjustment;
} EMRSETCOLORADJUSTMENT,*PEMRSETCOLORADJUSTMENT;
typedef struct tagEMRSETDIBITSTODEVICE {
	EMR emr;
	RECTL rclBounds;
	LONG xDest;
	LONG yDest;
	LONG xSrc;
	LONG ySrc;
	LONG cxSrc;
	LONG cySrc;
	DWORD offBmiSrc;
	DWORD cbBmiSrc;
	DWORD offBitsSrc;
	DWORD cbBitsSrc;
	DWORD iUsageSrc;
	DWORD iStartScan;
	DWORD cScans;
} EMRSETDIBITSTODEVICE,*PEMRSETDIBITSTODEVICE;
typedef struct tagEMRSETMAPPERFLAGS {
	EMR emr;
	DWORD dwFlags;
} EMRSETMAPPERFLAGS,*PEMRSETMAPPERFLAGS;
typedef struct tagEMRSETMITERLIMIT {
	EMR emr;
	FLOAT eMiterLimit;
} EMRSETMITERLIMIT,*PEMRSETMITERLIMIT;
typedef struct tagEMRSETPALETTEENTRIES {
	EMR emr;
	DWORD ihPal;
	DWORD iStart;
	DWORD cEntries;
	PALETTEENTRY aPalEntries[1];
} EMRSETPALETTEENTRIES,*PEMRSETPALETTEENTRIES;
typedef struct tagEMRSETPIXELV {
	EMR emr;
	POINTL ptlPixel;
	COLORREF crColor;
} EMRSETPIXELV,*PEMRSETPIXELV;
typedef struct tagEMRSETVIEWPORTEXTEX {
	EMR emr;
	SIZEL szlExtent;
} EMRSETVIEWPORTEXTEX,*PEMRSETVIEWPORTEXTEX,
EMRSETWINDOWEXTEX,*PEMRSETWINDOWEXTEX;
typedef struct tagEMRSETVIEWPORTORGEX {
	EMR emr;
	POINTL ptlOrigin;
} EMRSETVIEWPORTORGEX,*PEMRSETVIEWPORTORGEX,
EMRSETWINDOWORGEX,*PEMRSETWINDOWORGEX,
EMRSETBRUSHORGEX,*PEMRSETBRUSHORGEX;
typedef struct tagEMRSETWORLDTRANSFORM {
	EMR emr;
	XFORM xform;
} EMRSETWORLDTRANSFORM,*PEMRSETWORLDTRANSFORM;
typedef struct tagEMRSTRETCHBLT {
	EMR emr;
	RECTL rclBounds;
	LONG xDest;
	LONG yDest;
	LONG cxDest;
	LONG cyDest;
	DWORD dwRop;
	LONG xSrc;
	LONG ySrc;
	XFORM xformSrc;
	COLORREF crBkColorSrc;
	DWORD iUsageSrc;
	DWORD offBmiSrc;
	DWORD cbBmiSrc;
	DWORD offBitsSrc;
	DWORD cbBitsSrc;
	LONG cxSrc;
	LONG cySrc;
} EMRSTRETCHBLT,*PEMRSTRETCHBLT;
typedef struct tagEMRSTRETCHDIBITS {
	EMR emr;
	RECTL rclBounds;
	LONG xDest;
	LONG yDest;
	LONG xSrc;
	LONG ySrc;
	LONG cxSrc;
	LONG cySrc;
	DWORD offBmiSrc;
	DWORD cbBmiSrc;
	DWORD offBitsSrc;
	DWORD cbBitsSrc;
	DWORD iUsageSrc;
	DWORD dwRop;
	LONG cxDest;
	LONG cyDest;
} EMRSTRETCHDIBITS,*PEMRSTRETCHDIBITS;
typedef struct tagABORTPATH {
	EMR emr;
} EMRABORTPATH,*PEMRABORTPATH,
EMRBEGINPATH,*PEMRBEGINPATH,
EMRENDPATH,*PEMRENDPATH,
EMRCLOSEFIGURE,*PEMRCLOSEFIGURE,
EMRFLATTENPATH,*PEMRFLATTENPATH,
EMRWIDENPATH,*PEMRWIDENPATH,
EMRSETMETARGN,*PEMRSETMETARGN,
EMRSAVEDC,*PEMRSAVEDC,
EMRREALIZEPALETTE,*PEMRREALIZEPALETTE;
typedef struct tagEMRSELECTCLIPPATH {
	EMR emr;
	DWORD iMode;
} EMRSELECTCLIPPATH,*PEMRSELECTCLIPPATH,
EMRSETBKMODE,*PEMRSETBKMODE,
EMRSETMAPMODE,*PEMRSETMAPMODE,
EMRSETPOLYFILLMODE,*PEMRSETPOLYFILLMODE,
EMRSETROP2,*PEMRSETROP2,
EMRSETSTRETCHBLTMODE,*PEMRSETSTRETCHBLTMODE,
EMRSETTEXTALIGN,*PEMRSETTEXTALIGN,
EMRENABLEICM,*PEMRENABLEICM;
typedef struct tagNMHDR {
	HWND hwndFrom;
	UINT idFrom;
	UINT code;
} NMHDR;
typedef struct tagNMIPADDRESS { NMHDR hdr; int iField; int iValue; } NMIPADDRESS, *LPNMIPADDRESS;
typedef NMHDR *LPNMHDR;
typedef struct tagENHMETAHEADER {
	DWORD iType;
	DWORD nSize;
	RECTL rclBounds;
	RECTL rclFrame;
	DWORD dSignature;
	DWORD nVersion;
	DWORD nBytes;
	DWORD nRecords;
	WORD nHandles;
	WORD sReserved;
	DWORD nDescription;
	DWORD offDescription;
	DWORD nPalEntries;
	SIZEL szlDevice;
	SIZEL szlMillimeters;
} ENHMETAHEADER,*LPENHMETAHEADER;
typedef struct tagENHMETARECORD {
	DWORD iType;
	DWORD nSize;
	DWORD dParm[1];
} ENHMETARECORD,*LPENHMETARECORD;
typedef struct tagENUMLOGFONT {
	LOGFONT elfLogFont;
	BCHAR elfFullName[LF_FULLFACESIZE];
	BCHAR elfStyle[LF_FACESIZE];
} ENUMLOGFONT;
typedef struct tagENUMLOGFONTEX {
	LOGFONT elfLogFont;
	BCHAR elfFullName[LF_FULLFACESIZE];
	BCHAR elfStyle[LF_FACESIZE];
	BCHAR elfScript[LF_FACESIZE];
} ENUMLOGFONTEX;
typedef struct _EVENTLOGRECORD {
	DWORD Length;
	DWORD Reserved;
	DWORD RecordNumber;
	DWORD TimeGenerated;
	DWORD TimeWritten;
	DWORD EventID;
	WORD EventType;
	WORD NumStrings;
	WORD EventCategory;
	WORD ReservedFlags;
	DWORD ClosingRecordNumber;
	DWORD StringOffset;
	DWORD UserSidLength;
	DWORD UserSidOffset;
	DWORD DataLength;
	DWORD DataOffset;
} EVENTLOGRECORD;
typedef struct tagEVENTMSG {
	UINT message;
	UINT paramL;
	UINT paramH;
	DWORD time;
	HWND hwnd;
} EVENTMSG;
typedef PVOID PACCESS_TOKEN;
typedef ACCESS_MASK *PACCESS_MASK;
typedef struct _EXT_BUTTON {
	WORD idCommand;
	WORD idsHelp;
	WORD fsStyle;
} EXT_BUTTON,*LPEXT_BUTTON;
typedef struct tagFILTERKEYS {
	UINT cbSize;
	DWORD dwFlags;
	DWORD iWaitMSec;
	DWORD iDelayMSec;
	DWORD iRepeatMSec;
	DWORD iBounceMSec;
} FILTERKEYS;
typedef struct _FIND_NAME_BUFFER {
	UCHAR length;
	UCHAR access_control;
	UCHAR frame_control;
	UCHAR destination_addr[6];
	UCHAR source_addr[6];
	UCHAR routing_info[18];
} FIND_NAME_BUFFER;
typedef struct _FIND_NAME_HEADER {
	WORD node_count;
	UCHAR reserved;
	UCHAR unique_group;
} FIND_NAME_HEADER;
typedef struct {
	DWORD lStructSize;
	HWND hwndOwner;
	HINSTANCE hInstance;
	DWORD Flags;
	LPTSTR lpstrFindWhat;
	LPTSTR lpstrReplaceWith;
	WORD wFindWhatLen;
	WORD wReplaceWithLen;
	LPARAM lCustData;
	LPFRHOOKPROC lpfnHook;
	LPCTSTR lpTemplateName;
} FINDREPLACE,*LPFINDREPLACE;
#ifndef __FINDTEXT_DEFINED
#define __FINDTEXT_DEFINED
typedef struct _findtext {
	CHARRANGE chrg;
	LPCSTR lpstrText;
} FINDTEXT;
#endif
typedef struct _findtextex {
	CHARRANGE chrg;
	LPSTR lpstrText;
	CHARRANGE chrgText;
} FINDTEXTEX;
typedef struct _FMS_GETDRIVEINFO {
	DWORD dwTotalSpace;
	DWORD dwFreeSpace;
	TCHAR szPath[260];
	TCHAR szVolume[14];
	TCHAR szShare[128];
} FMS_GETDRIVEINFO;
typedef struct _FMS_GETFILESEL {
	FILETIME ftTime;
	DWORD dwSize;
	BYTE bAttr;
	TCHAR szName[260];
} FMS_GETFILESEL;
typedef struct _FMS_LOAD {
	DWORD dwSize;
	TCHAR szMenuName[MENU_TEXT_LEN];
	HMENU hMenu;
	UINT wMenuDelta;
} FMS_LOAD;
typedef struct _FMS_TOOLBARLOAD {
	DWORD dwSize;
	LPEXT_BUTTON lpButtons;
	WORD cButtons;
	WORD cBitmaps;
	WORD idBitmap;
	HBITMAP hBitmap;
} FMS_TOOLBARLOAD;
typedef struct _FOCUS_EVENT_RECORD {
	BOOL bSetFocus;
} FOCUS_EVENT_RECORD;
typedef struct tagGCP_RESULTS {
	DWORD lStructSize;
	LPTSTR lpOutString;
	UINT *lpOrder;
	INT *lpDx;
	INT *lpCaretPos;
	LPTSTR lpClass;
	UINT *lpGlyphs;
	UINT nGlyphs;
	UINT nMaxFit;
} GCP_RESULTS,*LPGCP_RESULTS;
typedef struct _GENERIC_MAPPING {
	ACCESS_MASK GenericRead;
	ACCESS_MASK GenericWrite;
	ACCESS_MASK GenericExecute;
	ACCESS_MASK GenericAll;
} GENERIC_MAPPING,*PGENERIC_MAPPING;
typedef struct _GLYPHMETRICS {
	UINT gmBlackBoxX;
	UINT gmBlackBoxY;
	POINT gmptGlyphOrigin;
	short gmCellIncX;
	short gmCellIncY;
} GLYPHMETRICS,*LPGLYPHMETRICS;
typedef struct tagHANDLETABLE {
	HGDIOBJ objectHandle[1];
} HANDLETABLE,*LPHANDLETABLE;
typedef struct _HD_HITTESTINFO {
	POINT pt;
	UINT flags;
	int iItem;
} HD_HITTESTINFO,*LPHDHITTESTINFO;
#define HDHITTESTINFO	HD_HITTESTINFO
typedef struct _HD_ITEM {
	UINT mask;
	int cxy;
	LPTSTR pszText;
	HBITMAP hbm;
	int cchTextMax;
	int fmt;
	LPARAM lParam;
} HD_ITEM;
typedef struct _WINDOWPOS {
	HWND hwnd;
	HWND hwndInsertAfter;
	int x;
	int y;
	int cx;
	int cy;
	UINT flags;
} WINDOWPOS,*PWINDOWPOS,*LPWINDOWPOS;
typedef struct _HD_LAYOUT {
	RECT *prc;
	WINDOWPOS *pwpos;
} HD_LAYOUT,*LPHDLAYOUT;
#define HDLAYOUT HD_LAYOUT
typedef struct _HD_NOTIFY {
	NMHDR hdr;
	int iItem;
	int iButton;
	HD_ITEM *pitem;
} HD_NOTIFY;
typedef struct _HD_ITEMA {
	UINT	mask;
	int	cxy;
	LPSTR	pszText;
	HBITMAP hbm;
	int	cchTextMax;
	int	fmt;
	LPARAM lParam;
	int	iImage;
	int	iOrder;
	UINT	type;
	LPVOID	pvFilter;
} HDITEMA, *LPHDITEMA;
#define HDITEMA_V1_SIZE CCSIZEOF_STRUCT(HDITEMA, lParam)
#define HDITEMW_V1_SIZE CCSIZEOF_STRUCT(HDITEMW, lParam)
typedef struct _HD_ITEMW {
	UINT	mask;
	int	cxy;
	LPWSTR	pszText;
	HBITMAP hbm;
	int	cchTextMax;
	int	fmt;
	LPARAM lParam;
	int	iImage;
	int	iOrder;
	UINT	type;
	LPVOID pvFilter;
} HDITEMW, *LPHDITEMW;
#ifdef UNICODE
#define HDITEM HDITEMW
#define LPHDITEM LPHDITEMW
#define HDITEM_V1_SIZE HDITEMW_V1_SIZE
#else
#define HDITEM HDITEMA
#define LPHDITEM LPHDITEMA
#define HDITEM_V1_SIZE HDITEMA_V1_SIZE
#endif
typedef struct tagNMHEADERA {
	NMHDR	hdr;
	int	iItem;
	int	iButton;
	HDITEMA *pitem;
} NMHEADERA,* LPNMHEADERA;
typedef struct tagNMHEADERW {
	NMHDR	hdr;
	int	iItem;
	int	iButton;
	HDITEMW *pitem;
} NMHEADERW,*LPNMHEADERW;
#ifdef UNICODE
#define NMHEADER	NMHEADERW
#define LPNMHEADER	LPNMHEADERW
#else
#define NMHEADER	NMHEADERA
#define LPNMHEADER	LPNMHEADERA
#endif
typedef struct tagHELPINFO {
	UINT cbSize;
	int iContextType;
	int iCtrlId;
	HANDLE hItemHandle;
	DWORD dwContextId;
	POINT MousePos;
} HELPINFO,*LPHELPINFO;
typedef struct {
	int wStructSize;
	int x;
	int y;
	int dx;
	int dy;
	int wMax;
	TCHAR rgchMember[2];
} HELPWININFO;
typedef struct tagHIGHCONTRAST {
	UINT cbSize;
	DWORD dwFlags;
	LPTSTR lpszDefaultScheme;
} HIGHCONTRAST,*LPHIGHCONTRAST;
typedef struct tagHSZPAIR {
	HSZ hszSvc;
	HSZ hszTopic;
} HSZPAIR;
typedef struct _ICONINFO {
	BOOL fIcon;
	DWORD xHotspot;
	DWORD yHotspot;
	HBITMAP hbmMask;
	HBITMAP hbmColor;
} ICONINFO,*PICONINFO;
typedef struct tagICONMETRICS {
	UINT cbSize;
	int iHorzSpacing;
	int iVertSpacing;
	int iTitleWrap;
	LOGFONT lfFont;
} ICONMETRICS,*LPICONMETRICS;
typedef struct _IMAGEINFO {
	HBITMAP hbmImage;
	HBITMAP hbmMask;
	int Unused1;
	int Unused2;
	RECT rcImage;
} IMAGEINFO;
typedef struct _KEY_EVENT_RECORD {
	BOOL bKeyDown;
	WORD wRepeatCount;
	WORD wVirtualKeyCode;
	WORD wVirtualScanCode;
	union { WCHAR UnicodeChar; CHAR AsciiChar; } uChar;
	DWORD dwControlKeyState;
} KEY_EVENT_RECORD;
typedef struct _MOUSE_EVENT_RECORD {
	COORD dwMousePosition;
	DWORD dwButtonState;
	DWORD dwControlKeyState;
	DWORD dwEventFlags;
} MOUSE_EVENT_RECORD;
typedef struct _WINDOW_BUFFER_SIZE_RECORD {
	COORD dwSize;
} WINDOW_BUFFER_SIZE_RECORD;
typedef struct _MENU_EVENT_RECORD {
	UINT dwCommandId;
} MENU_EVENT_RECORD,*PMENU_EVENT_RECORD;
typedef struct _INPUT_RECORD {
	WORD EventType;
	WORD __alignmentDummy;
	union {
		KEY_EVENT_RECORD KeyEvent;
		MOUSE_EVENT_RECORD MouseEvent;
		WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
		MENU_EVENT_RECORD MenuEvent;
		FOCUS_EVENT_RECORD FocusEvent;
	} Event;
} INPUT_RECORD,*PINPUT_RECORD;
typedef struct _SYSTEMTIME {
	WORD wYear;
	WORD wMonth;
	WORD wDayOfWeek;
	WORD wDay;
	WORD wHour;
	WORD wMinute;
	WORD wSecond;
	WORD wMilliseconds;
} SYSTEMTIME,*LPSYSTEMTIME,*PSYSTEMTIME;
typedef struct _SID_IDENTIFIER_AUTHORITY {
	BYTE Value[6];
} SID_IDENTIFIER_AUTHORITY,*PSID_IDENTIFIER_AUTHORITY,
*LPSID_IDENTIFIER_AUTHORITY;
typedef struct _SID {
	BYTE Revision;
	BYTE SubAuthorityCount;
	SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
	DWORD SubAuthority[ANYSIZE_ARRAY];
} SID,*PSID;
#define SID_REVISION              (1)
#define SID_MAX_SUB_AUTHORITIES       (15)
#define SID_RECOMMENDED_SUB_AUTHORITIES (1)
#define SECURITY_MAX_SID_SIZE (sizeof(SID) - sizeof(DWORD) + (SID_MAX_SUB_AUTHORITIES * sizeof(DWORD)))
typedef WORD SECURITY_DESCRIPTOR_CONTROL,*PSECURITY_DESCRIPTOR_CONTROL;
typedef struct _SECURITY_DESCRIPTOR_RELATIVE {
	BYTE Revision;
	BYTE Sbz1;
	SECURITY_DESCRIPTOR_CONTROL Control;
	DWORD Owner;
	DWORD Group;
	DWORD Sacl;
	DWORD Dacl;
} SECURITY_DESCRIPTOR_RELATIVE, *PISECURITY_DESCRIPTOR_RELATIVE;
typedef struct _SECURITY_DESCRIPTOR {
	BYTE Revision;
	BYTE Sbz1;
	SECURITY_DESCRIPTOR_CONTROL Control;
	PSID Owner;
	PSID Group;
	PACL Sacl;
	PACL Dacl;
} SECURITY_DESCRIPTOR,*PSECURITY_DESCRIPTOR;
typedef struct tagKERNINGPAIR {
	WORD wFirst;
	WORD wSecond;
	int iKernAmount;
} KERNINGPAIR,*LPKERNINGPAIR;
typedef struct _LANA_ENUM {
	UCHAR length;
	UCHAR lana[MAX_LANA];
} LANA_ENUM;
typedef struct _LDT_ENTRY {
	WORD LimitLow;
	WORD BaseLow;
	union {
		struct {
			BYTE BaseMid;
			BYTE Flags1;
			BYTE Flags2;
			BYTE BaseHi;
		} Bytes;
		struct {
			unsigned BaseMid:8;
			unsigned Type:5;
			unsigned Dpl:2;
			unsigned Pres:1;
			unsigned LimitHi:4;
			unsigned Sys:1;
			unsigned Reserved_0:1;
			unsigned Default_Big:1;
			unsigned Granularity:1;
			unsigned BaseHi:8;
		} Bits;
	} HighWord;
} LDT_ENTRY,*PLDT_ENTRY,*LPLDT_ENTRY;
typedef struct tagLOCALESIGNATURE {
	DWORD lsUsb[4];
	DWORD lsCsbDefault[2];
	DWORD lsCsbSupported[2];
} LOCALESIGNATURE;
typedef long FXPT16DOT16,*LPFXPT16DOT16;
typedef LARGE_INTEGER LUID,*PLUID;
typedef struct _LUID_AND_ATTRIBUTES {
	LUID Luid;
	DWORD Attributes;
} LUID_AND_ATTRIBUTES,*PLUID_AND_ATTRIBUTES;
typedef LUID_AND_ATTRIBUTES LUID_AND_ATTRIBUTES_ARRAY[ANYSIZE_ARRAY];
typedef LUID_AND_ATTRIBUTES_ARRAY *PLUID_AND_ATTRIBUTES_ARRAY;
typedef struct _LV_COLUMN {
	UINT mask;
	int fmt;
	int cx;
	LPTSTR pszText;
	int cchTextMax;
	int iSubItem;
} LV_COLUMN;
typedef struct _LV_ITEM {
	UINT mask;
	int iItem;
	int iSubItem;
	UINT state;
	UINT stateMask;
	LPTSTR pszText;
	int cchTextMax;
	int iImage;
	LPARAM lParam;
} LV_ITEM;
typedef struct tagLV_DISPINFO {
	NMHDR hdr;
	LV_ITEM item;
} LV_DISPINFO;
typedef struct _LV_FINDINFO {
	UINT flags;
	LPCTSTR psz;
	LPARAM lParam;
	POINT pt;
	UINT vkDirection;
} LV_FINDINFO;
typedef struct _LV_HITTESTINFO {
	POINT pt;
	UINT flags;
	int iItem;
} LV_HITTESTINFO;
typedef struct tagLV_KEYDOWN {
	NMHDR hdr;
	WORD wVKey;
	UINT flags;
} LV_KEYDOWN;
typedef struct _MAT2 {
	FIXED eM11;
	FIXED eM12;
	FIXED eM21;
	FIXED eM22;
} MAT2;
typedef struct tagMDICREATESTRUCT {
	LPCTSTR szClass;
	LPCTSTR szTitle;
	HANDLE hOwner;
	int x;
	int y;
	int cx;
	int cy;
	DWORD style;
	LPARAM lParam;
} MDICREATESTRUCT;
typedef MDICREATESTRUCT *LPMDICREATESTRUCT;
typedef struct tagMEASUREITEMSTRUCT {
	UINT CtlType;
	UINT CtlID;
	UINT itemID;
	UINT itemWidth;
	UINT itemHeight;
	DWORD itemData;
} MEASUREITEMSTRUCT;
typedef MEASUREITEMSTRUCT *LPMEASUREITEMSTRUCT,*PMEASUREITEMSTRUCT;
typedef struct _MEMORY_BASIC_INFORMATION {
	PVOID BaseAddress;
	PVOID AllocationBase;
	DWORD AllocationProtect;
	DWORD RegionSize;
	DWORD State;
	DWORD Protect;
	DWORD Type;
} MEMORY_BASIC_INFORMATION;
typedef MEMORY_BASIC_INFORMATION *PMEMORY_BASIC_INFORMATION;
typedef struct _MEMORYSTATUS {
	DWORD dwLength;
	DWORD dwMemoryLoad;
	DWORD dwTotalPhys;
	DWORD dwAvailPhys;
	DWORD dwTotalPageFile;
	DWORD dwAvailPageFile;
	DWORD dwTotalVirtual;
	DWORD dwAvailVirtual;
} MEMORYSTATUS,*LPMEMORYSTATUS;
typedef struct _MEMORYSTATUSEX {
	DWORD dwLength;
	DWORD dwMemoryLoad;
	long long ullTotalPhys;
	long long ullAvailPhys;
	long long ullTotalPageFile;
	long long ullAvailPageFile;
	long long ullTotalVirtual;
	long long ullAvailVirtual;
	long long ullAvailExtendedVirtual;
} MEMORYSTATUSEX, *LPMEMORYSTATUSEX;
typedef struct {
	WORD wVersion;
	WORD wOffset;
	DWORD dwHelpId;
} MENUEX_TEMPLATE_HEADER;
typedef struct {
	DWORD dwType;
	DWORD dwState;
	UINT uId;
	BYTE bResInfo;
	WCHAR szText[1];
	DWORD dwHelpId;
} MENUEX_TEMPLATE_ITEM;
typedef struct tagMENUITEMINFO {
	UINT cbSize;
	UINT fMask;
	UINT fType;
	UINT fState;
	UINT wID;
	HMENU hSubMenu;
	HBITMAP hbmpChecked;
	HBITMAP hbmpUnchecked;
	DWORD dwItemData;
	LPTSTR dwTypeData;
	UINT cch;
} MENUITEMINFO,*LPMENUITEMINFO;
typedef MENUITEMINFO CONST *LPCMENUITEMINFO;
typedef struct {
	WORD mtOption;
	WORD mtID;
	WCHAR mtString[1];
} MENUITEMTEMPLATE;
typedef struct {
	WORD versionNumber;
	WORD offset;
} MENUITEMTEMPLATEHEADER;
typedef VOID MENUTEMPLATE,*LPMENUTEMPLATE;
typedef struct tagMETAFILEPICT {
	LONG mm;
	LONG xExt;
	LONG yExt;
	HMETAFILE hMF;
} METAFILEPICT,*LPMETAFILEPICT;
typedef struct tagMETAHEADER {
	WORD mtType;
	WORD mtHeaderSize;
	WORD mtVersion;
	DWORD mtSize;
	WORD mtNoObjects;
	DWORD mtMaxRecord;
	WORD mtNoParameters;
} METAHEADER,*LPMETAHEADER;
typedef struct tagMETARECORD {
	DWORD rdSize;
	WORD rdFunction;
	WORD rdParm[1];
} METARECORD,*LPMETARECORD;
typedef struct tagMINIMIZEDMETRICS {
	UINT cbSize;
	int iWidth;
	int iHorzGap;
	int iVertGap;
	int iArrange;
} MINIMIZEDMETRICS,*LPMINIMIZEDMETRICS;
typedef struct tagMINMAXINFO {
	POINT ptReserved;
	POINT ptMaxSize;
	POINT ptMaxPosition;
	POINT ptMinTrackSize;
	POINT ptMaxTrackSize;
} MINMAXINFO,*LPMINMAXINFO;
typedef struct modemdevcaps_tag {
	DWORD dwActualSize;
	DWORD dwRequiredSize;
	DWORD dwDevSpecificOffset;
	DWORD dwDevSpecificSize;
	DWORD dwModemProviderVersion;
	DWORD dwModemManufacturerOffset;
	DWORD dwModemManufacturerSize;
	DWORD dwModemModelOffset;
	DWORD dwModemModelSize;
	DWORD dwModemVersionOffset;
	DWORD dwModemVersionSize;
	DWORD dwDialOptions;
	DWORD dwCallSetupFailTimer;
	DWORD dwInactivityTimeout;
	DWORD dwSpeakerVolume;
	DWORD dwSpeakerMode;
	DWORD dwModemOptions;
	DWORD dwMaxDTERate;
	DWORD dwMaxDCERate;
	BYTE abVariablePortion[1];
} MODEMDEVCAPS,*PMODEMDEVCAPS,*LPMODEMDEVCAPS;
typedef struct modemsettings_tag {
	DWORD dwActualSize;
	DWORD dwRequiredSize;
	DWORD dwDevSpecificOffset;
	DWORD dwDevSpecificSize;
	DWORD dwCallSetupFailTimer;
	DWORD dwInactivityTimeout;
	DWORD dwSpeakerVolume;
	DWORD dwSpeakerMode;
	DWORD dwPreferredModemOptions;
	DWORD dwNegotiatedModemOptions;
	DWORD dwNegotiatedDCERate;
	BYTE abVariablePortion[1];
} MODEMSETTINGS,*PMODEMSETTINGS,*LPMODEMSETTINGS;
typedef struct tagMONCBSTRUCT {
	UINT cb;
	DWORD dwTime;
	HANDLE hTask;
	DWORD dwRet;
	UINT wType;
	UINT wFmt;
	HCONV hConv;
	HSZ hsz1;
	HSZ hsz2;
	HDDEDATA hData;
	DWORD dwData1;
	DWORD dwData2;
	CONVCONTEXT cc;
	DWORD cbData;
	DWORD Data[8];
} MONCBSTRUCT;
typedef struct tagMONCONVSTRUCT {
	UINT cb;
	BOOL fConnect;
	DWORD dwTime;
	HANDLE hTask;
	HSZ hszSvc;
	HSZ hszTopic;
	HCONV hConvClient;
	HCONV hConvServer;
} MONCONVSTRUCT;
typedef struct tagMONERRSTRUCT {
	UINT cb;
	UINT wLastError;
	DWORD dwTime;
	HANDLE hTask;
} MONERRSTRUCT;
typedef struct tagMONHSZSTRUCT {
	UINT cb;
	BOOL fsAction;
	DWORD dwTime;
	HSZ hsz;
	HANDLE hTask;
	TCHAR str[1];
} MONHSZSTRUCT;
typedef struct tagMONLINKSTRUCT {
	UINT cb;
	DWORD dwTime;
	HANDLE hTask;
	BOOL fEstablished;
	BOOL fNoData;
	HSZ hszSvc;
	HSZ hszTopic;
	HSZ hszItem;
	UINT wFmt;
	BOOL fServer;
	HCONV hConvServer;
	HCONV hConvClient;
} MONLINKSTRUCT;
typedef struct tagMONMSGSTRUCT {
	UINT cb;
	HWND hwndTo;
	DWORD dwTime;
	HANDLE hTask;
	UINT wMsg;
	WPARAM wParam;
	LPARAM lParam;
	DDEML_MSG_HOOK_DATA dmhd;
} MONMSGSTRUCT;
typedef struct tagMOUSEHOOKSTRUCT {
	POINT pt;
	HWND hwnd;
	UINT wHitTestCode;
	DWORD dwExtraInfo;
} MOUSEHOOKSTRUCT,*PMOUSEHOOKSTRUCT;
typedef struct tagMOUSEHOOKSTRUCTEX {
	POINT pt;
	HWND hwnd;
	UINT wHitTestCode;
	DWORD dwExtraInfo;
	DWORD mouseData;
} MOUSEHOOKSTRUCTEX, *LPMOUSEHOOKSTRUCTEX, *PMOUSEHOOKSTRUCTEX;
typedef struct _MOUSEKEYS {
	DWORD cbSize;
	DWORD dwFlags;
	DWORD iMaxSpeed;
	DWORD iTimeToMaxSpeed;
	DWORD iCtrlSpeed;
	DWORD dwReserved1;
	DWORD dwReserved2;
} MOUSEKEYS;
typedef struct tagMSG {
	HWND hwnd;
	UINT message;
	WPARAM wParam;
	LPARAM lParam;
	DWORD time;
	POINT pt;
} MSG,*LPMSG,*PMSG;
typedef void (CALLBACK * MSGBOXCALLBACK) (LPHELPINFO lpHelpInfo);
typedef struct {
	UINT cbSize;
	HWND hwndOwner;
	HINSTANCE hInstance;
	LPCTSTR lpszText;
	LPCTSTR lpszCaption;
	DWORD dwStyle;
	LPCTSTR lpszIcon;
	DWORD dwContextHelpId;
	MSGBOXCALLBACK lpfnMsgBoxCallback;
	DWORD dwLanguageId;
} MSGBOXPARAMS,*PMSGBOXPARAMS,*LPMSGBOXPARAMS;
typedef struct tagMULTIKEYHELP {
	DWORD mkSize;
	TCHAR mkKeylist;
	TCHAR szKeyphrase[1];
} MULTIKEYHELP;
typedef struct _NAME_BUFFER {
	UCHAR name[NCBNAMSZ];
	UCHAR name_num;
	UCHAR name_flags;
} NAME_BUFFER;
typedef struct _NCB {
	UCHAR ncb_command;
	UCHAR ncb_retcode;
	UCHAR ncb_lsn;
	UCHAR ncb_num;
	PUCHAR ncb_buffer;
	WORD ncb_length;
	UCHAR ncb_callname[NCBNAMSZ];
	UCHAR ncb_name[NCBNAMSZ];
	UCHAR ncb_rto;
	UCHAR ncb_sto;
	void (*ncb_post) (struct _NCB *);
	UCHAR ncb_lana_num;
	UCHAR ncb_cmd_cplt;
	UCHAR ncb_reserve[10];
	HANDLE ncb_event;
} NCB,*PNCB;
typedef struct _NCCALCSIZE_PARAMS {
	RECT rgrc[3];
	PWINDOWPOS lppos;
} NCCALCSIZE_PARAMS;
typedef struct _NDDESHAREINFO {
	LONG lRevision;
	LPTSTR lpszShareName;
	LONG lShareType;
	LPTSTR lpszAppTopicList;
	LONG fSharedFlag;
	LONG fService;
	LONG fStartAppFlag;
	LONG nCmdShow;
	LONG qModifyId[2];
	LONG cNumItems;
	LPTSTR lpszItemList;
} NDDESHAREINFO;
#ifndef _NETRESOURCE_DEFINED
#define _NETRESOURCE_DEFINED
typedef struct _NETRESOURCE {
	DWORD dwScope;
	DWORD dwType;
	DWORD dwDisplayType;
	DWORD dwUsage;
	LPTSTR lpLocalName;
	LPTSTR lpRemoteName;
	LPTSTR lpComment;
	LPTSTR lpProvider;
} NETRESOURCE,*LPNETRESOURCE;
#endif
#pragma pack(push,4)
typedef struct tagNEWTEXTMETRIC {
	LONG tmHeight;
	LONG tmAscent;
	LONG tmDescent;
	LONG tmInternalLeading;
	LONG tmExternalLeading;
	LONG tmAveCharWidth;
	LONG tmMaxCharWidth;
	LONG tmWeight;
	LONG tmOverhang;
	LONG tmDigitizedAspectX;
	LONG tmDigitizedAspectY;
	BCHAR tmFirstChar;
	BCHAR tmLastChar;
	BCHAR tmDefaultChar;
	BCHAR tmBreakChar;
	BYTE tmItalic;
	BYTE tmUnderlined;
	BYTE tmStruckOut;
	BYTE tmPitchAndFamily;
	BYTE tmCharSet;
	DWORD ntmFlags;
	UINT ntmSizeEM;
	UINT ntmCellHeight;
	UINT ntmAvgWidth;
} NEWTEXTMETRIC;
#pragma pack(pop)
typedef struct tagNEWTEXTMETRICEX {
	NEWTEXTMETRIC ntmentm;
	FONTSIGNATURE ntmeFontSignature;
} NEWTEXTMETRICEX;
typedef struct tagNM_LISTVIEW {
	NMHDR hdr;
	int iItem;
	int iSubItem;
	UINT uNewState;
	UINT uOldState;
	UINT uChanged;
	POINT ptAction;
	LPARAM lParam;
} NM_LISTVIEW,*LPNM_LISTVIEW;
typedef struct _TREEITEM *HTREEITEM;
typedef struct tagTVITEMA {
	UINT mask;
	HTREEITEM hItem;
	UINT state;
	UINT stateMask;
	LPSTR pszText;
	int cchTextMax;
	int iImage;
	int iSelectedImage;
	int cChildren;
	LPARAM lParam;
} TVITEMA, *LPTVITEMA;
typedef struct tagTVITEMW {
	UINT mask;
	HTREEITEM hItem;
	UINT state;
	UINT stateMask;
	LPWSTR pszText;
	int cchTextMax;
	int iImage;
	int iSelectedImage;
	int cChildren;
	LPARAM lParam;
} TVITEMW, *LPTVITEMW;
#define TV_ITEM	TVITEM
#define LPTV_ITEM	LPTVITEM
#ifdef UNICODE
#define TVITEM	TVITEMW
#define	LPTVITEM LPTVITEMW
#else
#define TVITEM	TVITEMA
#define	LPTVITEM LPTVITEMA
#endif
typedef struct tagTVITEMEXA {
	UINT	mask;
	HTREEITEM hItem;
	UINT	state;
	UINT	stateMask;
	LPSTR	pszText;
	int	cchTextMax;
	int	iImage;
	int	iSelectedImage;
	int	cChildren;
	LPARAM	lParam;
	int	iIntegral;
} TVITEMEXA, *LPTVITEMEXA;
typedef struct tagTVITEMEXW {
	UINT	mask;
	HTREEITEM hItem;
	UINT	state;
	UINT	stateMask;
	LPWSTR	pszText;
	int	cchTextMax;
	int	iImage;
	int	iSelectedImage;
	int	cChildren;
	LPARAM	lParam;
	int	iIntegral;
} TVITEMEXW,*LPTVITEMEXW;
typedef struct tagTVINSERTSTRUCTA {
	HTREEITEM hParent;
	HTREEITEM hInsertAfter;
	union {
		TVITEMEXA itemex;
		TVITEMA item;
	};
} TVINSERTSTRUCTA,*LPTVINSERTSTRUCTA;
typedef struct tagTVINSERTSTRUCTW {
	HTREEITEM hParent;
	HTREEITEM hInsertAfter;
	union {
		TVITEMEXW itemex;
		TVITEMW item;
	} ;
} TVINSERTSTRUCTW,*LPTVINSERTSTRUCTW;
typedef struct _NM_TREEVIEW {
	NMHDR hdr;
	UINT action;
	TV_ITEM itemOld;
	TV_ITEM itemNew;
	POINT ptDrag;
} NM_TREEVIEW;
typedef NM_TREEVIEW *LPNM_TREEVIEW;
typedef NM_TREEVIEW *LPNMTREEVIEW;
typedef struct _NM_UPDOWN {
	NMHDR hdr;
	int iPos;
	int iDelta;
} NMUPDOWN,*LPNMUPDOWN;
typedef struct tagNONCLIENTMETRICS {
	UINT cbSize;
	int iBorderWidth;
	int iScrollWidth;
	int iScrollHeight;
	int iCaptionWidth;
	int iCaptionHeight;
	LOGFONT lfCaptionFont;
	int iSmCaptionWidth;
	int iSmCaptionHeight;
	LOGFONT lfSmCaptionFont;
	int iMenuWidth;
	int iMenuHeight;
	LOGFONT lfMenuFont;
	LOGFONT lfStatusFont;
	LOGFONT lfMessageFont;
} NONCLIENTMETRICS,*LPNONCLIENTMETRICS;
typedef struct _SERVICE_ADDRESS {
	DWORD dwAddressType;
	DWORD dwAddressFlags;
	DWORD dwAddressLength;
	DWORD dwPrincipalLength;
	BYTE *lpAddress;
	BYTE *lpPrincipal;
} SERVICE_ADDRESS;
typedef struct _SERVICE_ADDRESSES {
	DWORD dwAddressCount;
	SERVICE_ADDRESS Addresses[1];
} SERVICE_ADDRESSES,*LPSERVICE_ADDRESSES;
#ifndef GUID_DEFINED
typedef struct _GUID {
	unsigned long Data1;
	unsigned short Data2;
	unsigned short Data3;
	unsigned char Data4[8];
} GUID,*LPGUID;
typedef CONST GUID *LPCGUID;
#define GUID_DEFINED
#endif
#if !defined(__IID_DEFINED__)
#define __IID_DEFINED__
typedef GUID IID;
typedef IID *LPIID;
typedef IID *REFIID;
typedef GUID CLSID,*LPCLSID;
typedef CLSID *REFCLSID;
typedef GUID *REFGUID;
#endif
typedef struct tagRemHGLOBAL {
	long fNullHGlobal;
	unsigned long cbData;
	unsigned char data[1]; } RemHGLOBAL;
typedef struct tagRemHMETAFILEPICT {
	long mm;
	long xExt;
	long yExt;
	unsigned long cbData;
	unsigned char data[1];
}	RemHMETAFILEPICT;
typedef void *HMETAFILEPICT;
typedef struct tagRemHENHMETAFILE {
	unsigned long cbData;
	unsigned char data[1];
	} RemHENHMETAFILE;
typedef struct tagRemHBITMAP {
	unsigned long cbData;
	unsigned char data[1];
}	RemHBITMAP;
typedef struct tagRemHPALETTE {
	unsigned long cbData;
	unsigned char data[1];
}	RemHPALETTE;
typedef struct tagRemBRUSH {
	unsigned long cbData;
	unsigned char data[1];
}	RemHBRUSH;
typedef struct _numberfmta {
	UINT NumDigits;
	UINT LeadingZero;
	UINT Grouping;
	LPSTR lpDecimalSep;
	LPSTR lpThousandSep;
	UINT NegativeOrder;
} NUMBERFMTA;
typedef struct _numberfmtw {
	UINT NumDigits;
	UINT LeadingZero;
	UINT Grouping;
	LPWSTR lpDecimalSep;
	LPWSTR lpThousandSep;
	UINT NegativeOrder;
} NUMBERFMTW;
typedef struct _OFSTRUCT {
	BYTE cBytes;
	BYTE fFixedDisk;
	WORD nErrCode;
	WORD Reserved1;
	WORD Reserved2;
	CHAR szPathName[OFS_MAXPATHNAME];
} OFSTRUCT,*LPOFSTRUCT;
typedef struct tagOFNA {
	DWORD	lStructSize;
	HWND	hwndOwner;
	HINSTANCE	hInstance;
	LPCSTR	lpstrFilter;
	LPSTR	lpstrCustomFilter;
	DWORD	nMaxCustFilter;
	DWORD	nFilterIndex;
	LPSTR	lpstrFile;
	DWORD	nMaxFile;
	LPSTR	lpstrFileTitle;
	DWORD	nMaxFileTitle;
	LPCSTR	lpstrInitialDir;
	LPCSTR	lpstrTitle;
	DWORD	Flags;
	WORD	nFileOffset;
	WORD	nFileExtension;
	LPCSTR	lpstrDefExt;
	LPARAM	lCustData;
	LPOFNHOOKPROC	lpfnHook;
	LPCSTR	lpTemplateName;
} OPENFILENAMEA,*LPOPENFILENAMEA;
typedef struct tagOFNW {
	DWORD	lStructSize;
	HWND	hwndOwner;
	HINSTANCE	hInstance;
	LPCWSTR	lpstrFilter;
	LPWSTR	lpstrCustomFilter;
	DWORD	nMaxCustFilter;
	DWORD	nFilterIndex;
	LPWSTR	lpstrFile;
	DWORD	nMaxFile;
	LPWSTR	lpstrFileTitle;
	DWORD	nMaxFileTitle;
	LPCWSTR	lpstrInitialDir;
	LPCWSTR	lpstrTitle;
	DWORD	Flags;
	WORD	nFileOffset;
	WORD	nFileExtension;
	LPCWSTR	lpstrDefExt;
	LPARAM	lCustData;
	LPOFNHOOKPROC	lpfnHook;
	LPCWSTR	lpTemplateName;
} OPENFILENAMEW, *LPOPENFILENAMEW;
#ifdef UNICODE
typedef TVITEMEXW TVITEMEX;
typedef LPTVITEMEXW LPTVITEMEX;
#define LPOPENFILENAME LPOPENFILENAMEW
#define OPENFILENAME OPENFILENAMEW
#define TVINSERTSTRUCT		TVINSERTSTRUCTW
#define LPTVINSERTSTRUCT	LPTVINSERTSTRUCTW
#define NUMBERFMT	NUMBERFMTW
#else
#define LPOPENFILENAME LPOPENFILENAMEA
#define OPENFILENAME OPENFILENAMEA
typedef TVITEMEXA TVITEMEX;
typedef LPTVITEMEXA LPTVITEMEX;
#define TVINSERTSTRUCT		TVINSERTSTRUCTA
#define LPTVINSERTSTRUCT	LPTVINSERTSTRUCTA
#define NUMBERFMT	NUMBERFMTA
#endif
typedef struct _OFNOTIFY {
	NMHDR hdr;
	LPOPENFILENAME lpOFN;
	LPTSTR pszFile;
} OFNOTIFY,*LPOFNOTIFY;
typedef struct _OSVERSIONINFOA {
	DWORD dwOSVersionInfoSize;
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	CHAR szCSDVersion[128];
} OSVERSIONINFOA, *POSVERSIONINFOA, *LPOSVERSIONINFOA;

typedef struct _OSVERSIONINFOW {
	DWORD dwOSVersionInfoSize;
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WCHAR szCSDVersion[128];
} OSVERSIONINFOW, *POSVERSIONINFOW, *LPOSVERSIONINFOW, RTL_OSVERSIONINFOW, *PRTL_OSVERSIONINFOW;
typedef struct _OSVERSIONINFOEXA {
	DWORD dwOSVersionInfoSize;
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	CHAR szCSDVersion[128];
	WORD wServicePackMajor;
	WORD wServicePackMinor;
	WORD wSuiteMask;
	BYTE wProductType;
	BYTE wReserved;
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA, *LPOSVERSIONINFOEXA;

typedef struct _OSVERSIONINFOEXW {
	DWORD dwOSVersionInfoSize;
	DWORD dwMajorVersion;
	DWORD dwMinorVersion;
	DWORD dwBuildNumber;
	DWORD dwPlatformId;
	WCHAR szCSDVersion[128];
	WORD wServicePackMajor;
	WORD wServicePackMinor;
	WORD wSuiteMask;
	BYTE wProductType;
	BYTE wReserved;
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW, *LPOSVERSIONINFOEXW, RTL_OSVERSIONINFOEXW, *PRTL_OSVERSIONINFOEXW;
#ifdef UNICODE
typedef OSVERSIONINFOW OSVERSIONINFO;
typedef POSVERSIONINFOW POSVERSIONINFO;
typedef LPOSVERSIONINFOW LPOSVERSIONINFO;
typedef OSVERSIONINFOEXW OSVERSIONINFOEX;
typedef POSVERSIONINFOEXW POSVERSIONINFOEX;
typedef LPOSVERSIONINFOEXW LPOSVERSIONINFOEX;
#else
typedef OSVERSIONINFOEXA OSVERSIONINFOEX;
typedef POSVERSIONINFOEXA POSVERSIONINFOEX;
typedef LPOSVERSIONINFOEXA LPOSVERSIONINFOEX;
typedef OSVERSIONINFOA OSVERSIONINFO;
typedef POSVERSIONINFOA POSVERSIONINFO;
typedef LPOSVERSIONINFOA LPOSVERSIONINFO;
#endif
typedef struct tagTEXTMETRIC {
	LONG tmHeight;
	LONG tmAscent;
	LONG tmDescent;
	LONG tmInternalLeading;
	LONG tmExternalLeading;
	LONG tmAveCharWidth;
	LONG tmMaxCharWidth;
	LONG tmWeight;
	LONG tmOverhang;
	LONG tmDigitizedAspectX;
	LONG tmDigitizedAspectY;
	BCHAR tmFirstChar;
	BCHAR tmLastChar;
	BCHAR tmDefaultChar;
	BCHAR tmBreakChar;
	BYTE tmItalic;
	BYTE tmUnderlined;
	BYTE tmStruckOut;
	BYTE tmPitchAndFamily;
	BYTE tmCharSet;
	BYTE pad1;
	BYTE pad2;
	BYTE pad3;
	BYTE pad4;
} TEXTMETRIC,*LPTEXTMETRIC;
typedef int (CALLBACK *OLDFONTENUMPROC)(LOGFONT *,TEXTMETRIC *,DWORD,LPARAM);
typedef struct tagTEXTMETRIC *PTEXTMETRIC;
typedef struct tagTEXTMETRICW {
	LONG	tmHeight;
	LONG	tmAscent;
	LONG	tmDescent;
	LONG	tmInternalLeading;
	LONG	tmExternalLeading;
	LONG	tmAveCharWidth;
	LONG	tmMaxCharWidth;
	LONG	tmWeight;
	LONG	tmOverhang;
	LONG	tmDigitizedAspectX;
	LONG	tmDigitizedAspectY;
	WCHAR	tmFirstChar;
	WCHAR	tmLastChar;
	WCHAR	tmDefaultChar;
	WCHAR	tmBreakChar;
	BYTE	tmItalic;
	BYTE	tmUnderlined;
	BYTE	tmStruckOut;
	BYTE	tmPitchAndFamily;
	BYTE	tmCharSet;
} TEXTMETRICW,*PTEXTMETRICW,*NPTEXTMETRICW,*LPTEXTMETRICW;
typedef struct _OUTLINETEXTMETRIC {
	UINT otmSize;
	TEXTMETRIC otmTextMetrics;
	BYTE otmFiller;
	PANOSE otmPanoseNumber;
	UINT otmfsSelection;
	UINT otmfsType;
	int otmsCharSlopeRise;
	int otmsCharSlopeRun;
	int otmItalicAngle;
	UINT otmEMSquare;
	int otmAscent;
	int otmDescent;
	UINT otmLineGap;
	UINT otmsCapEmHeight;
	UINT otmsXHeight;
	RECT otmrcFontBox;
	int otmMacAscent;
	int otmMacDescent;
	UINT otmMacLineGap;
	UINT otmusMinimumPPEM;
	POINT otmptSubscriptSize;
	POINT otmptSubscriptOffset;
	POINT otmptSuperscriptSize;
	POINT otmptSuperscriptOffset;
	UINT otmsStrikeoutSize;
	int otmsStrikeoutPosition;
	int otmsUnderscoreSize;
	int otmsUnderscorePosition;
	PSTR otmpFamilyName;
	PSTR otmpFaceName;
	PSTR otmpStyleName;
	PSTR otmpFullName;
} OUTLINETEXTMETRIC,*LPOUTLINETEXTMETRIC;
typedef struct _OVERLAPPED {
	DWORD Internal;
	DWORD InternalHigh;
	DWORD Offset;
	DWORD OffsetHigh;
	HANDLE hEvent;
} OVERLAPPED,*LPOVERLAPPED;
typedef struct tagPSD {
	DWORD lStructSize;
	HWND hwndOwner;
	HGLOBAL hDevMode;
	HGLOBAL hDevNames;
	DWORD Flags;
	POINT ptPaperSize;
	RECT rtMinMargin;
	RECT rtMargin;
	HINSTANCE hInstance;
	LPARAM lCustData;
	LPPAGESETUPHOOK lpfnPageSetupHook;
	LPPAGEPAINTHOOK lpfnPagePaintHook;
	LPCTSTR lpPageSetupTemplateName;
	HGLOBAL hPageSetupTemplate;
} PAGESETUPDLG,*LPPAGESETUPDLG;
typedef struct tagPAINTSTRUCT {
	HDC hdc;
	BOOL fErase;
	RECT rcPaint;
	BOOL fRestore;
	BOOL fIncUpdate;
	BYTE rgbReserved[32];
} PAINTSTRUCT,*LPPAINTSTRUCT;
#ifndef __PARAFORMAT_DEFINED
#define __PARAFORMAT_DEFINED
typedef struct _paraformat {
	UINT cbSize;
	DWORD dwMask;
	WORD wNumbering;
	WORD wEffects;
	LONG dxStartIndent;
	LONG dxRightIndent;
	LONG dxOffset;
	WORD wAlignment;
	SHORT cTabCount;
	LONG rgxTabs[MAX_TAB_STOPS];
} PARAFORMAT;
#endif
typedef struct _POLYTEXT {
	int x;
	int y;
	UINT n;
	LPCTSTR lpstr;
	UINT uiFlags;
	RECT rcl;
	int *pdx;
} POLYTEXT;
typedef struct _PRIVILEGE_SET {
	DWORD PrivilegeCount;
	DWORD Control;
	LUID_AND_ATTRIBUTES Privilege[ANYSIZE_ARRAY];
} PRIVILEGE_SET,*PPRIVILEGE_SET,*LPPRIVILEGE_SET;
typedef struct _PROCESS_HEAP_ENTRY {
	PVOID lpData;
	DWORD cbData;
	BYTE cbOverhead;
	BYTE iRegionIndex;
	WORD wFlags;
	DWORD dwCommittedSize;
	DWORD dwUnCommittedSize;
	LPVOID lpFirstBlock;
	LPVOID lpLastBlock;
	HANDLE hMem;
} PROCESS_HEAP_ENTRY,*LPPROCESS_HEAP_ENTRY;
typedef struct _PROCESS_INFORMATION {
	HANDLE hProcess;
	HANDLE hThread;
	DWORD dwProcessId;
	DWORD dwThreadId;
} PROCESS_INFORMATION,*LPPROCESS_INFORMATION;
typedef PROCESS_INFORMATION *PPROCESS_INFORMATION;
typedef UINT(CALLBACK * LPFNPSPCALLBACK) (HWND,UINT,LPVOID);
typedef struct _PROPSHEETPAGE {
	DWORD dwSize;
	DWORD dwFlags;
	HINSTANCE hInstance;
	union {
		LPCTSTR pszTemplate;
		LPCDLGTEMPLATE pResource;
	};
	union {
		HICON hIcon;
		LPCTSTR pszIcon;
	};
	LPCTSTR pszTitle;
	DLGPROC pfnDlgProc;
	LPARAM lParam;
	LPFNPSPCALLBACK pfnCallback;
	UINT *pcRefParent;
} PROPSHEETPAGE,*LPPROPSHEETPAGE;
typedef const PROPSHEETPAGE *LPCPROPSHEETPAGE;
typedef struct _PSP *HPROPSHEETPAGE;
typedef struct _PROPSHEETHEADER {
	DWORD dwSize;
	DWORD dwFlags;
	HWND hwndParent;
	HINSTANCE hInstance;
	union {
		HICON hIcon;
		LPCTSTR pszIcon;
	};
	LPCTSTR pszCaption;
	UINT nPages;
	union {
		UINT nStartPage;
		LPCTSTR pStartPage;
	};
	union {
		LPCPROPSHEETPAGE ppsp;
		HPROPSHEETPAGE *phpage;
	};
	PFNPROPSHEETCALLBACK pfnCallback;
} PROPSHEETHEADER,*LPPROPSHEETHEADER;
typedef const PROPSHEETHEADER *LPCPROPSHEETHEADER;
typedef BOOL(CALLBACK * LPFNADDPROPSHEETPAGE) (HPROPSHEETPAGE,LPARAM);
typedef
BOOL(CALLBACK * LPFNADDPROPSHEETPAGES) (LPVOID, LPFNADDPROPSHEETPAGE, LPARAM);
typedef struct _PROTOCOL_INFO {
	DWORD dwServiceFlags;
	INT iAddressFamily;
	INT iMaxSockAddr;
	INT iMinSockAddr;
	INT iSocketType;
	INT iProtocol;
	DWORD dwMessageSize;
	LPTSTR lpProtocol;
} PROTOCOL_INFO;
typedef struct _PSHNOTIFY {
	NMHDR hdr;
	LPARAM lParam;
} PSHNOTIFY,*LPPSHNOTIFY;
typedef struct _RASAMB {
	DWORD dwSize;
	DWORD dwError;
	TCHAR szNetBiosError[NETBIOS_NAME_LEN + 1];
	BYTE bLana;
} RASAMB;
typedef struct _RASTERIZER_STATUS {
	short nSize;
	short wFlags;
	short nLanguageID;
} RASTERIZER_STATUS,*LPRASTERIZER_STATUS;
typedef struct _REMOTE_NAME_INFO {
	LPTSTR lpUniversalName;
	LPTSTR lpConnectionName;
	LPTSTR lpRemainingPath;
} REMOTE_NAME_INFO;
typedef struct _RGNDATAHEADER {
	DWORD dwSize;
	DWORD iType;
	DWORD nCount;
	DWORD nRgnSize;
	RECT rcBound;
} RGNDATAHEADER;
typedef struct _RGNDATA {
	RGNDATAHEADER rdh;
	char Buffer[1];
} RGNDATA,*LPRGNDATA;
typedef struct tagSCROLLINFO {
	UINT cbSize;
	UINT fMask;
	int nMin;
	int nMax;
	UINT nPage;
	int nPos;
	int nTrackPos;
} SCROLLINFO,*LPSCROLLINFO;
typedef SCROLLINFO const *LPCSCROLLINFO;
typedef struct _SECURITY_ATTRIBUTES {
	DWORD nLength;
	LPVOID lpSecurityDescriptor;
	BOOL bInheritHandle;
} SECURITY_ATTRIBUTES,*LPSECURITY_ATTRIBUTES;
typedef DWORD SECURITY_INFORMATION,*PSECURITY_INFORMATION;
typedef struct tagSERIALKEYS {
	DWORD cbSize;
	DWORD dwFlags;
	LPSTR lpszActivePort;
	LPSTR lpszPort;
	DWORD iBaudRate;
	DWORD iPortState;
} SERIALKEYS,*LPSERIALKEYS;
typedef struct _SESSION_BUFFER {
	UCHAR lsn;
	UCHAR state;
	UCHAR local_name[NCBNAMSZ];
	UCHAR remote_name[NCBNAMSZ];
	UCHAR rcvs_outstanding;
	UCHAR sends_outstanding;
} SESSION_BUFFER;
typedef struct _SESSION_HEADER {
	UCHAR sess_name;
	UCHAR num_sess;
	UCHAR rcv_dg_outstanding;
	UCHAR rcv_any_outstanding;
} SESSION_HEADER;
//#ifndef SHCONTF_DEFINED
//typedef enum tagSHCONTF { SHCONTF_FOLDERS=32, SHCONTF_NONFOLDERS=64, SHCONTF_INCLUDEHIDDEN=128,
//SHCONTF_INIT_ON_FIRST_NEXT=256, SHCONTF_NETPRINTERSRCH=512, SHCONTF_SHAREABLE=1024,
//SHCONTF_STORAGE=2048 };
//
//typedef DWORD SHCONTF;
//
//#define SHCONTF_DEFINED
//#endif
#ifndef __FILEOP_FLAGS_DEFINED
typedef WORD FILEOP_FLAGS;
#define __FILEOP_FLAGS_DEFINED
#endif
#ifndef SHGNO_DEFINED
typedef enum tagSHGDN { SHGDN_NORMAL=0, SHGDN_INFOLDER=1, SHGDN_FOREDITING=4096,
SHGDN_FORADDRESSBAR=0x4000, SHGDN_FORPARSING=0x8000 } SHGNO;
#define SHGNO_DEFINED
#endif
typedef struct _SID_AND_ATTRIBUTES {
	PSID Sid;
	DWORD Attributes;
} SID_AND_ATTRIBUTES,*PSID_AND_ATTRIBUTES;
typedef SID_AND_ATTRIBUTES SID_AND_ATTRIBUTES_ARRAY[ANYSIZE_ARRAY];
typedef SID_AND_ATTRIBUTES_ARRAY *PSID_AND_ATTRIBUTES_ARRAY;
typedef struct _SINGLE_LIST_ENTRY {
	struct _SINGLE_LIST_ENTRY *Next;
} SINGLE_LIST_ENTRY;
typedef struct tagSOUNDSENTRY {
	UINT cbSize;
	DWORD dwFlags;
	DWORD iFSTextEffect;
	DWORD iFSTextEffectMSec;
	DWORD iFSTextEffectColorBits;
	DWORD iFSGrafEffect;
	DWORD iFSGrafEffectMSec;
	DWORD iFSGrafEffectColor;
	DWORD iWindowsEffect;
	DWORD iWindowsEffectMSec;
	LPTSTR lpszWindowsEffectDLL;
	DWORD iWindowsEffectOrdinal;
} SOUNDSENTRY,*LPSOUNDSENTRY;
typedef struct _STARTUPINFOA {
	DWORD cb;
	LPSTR lpReserved;
	LPSTR lpDesktop;
	LPSTR lpTitle;
	DWORD dwX;
	DWORD dwY;
	DWORD dwXSize;
	DWORD dwYSize;
	DWORD dwXCountChars;
	DWORD dwYCountChars;
	DWORD dwFillAttribute;
	DWORD dwFlags;
	WORD wShowWindow;
	WORD cbReserved2;
	LPBYTE lpReserved2;
	HANDLE hStdInput;
	HANDLE hStdOutput;
	HANDLE hStdError;
} STARTUPINFOA, *LPSTARTUPINFOA;
typedef struct _STARTUPINFOW {
	DWORD cb;
	LPWSTR lpReserved;
	LPWSTR lpDesktop;
	LPWSTR lpTitle;
	DWORD dwX;
	DWORD dwY;
	DWORD dwXSize;
	DWORD dwYSize;
	DWORD dwXCountChars;
	DWORD dwYCountChars;
	DWORD dwFillAttribute;
	DWORD dwFlags;
	WORD wShowWindow;
	WORD cbReserved2;
	LPBYTE lpReserved2;
	HANDLE hStdInput;
	HANDLE hStdOutput;
	HANDLE hStdError;
} STARTUPINFOW, *LPSTARTUPINFOW;
#ifdef UNICODE
typedef STARTUPINFOW STARTUPINFO;
typedef LPSTARTUPINFOW LPSTARTUPINFO;
#else
typedef STARTUPINFOA STARTUPINFO;
typedef LPSTARTUPINFOA LPSTARTUPINFO;
#endif
typedef struct tagSTICKYKEYS {
	DWORD cbSize;
	DWORD dwFlags;
} STICKYKEYS,*LPSTICKYKEYS;
#ifndef _STRRET_DEFINED
#pragma pack(push,8)
typedef struct _STRRET { UINT uType; union { LPWSTR pOleStr; UINT uOffset; char cStr[260]; } ;
} STRRET,*LPSTRRET;
#define _STRRET_DEFINED
#endif
#pragma pack(pop)
typedef struct tagSTYLESTRUCT {
	DWORD styleOld;
	DWORD styleNew;
} STYLESTRUCT,*LPSTYLESTRUCT;
typedef struct _SYSTEM_AUDIT_ACE {
	ACE_HEADER Header;
	ACCESS_MASK Mask;
	DWORD SidStart;
} SYSTEM_AUDIT_ACE;
typedef struct _SYSTEM_INFO {
	WORD wProcessorArchitecture;
	WORD wReserved;
	DWORD dwPageSize;
	LPVOID lpMinimumApplicationAddress;
	LPVOID lpMaximumApplicationAddress;
	DWORD dwActiveProcessorMask;
	DWORD dwNumberOfProcessors;
	DWORD dwProcessorType;
	DWORD dwAllocationGranularity;
	WORD wProcessorLevel;
	WORD wProcessorRevision;
} SYSTEM_INFO,*LPSYSTEM_INFO;
typedef struct _SYSTEM_POWER_STATUS {
	BYTE ACLineStatus;
	BYTE BatteryFlag;
	BYTE BatteryLifePercent;
	BYTE Reserved1;
	DWORD BatteryLifeTime;
	DWORD BatteryFullLifeTime;
} SYSTEM_POWER_STATUS;
typedef SYSTEM_POWER_STATUS *LPSYSTEM_POWER_STATUS;
typedef struct _TAPE_ERASE {
	ULONG Type;
} TAPE_ERASE;
typedef struct _TAPE_GET_DRIVE_PARAMETERS {
	BOOLEAN ECC;
	BOOLEAN Compression;
	BOOLEAN DataPadding;
	BOOLEAN ReportSetmarks;
	ULONG DefaultBlockSize;
	ULONG MaximumBlockSize;
	ULONG MinimumBlockSize;
	ULONG MaximumPartitionCount;
	ULONG FeaturesLow;
	ULONG FeaturesHigh;
	ULONG EOTWarningZoneSize;
} TAPE_GET_DRIVE_PARAMETERS;
typedef struct _TAPE_GET_MEDIA_PARAMETERS {
	LARGE_INTEGER Capacity;
	LARGE_INTEGER Remaining;
	DWORD BlockSize;
	DWORD PartitionCount;
	BOOLEAN WriteProtected;
} TAPE_GET_MEDIA_PARAMETERS;
typedef struct _TAPE_GET_POSITION {
	ULONG Type;
	ULONG Partition;
	ULONG OffsetLow;
	ULONG OffsetHigh;
} TAPE_GET_POSITION;
typedef struct _TAPE_PREPARE {
	ULONG Operation;
} TAPE_PREPARE;
typedef struct _TAPE_SET_DRIVE_PARAMETERS {
	BOOLEAN ECC;
	BOOLEAN Compression;
	BOOLEAN DataPadding;
	BOOLEAN ReportSetmarks;
	ULONG EOTWarningZoneSize;
} TAPE_SET_DRIVE_PARAMETERS;
typedef struct _TAPE_SET_MEDIA_PARAMETERS {
	ULONG BlockSize;
} TAPE_SET_MEDIA_PARAMETERS;
typedef struct _TAPE_SET_POSITION {
	ULONG Method;
	ULONG Partition;
	ULONG OffsetLow;
	ULONG OffsetHigh;
} TAPE_SET_POSITION;
typedef struct _TAPE_WRITE_MARKS {
	ULONG Type;
	ULONG Count;
} TAPE_WRITE_MARKS;
typedef struct tagTBADDBITMAP {
	HINSTANCE hInst;
	UINT nID;
} TBADDBITMAP,*LPTBADDBITMAP;
typedef struct _TBBUTTON {
	int iBitmap;
	int idCommand;
	BYTE fsState;
	BYTE fsStyle;
	BYTE bReserved[2];
	DWORD dwData;
	int iString;
} TBBUTTON,*PTBBUTTON,*LPTBBUTTON;
typedef const TBBUTTON *LPCTBBUTTON;
typedef struct tagNMTOOLBARA {
	NMHDR	hdr;
	int	iItem;
	TBBUTTON tbButton;
	int	cchText;
	LPSTR	pszText;
	RECT	rcButton;
} NMTOOLBARA,*LPNMTOOLBARA;
typedef struct tagNMTOOLBARW {
	NMHDR	hdr;
	int	iItem;
	TBBUTTON tbButton;
	int	cchText;
	LPWSTR	pszText;
	RECT	rcButton;
} NMTOOLBARW, *LPNMTOOLBARW;
typedef struct tagNMTOOLTIPSCREATED {
	NMHDR hdr;
	HWND hwndToolTips;
} NMTOOLTIPSCREATED, * LPNMTOOLTIPSCREATED;
typedef struct tagTBSAVEPARAMSA {
	HKEY hkr;
	LPCSTR pszSubKey;
	LPCSTR pszValueName;
} TBSAVEPARAMSA,*LPTBSAVEPARAMSA;
typedef struct tagTBSAVEPARAMSW {
	HKEY hkr;
	LPCWSTR pszSubKey;
	LPCWSTR pszValueName;
} TBSAVEPARAMSW,*LPTBSAVEPARAMW;
#ifdef UNICODE
#define TBSAVEPARAMS	TBSAVEPARAMSW
#define LPTBSAVEPARAMS	LPTBSAVEPARAMSW
#else
#define TBSAVEPARAMS	TBSAVEPARAMSA
#define LPTBSAVEPARAMS	LPTBSAVEPARAMSA
#endif
typedef struct _TC_HITTESTINFO {
	POINT pt;
	UINT flags;
} TC_HITTESTINFO;
typedef struct _TC_ITEM {
	UINT mask;
	UINT lpReserved1;
	UINT lpReserved2;
	LPTSTR pszText;
	int cchTextMax;
	int iImage;
	LPARAM lParam;
} TC_ITEM;
typedef struct _TC_ITEMHEADER {
	UINT mask;
	UINT lpReserved1;
	UINT lpReserved2;
	LPTSTR pszText;
	int cchTextMax;
	int iImage;
} TC_ITEMHEADER;
typedef struct _TC_KEYDOWN {
	NMHDR hdr;
	WORD wVKey;
	UINT flags;
} NMTCKEYDOWN;
#ifndef _TEXTRANGE_DEFINED
#define _TEXTRANGE_DEFINED
typedef struct _textrange { CHARRANGE chrg; LPSTR lpstrText; } TEXTRANGE;
#endif
typedef struct _TIME_ZONE_INFORMATION {
	LONG Bias;
	WCHAR StandardName[32];
	SYSTEMTIME StandardDate;
	LONG StandardBias;
	WCHAR DaylightName[32];
	SYSTEMTIME DaylightDate;
	LONG DaylightBias;
} TIME_ZONE_INFORMATION,*LPTIME_ZONE_INFORMATION;
typedef struct tagTOGGLEKEYS {
	DWORD cbSize;
	DWORD dwFlags;
} TOGGLEKEYS;
typedef struct _TOKEN_SOURCE {
	CHAR SourceName[8];
	LUID SourceIdentifier;
} TOKEN_SOURCE,*PTOKEN_SOURCE;
typedef struct _TOKEN_CONTROL {
	LUID TokenId;
	LUID AuthenticationId;
	LUID ModifiedId;
	TOKEN_SOURCE TokenSource;
} TOKEN_CONTROL;
typedef struct _TOKEN_DEFAULT_DACL {
	PACL DefaultDacl;
} TOKEN_DEFAULT_DACL;
typedef struct _TOKEN_GROUPS {
	DWORD GroupCount;
	SID_AND_ATTRIBUTES Groups[ANYSIZE_ARRAY];
} TOKEN_GROUPS,*PTOKEN_GROUPS,*LPTOKEN_GROUPS;
typedef struct _TOKEN_OWNER {
	PSID Owner;
} TOKEN_OWNER;
typedef struct _TOKEN_PRIMARY_GROUP {
	PSID PrimaryGroup;
} TOKEN_PRIMARY_GROUP;
typedef struct _TOKEN_PRIVILEGES {
	DWORD PrivilegeCount;
	LUID_AND_ATTRIBUTES Privileges[ANYSIZE_ARRAY];
} TOKEN_PRIVILEGES,*PTOKEN_PRIVILEGES,*LPTOKEN_PRIVILEGES;
typedef struct _TOKEN_STATISTICS {
	LUID TokenId;
	LUID AuthenticationId;
	LARGE_INTEGER ExpirationTime;
	TOKEN_TYPE TokenType;
	SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
	DWORD DynamicCharged;
	DWORD DynamicAvailable;
	DWORD GroupCount;
	DWORD PrivilegeCount;
	LUID ModifiedId;
} TOKEN_STATISTICS;
typedef struct _TOKEN_USER {
	SID_AND_ATTRIBUTES User;
} TOKEN_USER;
typedef struct {
	UINT cbSize;
	UINT uFlags;
	HWND hwnd;
	UINT uId;
	RECT rect;
	HINSTANCE hinst;
	LPTSTR lpszText;
	LPARAM lParam;
} TOOLINFO,*PTOOLINFO,*LPTOOLINFO;
typedef struct {
	NMHDR hdr;
	LPTSTR lpszText;
	char szText[80];
	HINSTANCE hinst;
	UINT uFlags;
} TOOLTIPTEXT,*LPTOOLTIPTEXT;
typedef struct tagTPMPARAMS {
	UINT cbSize;
	RECT rcExclude;
} TPMPARAMS,*LPTPMPARAMS;
typedef struct _TT_HITTESTINFO {
	HWND hwnd;
	POINT pt;
	TOOLINFO ti;
} TTHITTESTINFO,*LPHITTESTINFO;
typedef struct tagTTPOLYCURVE {
	WORD wType;
	WORD cpfx;
	POINTFX apfx[1];
} TTPOLYCURVE,*LPTTPOLYCURVE;
typedef struct _TTPOLYGONHEADER {
	DWORD cb;
	DWORD dwType;
	POINTFX pfxStart;
} TTPOLYGONHEADER,*LPTTPOLYGONHEADER;
typedef struct _TV_DISPINFO {
	NMHDR hdr;
	TV_ITEM item;
} TV_DISPINFO;
typedef struct tagTVDISPINFOA {
	NMHDR hdr;
	TVITEMA item;
} NMTVDISPINFOA, *LPNMTVDISPINFOA;
typedef struct tagTVDISPINFOW {
	NMHDR hdr;
	TVITEMW item;
} NMTVDISPINFOW, *LPNMTVDISPINFOW;
typedef struct _TVHITTESTINFO {
	POINT pt;
	UINT flags;
	HTREEITEM hItem;
} TV_HITTESTINFO,*LPTV_HITTESTINFO;
typedef struct _TV_INSERTSTRUCT {
	HTREEITEM hParent;
	HTREEITEM hInsertAfter;
	TV_ITEM item;
} TV_INSERTSTRUCT,*LPTV_INSERTSTRUCT;
typedef struct _TV_KEYDOWN {
	NMHDR hdr;
	WORD wVKey;
	UINT flags;
} TV_KEYDOWN;
typedef struct _TV_SORTCB {
	HTREEITEM hParent;
	PFNTVCOMPARE lpfnCompare;
	LPARAM lParam;
} TV_SORTCB,*LPTV_SORTCB;
typedef union _ULARGE_INTEGER {
	struct {DWORD LowPart; DWORD HighPart;};
	long long QuadPart;
} ULARGE_INTEGER,*PULARGE_INTEGER;
typedef struct _UNIVERSAL_NAME_INFO {
	LPTSTR lpUniversalName;
} UNIVERSAL_NAME_INFO;
typedef struct tagUSEROBJECTFLAGS {
	BOOL fInherit;
	BOOL fReserved;
	DWORD dwFlags;
} USEROBJECTFLAGS;
typedef struct value_entA {
	LPSTR ve_valuename;
	DWORD ve_valuelen;
	DWORD ve_valueptr;
	DWORD ve_type;
}VALENTA, *PVALENTA;
typedef struct value_entW {
	LPWSTR ve_valuename;
	DWORD ve_valuelen;
	DWORD ve_valueptr;
	DWORD ve_type;
}VALENTW, *PVALENTW;
typedef struct pvalueA { LPSTR pv_valuename; int pv_valuelen; LPVOID pv_value_context;DWORD pv_type;}PVALUEA, *PPVALUEA;
typedef struct pvalueW { LPWSTR pv_valuename;int pv_valuelen;LPVOID pv_value_context;DWORD pv_type;}PVALUEW, *PPVALUEW;
#ifdef UNICODE
typedef PVALUEW PVALUE;
typedef PPVALUEW PPVALUE;
typedef VALENTW VALENT;
typedef PVALENTW PVALENT;
#define TBN_GETDISPINFO	TBN_GETDISPINFOW
#define NMTBDISPINFO	NMTBDISPINFOW
#define LPNMTBDISPINFO	LPNMTBDISPINFOW
#define TBN_GETINFOTIP	TBN_GETINFOTIPW
#define NMTBGETINFOTIP	NMTBGETINFOTIPW
#define LPNMTBGETINFOTIP	LPNMTBGETINFOTIPW
#define WIN32_FIND_DATA	WIN32_FIND_DATAW
#define LPWIN32_FIND_DATA LPWIN32_FIND_DATAW
#define NMTVDISPINFO	NMTVDISPINFOW
#define LPNMTVDISPINFO	LPNMTVDISPINFOW
#else
typedef PVALUEA PVALUE;
typedef PPVALUEA PPVALUE;
typedef VALENTA VALENT;
typedef PVALENTA PVALENT;
#define TBN_GETDISPINFO	TBN_GETDISPINFOA
#define NMTBDISPINFO	NMTBDISPINFOA
#define LPNMTBDISPINFO	LPNMTBDISPINFOA
#define TBN_GETINFOTIP	TBN_GETINFOTIPA
#define NMTBGETINFOTIP	NMTBGETINFOTIPA
#define LPNMTBGETINFOTIP	LPNMTBGETINFOTIPA
#define WIN32_FIND_DATA WIN32_FIND_DATAA
#define LPWIN32_FIND_DATA	LPWIN32_FIND_DATAA
#define NMTVDISPINFO	NMTVDISPINFOA
#define LPNMTVDISPINFO	LPNMTVDISPINFOA
#endif
typedef struct _WIN32_STREAM_ID {
	DWORD dwStreamId;
	DWORD dwStreamAttributes;
	LARGE_INTEGER Size;
	DWORD dwStreamNameSize;
	WCHAR *cStreamName;
} WIN32_STREAM_ID,*LPWIN32_STREAM_ID;
typedef struct _WINDOWPLACEMENT {
	UINT length;
	UINT flags;
	UINT showCmd;
	POINT ptMinPosition;
	POINT ptMaxPosition;
	RECT rcNormalPosition;
} WINDOWPLACEMENT,*LPWINDOWPLACEMENT,*PWINDOWPLACEMENT;
typedef struct tagWNDCLASSEXA {
	UINT	cbSize;
	UINT	style;
	WNDPROC	lpfnWndProc;
	int	cbClsExtra;
	int	cbWndExtra;
	HINSTANCE	hInstance;
	HICON	hIcon;
	HCURSOR	hCursor;
	HBRUSH	hbrBackground;
	LPCSTR	lpszMenuName;
	LPCSTR	lpszClassName;
	HICON	hIconSm;
} WNDCLASSEXA, *PWNDCLASSEXA,*NPWNDCLASSEXA,*LPWNDCLASSEXA;
typedef struct tagWNDCLASSEXW {
	UINT cbSize;
	UINT style;
	WNDPROC lpfnWndProc;
	int cbClsExtra;
	int cbWndExtra;
	HINSTANCE hInstance;
	HICON hIcon;
	HCURSOR hCursor;
	HBRUSH hbrBackground;
	LPCWSTR lpszMenuName;
	LPCWSTR lpszClassName;
	HICON hIconSm;
} WNDCLASSEXW,*PWNDCLASSEXW,*NPWNDCLASSEXW,*LPWNDCLASSEXW;
#ifdef UNICODE
typedef WNDCLASSEXW WNDCLASSEX;
typedef PWNDCLASSEXW PWNDCLASSEX;
typedef NPWNDCLASSEXW NPWNDCLASSEX;
typedef LPWNDCLASSEXW LPWNDCLASSEX;
#else
typedef WNDCLASSEXA WNDCLASSEX;
typedef PWNDCLASSEXA PWNDCLASSEX;
typedef NPWNDCLASSEXA NPWNDCLASSEX;
typedef LPWNDCLASSEXA LPWNDCLASSEX;
#endif
typedef struct tagWNDCLASSA {
	UINT	style;
	WNDPROC	lpfnWndProc;
	int	cbClsExtra;
	int	cbWndExtra;
	HINSTANCE	hInstance;
	HICON	hIcon;
	HCURSOR	hCursor;
	HBRUSH	hbrBackground;
	LPCSTR	lpszMenuName;
	LPCSTR	lpszClassName;
} WNDCLASSA, *PWNDCLASSA,*NPWNDCLASSA,*LPWNDCLASSA;
typedef struct tagWNDCLASSW {
	UINT	style;
	WNDPROC	lpfnWndProc;
	int	cbClsExtra;
	int	cbWndExtra;
	HINSTANCE hInstance;
	HICON	hIcon;
	HCURSOR	hCursor;
	HBRUSH	hbrBackground;
	LPCWSTR	lpszMenuName;
	LPCWSTR	lpszClassName;
} WNDCLASSW, *PWNDCLASSW,*NPWNDCLASSW,*LPWNDCLASSW;
#ifdef UNICODE
typedef WNDCLASSW WNDCLASS;
typedef PWNDCLASSW PWNDCLASS;
typedef NPWNDCLASSW NPWNDCLASS;
typedef LPWNDCLASSW LPWNDCLASS;
#else
typedef WNDCLASSA WNDCLASS;
typedef PWNDCLASSA PWNDCLASS;
typedef NPWNDCLASSA NPWNDCLASS;
typedef LPWNDCLASSA LPWNDCLASS;
#endif
typedef struct _CONNECTDLGSTRUCT {
	DWORD cbStructure;
	HWND hwndOwner;
	LPNETRESOURCE lpConnRes;
	DWORD dwFlags;
	DWORD dwDevNum;
} CONNECTDLGSTRUCT,*LPCONNECTDLGSTRUCT;
typedef struct _DISCDLGSTRUCT {
	DWORD cbStructure;
	HWND hwndOwner;
	LPTSTR lpLocalName;
	LPTSTR lpRemoteName;
	DWORD dwFlags;
} DISCDLGSTRUCT,*LPDISCDLGSTRUCT;
typedef struct _NETINFOSTRUCT {
	DWORD cbStructure;
	DWORD dwProviderVersion;
	DWORD dwStatus;
	DWORD dwCharacteristics;
	DWORD dwHandle;
	WORD wNetType;
	DWORD dwPrinters;
	DWORD dwDrives;
} NETINFOSTRUCT,*LPNETINFOSTRUCT;
typedef struct _NETCONNECTINFOSTRUCT {
	DWORD cbStructure;
	DWORD dwFlags;
	DWORD dwSpeed;
	DWORD dwDelay;
	DWORD dwOptDataSize;
} NETCONNECTINFOSTRUCT,*LPNETCONNECTINFOSTRUCT;
typedef struct _MESSAGE_RESOURCE_ENTRY {
	WORD	Length;
	WORD	Flags;
	BYTE	Text[ 1 ];
} MESSAGE_RESOURCE_ENTRY,*PMESSAGE_RESOURCE_ENTRY;
#define MESSAGE_RESOURCE_UNICODE 1
typedef struct _MESSAGE_RESOURCE_BLOCK {
	DWORD	LowId;
	DWORD	HighId;
	DWORD OffsetToEntries;
} MESSAGE_RESOURCE_BLOCK,*PMESSAGE_RESOURCE_BLOCK;
typedef struct _MESSAGE_RESOURCE_DATA {
	DWORD	NumberOfBlocks;
	MESSAGE_RESOURCE_BLOCK Blocks[1];
} MESSAGE_RESOURCE_DATA,*PMESSAGE_RESOURCE_DATA;
typedef enum tagMEMCTX {MEMCTX_TASK=1,MEMCTX_SHARED=2,MEMCTX_MACSYSTEM=3,MEMCTX_UNKNOWN = -1,MEMCTX_SAME=-2 }MEMCTX;
typedef enum tagCLSCTX {CLSCTX_INPROC_SERVER=1,CLSCTX_INPROC_HANDLER=2,
	CLSCTX_LOCAL_SERVER=4,CLSCTX_INPROC_SERVER16=8,CLSCTX_REMOTE_SERVER=16} CLSCTX;
typedef enum tagMSHLFLAGS {MSHLFLAGS_NORMAL=0,MSHLFLAGS_TABLESTRONG= 1,
	MSHLFLAGS_TABLEWEAK=2,MSHLFLAGS_NOPING=4} MSHLFLAGS;
typedef enum tagMSHCTX {MSHCTX_LOCAL=0,MSHCTX_NOSHAREDMEM=1,
	MSHCTX_DIFFERENTMACHINE=2,MSHCTX_INPROC=3,MSHCTX_CROSSCTX = 4} MSHCTX;
typedef enum _DVASPECT {DVASPECT_CONTENT=1,DVASPECT_THUMBNAIL=2,
 DVASPECT_ICON=4,DVASPECT_DOCPRINT=8} DVASPECT;
typedef enum tagSTGC {STGC_DEFAULT=0,STGC_OVERWRITE=1,
	STGC_ONLYIFCURRENT=2,STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE=4,STGC_CONSOLIDATE=8}STGC;
typedef enum tagSTGMOVE {STGMOVE_MOVE=0,STGMOVE_COPY=1,STGMOVE_SHALLOWCOPY=2}STGMOVE;
typedef enum tagSTATFLAG {STATFLAG_DEFAULT= 0,STATFLAG_NONAME=1,STATFLAG_NOOPEN=2} STATFLAG;
typedef void *HCONTEXT;
typedef struct tagLVBKIMAGEA {
	ULONG ulFlags;
	HBITMAP hbm;
	LPSTR pszImage;
	UINT cchImageMax;
	int xOffsetPercent;
	int yOffsetPercent;
} LVBKIMAGEA, *LPLVBKIMAGEA;
typedef struct tagLVBKIMAGEW {
	ULONG ulFlags;
	HBITMAP hbm;
	LPWSTR pszImage;
	UINT cchImageMax;
	int xOffsetPercent;
	int yOffsetPercent;
} LVBKIMAGEW, *LPLVBKIMAGEW;
typedef struct {
	UINT cbSize;
	DWORD dwMask;
	int idCommand;
	int iImage;
	BYTE fsState;
	BYTE fsStyle;
	WORD cx;
	DWORD_PTR lParam;
	LPSTR pszText;
	int cchText;
} TBBUTTONINFOA, *LPTBBUTTONINFOA;
typedef struct {
	UINT cbSize;
	DWORD dwMask;
	int idCommand;
	int iImage;
	BYTE fsState;
	BYTE fsStyle;
	WORD cx;
	DWORD *lParam;
	LPWSTR pszText;
	int cchText;
} TBBUTTONINFOW, *LPTBBUTTONINFOW;
typedef struct tagNMKEY {
	NMHDR hdr;
	UINT nVKey;
	UINT uFlags;
} NMKEY,*LPNMKEY;
typedef struct tagNMCHAR {
	NMHDR	hdr;
	UINT	ch;
	DWORD	dwItemPrev;
	DWORD	dwItemNext;
} NMCHAR,*LPNMCHAR;
typedef struct tagNMCUSTOMDRAWINFO {
	NMHDR hdr;
	DWORD dwDrawStage;
	HDC hdc;
	RECT rc;
	DWORD_PTR dwItemSpec;
	UINT uItemState;
	LPARAM lItemlParam;
} NMCUSTOMDRAW, FAR * LPNMCUSTOMDRAW;
typedef struct tagNMLVCUSTOMDRAW {
	NMCUSTOMDRAW nmcd;
	COLORREF clrText;
	COLORREF clrTextBk;
	int iSubItem;
} NMLVCUSTOMDRAW, *LPNMLVCUSTOMDRAW;
typedef struct _NMTBCUSTOMDRAW {
	NMCUSTOMDRAW nmcd;
	HBRUSH hbrMonoDither;
	HBRUSH hbrLines;
	HPEN hpenLines;
	COLORREF clrText;
	COLORREF clrMark;
	COLORREF clrTextHighlight;
	COLORREF clrBtnFace;
	COLORREF clrBtnHighlight;
	COLORREF clrHighlightHotTrack;
	RECT rcText;
	int nStringBkMode;
	int nHLStringBkMode;
} NMTBCUSTOMDRAW, *LPNMTBCUSTOMDRAW;
typedef struct {
	NMHDR hdr;
	DWORD dwMask;
	int idCommand;
	DWORD_PTR lParam;
	int iImage;
	LPSTR pszText;
	int cchText;
} NMTBDISPINFOA,*LPNMTBDISPINFOA;
typedef struct {
	NMHDR hdr;
	DWORD dwMask;
	int idCommand;
	DWORD_PTR lParam;
	int iImage;
	LPWSTR pszText;
	int cchText;
} NMTBDISPINFOW,*LPNMTBDISPINFOW;
typedef struct tagNMOBJECTNOTIFY {
	NMHDR	hdr;
	int	iItem;
	const void *piid;
	void *pObject;
	HRESULT hResult;
	DWORD dwFlags;
} NMOBJECTNOTIFY,*LPNMOBJECTNOTIFY;
typedef struct tagNMTBHOTITEM {
	NMHDR	hdr;
	int	idOld;
	int	idNew;
	DWORD	dwFlags;
} NMTBHOTITEM, * LPNMTBHOTITEM;
typedef struct tagNMTBGETINFOTIPA {
	NMHDR hdr;
	LPSTR pszText;
	int cchTextMax;
	int iItem;
	LPARAM lParam;
} NMTBGETINFOTIPA, *LPNMTBGETINFOTIPA;
typedef struct tagNMTBGETINFOTIPW {
	NMHDR hdr;
	LPWSTR pszText;
	int cchTextMax;
	int iItem;
	LPARAM lParam;
} NMTBGETINFOTIPW, *LPNMTBGETINFOTIPW;
typedef struct {
	int	iButton;
	DWORD dwFlags;
} TBINSERTMARK,*LPTBINSERTMARK;
typedef struct {
	HINSTANCE	hInstOld;
	UINT_PTR	nIDOld;
	HINSTANCE	hInstNew;
	UINT_PTR	nIDNew;
	int	nButtons;
} TBREPLACEBITMAP, *LPTBREPLACEBITMAP;
#define TBIMHT_AFTER	1
#define TBIMHT_BACKGROUND	2
typedef struct {
	NMHDR hdr;
	WORD fwKeys;
	RECT rcParent;
	int iDir;
	int iXpos;
	int iYpos;
	int iScroll;
}NMPGSCROLL,*LPNMPGSCROLL;
typedef struct {
	NMHDR	hdr;
	DWORD	dwFlag;
	int	iWidth;
	int	iHeight;
}NMPGCALCSIZE, *LPNMPGCALCSIZE;
#define PBM_SETRANGE32	(WM_USER+6)
typedef struct {
	int iLow;
	int iHigh;
} PBRANGE, *PPBRANGE;
#define PBM_GETRANGE	(WM_USER+7)
#define PBM_GETPOS	(WM_USER+8)
#define PBM_SETBARCOLOR	(WM_USER+9)
#define PBM_SETBKCOLOR	CCM_SETBKCOLOR
typedef struct _UDACCEL {
	UINT nSec;
	UINT nInc;
} UDACCEL,*LPUDACCEL;
typedef struct tagTCITEMHEADERA {
	UINT mask;
	UINT lpReserved1;
	UINT lpReserved2;
	LPSTR pszText;
	int cchTextMax;
	int iImage;
} TCITEMHEADERA,*LPTCITEMHEADERA;
typedef struct tagTCITEMHEADERW {
	UINT mask;
	UINT lpReserved1;
	UINT lpReserved2;
	LPWSTR pszText;
	int cchTextMax;
	int iImage;
} TCITEMHEADERW,*LPTCITEMHEADERW;
typedef struct tagTCITEMA {
	UINT mask;
	DWORD dwState;
	DWORD dwStateMask;
	LPSTR pszText;
	int cchTextMax;
	int iImage;
	LPARAM lParam;
} TCITEMA,*LPTCITEMA;
typedef struct tagTCITEMW {
	UINT mask;
	DWORD dwState;
	DWORD dwStateMask;
	LPWSTR pszText;
	int cchTextMax;
	int iImage;
	LPARAM lParam;
} TCITEMW, *LPTCITEMW;
#ifdef UNICODE
#define TCITEMHEADER	TCITEMHEADERW
#define LPTCITEMHEADER	LPTCITEMHEADERW
#define TCITEMHEADER	TCITEMHEADERW
#define LPTCITEMHEADER	LPTCITEMHEADERW
#define TCITEM	TCITEMW
#define LPTCITEM	LPTCITEMW
#else
#define TCITEMHEADER	TCITEMHEADERA
#define LPTCITEMHEADER	LPTCITEMHEADERA
#define TCITEMHEADER	TCITEMHEADERA
#define LPTCITEMHEADER	LPTCITEMHEADERA
#define TCITEM	TCITEMA
#define LPTCITEM	LPTCITEMA
#endif
#ifndef FIELD_OFFSET
#define FIELD_OFFSET(type, field) ((LONG)(LONG *)&(((type *)0)->field))
#endif
typedef DWORD MONTHDAYSTATE,*LPMONTHDAYSTATE;
typedef HANDLE HRAWINPUT;
/* Structures associated with the executable image files. jn */

#define IMAGE_DOS_SIGNATURE 0x5A4D
#define IMAGE_OS2_SIGNATURE 0x454E
#define IMAGE_OS2_SIGNATURE_LE 0x454C
#define IMAGE_VXD_SIGNATURE 0x454C
#define IMAGE_NT_SIGNATURE 0x4550
#define IMAGE_SIZEOF_FILE_HEADER 20
#define IMAGE_FILE_RELOCS_STRIPPED 1
#define IMAGE_FILE_EXECUTABLE_IMAGE 2
#define IMAGE_FILE_LINE_NUMS_STRIPPED 4
#define IMAGE_FILE_LOCAL_SYMS_STRIPPED 8
#define IMAGE_FILE_BYTES_REVERSED_LO 128
#define IMAGE_FILE_32BIT_MACHINE 256
#define IMAGE_FILE_DEBUG_STRIPPED 512
#define IMAGE_FILE_SYSTEM 0x1000
#define IMAGE_FILE_DLL 0x2000
#define IMAGE_FILE_BYTES_REVERSED_HI 0x8000
#define IMAGE_FILE_MACHINE_UNKNOWN 0
#define IMAGE_FILE_MACHINE_I386 0x14c
#define IMAGE_FILE_MACHINE_R3000 0x162
#define IMAGE_FILE_MACHINE_R4000 0x166
#define IMAGE_FILE_MACHINE_R10000 0x168
#define IMAGE_FILE_MACHINE_ALPHA 0x184
#define IMAGE_FILE_MACHINE_POWERPC 0x1F0
#define IMAGE_NUMBEROF_DIRECTORY_ENTRIES 16
#define IMAGE_SIZEOF_ROM_OPTIONAL_HEADER 56
#define IMAGE_SIZEOF_STD_OPTIONAL_HEADER 28
#define IMAGE_SIZEOF_NT_OPTIONAL_HEADER 224
#define IMAGE_NT_OPTIONAL_HDR_MAGIC 0x10b
#define IMAGE_ROM_OPTIONAL_HDR_MAGIC 0x107
#define IMAGE_FIRST_SECTION(nth) ((PIMAGE_SECTION_HEADER) \
 ((DWORD)nth + FIELD_OFFSET( IMAGE_NT_HEADERS,OptionalHeader ) + \
 ((PIMAGE_NT_HEADERS)(nth))->FileHeader.SizeOfOptionalHeader))
#define IMAGE_SUBSYSTEM_UNKNOWN 0
#define IMAGE_SUBSYSTEM_NATIVE 1
#define IMAGE_SUBSYSTEM_WINDOWS_GUI 2
#define IMAGE_SUBSYSTEM_WINDOWS_CUI 3
#define IMAGE_SUBSYSTEM_OS2_CUI 5
#define IMAGE_SUBSYSTEM_POSIX_CUI 7
#define IMAGE_SUBSYSTEM_WINDOWS_CE_GUI 9
#define IMAGE_DIRECTORY_ENTRY_EXPORT 0
#define IMAGE_DIRECTORY_ENTRY_IMPORT 1
#define IMAGE_DIRECTORY_ENTRY_RESOURCE 2
#define IMAGE_DIRECTORY_ENTRY_EXCEPTION 3
#define IMAGE_DIRECTORY_ENTRY_SECURITY 4
#define IMAGE_DIRECTORY_ENTRY_BASERELOC 5
#define IMAGE_DIRECTORY_ENTRY_DEBUG 6
#define IMAGE_DIRECTORY_ENTRY_COPYRIGHT 7
#define IMAGE_DIRECTORY_ENTRY_GLOBALPTR 8
#define IMAGE_DIRECTORY_ENTRY_TLS 9
#define IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG 10
#define IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT 11
#define IMAGE_DIRECTORY_ENTRY_IAT 12
#define IMAGE_SIZEOF_SHORT_NAME 8
#define IMAGE_SIZEOF_SECTION_HEADER 40
#define IMAGE_SCN_TYPE_NO_PAD 8
#define IMAGE_SCN_CNT_CODE 32
#define IMAGE_SCN_CNT_INITIALIZED_DATA 64
#define IMAGE_SCN_CNT_UNINITIALIZED_DATA 128
#define IMAGE_SCN_LNK_OTHER 256
#define IMAGE_SCN_LNK_INFO 512
#define IMAGE_SCN_LNK_REMOVE 0x800
#define IMAGE_SCN_LNK_COMDAT 0x1000
#define IMAGE_SCN_MEM_FARDATA 0x8000
#define IMAGE_SCN_MEM_PURGEABLE 0x20000
#define IMAGE_SCN_MEM_16BIT 0x20000
#define IMAGE_SCN_MEM_LOCKED 0x40000
#define IMAGE_SCN_MEM_PRELOAD 0x80000
#define IMAGE_SCN_ALIGN_1BYTES 0x100000
#define IMAGE_SCN_ALIGN_2BYTES 0x200000
#define IMAGE_SCN_ALIGN_4BYTES 0x300000
#define IMAGE_SCN_ALIGN_8BYTES 0x400000
#define IMAGE_SCN_ALIGN_16BYTES 0x500000
#define IMAGE_SCN_ALIGN_32BYTES 0x600000
#define IMAGE_SCN_ALIGN_64BYTES 0x700000
#define IMAGE_SCN_LNK_NRELOC_OVFL 0x1000000
#define IMAGE_SCN_MEM_DISCARDABLE 0x2000000
#define IMAGE_SCN_MEM_NOT_CACHED 0x4000000
#define IMAGE_SCN_MEM_NOT_PAGED 0x8000000
#define IMAGE_SCN_MEM_SHARED 0x10000000
#define IMAGE_SCN_MEM_EXECUTE 0x20000000
#define IMAGE_SCN_MEM_READ 0x40000000
#define IMAGE_SCN_MEM_WRITE 0x80000000
#define IMAGE_SIZEOF_SYMBOL 18
#define IMAGE_SYM_UNDEFINED (SHORT)0
#define IMAGE_SYM_ABSOLUTE (SHORT)-1
#define IMAGE_SYM_DEBUG (SHORT)-2
#define IMAGE_SYM_TYPE_NULL 0
#define IMAGE_SYM_TYPE_VOID 1
#define IMAGE_SYM_TYPE_CHAR 2
#define IMAGE_SYM_TYPE_SHORT 3
#define IMAGE_SYM_TYPE_INT 4
#define IMAGE_SYM_TYPE_LONG 5
#define IMAGE_SYM_TYPE_FLOAT 6
#define IMAGE_SYM_TYPE_DOUBLE 7
#define IMAGE_SYM_TYPE_STRUCT 8
#define IMAGE_SYM_TYPE_UNION 9
#define IMAGE_SYM_TYPE_ENUM 10
#define IMAGE_SYM_TYPE_MOE 11
#define IMAGE_SYM_TYPE_BYTE 12
#define IMAGE_SYM_TYPE_WORD 13
#define IMAGE_SYM_TYPE_UINT 14
#define IMAGE_SYM_TYPE_DWORD 15
#define IMAGE_SYM_TYPE_PCODE 0x8000
#define IMAGE_SYM_DTYPE_NULL 0
#define IMAGE_SYM_DTYPE_POINTER 1
#define IMAGE_SYM_DTYPE_FUNCTION 2
#define IMAGE_SYM_DTYPE_ARRAY 3
#define IMAGE_SYM_CLASS_END_OF_FUNCTION (BYTE )-1
#define IMAGE_SYM_CLASS_NULL 0
#define IMAGE_SYM_CLASS_AUTOMATIC 1
#define IMAGE_SYM_CLASS_EXTERNAL 2
#define IMAGE_SYM_CLASS_STATIC 3
#define IMAGE_SYM_CLASS_REGISTER 4
#define IMAGE_SYM_CLASS_EXTERNAL_DEF 5
#define IMAGE_SYM_CLASS_LABEL 6
#define IMAGE_SYM_CLASS_UNDEFINED_LABEL 7
#define IMAGE_SYM_CLASS_MEMBER_OF_STRUCT 8
#define IMAGE_SYM_CLASS_ARGUMENT 9
#define IMAGE_SYM_CLASS_STRUCT_TAG 10
#define IMAGE_SYM_CLASS_MEMBER_OF_UNION 11
#define IMAGE_SYM_CLASS_UNION_TAG 12
#define IMAGE_SYM_CLASS_TYPE_DEFINITION 13
#define IMAGE_SYM_CLASS_UNDEFINED_STATIC 14
#define IMAGE_SYM_CLASS_ENUM_TAG 15
#define IMAGE_SYM_CLASS_MEMBER_OF_ENUM 16
#define IMAGE_SYM_CLASS_REGISTER_PARAM 17
#define IMAGE_SYM_CLASS_BIT_FIELD 18
#define IMAGE_SYM_CLASS_FAR_EXTERNAL 0x44
#define IMAGE_SYM_CLASS_BLOCK 0x64
#define IMAGE_SYM_CLASS_FUNCTION 0x65
#define IMAGE_SYM_CLASS_END_OF_STRUCT 0x66
#define IMAGE_SYM_CLASS_FILE 0x67
#define IMAGE_SYM_CLASS_SECTION 0x68
#define IMAGE_SYM_CLASS_WEAK_EXTERNAL 0x69
#define N_BTMASK 0xF
#define N_TMASK 0x30
#define N_TMASK1 0xC0
#define N_TMASK2 0xF0
#define N_BTSHFT 4
#define N_TSHIFT 2
#define BTYPE(x) ((x) & N_BTMASK)
#ifndef ISPTR
#define ISPTR(x) (((x)&N_TMASK)==(IMAGE_SYM_DTYPE_POINTER << N_BTSHFT))
#endif
#ifndef ISFCN
#define ISFCN(x) (((x)&N_TMASK)==(IMAGE_SYM_DTYPE_FUNCTION << N_BTSHFT))
#endif
#ifndef ISARY
#define ISARY(x) (((x) & N_TMASK) == (IMAGE_SYM_DTYPE_ARRAY << N_BTSHFT))
#endif
#ifndef ISTAG
#define ISTAG(x) ((x)==IMAGE_SYM_CLASS_STRUCT_TAG || (x)==IMAGE_SYM_CLASS_UNION_TAG || (x)==IMAGE_SYM_CLASS_ENUM_TAG)
#endif
#ifndef INCREF
#define INCREF(x) ((((x)&~N_BTMASK)<<N_TSHIFT)|(IMAGE_SYM_DTYPE_POINTER<<N_BTSHFT)|((x)&N_BTMASK))
#endif
#ifndef DECREF
#define DECREF(x) ((((x)>>N_TSHIFT)&~N_BTMASK)|((x)&N_BTMASK))
#endif
#define IMAGE_SIZEOF_SYMBOL	18
#define IMAGE_COMDAT_SELECT_NODUPLICATES	1
#define IMAGE_COMDAT_SELECT_ANY	2
#define IMAGE_COMDAT_SELECT_SAME_SIZE	3
#define IMAGE_COMDAT_SELECT_EXACT_MATCH	4
#define IMAGE_COMDAT_SELECT_ASSOCIATIVE	5
#define IMAGE_COMDAT_SELECT_LARGEST	6
#define IMAGE_COMDAT_SELECT_NEWEST	7
#define IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY	1
#define IMAGE_WEAK_EXTERN_SEARCH_LIBRARY	2
#define IMAGE_WEAK_EXTERN_SEARCH_ALIAS	3
#define IMAGE_SIZEOF_RELOCATION 10
#define IMAGE_REL_I386_ABSOLUTE	0
#define IMAGE_REL_I386_DIR16	1
#define IMAGE_REL_I386_REL16	2
#define IMAGE_REL_I386_DIR32	6
#define IMAGE_REL_I386_DIR32NB	7
#define IMAGE_REL_I386_SEG12 9
#define IMAGE_REL_I386_SECTION 10
#define IMAGE_REL_I386_SECREL 11
#define IMAGE_REL_I386_REL32 0x14
#define IMAGE_SIZEOF_BASE_RELOCATION 8
#define IMAGE_REL_BASED_ABSOLUTE 0
#define IMAGE_REL_BASED_HIGH 1
#define IMAGE_REL_BASED_LOW 2
#define IMAGE_REL_BASED_HIGHLOW 3
#define IMAGE_REL_BASED_HIGHADJ 4
#define IMAGE_REL_BASED_MIPS_JMPADDR 5
#define IMAGE_SIZEOF_LINENUMBER 6
#define IMAGE_ARCHIVE_START_SIZE 8
#define IMAGE_ARCHIVE_START "!<arch>\n"
#define IMAGE_ARCHIVE_END "`\n"
#define IMAGE_ARCHIVE_PAD "\n"
#define IMAGE_ARCHIVE_LINKER_MEMBER "/ "
#define IMAGE_ARCHIVE_LONGNAMES_MEMBER "// "
#define IMAGE_SIZEOF_ARCHIVE_MEMBER_HDR 60
#define IMAGE_ORDINAL_FLAG 0x80000000
#define IMAGE_SNAP_BY_ORDINAL(Ordinal) ((Ordinal & IMAGE_ORDINAL_FLAG) != 0)
#define IMAGE_ORDINAL(Ordinal) (Ordinal & 0xffff)
#define IMAGE_RESOURCE_NAME_IS_STRING 0x80000000
#define IMAGE_RESOURCE_DATA_IS_DIRECTORY 0x80000000
#define IMAGE_DEBUG_TYPE_UNKNOWN 0
#define IMAGE_DEBUG_TYPE_COFF 1
#define IMAGE_DEBUG_TYPE_CODEVIEW 2
#define IMAGE_DEBUG_TYPE_FPO 3
#define IMAGE_DEBUG_TYPE_MISC 4
#define IMAGE_DEBUG_TYPE_EXCEPTION 5
#define IMAGE_DEBUG_TYPE_FIXUP 6
#define IMAGE_DEBUG_TYPE_OMAP_TO_SRC 7
#define IMAGE_DEBUG_TYPE_OMAP_FROM_SRC 8
#define FRAME_FPO 0
#define FRAME_TRAP 1
#define FRAME_TSS 2
#define FRAME_NONFPO 3
#define SIZEOF_RFPO_DATA 16
#define IMAGE_DEBUG_MISC_EXENAME 1
#define IMAGE_SEPARATE_DEBUG_SIGNATURE 0x4944
#define CCHILDREN_TITLEBAR	5
#define CCHILDREN_SCROLLBAR	5
typedef struct _IMAGE_DOS_HEADER {
	WORD e_magic;
	WORD e_cblp;
	WORD e_cp;
	WORD e_crlc;
	WORD e_cparhdr;
	WORD e_minalloc;
	WORD e_maxalloc;
	WORD e_ss;
	WORD e_sp;
	WORD e_csum;
	WORD e_ip;
	WORD e_cs;
	WORD e_lfarlc;
	WORD e_ovno;
	WORD e_res[4];
	WORD e_oemid;
	WORD e_oeminfo;
	WORD e_res2[10];
	LONG e_lfanew;
} IMAGE_DOS_HEADER,*PIMAGE_DOS_HEADER;
typedef struct _IMAGE_OS2_HEADER {
	WORD ne_magic;
	CHAR ne_ver;
	CHAR ne_rev;
	WORD ne_enttab;
	WORD ne_cbenttab;
	LONG ne_crc;
	WORD ne_flags;
	WORD ne_autodata;
	WORD ne_heap;
	WORD ne_stack;
	LONG ne_csip;
	LONG ne_sssp;
	WORD ne_cseg;
	WORD ne_cmod;
	WORD ne_cbnrestab;
	WORD ne_segtab;
	WORD ne_rsrctab;
	WORD ne_restab;
	WORD ne_modtab;
	WORD ne_imptab;
	LONG ne_nrestab;
	WORD ne_cmovent;
	WORD ne_align;
	WORD ne_cres;
	BYTE ne_exetyp;
	BYTE ne_flagsothers;
	WORD ne_pretthunks;
	WORD ne_psegrefbytes;
	WORD ne_swaparea;
	WORD ne_expver;
} IMAGE_OS2_HEADER,*PIMAGE_OS2_HEADER;
typedef struct _IMAGE_VXD_HEADER {
	WORD e32_magic;
	BYTE e32_border;
	BYTE e32_worder;
	DWORD e32_level;
	WORD e32_cpu;
	WORD e32_os;
	DWORD e32_ver;
	DWORD e32_mflags;
	DWORD e32_mpages;
	DWORD e32_startobj;
	DWORD e32_eip;
	DWORD e32_stackobj;
	DWORD e32_esp;
	DWORD e32_pagesize;
	DWORD e32_lastpagesize;
	DWORD e32_fixupsize;
	DWORD e32_fixupsum;
	DWORD e32_ldrsize;
	DWORD e32_ldrsum;
	DWORD e32_objtab;
	DWORD e32_objcnt;
	DWORD e32_objmap;
	DWORD e32_itermap;
	DWORD e32_rsrctab;
	DWORD e32_rsrccnt;
	DWORD e32_restab;
	DWORD e32_enttab;
	DWORD e32_dirtab;
	DWORD e32_dircnt;
	DWORD e32_fpagetab;
	DWORD e32_frectab;
	DWORD e32_impmod;
	DWORD e32_impmodcnt;
	DWORD e32_impproc;
	DWORD e32_pagesum;
	DWORD e32_datapage;
	DWORD e32_preload;
	DWORD e32_nrestab;
	DWORD e32_cbnrestab;
	DWORD e32_nressum;
	DWORD e32_autodata;
	DWORD e32_debuginfo;
	DWORD e32_debuglen;
	DWORD e32_instpreload;
	DWORD e32_instdemand;
	DWORD e32_heapsize;
	BYTE e32_res3[12];
	DWORD e32_winresoff;
	DWORD e32_winreslen;
	WORD e32_devid;
	WORD e32_ddkver;
} IMAGE_VXD_HEADER,*PIMAGE_VXD_HEADER;
typedef struct _IMAGE_FILE_HEADER {
	WORD Machine;
	WORD NumberOfSections;
	DWORD TimeDateStamp;
	DWORD PointerToSymbolTable;
	DWORD NumberOfSymbols;
	WORD SizeOfOptionalHeader;
	WORD Characteristics;
} IMAGE_FILE_HEADER,*PIMAGE_FILE_HEADER;
typedef struct _IMAGE_DATA_DIRECTORY {
	DWORD VirtualAddress;
	DWORD Size;
} IMAGE_DATA_DIRECTORY,*PIMAGE_DATA_DIRECTORY;
typedef struct _IMAGE_OPTIONAL_HEADERXXX {
	WORD Magic;
	BYTE MajorLinkerVersion;
	BYTE MinorLinkerVersion;
	DWORD SizeOfCode;
	DWORD SizeOfInitializedData;
	DWORD SizeOfUninitializedData;
	DWORD AddressOfEntryPoint;
	DWORD BaseOfCode;
	DWORD BaseOfData;
	DWORD ImageBase;
	DWORD SectionAlignment;
	DWORD FileAlignment;
	WORD MajorOperatingSystemVersion;
	WORD MinorOperatingSystemVersion;
	WORD MajorImageVersion;
	WORD MinorImageVersion;
	WORD MajorSubsystemVersion;
	WORD MinorSubsystemVersion;
	DWORD Win32VersionValue;
	DWORD SizeOfImage;
	DWORD SizeOfHeaders;
	DWORD CheckSum;
	WORD Subsystem;
	WORD DllCharacteristics;
	DWORD SizeOfStackReserve;
	DWORD SizeOfStackCommit;
	DWORD SizeOfHeapReserve;
	DWORD SizeOfHeapCommit;
	DWORD LoaderFlags;
	DWORD NumberOfRvaAndSizes;
	IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];
} IMAGE_OPTIONAL_HEADER,*PIMAGE_OPTIONAL_HEADER;
typedef struct _IMAGE_OPTIONAL_HEADER64 {
	WORD	Magic;
	BYTE	MajorLinkerVersion;
	BYTE	MinorLinkerVersion;
	DWORD	SizeOfCode;
	DWORD	SizeOfInitializedData;
	DWORD	SizeOfUninitializedData;
	DWORD	AddressOfEntryPoint;
	DWORD	BaseOfCode;
	ULONGLONG	ImageBase;
	DWORD	SectionAlignment;
	DWORD	FileAlignment;
	WORD	MajorOperatingSystemVersion;
	WORD	MinorOperatingSystemVersion;
	WORD	MajorImageVersion;
	WORD	MinorImageVersion;
	WORD	MajorSubsystemVersion;
	WORD	MinorSubsystemVersion;
	DWORD	Win32VersionValue;
	DWORD	SizeOfImage;
	DWORD	SizeOfHeaders;
	DWORD	CheckSum;
	WORD	Subsystem;
	WORD	DllCharacteristics;
	ULONGLONG SizeOfStackReserve;
	ULONGLONG SizeOfStackCommit;
	ULONGLONG SizeOfHeapReserve;
	ULONGLONG SizeOfHeapCommit;
	DWORD	LoaderFlags;
	DWORD	NumberOfRvaAndSizes;
	IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64;


#define IMAGE_SIZEOF_NT_OPTIONAL64_HEADER	240


typedef struct _IMAGE_OPTIONAL_HEADER {
    //
    // Standard fields.
    //

    WORD    Magic;
    BYTE    MajorLinkerVersion;
    BYTE    MinorLinkerVersion;
    DWORD   SizeOfCode;
    DWORD   SizeOfInitializedData;
    DWORD   SizeOfUninitializedData;
    DWORD   AddressOfEntryPoint;
    DWORD   BaseOfCode;
    DWORD   BaseOfData;

    //
    // NT additional fields.
    //

    DWORD   ImageBase;
    DWORD   SectionAlignment;
    DWORD   FileAlignment;
    WORD    MajorOperatingSystemVersion;
    WORD    MinorOperatingSystemVersion;
    WORD    MajorImageVersion;
    WORD    MinorImageVersion;
    WORD    MajorSubsystemVersion;
    WORD    MinorSubsystemVersion;
    DWORD   Win32VersionValue;
    DWORD   SizeOfImage;
    DWORD   SizeOfHeaders;
    DWORD   CheckSum;
    WORD    Subsystem;
    WORD    DllCharacteristics;
    DWORD   SizeOfStackReserve;
    DWORD   SizeOfStackCommit;
    DWORD   SizeOfHeapReserve;
    DWORD   SizeOfHeapCommit;
    DWORD   LoaderFlags;
    DWORD   NumberOfRvaAndSizes;
    IMAGE_DATA_DIRECTORY DataDirectory[IMAGE_NUMBEROF_DIRECTORY_ENTRIES];
} IMAGE_OPTIONAL_HEADER32, *PIMAGE_OPTIONAL_HEADER32;



typedef struct _IMAGE_NT_HEADERS64 {
	DWORD Signature;
	IMAGE_FILE_HEADER FileHeader;
	IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER {
	WORD Magic;
	BYTE MajorLinkerVersion;
	BYTE MinorLinkerVersion;
	DWORD SizeOfCode;
	DWORD SizeOfInitializedData;
	DWORD SizeOfUninitializedData;
	DWORD AddressOfEntryPoint;
	DWORD BaseOfCode;
	DWORD BaseOfData;
	DWORD BaseOfBss;
	DWORD GprMask;
	DWORD CprMask[4];
	DWORD GpValue;
} IMAGE_ROM_OPTIONAL_HEADER,*PIMAGE_ROM_OPTIONAL_HEADER;
#define IMAGE_SIZEOF_ROM_OPTIONAL_HEADER 56
#define IMAGE_SIZEOF_STD_OPTIONAL_HEADER 28
#define IMAGE_SIZEOF_NT_OPTIONAL_HEADER 224
#define IMAGE_NT_OPTIONAL_HDR_MAGIC 0x10b
#define IMAGE_ROM_OPTIONAL_HDR_MAGIC 0x107
typedef struct _IMAGE_NT_HEADERS {
	DWORD Signature;
	IMAGE_FILE_HEADER FileHeader;
	IMAGE_OPTIONAL_HEADER OptionalHeader;
} IMAGE_NT_HEADERS,*PIMAGE_NT_HEADERS;
typedef IMAGE_NT_HEADERS IMAGE_NT_HEADERS32;
typedef IMAGE_NT_HEADERS32 *PIMAGE_NT_HEADERS32;
#define LPIMAGE_NT_HEADERS PIMAGE_NT_HEADERS;
typedef struct _IMAGE_ROM_HEADERS {
	IMAGE_FILE_HEADER FileHeader;
	IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
} IMAGE_ROM_HEADERS,*PIMAGE_ROM_HEADERS;
typedef struct _IMAGE_SECTION_HEADER {
	BYTE Name[IMAGE_SIZEOF_SHORT_NAME];
	union {
		DWORD PhysicalAddress;
		DWORD VirtualSize;
	} Misc;
	DWORD VirtualAddress;
	DWORD SizeOfRawData;
	DWORD PointerToRawData;
	DWORD PointerToRelocations;
	DWORD PointerToLinenumbers;
	WORD NumberOfRelocations;
	WORD NumberOfLinenumbers;
	DWORD Characteristics;
} IMAGE_SECTION_HEADER,*PIMAGE_SECTION_HEADER;
typedef struct _IMAGE_SYMBOL {
	union {
		BYTE ShortName[8];
		struct {
			DWORD Short;
			DWORD Long;
		} Name;
		PBYTE LongName[2];
	} N;
	DWORD Value;
	SHORT SectionNumber;
	WORD Type;
	BYTE StorageClass;
	BYTE NumberOfAuxSymbols;
} IMAGE_SYMBOL;
typedef IMAGE_SYMBOL *PIMAGE_SYMBOL;
typedef union _IMAGE_AUX_SYMBOL {
	struct {
		DWORD TagIndex;
		union {
			struct { WORD Linenumber; WORD Size; } LnSz;
			DWORD TotalSize;
		} Misc;
		union {
			struct {
				DWORD PointerToLinenumber;
				DWORD PointerToNextFunction;
			} Function;
			struct {
				WORD Dimension[4];
			} Array;
		} FcnAry;
		WORD TvIndex;
	} Sym;
	struct {
		BYTE Name[IMAGE_SIZEOF_SYMBOL];
	} File;
	struct {
		DWORD Length;
		WORD NumberOfRelocations;
		WORD NumberOfLinenumbers;
		DWORD CheckSum;
		SHORT Number;
		BYTE Selection;
	} Section;
} IMAGE_AUX_SYMBOL;
typedef IMAGE_AUX_SYMBOL *PIMAGE_AUX_SYMBOL;
typedef struct _IMAGE_RELOCATION {
#ifdef __LCC__ /* I do not support unnamed unions... jn */
	DWORD VirtualAddress;
#else
	union {
		DWORD VirtualAddress;
		DWORD RelocCount;
	};
#endif
	DWORD SymbolTableIndex;
	WORD Type;
} IMAGE_RELOCATION;
typedef IMAGE_RELOCATION *PIMAGE_RELOCATION;
typedef struct _IMAGE_BASE_RELOCATION {
	DWORD VirtualAddress;
	DWORD SizeOfBlock;
} IMAGE_BASE_RELOCATION,*PIMAGE_BASE_RELOCATION;
typedef struct _IMAGE_LINENUMBER {
	union {
		DWORD SymbolTableIndex;
		DWORD VirtualAddress;
	} Type;
	WORD Linenumber;
} IMAGE_LINENUMBER;
typedef IMAGE_LINENUMBER *PIMAGE_LINENUMBER;
typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER {
	BYTE Name[16];
	BYTE Date[12];
	BYTE UserID[6];
	BYTE GroupID[6];
	BYTE Mode[8];
	BYTE Size[10];
	BYTE EndHeader[2];
} IMAGE_ARCHIVE_MEMBER_HEADER,*PIMAGE_ARCHIVE_MEMBER_HEADER;
typedef struct _IMAGE_EXPORT_DIRECTORY {
	DWORD Characteristics;
	DWORD TimeDateStamp;
	WORD MajorVersion;
	WORD MinorVersion;
	DWORD Name;
	DWORD Base;
	DWORD NumberOfFunctions;
	DWORD NumberOfNames;
	DWORD AddressOfFunctions;
	DWORD AddressOfNames;
	DWORD AddressOfNameOrdinals;
} IMAGE_EXPORT_DIRECTORY,*PIMAGE_EXPORT_DIRECTORY;

typedef struct _IMAGE_IMPORT_BY_NAME {
	WORD Hint;
	BYTE Name[1];
} IMAGE_IMPORT_BY_NAME,*PIMAGE_IMPORT_BY_NAME;
typedef struct _IMAGE_THUNK_DATA {
	union {
		PBYTE ForwarderString;
		PDWORD Function;
		DWORD Ordinal;
		PIMAGE_IMPORT_BY_NAME AddressOfData;
	} ;
} IMAGE_THUNK_DATA,*PIMAGE_THUNK_DATA;
typedef struct _IMAGE_THUNK_DATA64 {
	union {
		ULONGLONG ForwarderString;
		ULONGLONG Function;
		ULONGLONG Ordinal;
		ULONGLONG AddressOfData;
	};
} IMAGE_THUNK_DATA64;
typedef IMAGE_THUNK_DATA64 * PIMAGE_THUNK_DATA64;
typedef struct _IMAGE_IMPORT_DESCRIPTOR {
	union {
		DWORD Characteristics;
		DWORD OriginalFirstThunk;
	} ;
	DWORD TimeDateStamp;
	DWORD ForwarderChain;
	DWORD Name;
	DWORD FirstThunk;
} IMAGE_IMPORT_DESCRIPTOR,*PIMAGE_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR {
	DWORD TimeDateStamp;
	WORD OffsetModuleName;
	WORD NumberOfModuleForwarderRefs;
} IMAGE_BOUND_IMPORT_DESCRIPTOR,*PIMAGE_BOUND_IMPORT_DESCRIPTOR;
typedef struct _IMAGE_BOUND_FORWARDER_REF {
	DWORD TimeDateStamp;
	WORD OffsetModuleName;
	WORD Reserved;
} IMAGE_BOUND_FORWARDER_REF,*PIMAGE_BOUND_FORWARDER_REF;
typedef VOID ( *PIMAGE_TLS_CALLBACK)(PVOID,DWORD,PVOID);
typedef struct _IMAGE_TLS_DIRECTORY {
	DWORD StartAddressOfRawData;
	DWORD EndAddressOfRawData;
	PDWORD AddressOfIndex;
	PIMAGE_TLS_CALLBACK *AddressOfCallBacks;
	DWORD SizeOfZeroFill;
	DWORD Characteristics;
} IMAGE_TLS_DIRECTORY,*PIMAGE_TLS_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIRECTORY {
	DWORD Characteristics;
	DWORD TimeDateStamp;
	WORD MajorVersion;
	WORD MinorVersion;
	WORD NumberOfNamedEntries;
	WORD NumberOfIdEntries;
} IMAGE_RESOURCE_DIRECTORY,*PIMAGE_RESOURCE_DIRECTORY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY {
	union {
		struct { unsigned NameOffset:31; unsigned NameIsString:1; };
		DWORD Name;
		WORD Id;
	} ;
	union {
		DWORD OffsetToData;
		struct { unsigned OffsetToDirectory:31; unsigned DataIsDirectory:1; };
	} ;
} IMAGE_RESOURCE_DIRECTORY_ENTRY,*PIMAGE_RESOURCE_DIRECTORY_ENTRY;
typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING {
	WORD Length;
	CHAR NameString[1];
} IMAGE_RESOURCE_DIRECTORY_STRING,*PIMAGE_RESOURCE_DIRECTORY_STRING;
typedef struct _IMAGE_RESOURCE_DIR_STRING_U {
	WORD Length;
	WCHAR NameString[1];
} IMAGE_RESOURCE_DIR_STRING_U,*PIMAGE_RESOURCE_DIR_STRING_U;
typedef struct _IMAGE_RESOURCE_DATA_ENTRY {
	DWORD OffsetToData;
	DWORD Size;
	DWORD CodePage;
	DWORD Reserved;
} IMAGE_RESOURCE_DATA_ENTRY,*PIMAGE_RESOURCE_DATA_ENTRY;
typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY {
	DWORD Characteristics;
	DWORD TimeDateStamp;
	WORD MajorVersion;
	WORD MinorVersion;
	DWORD GlobalFlagsClear;
	DWORD GlobalFlagsSet;
	DWORD CriticalSectionDefaultTimeout;
	DWORD DeCommitFreeBlockThreshold;
	DWORD DeCommitTotalFreeThreshold;
	PVOID LockPrefixTable;
	DWORD MaximumAllocationSize;
	DWORD VirtualMemoryThreshold;
	DWORD ProcessHeapFlags;
	DWORD Reserved[4];
} IMAGE_LOAD_CONFIG_DIRECTORY,*PIMAGE_LOAD_CONFIG_DIRECTORY;
typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY {
	DWORD BeginAddress;
	DWORD EndAddress;
	PVOID ExceptionHandler;
	PVOID HandlerData;
	DWORD PrologEndAddress;
} IMAGE_RUNTIME_FUNCTION_ENTRY,*PIMAGE_RUNTIME_FUNCTION_ENTRY;
typedef struct _IMAGE_DEBUG_DIRECTORY {
	DWORD Characteristics;
	DWORD TimeDateStamp;
	WORD MajorVersion;
	WORD MinorVersion;
	DWORD Type;
	DWORD SizeOfData;
	DWORD AddressOfRawData;
	DWORD PointerToRawData;
} IMAGE_DEBUG_DIRECTORY,*PIMAGE_DEBUG_DIRECTORY;
typedef struct _IMAGE_COFF_SYMBOLS_HEADER {
	DWORD NumberOfSymbols;
	DWORD LvaToFirstSymbol;
	DWORD NumberOfLinenumbers;
	DWORD LvaToFirstLinenumber;
	DWORD RvaToFirstByteOfCode;
	DWORD RvaToLastByteOfCode;
	DWORD RvaToFirstByteOfData;
	DWORD RvaToLastByteOfData;
} IMAGE_COFF_SYMBOLS_HEADER,*PIMAGE_COFF_SYMBOLS_HEADER;
#define FRAME_FPO 0
#define FRAME_TRAP 1
#define FRAME_TSS 2
#define FRAME_NONFPO 3
typedef struct _FPO_DATA {
	DWORD ulOffStart;
	DWORD cbProcSize;
	DWORD cdwLocals;
	WORD cdwParams;
	unsigned cbProlog:8;
	unsigned cbRegs:3;
	unsigned fHasSEH:1;
	unsigned fUseBP:1;
	unsigned reserved:1;
	unsigned cbFrame:2;
} FPO_DATA,*PFPO_DATA;
#define SIZEOF_RFPO_DATA 16
typedef struct _IMAGE_DEBUG_MISC {
	DWORD DataType;
	DWORD Length;
	BOOLEAN Unicode;
	BYTE Reserved[3];
	BYTE Data[1];
} IMAGE_DEBUG_MISC,*PIMAGE_DEBUG_MISC;
typedef struct _IMAGE_FUNCTION_ENTRY {
	DWORD StartingAddress;
	DWORD EndingAddress;
	DWORD EndOfPrologue;
} IMAGE_FUNCTION_ENTRY,*PIMAGE_FUNCTION_ENTRY;
typedef struct _IMAGE_SEPARATE_DEBUG_HEADER {
	WORD Signature;
	WORD Flags;
	WORD Machine;
	WORD Characteristics;
	DWORD TimeDateStamp;
	DWORD CheckSum;
	DWORD ImageBase;
	DWORD SizeOfImage;
	DWORD NumberOfSections;
	DWORD ExportedNamesSize;
	DWORD DebugDirectorySize;
	DWORD SectionAlignment;
	DWORD Reserved[2];
} IMAGE_SEPARATE_DEBUG_HEADER,*PIMAGE_SEPARATE_DEBUG_HEADER;
typedef int (CALLBACK *ENUMMETAFILEPROC)(HDC,HANDLETABLE *,METARECORD *,int,LPARAM);
typedef int (CALLBACK *ENHMETAFILEPROC) (HDC,HANDLETABLE,ENHMETARECORD,int,LPARAM);
typedef int (CALLBACK *ENUMFONTSPROC) (LPLOGFONT,LPTEXTMETRIC,DWORD,LPARAM);
typedef int (CALLBACK *FONTENUMPROC)(ENUMLOGFONT *,NEWTEXTMETRIC *,int,LPARAM);
typedef int (CALLBACK *FONTENUMEXPROC)(ENUMLOGFONTEX *,NEWTEXTMETRICEX *,int,LPARAM);
typedef VOID(CALLBACK *LPOVERLAPPED_COMPLETION_ROUTINE)(DWORD,DWORD,LPOVERLAPPED);
typedef int (CALLBACK* ENHMFENUMPROC)(HDC,HANDLETABLE *,ENHMETARECORD *,int,LPARAM);
typedef int (CALLBACK* MFENUMPROC)(HDC,HANDLETABLE *,METARECORD *,int,LPARAM);
typedef struct _NT_TIB {
	struct _EXCEPTION_REGISTRATION_RECORD *ExceptionList;
	PVOID StackBase;
	PVOID StackLimit;
	PVOID SubSystemTib;
	union { PVOID FiberData; DWORD Version; };
	PVOID ArbitraryUserPointer;
	struct _NT_TIB *Self;
} NT_TIB;
typedef NT_TIB *PNT_TIB;
#define THREAD_BASE_PRIORITY_LOWRT	15
#define THREAD_BASE_PRIORITY_MAX	2
#define THREAD_BASE_PRIORITY_MIN	-2
#define THREAD_BASE_PRIORITY_IDLE	-15
#pragma pack(push,8)
typedef struct _QUOTA_LIMITS {
	SIZE_T PagedPoolLimit;
	SIZE_T NonPagedPoolLimit;
	SIZE_T MinimumWorkingSetSize;
	SIZE_T MaximumWorkingSetSize;
	SIZE_T PagefileLimit;
	LARGE_INTEGER TimeLimit;
} QUOTA_LIMITS, *PQUOTA_LIMITS;
#pragma pack(pop)
#define QUOTA_LIMITS_HARDWS_MIN_ENABLE	1
#define QUOTA_LIMITS_HARDWS_MIN_DISABLE 2
#define QUOTA_LIMITS_HARDWS_MAX_ENABLE	4
#define QUOTA_LIMITS_HARDWS_MAX_DISABLE 8
typedef struct _QUOTA_LIMITS_EX {
	SIZE_T PagedPoolLimit;
	SIZE_T NonPagedPoolLimit;
	SIZE_T MinimumWorkingSetSize;
	SIZE_T MaximumWorkingSetSize;
	SIZE_T PagefileLimit;
	LARGE_INTEGER TimeLimit;
	SIZE_T Reserved1;
	SIZE_T Reserved2;
	SIZE_T Reserved3;
	SIZE_T Reserved4;
	DWORD Flags;
	DWORD Reserved5;
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX;
typedef struct _IO_COUNTERS {
	ULONGLONG ReadOperationCount;
	ULONGLONG WriteOperationCount;
	ULONGLONG OtherOperationCount;
	ULONGLONG ReadTransferCount;
	ULONGLONG WriteTransferCount;
	ULONGLONG OtherTransferCount;
} IO_COUNTERS;
typedef IO_COUNTERS *PIO_COUNTERS;
typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION {
	LARGE_INTEGER PerProcessUserTimeLimit;
	LARGE_INTEGER PerJobUserTimeLimit;
	DWORD LimitFlags;
	SIZE_T MinimumWorkingSetSize;
	SIZE_T MaximumWorkingSetSize;
	DWORD ActiveProcessLimit;
	ULONG_PTR Affinity;
	DWORD PriorityClass;
	DWORD SchedulingClass;
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION {
	JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
	DWORD align;
	IO_COUNTERS IoInfo;
	SIZE_T ProcessMemoryLimit;
	SIZE_T JobMemoryLimit;
	SIZE_T PeakProcessMemoryUsed;
	SIZE_T PeakJobMemoryUsed;
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION;
typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST {
	DWORD NumberOfAssignedProcesses;
	DWORD NumberOfProcessIdsInList;
	ULONG_PTR ProcessIdList[1];
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST;
typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS {
	DWORD UIRestrictionsClass;
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS;
typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION {
	DWORD SecurityLimitFlags ;
	HANDLE JobToken ;
	PTOKEN_GROUPS SidsToDisable ;
	PTOKEN_PRIVILEGES PrivilegesToDelete ;
	PTOKEN_GROUPS RestrictedSids ;
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION ;
typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION {
	DWORD EndOfJobTimeAction;
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION;
typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT {
	PVOID CompletionKey;
	HANDLE CompletionPort;
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT;
typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION {
	LARGE_INTEGER TotalUserTime;
	LARGE_INTEGER TotalKernelTime;
	LARGE_INTEGER ThisPeriodTotalUserTime;
	LARGE_INTEGER ThisPeriodTotalKernelTime;
	DWORD TotalPageFaultCount;
	DWORD TotalProcesses;
	DWORD ActiveProcesses;
	DWORD TotalTerminatedProcesses;
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION {
	JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
	IO_COUNTERS IoInfo;
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
typedef struct _JOBOBJECT_JOBSET_INFORMATION {
	DWORD MemberLevel;
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION;
#define JOB_OBJECT_TERMINATE_AT_END_OF_JOB 0
#define JOB_OBJECT_POST_AT_END_OF_JOB	1
typedef struct tagPIXELFORMATDESCRIPTOR {
	WORD	nSize;
	WORD	nVersion;
	DWORD	dwFlags;
	BYTE	iPixelType;
	BYTE	cColorBits;
	BYTE	cRedBits;
	BYTE	cRedShift;
	BYTE	cGreenBits;
	BYTE	cGreenShift;
	BYTE	cBlueBits;
	BYTE	cBlueShift;
	BYTE	cAlphaBits;
	BYTE	cAlphaShift;
	BYTE	cAccumBits;
	BYTE	cAccumRedBits;
	BYTE	cAccumGreenBits;
	BYTE	cAccumBlueBits;
	BYTE	cAccumAlphaBits;
	BYTE	cDepthBits;
	BYTE	cStencilBits;
	BYTE	cAuxBuffers;
	BYTE	iLayerType;
	BYTE	bReserved;
	DWORD	dwLayerMask;
	DWORD	dwVisibleMask;
	DWORD	dwDamageMask;
} PIXELFORMATDESCRIPTOR,*PPIXELFORMATDESCRIPTOR,*LPPIXELFORMATDESCRIPTOR;
typedef struct _WIN_CERTIFICATE {
	DWORD	dwLength;
	WORD	wRevision;
	WORD	wCertificateType;
	BYTE	bCertificate[1];
} WIN_CERTIFICATE,*LPWIN_CERTIFICATE;
#define WIN_CERT_REVISION_1_0	0x100
#define WIN_CERT_TYPE_X509 1
#define WIN_CERT_TYPE_PKCS_SIGNED_DATA	2
#define WIN_CERT_TYPE_RESERVED_1	3
typedef LPVOID WIN_TRUST_SUBJECT;
typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT {
	HANDLE	hClientToken;
	GUID	*SubjectType;
	WIN_TRUST_SUBJECT Subject;
} WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT,*LPWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;
typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY {
	GUID	*SubjectType;
	WIN_TRUST_SUBJECT Subject;
} WIN_TRUST_ACTDATA_SUBJECT_ONLY,*LPWIN_TRUST_ACTDATA_SUBJECT_ONLY;
#define WIN_TRUST_SUBJTYPE_RAW_FILE {0x959dc450,0x8d9e,0x11cf,{0x87,0x36,0,0xaa,0,0xa4,0x85,0xeb}}
#define WIN_TRUST_SUBJTYPE_PE_IMAGE {0x43c9a1e0,0x8da0,0x11cf,{0x87,0x36,0,0xaa,0,0xa4,0x85,0xeb}}
#define WIN_TRUST_SUBJTYPE_OLE_STORAGE {0xc257e740,0x8da0,0x11cf,{0x87,0x36,0,0xaa,0,0xa4,0x85,0xeb}}
#define WIN_TRUST_SUBJTYPE_JAVA_CLASS {0x08ad3990,0x8da1,0x11cf,{0x87,0x36,0,0xaa,0,0xa4,0x85,0xeb}}
typedef struct _WIN_TRUST_SUBJECT_FILE {
	HANDLE hFile; LPCWSTR lpPath;
} WIN_TRUST_SUBJECT_FILE,*LPWIN_TRUST_SUBJECT_FILE;
/* TrustedPublisher == 66426730-8da1-11cf-8736-00aa00a485eb */
#define WIN_SPUB_ACTION_TRUSTED_PUBLISHER {0x66426730,0x8da1,0x11cf,{0x87,0x36,0,0xaa,0,0xa4,0x85,0xeb}}
#define WIN_SPUB_ACTION_NT_ACTIVATE_IMAGE {0x8bc96b00,0x8da1,0x11cf,{0x87,0x36,0,0xaa,0,0xa4,0x85,0xeb}}
#define WIN_SPUB_ACTION_PUBLISHED_SOFTWARE {0x64b9d180,0x8da2,0x11cf,{0x87,0x36,0,0xaa,0,0xa4,0x85,0xeb}}
typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA { HANDLE hClientToken;
	LPWIN_CERTIFICATE	lpCertificate;
} WIN_SPUB_TRUSTED_PUBLISHER_DATA,*LPWIN_SPUB_TRUSTED_PUBLISHER_DATA;
typedef VOID (WINAPI *PFIBER_START_ROUTINE)(LPVOID);
typedef PFIBER_START_ROUTINE LPFIBER_START_ROUTINE;
typedef struct tagNMDATETIMECHANGE {
 NMHDR nmhdr;
 DWORD dwFlags;
 SYSTEMTIME st;
} NMDATETIMECHANGE,*LPNMDATETIMECHANGE;
typedef struct tagNMDATETIMESTRINGA {
 NMHDR nmhdr;
 LPCSTR pszUserString;
 SYSTEMTIME st;
 DWORD dwFlags;
} NMDATETIMESTRINGA,FAR * LPNMDATETIMESTRINGA;
typedef struct tagNMDATETIMESTRINGW {
 NMHDR nmhdr;
 LPCWSTR pszUserString;
 SYSTEMTIME st;
 DWORD dwFlags;
} NMDATETIMESTRINGW,* LPNMDATETIMESTRINGW;
typedef struct tagNMDATETIMEWMKEYDOWNA {
	NMHDR	nmhdr;
	int	nVirtKey;
	LPCSTR	pszFormat;
	SYSTEMTIME	st;
} NMDATETIMEWMKEYDOWNA,* LPNMDATETIMEWMKEYDOWNA;
typedef struct tagNMDATETIMEWMKEYDOWNW {
	NMHDR	nmhdr;
	int	nVirtKey;
	LPCWSTR	pszFormat;
	SYSTEMTIME	st;
} NMDATETIMEWMKEYDOWNW,* LPNMDATETIMEWMKEYDOWNW;
typedef struct tagNMDATETIMEFORMATA {
	NMHDR	nmhdr;
	LPCSTR	pszFormat;
	SYSTEMTIME st;
	LPCSTR pszDisplay;
	CHAR szDisplay[64];
} NMDATETIMEFORMATA,* LPNMDATETIMEFORMATA;
typedef struct tagNMDATETIMEFORMATW {
	NMHDR nmhdr;
	LPCWSTR pszFormat;
	SYSTEMTIME st;
	LPCWSTR pszDisplay;
	WCHAR szDisplay[64];
} NMDATETIMEFORMATW,* LPNMDATETIMEFORMATW;
typedef struct tagNMDATETIMEFORMATQUERYA {
	NMHDR nmhdr;
	LPCSTR pszFormat;
	SIZE szMax;
} NMDATETIMEFORMATQUERYA,* LPNMDATETIMEFORMATQUERYA;
typedef struct tagNMDATETIMEFORMATQUERYW {
	NMHDR nmhdr;
	LPCWSTR pszFormat;
	SIZE szMax;
} NMDATETIMEFORMATQUERYW,* LPNMDATETIMEFORMATQUERYW;
typedef struct _COAUTHIDENTITY {
	USHORT *User;
	ULONG UserLength;
	USHORT *Domain;
	ULONG DomainLength;
	USHORT *Password;
	ULONG PasswordLength;
	ULONG Flags;
} COAUTHIDENTITY;
typedef struct _COAUTHINFO {
	DWORD dwAuthnSvc;
	DWORD dwAuthzSvc;
	LPWSTR pwszServerPrincName;
	DWORD dwAuthnLevel;
	DWORD dwImpersonationLevel;
	COAUTHIDENTITY *pAuthIdentityData;
	DWORD dwCapabilities;
} COAUTHINFO;
typedef WCHAR OLECHAR;
typedef struct _userCLIPFORMAT {
	long fContext;
	union __MIDL_IWinTypes_0001 {
		DWORD dwValue;
		short *pwszName;
	} u;
} userCLIPFORMAT;
typedef struct _userBITMAP {
	LONG bmType;
	LONG bmWidth;
	LONG bmHeight;
	LONG bmWidthBytes;
	WORD bmPlanes;
	WORD bmBitsPixel;
	ULONG cbSize;
	UCHAR pBuffer[1];
} userBITMAP;
typedef struct _userHBITMAP {
	long fContext;
	union __MIDL_IWinTypes_0007 {
		long hInproc;
		userBITMAP *hRemote;
		long hGlobal;
	} u;
} userHBITMAP;
typedef struct tagrpcLOGPALETTE {
	WORD palVersion;
	WORD palNumEntries;
	PALETTEENTRY palPalEntry[1];
} rpcLOGPALETTE;
typedef struct _FLAGGED_BYTE_BLOB {
	unsigned long fFlags;
	unsigned long clSize;
	BYTE abData[1];
} FLAGGED_BYTE_BLOB;
typedef struct _BYTE_BLOB {
	unsigned long clSize;
	BYTE abData[1];
} BYTE_BLOB;
typedef struct _userHMETAFILE {
	long fContext;
	union __MIDL_IWinTypes_0004 {
		long hInproc;
		BYTE_BLOB *hRemote;
		long hGlobal;
	} u;
} userHMETAFILE;
typedef struct _remoteMETAFILEPICT {
	long mm;
	long xExt;
	long yExt;
	userHMETAFILE *hMF;
} remoteMETAFILEPICT;
typedef struct _userHENHMETAFILE {
	long fContext;
	union __MIDL_IWinTypes_0006 {
		long hInproc;
		BYTE_BLOB *hRemote;
		long hGlobal;
	} u;
} userHENHMETAFILE;
typedef struct _userHMETAFILEPICT {
	long fContext;
	union __MIDL_IWinTypes_0005 {
		long hInproc;
		remoteMETAFILEPICT *hRemote;
		long hGlobal;
	} u;
} userHMETAFILEPICT;
typedef struct _userHGLOBAL {
	long fContext;
	union __MIDL_IWinTypes_0003 {
		long hInproc;
		FLAGGED_BYTE_BLOB *hRemote;
		long hGlobal;
	} u;
} userHGLOBAL;
typedef struct _userHPALETTE {
	long fContext;
	union __MIDL_IWinTypes_0008 {
		long hInproc;
		rpcLOGPALETTE *hRemote;
		long hGlobal;
	} u;
} userHPALETTE;
#ifndef _tagBSTRBLOB_DEFINED
#define _tagBSTRBLOB_DEFINED
typedef struct tagBSTRBLOB {
	ULONG cbSize;
	BYTE *pData;
} BSTRBLOB;
typedef struct tagBSTRBLOB *LPBSTRBLOB;
#endif
typedef struct _CLIPDATA {
	ULONG cbSize;
	long ulClipFmt;
	BYTE *pClipData;
} CLIPDATA;
typedef struct _FLAGGED_WORD_BLOB {
	unsigned long fFlags;
	unsigned long clSize;
	unsigned short asData[1];
}FLAGGED_WORD_BLOB;
typedef struct _BYTE_SIZEDARR {
	unsigned long clSize;
	unsigned char *pData;
}BYTE_SIZEDARR;
typedef struct _SHORT_SIZEDARR {
	unsigned long clSize;
	unsigned short *pData;
} WORD_SIZEDARR;
typedef struct _LONG_SIZEDARR {
	unsigned long clSize;
	unsigned long *pData;
}DWORD_SIZEDARR;
typedef struct _HYPER_SIZEDARR {
	unsigned long clSize;
	long long int *pData;
}HYPER_SIZEDARR;
typedef FLAGGED_WORD_BLOB *wireBSTR;
typedef userHENHMETAFILE *wireHENHMETAFILE;
typedef userHGLOBAL *wireHGLOBAL;
typedef userHMETAFILEPICT wireHMETAFILEPICT;
typedef userHMETAFILE *wireHMETAFILE;
typedef userHPALETTE *wireHPALETTE;
typedef userHBITMAP *wireHBITMAP;
typedef userCLIPFORMAT *wireCLIPFORMAT;
typedef WORD CLIPFORMAT;
typedef unsigned long PROPID;
typedef OLECHAR *LPOLESTR;
typedef GUID FMTID;
typedef FMTID *REFFMTID;
typedef enum _CLASSPATHTYPE { ExeNamePath=0,DllNamePath=ExeNamePath+1,TlbNamePath=DllNamePath+1,
	CabFilePath=TlbNamePath+1,InfFilePath=CabFilePath+1,DrwFilePath=InfFilePath+1,
	SetupNamePath=DrwFilePath+1 } CLASSPATHTYPE;
typedef struct __MIDL___MIDL_itf_wtypes_0002_0001 {
	DWORD tyspec;
	union __MIDL___MIDL_itf_wtypes_0002_00 {
		CLSID clsid;
		IID iid;
		GUID typelibID;
		LPOLESTR pFileExt;
		LPOLESTR pMimeType;
		LPOLESTR pProgId;
		LPOLESTR pFileName;
		LPOLESTR pJavaClassName;
		struct { LPOLESTR pPackageName; GUID PolicyId;} ByName;
		struct { LPOLESTR pScriptName; GUID PolicyId;} ByScript;
	} tagged_union;
} uCLSSPEC;
typedef struct _CSPLATFORM {
	DWORD dwPlatformId;
	DWORD dwVersionHi;
	DWORD dwVersionLo;
	DWORD dwProcessorArch;
} CSPLATFORM;
typedef struct _QUERYCONTEXT {
	DWORD dwContext;
	CSPLATFORM Platform;
	LCID Locale;
	DWORD dwVersionHi;
	DWORD dwVersionLo;
} QUERYCONTEXT;
typedef struct _CLASSDETAIL {
	CLSID Clsid;
	CLSID TreatAs;
	DWORD cProgId;
	DWORD dwComClassContext;
	LPOLESTR *prgProgId;
} CLASSDETAIL;
typedef struct _ACTIVATIONINFO {
	UINT cClasses;
	CLASSDETAIL *pClasses;
	UINT cShellFileExt;
	LPOLESTR *prgShellFileExt;
	UINT *prgPriority;
	UINT cInterfaces;
	IID *prgInterfaceId;
	UINT cTypeLib;
	GUID *prgTlbId;
} ACTIVATIONINFO;
typedef struct _PLATFORMINFO {
	UINT cPlatforms;
	CSPLATFORM *prgPlatform;
 UINT cLocales;
	LCID *prgLocale;
} PLATFORMINFO;
typedef struct tagINSTALLINFO {
	DWORD dwActFlags;
	CLASSPATHTYPE PathType;
	LPOLESTR pszScriptPath;
	LPOLESTR pszSetupCommand;
	LPOLESTR pszUrl;
	ULONGLONG Usn;
	UINT InstallUiLevel;
	GUID *pClsid;
	GUID ProductCode;
	GUID Mvipc;
	DWORD dwVersionHi;
	DWORD dwVersionLo;
	DWORD dwRevision;
	UINT cUpgrades;
	LPOLESTR *prgUpgradeScript;
	DWORD *prgUpgradeFlag;
	ULONG cScriptLen;
}INSTALLINFO;
typedef struct tagPACKAGEDETAIL {
	LPOLESTR pszPackageName;
	LPOLESTR pszPublisher;
	UINT cSources;
	LPOLESTR *pszSourceList;
	UINT cCategories;
	GUID *rpCategory;
	ACTIVATIONINFO *pActInfo;
	PLATFORMINFO *pPlatformInfo;
	INSTALLINFO *pInstallInfo;
} PACKAGEDETAIL;
typedef struct tagTRACKMOUSEEVENT {
	DWORD cbSize;
	DWORD dwFlags;
	HWND hwndTrack;
	DWORD dwHoverTime;
} TRACKMOUSEEVENT, *LPTRACKMOUSEEVENT;
typedef struct tagREBARINFO {
	UINT cbSize;
	UINT fMask;
	HANDLE himl;
} REBARINFO,*LPREBARINFO;
typedef struct tagREBARBANDINFOA {
	UINT cbSize;
	UINT fMask;
	UINT fStyle;
	COLORREF clrFore;
	COLORREF clrBack;
	LPSTR lpText;
	UINT cch;
	int iImage;
	HWND hwndChild;
	UINT cxMinChild;
	UINT cyMinChild;
	UINT cx;
	HBITMAP hbmBack;
	UINT wID;
	UINT cyChild;
	UINT cyMaxChild;
	UINT cyIntegral;
	UINT cxIdeal;
	LPARAM lParam;
	UINT cxHeader;
} REBARBANDINFOA,*LPREBARBANDINFOA;
typedef REBARBANDINFOA CONST *LPCREBARBANDINFOA;
typedef struct tagREBARBANDINFOW {
	UINT	cbSize;
	UINT	fMask;
	UINT	fStyle;
	COLORREF	clrFore;
	COLORREF	clrBack;
	LPWSTR	lpText;
	UINT	cch;
	int	iImage;
	HWND	hwndChild;
	UINT	cxMinChild;
	UINT	cyMinChild;
	UINT	cx;
	HBITMAP	hbmBack;
	UINT	wID;
	UINT	cyChild;
	UINT	cyMaxChild;
	UINT	cyIntegral;
	UINT	cxIdeal;
	LPARAM	lParam;
	UINT	cxHeader;
} REBARBANDINFOW, *LPREBARBANDINFOW;
typedef REBARBANDINFOW CONST *LPCREBARBANDINFOW;
typedef struct tagLVITEMA {
	UINT mask;
	int iItem;
	int iSubItem;
	UINT state;
	UINT stateMask;
	LPSTR pszText;
	int cchTextMax;
	int iImage;
	LPARAM lParam;
	int iIndent;
} LVITEMA, *LPLVITEMA;
typedef struct tagLVITEMW {
	UINT mask;
	int iItem;
	int iSubItem;
	UINT state;
	UINT stateMask;
	LPWSTR pszText;
	int cchTextMax;
	int iImage;
	LPARAM lParam;
	int iIndent;
} LVITEMW, *LPLVITEMW;
typedef struct tagLVDISPINFO {
	NMHDR hdr;
	LVITEMA item;
} NMLVDISPINFOA, *LPNMLVDISPINFOA;
typedef struct tagLVDISPINFOW {
	NMHDR hdr;
	LVITEMW item;
} NMLVDISPINFOW, *LPNMLVDISPINFOW;
#define LVN_KEYDOWN	(-155)
#define LV_KEYDOWN NMLVKEYDOWN
typedef struct tagLVKEYDOWN {
	NMHDR hdr;
	WORD wVKey;
	UINT flags;
} NMLVKEYDOWN, *LPNMLVKEYDOWN;
#define LVN_MARQUEEBEGIN	(-156)
typedef struct tagNMLVGETINFOTIPA {
	NMHDR hdr;
	DWORD dwFlags;
	LPSTR pszText;
	int cchTextMax;
	int iItem;
	int iSubItem;
	LPARAM lParam;
} NMLVGETINFOTIPA, *LPNMLVGETINFOTIPA;
typedef struct tagNMLVGETINFOTIPW {
	NMHDR hdr;
	DWORD dwFlags;
	LPWSTR pszText;
	int cchTextMax;
	int iItem;
	int iSubItem;
	LPARAM lParam;
} NMLVGETINFOTIPW, *LPNMLVGETINFOTIPW;
#define LVGIT_UNFOLDED	1
#define LVN_GETINFOTIPA (-157)
#define LVN_GETINFOTIPW (-158)
typedef struct tagNMMOUSE {
	NMHDR	hdr;
	DWORD_PTR dwItemSpec;
	DWORD_PTR dwItemData;
	POINT	pt;
	LPARAM dwHitInfo;
} NMMOUSE, *LPNMMOUSE;
typedef NMMOUSE NMCLICK;
typedef LPNMMOUSE LPNMCLICK;
typedef struct tagNMLVCACHEHINT {
	NMHDR hdr;
	int iFrom;
	int iTo;
} NMLVCACHEHINT,*LPNMLVCACHEHINT;
typedef struct tagCOLORSCHEME {
	DWORD	dwSize;
	COLORREF	clrBtnHighlight;
	COLORREF	clrBtnShadow;
} COLORSCHEME, *LPCOLORSCHEME;
#define LPNM_CACHEHINT	LPNMLVCACHEHINT
#define PNM_CACHEHINT	LPNMLVCACHEHINT
#define NM_CACHEHINT	NMLVCACHEHINT
typedef struct tagLVFINDINFOA {
	UINT flags;
	LPCSTR psz;
	LPARAM lParam;
	POINT pt;
	UINT vkDirection;
} LVFINDINFOA, *LPFINDINFOA;
typedef struct tagLVFINDINFOW {
	UINT flags;
	LPCWSTR psz;
	LPARAM lParam;
	POINT pt;
	UINT vkDirection;
} LVFINDINFOW, *LPFINDINFOW;
typedef struct tagNMLVFINDITEM {
	NMHDR hdr;
	int iStart;
	LVFINDINFO lvfi;
} NMLVFINDITEM, *LPNMLVFINDITEM;
#define PNM_FINDITEM LPNMLVFINDITEM
#define LPNM_FINDITEM LPNMLVFINDITEM
#define NM_FINDITEM NMLVFINDITEM
typedef struct tagNMLVODSTATECHANGE {
	NMHDR hdr;
	int iFrom;
	int iTo;
	UINT uNewState;
	UINT uOldState;
} NMLVODSTATECHANGE, *LPNMLVODSTATECHANGE;
#define PNM_ODSTATECHANGE LPNMLVODSTATECHANGE
#define LPNM_ODSTATECHANGE LPNMLVODSTATECHANGE
#define NM_ODSTATECHANGE NMLVODSTATECHANGE
#define IID_NULL	GUID_NULL
#define CLSID_NULL	GUID_NULL
#define FMTID_NULL	GUID_NULL
typedef struct tagNMITEMACTIVATE{
	NMHDR	hdr;
	int	iItem;
	int	iSubItem;
	UINT	uNewState;
	UINT	uOldState;
	UINT	uChanged;
	POINT	ptAction;
	LPARAM	lParam;
	UINT	uKeyFlags;
} NMITEMACTIVATE, *LPNMITEMACTIVATE;
typedef struct _LVHITTESTINFO {
	POINT pt;
	UINT flags;
	int iItem;
	int iSubItem;
} LVHITTESTINFO, *LPLVHITTESTINFO;
typedef struct tagCOMBOBOXINFO {
	DWORD cbSize;
	RECT rcItem;
	RECT rcButton;
	DWORD stateButton;
	HWND hwndCombo;
	HWND hwndItem;
	HWND hwndList;
} COMBOBOXINFO, *PCOMBOBOXINFO, *LPCOMBOBOXINFO;
typedef struct tagWINDOWINFO {
	DWORD cbSize;
	RECT rcWindow;
	RECT rcClient;
	DWORD dwStyle;
	DWORD dwExStyle;
	DWORD dwWindowStatus;
	UINT cxWindowBorders;
	UINT cyWindowBorders;
	ATOM atomWindowType;
	WORD wCreatorVersion;
} WINDOWINFO, *PWINDOWINFO, *LPWINDOWINFO;
typedef VOID (APIENTRY *PAPCFUNC)(ULONG *);
#define INPUT_MOUSE	0
#define INPUT_KEYBOARD	1
#define INPUT_HARDWARE	2
typedef struct tagMOUSEINPUT {
	LONG	dx;
	LONG	dy;
	DWORD	mouseData;
	DWORD	dwFlags;
	DWORD	time;
	DWORD	dwExtraInfo;
} MOUSEINPUT, *PMOUSEINPUT, * LPMOUSEINPUT;
typedef struct tagHARDWAREINPUT {
	DWORD	uMsg;
	WORD	wParamL;
	WORD	wParamH;
} HARDWAREINPUT, *PHARDWAREINPUT, *LPHARDWAREINPUT;
typedef struct tagKEYBDINPUT {
	WORD	wVk;
	WORD	wScan;
	DWORD	dwFlags;
	DWORD	time;
	DWORD	dwExtraInfo;
} KEYBDINPUT, *PKEYBDINPUT, FAR* LPKEYBDINPUT;
typedef struct tagINPUT {
	DWORD	type;
	union {
		MOUSEINPUT	mi;
		KEYBDINPUT	ki;
		HARDWAREINPUT	hi;
	};
} INPUT, *PINPUT, *LPINPUT;
typedef struct tagMENUBARINFO {
	DWORD cbSize;
	RECT rcBar;
	HMENU hMenu;
	HWND hwndMenu;
	BOOL fBarFocused:1;
	BOOL fFocused:1;
} MENUBARINFO, *PMENUBARINFO, *LPMENUBARINFO;
typedef struct tagSCROLLBARINFO {
	DWORD	cbSize;
	RECT	rcScrollBar;
	int	dxyLineButton;
	int	xyThumbTop;
	int	xyThumbBottom;
	int	reserved;
	DWORD rgstate[CCHILDREN_SCROLLBAR+1];
} SCROLLBARINFO, *PSCROLLBARINFO, *LPSCROLLBARINFO;
typedef struct tagTITLEBARINFO {
	DWORD	cbSize;
	RECT	rcTitleBar;
	DWORD	rgstate[CCHILDREN_TITLEBAR+1];
} TITLEBARINFO, *PTITLEBARINFO, *LPTITLEBARINFO;
typedef struct tagCURSORINFO {
	DWORD	cbSize;
	DWORD	flags;
	HCURSOR hCursor;
	POINT	ptScreenPos;
} CURSORINFO, *PCURSORINFO, *LPCURSORINFO;
typedef struct {
	NMHDR hdr;
	int	iItemid;
	WCHAR szText[CBEMAXSTRLEN];
}NMCBEDRAGBEGINW, *LPNMCBEDRAGBEGINW, *PNMCBEDRAGBEGINW;
typedef struct {
	NMHDR hdr;
	int	iItemid;
	char szText[CBEMAXSTRLEN];
}NMCBEDRAGBEGINA, *LPNMCBEDRAGBEGINA, *PNMCBEDRAGBEGINA;
typedef struct {
	NMHDR hdr;
	BOOL fChanged;
	int iNewSelection;
	WCHAR szText[CBEMAXSTRLEN];
	int iWhy;
} NMCBEENDEDITW, *LPNMCBEENDEDITW, *PNMCBEENDEDITW;

typedef struct {
	NMHDR hdr;
	BOOL fChanged;
	int iNewSelection;
	char szText[CBEMAXSTRLEN];
	int iWhy;
} NMCBEENDEDITA, *LPNMCBEENDEDITA,*PNMCBEENDEDITA;
typedef struct tagCOMBOBOXEXITEMA {
	UINT mask;
	int iItem;
	LPSTR pszText;
	int cchTextMax;
	int iImage;
	int iSelectedImage;
	int iOverlay;
	int iIndent;
	LPARAM lParam;
} COMBOBOXEXITEMA, *PCOMBOBOXEXITEMA;
typedef COMBOBOXEXITEMA CONST *PCCOMBOEXITEMA;
typedef struct tagCOMBOBOXEXITEMW {
	UINT mask;
	int iItem;
	LPWSTR pszText;
	int cchTextMax;
	int iImage;
	int iSelectedImage;
	int iOverlay;
	int iIndent;
	LPARAM lParam;
} COMBOBOXEXITEMW, *PCOMBOBOXEXITEMW;
typedef COMBOBOXEXITEMW CONST *PCCOMBOEXITEMW;
typedef struct tagNMHDDISPINFOW {
	NMHDR	hdr;
	int	iItem;
	UINT	mask;
	LPWSTR pszText;
	int	cchTextMax;
	int	iImage;
	LPARAM lParam;
} NMHDDISPINFOW, *LPNMHDDISPINFOW;
typedef struct tagNMHDDISPINFOA {
	NMHDR	hdr;
	int	iItem;
	UINT	mask;
	LPSTR	pszText;
	int	cchTextMax;
	int	iImage;
	LPARAM lParam;
} NMHDDISPINFOA,*LPNMHDDISPINFOA;
#ifdef UNICODE
#define NMHDDISPINFO	NMHDDISPINFOW
#define LPNMHDDISPINFO	LPNMHDDISPINFOW
#else
#define NMHDDISPINFO	NMHDDISPINFOA
#define LPNMHDDISPINFO	LPNMHDDISPINFOA
#endif
typedef enum _JOBOBJECTINFOCLASS { JobObjectBasicAccountingInformation = 1,
	JobObjectBasicLimitInformation, JobObjectBasicProcessIdList,
	JobObjectBasicUIRestrictions, JobObjectSecurityLimitInformation,
	JobObjectEndOfJobTimeInformation, JobObjectAssociateCompletionPortInformation,
	JobObjectBasicAndIoAccountingInformation, JobObjectExtendedLimitInformation,
	JobObjectJobSetInformation, MaxJobObjectInfoClass
} JOBOBJECTINFOCLASS;
typedef struct tagPDA {
	DWORD lStructSize;
	HWND hwndOwner;
	HGLOBAL hDevMode;
	HGLOBAL hDevNames;
	HDC hDC;
	DWORD Flags;
	WORD nFromPage;
	WORD nToPage;
	WORD nMinPage;
	WORD nMaxPage;
	WORD nCopies;
	HINSTANCE hInstance;
	LPARAM lCustData;
	LPPRINTHOOKPROC lpfnPrintHook;
	LPSETUPHOOKPROC lpfnSetupHook;
	LPCSTR lpPrintTemplateName;
	LPCSTR lpSetupTemplateName;
	HGLOBAL hPrintTemplate;
	HGLOBAL hSetupTemplate;
} PRINTDLGA, *LPPRINTDLGA;
typedef struct tagPDW {
	DWORD lStructSize;
	HWND hwndOwner;
	HGLOBAL hDevMode;
	HGLOBAL hDevNames;
	HDC	hDC;
	DWORD Flags;
	WORD nFromPage;
	WORD nToPage;
	WORD nMinPage;
	WORD nMaxPage;
	WORD nCopies;
	HINSTANCE hInstance;
	LPARAM lCustData;
	LPPRINTHOOKPROC lpfnPrintHook;
	LPSETUPHOOKPROC lpfnSetupHook;
	LPCWSTR lpPrintTemplateName;
	LPCWSTR lpSetupTemplateName;
	HGLOBAL hPrintTemplate;
	HGLOBAL		hSetupTemplate;
} PRINTDLGW, *LPPRINTDLGW;
typedef struct tagHW_PROFILE_INFOA {
	DWORD dwDockInfo; CHAR szHwProfileGuid[HW_PROFILE_GUIDLEN];
	CHAR	szHwProfileName[MAX_PROFILE_LEN];
} HW_PROFILE_INFOA, *LPHW_PROFILE_INFOA;
typedef struct tagHW_PROFILE_INFOW {
	DWORD dwDockInfo;
	WCHAR szHwProfileGuid[HW_PROFILE_GUIDLEN];
	WCHAR szHwProfileName[MAX_PROFILE_LEN];
} HW_PROFILE_INFOW, *LPHW_PROFILE_INFOW;
typedef struct _FILE_NOTIFY_INFORMATION {
	DWORD NextEntryOffset;
	DWORD Action;
	DWORD FileNameLength;
	WCHAR FileName[1];
} FILE_NOTIFY_INFORMATION, *PFILE_NOTIFY_INFORMATION;
typedef union _FILE_SEGMENT_ELEMENT {
	long long * Buffer;
	long long Alignment;
}FILE_SEGMENT_ELEMENT, *PFILE_SEGMENT_ELEMENT;
typedef struct tagALTTABINFO {
	DWORD	cbSize;
	int	cItems;
	int	cColumns;
	int	cRows;
	int	iColFocus;
	int	iRowFocus;
	int	cxItem;
	int	cyItem;
	POINT	ptStart;
} ALTTABINFO, *PALTTABINFO, *LPALTTABINFO;
typedef VOID (CALLBACK* WINEVENTPROC)(HWINEVENTHOOK,DWORD,HWND,LONG,LONG,DWORD,DWORD);
typedef VOID (APIENTRY *PTIMERAPCROUTINE)(LPVOID,DWORD,DWORD);
typedef enum _FINDEX_INFO_LEVELS { FindExInfoStandard, FindExInfoMaxInfoLevel } FINDEX_INFO_LEVELS;
typedef enum _FINDEX_SEARCH_OPS { FindExSearchNameMatch, FindExSearchLimitToDirectories, FindExSearchLimitToDevices, FindExSearchMaxSearchOp } FINDEX_SEARCH_OPS;
typedef struct { UINT cbSize; POINT pt; UINT uHit; SYSTEMTIME st; } MCHITTESTINFO, *PMCHITTESTINFO;
typedef struct tagNMSELCHANGE { NMHDR nmhdr;SYSTEMTIME stSelStart; SYSTEMTIME stSelEnd; } NMSELCHANGE, *LPNMSELCHANGE;
typedef struct tagNMDAYSTATE { NMHDR nmhdr; SYSTEMTIME stStart; int cDayState; LPMONTHDAYSTATE prgDayState; } NMDAYSTATE,*LPNMDAYSTATE;
#ifdef UNICODE
typedef HW_PROFILE_INFOW HW_PROFILE_INFO;
typedef LPHW_PROFILE_INFOW LPHW_PROFILE_INFO;
typedef PRINTDLGW PRINTDLG;
typedef LPPRINTDLGW LPPRINTDLG;
#else
typedef HW_PROFILE_INFOA HW_PROFILE_INFO;
typedef LPHW_PROFILE_INFOA LPHW_PROFILE_INFO;
typedef PRINTDLGA PRINTDLG;
typedef LPPRINTDLGA LPPRINTDLG;
#endif
typedef struct tagGUITHREADINFO {
	DWORD cbSize;
	DWORD flags;
	HWND hwndActive;
	HWND hwndFocus;
	HWND hwndCapture;
	HWND hwndMenuOwner;
	HWND hwndMoveSize;
	HWND hwndCaret;
	RECT rcCaret;
} GUITHREADINFO, *PGUITHREADINFO, *LPGUITHREADINFO;
#define GUI_CARETBLINKING	1
#define GUI_INMOVESIZE	2
#define GUI_INMENUMODE	4
#define GUI_SYSTEMMENUMODE 8
#define GUI_POPUPMENUMODE	16
typedef struct tagLVCOLUMNA {
	UINT mask;
	int fmt;
	int cx;
	LPSTR pszText;
	int cchTextMax;
	int iSubItem;
	int iImage;
	int iOrder;
} LVCOLUMNA, *LPLVCOLUMNA;
typedef struct tagLVCOLUMNW {
	UINT mask;
	int fmt;
	int cx;
	LPWSTR pszText;
	int cchTextMax;
	int iSubItem;
	int iImage;
	int iOrder;
} LVCOLUMNW, *LPLVCOLUMNW;
typedef struct {UINT cbSize; HWND hwnd; DWORD dwFlags; UINT uCount; DWORD dwTimeout; } FLASHWINFO, *PFLASHWINFO;
typedef enum _GET_FILEEX_INFO_LEVELS { GetFileExInfoStandard, GetFileExMaxInfoLevel } GET_FILEEX_INFO_LEVELS;
typedef struct _BLENDFUNCTION {
	BYTE	BlendOp;
	BYTE	BlendFlags;
	BYTE	SourceConstantAlpha;
	BYTE	AlphaFormat;
}BLENDFUNCTION,*PBLENDFUNCTION;
typedef struct _WIN32_FILE_ATTRIBUTE_DATA {
	DWORD dwFileAttributes;
	FILETIME ftCreationTime;
	FILETIME ftLastAccessTime;
	FILETIME ftLastWriteTime;
	DWORD nFileSizeHigh;
	DWORD nFileSizeLow;
} WIN32_FILE_ATTRIBUTE_DATA,*LPWIN32_FILE_ATTRIBUTE_DATA;
typedef VOID (WINAPI *PFLS_CALLBACK_FUNCTION)(PVOID);
typedef USHORT COLOR16;
typedef struct _TRIVERTEX {LONG x; LONG y; COLOR16 Red; COLOR16 Green;
COLOR16 Blue; COLOR16 Alpha; }TRIVERTEX,*PTRIVERTEX,*LPTRIVERTEX;
typedef struct _GRADIENT_TRIANGLE { ULONG Vertex1; ULONG Vertex2; ULONG Vertex3;
} GRADIENT_TRIANGLE,*PGRADIENT_TRIANGLE,*LPGRADIENT_TRIANGLE;
typedef struct _GRADIENT_RECT { ULONG UpperLeft; ULONG LowerRight;
}GRADIENT_RECT,*PGRADIENT_RECT,*LPGRADIENT_RECT;
typedef struct _OBJECT_TYPE_LIST { WORD Level; WORD Sbz; GUID *ObjectType; } OBJECT_TYPE_LIST, *POBJECT_TYPE_LIST;
typedef enum _AUDIT_EVENT_TYPE { AuditEventObjectAccess, AuditEventDirectoryServiceAccess } AUDIT_EVENT_TYPE, *PAUDIT_EVENT_TYPE;
typedef ACE_HEADER *PACE_HEADER;
typedef struct tagMENUINFO {
	DWORD cbSize;
	DWORD fMask;
	DWORD dwStyle;
	UINT cyMax;
	HBRUSH hbrBack;
	DWORD dwContextHelpID;
	ULONG_PTR dwMenuData;
} MENUINFO, *LPMENUINFO;
typedef MENUINFO CONST *LPCMENUINFO;
typedef struct tagMENUGETOBJECTINFO {
	DWORD dwFlags;
	UINT uPos;
	HMENU hmenu;
	PVOID riid;
	PVOID pvObj;
} MENUGETOBJECTINFO, *PMENUGETOBJECTINFO;
typedef struct _JOB_SET_ARRAY {
	HANDLE JobHandle;
	DWORD MemberLevel;
	DWORD Flags;
} JOB_SET_ARRAY, *PJOB_SET_ARRAY;
typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP {
RelationProcessorCore, RelationNumaNode
} LOGICAL_PROCESSOR_RELATIONSHIP;
typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION {
	ULONG_PTR  ProcessorMask;
	LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
	union {
		struct {
			BYTE Flags;
		} ProcessorCore;
		struct {
			DWORD NodeNumber;
		} NumaNode;
		ULONGLONG Reserved[2];
	};
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION;
typedef LONG (NTAPI *PVECTORED_EXCEPTION_HANDLER)(struct _EXCEPTION_POINTERS *);
typedef struct tagACTCTX_SECTION_KEYED_DATA_2600 {
	ULONG cbSize;
	ULONG ulDataFormatVersion;
	PVOID lpData;
	ULONG ulLength;
	PVOID lpSectionGlobalData;
	ULONG ulSectionGlobalDataLength;
	PVOID lpSectionBase;
	ULONG ulSectionTotalLength;
	HANDLE hActCtx;
	ULONG ulAssemblyRosterIndex;
} ACTCTX_SECTION_KEYED_DATA_2600, *PACTCTX_SECTION_KEYED_DATA_2600;
typedef const ACTCTX_SECTION_KEYED_DATA_2600 * PCACTCTX_SECTION_KEYED_DATA_2600;

typedef struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA {
	PVOID lpInformation;
	PVOID lpSectionBase;
	ULONG ulSectionLength;
	PVOID lpSectionGlobalDataBase;
	ULONG ulSectionGlobalDataLength;
} ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA, *PACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
typedef const ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA *PCACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
typedef struct tagACTCTX_SECTION_KEYED_DATA {
	ULONG cbSize;
	ULONG ulDataFormatVersion;
	PVOID lpData;
	ULONG ulLength;
	PVOID lpSectionGlobalData;
	ULONG ulSectionGlobalDataLength;
	PVOID lpSectionBase;
	ULONG ulSectionTotalLength;
	HANDLE hActCtx;
	ULONG ulAssemblyRosterIndex;
// 2600 stops here
	ULONG ulFlags;
	ACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
} ACTCTX_SECTION_KEYED_DATA, *PACTCTX_SECTION_KEYED_DATA;
typedef const ACTCTX_SECTION_KEYED_DATA * PCACTCTX_SECTION_KEYED_DATA;
typedef struct _EVENTLOG_FULL_INFORMATION { DWORD   dwFull; }
EVENTLOG_FULL_INFORMATION, *LPEVENTLOG_FULL_INFORMATION;
#define FIND_ACTCTX_SECTION_KEY_RETURN_HACTCTX 1
#define FIND_ACTCTX_SECTION_KEY_RETURN_FLAGS 2
#define FIND_ACTCTX_SECTION_KEY_RETURN_ASSEMBLY_METADATA 4
typedef enum _COMPUTER_NAME_FORMAT {
   ComputerNameNetBIOS, ComputerNameDnsHostname, ComputerNameDnsDomain,
   ComputerNameDnsFullyQualified, ComputerNamePhysicalNetBIOS, ComputerNamePhysicalDnsHostname,
   ComputerNamePhysicalDnsDomain, ComputerNamePhysicalDnsFullyQualified, ComputerNameMax
} COMPUTER_NAME_FORMAT ;
typedef enum _STREAM_INFO_LEVELS { FindStreamInfoStandard, FindStreamInfoMaxInfoLevel
} STREAM_INFO_LEVELS;
typedef struct _WIN32_FIND_DATAA {
	DWORD dwFileAttributes;
	FILETIME ftCreationTime;
	FILETIME ftLastAccessTime;
	FILETIME ftLastWriteTime;
	DWORD nFileSizeHigh;
	DWORD nFileSizeLow;
	DWORD dwReserved0;
	DWORD dwReserved1;
	CHAR  cFileName[ MAX_PATH ];
	CHAR  cAlternateFileName[ 14 ];
} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA, *LPWIN32_FIND_DATAA;
typedef struct _WIN32_FIND_DATAW {
	DWORD dwFileAttributes;
	FILETIME ftCreationTime;
	FILETIME ftLastAccessTime;
	FILETIME ftLastWriteTime;
	DWORD nFileSizeHigh;
	DWORD nFileSizeLow;
	DWORD dwReserved0;
	DWORD dwReserved1;
	WCHAR cFileName[ MAX_PATH ];
	WCHAR cAlternateFileName[ 14 ];
} WIN32_FIND_DATAW, *PWIN32_FIND_DATAW, *LPWIN32_FIND_DATAW;
#define RTL_CRITSECT_TYPE 0
#define RTL_RESOURCE_TYPE 1
typedef struct _RTL_CRITICAL_SECTION {
	PRTL_CRITICAL_SECTION_DEBUG DebugInfo;
	LONG LockCount;
	LONG RecursionCount;
	HANDLE OwningThread;
	HANDLE LockSemaphore;
	ULONG_PTR SpinCount;
} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION;
typedef RTL_CRITICAL_SECTION CRITICAL_SECTION;
typedef RTL_CRITICAL_SECTION *LPCRITICAL_SECTION;
typedef PRTL_CRITICAL_SECTION_DEBUG LPCRITICAL_SECTION_DEBUG;
typedef enum _HEAP_INFORMATION_CLASS { HeapCompatibilityInformation } HEAP_INFORMATION_CLASS;
typedef enum { WinNullSid=0,WinWorldSid=1, WinLocalSid=2, WinCreatorOwnerSid=3,
 WinCreatorGroupSid=4, WinCreatorOwnerServerSid=5, WinCreatorGroupServerSid=6,
 WinNtAuthoritySid=7, WinDialupSid=8, WinNetworkSid=9, WinBatchSid=10,
 WinInteractiveSid=11, WinServiceSid=12, WinAnonymousSid=13, WinProxySid=14,
 WinEnterpriseControllersSid=15, WinSelfSid=16, WinAuthenticatedUserSid=17,
 WinRestrictedCodeSid=18, WinTerminalServerSid=19, WinRemoteLogonIdSid=20,
 WinLogonIdsSid=21, WinLocalSystemSid=22, WinLocalServiceSid=23,
 WinNetworkServiceSid=24, WinBuiltinDomainSid=25, WinBuiltinAdministratorsSid=26,
 WinBuiltinUsersSid=27, WinBuiltinGuestsSid=28, WinBuiltinPowerUsersSid=29,
 WinBuiltinAccountOperatorsSid=30, WinBuiltinSystemOperatorsSid=31,
 WinBuiltinPrintOperatorsSid=32, WinBuiltinBackupOperatorsSid=33,
 WinBuiltinReplicatorSid=34, WinBuiltinPreWindows2000CompatibleAccessSid=35,
 WinBuiltinRemoteDesktopUsersSid=36, WinBuiltinNetworkConfigurationOperatorsSid=37,
 WinAccountAdministratorSid=38, WinAccountGuestSid=39, WinAccountKrbtgtSid=40,
 WinAccountDomainAdminsSid=41, WinAccountDomainUsersSid=42, WinAccountDomainGuestsSid=43,
 WinAccountComputersSid=44, WinAccountControllersSid=45, WinAccountCertAdminsSid=46,
 WinAccountSchemaAdminsSid=47, WinAccountEnterpriseAdminsSid=48,
 WinAccountPolicyAdminsSid=49, WinAccountRasAndIasServersSid=50,
 WinNTLMAuthenticationSid=51, WinDigestAuthenticationSid=52,
 WinSChannelAuthenticationSid=53, WinThisOrganizationSid=54, WinOtherOrganizationSid=55,
 WinBuiltinIncomingForestTrustBuildersSid=56, WinBuiltinPerfMonitoringUsersSid=57,
 WinBuiltinPerfLoggingUsersSid=58, WinBuiltinAuthorizationAccessSid=59,
 WinBuiltinTerminalServerLicenseServersSid=60
} WELL_KNOWN_SID_TYPE;
typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE { LowMemoryResourceNotification,
HighMemoryResourceNotification } MEMORY_RESOURCE_NOTIFICATION_TYPE;
typedef struct _WIN32_FIND_STREAM_DATA {
	LARGE_INTEGER StreamSize;
	WCHAR cStreamName[ MAX_PATH + 36 ];
} WIN32_FIND_STREAM_DATA, *PWIN32_FIND_STREAM_DATA;
typedef BOOL (WINAPI* PGET_MODULE_HANDLE_EXA)(DWORD,LPCSTR,HMODULE*);
typedef BOOL (WINAPI* PGET_MODULE_HANDLE_EXW)(DWORD,LPCWSTR,HMODULE*);
typedef DWORD (WINAPI *PFE_EXPORT_FUNC)(PBYTE,PVOID,ULONG);
typedef DWORD (WINAPI *PFE_IMPORT_FUNC)(PBYTE,PVOID,PULONG);
typedef struct tagNMTTCUSTOMDRAW {
	NMCUSTOMDRAW nmcd;
	UINT uDrawFlags;
} NMTTCUSTOMDRAW, *LPNMTTCUSTOMDRAW;
typedef struct _IMAGELISTDRAWPARAMS {
	DWORD cbSize;
	HIMAGELIST himl;
	int i;
	HDC hdcDst;
	int x;
	int y;
	int cx;
	int cy;
	int xBitmap;
	int yBitmap;
	COLORREF rgbBk;
	COLORREF rgbFg;
	UINT fStyle;
	DWORD dwRop;
#if (_WIN32_IE >= 0x501)
	DWORD fState;
	DWORD Frame;
	COLORREF crEffect;
#endif
} IMAGELISTDRAWPARAMS, *LPIMAGELISTDRAWPARAMS;
#ifndef __ISequentialStream_INTERFACE_DEFINED__
#define __ISequentialStream_INTERFACE_DEFINED__
struct ISequentialStream { const struct ISequentialStreamVtbl *lpVtbl; };
#endif
typedef struct _HD_TEXTFILTERA {
	LPSTR pszText;
	INT cchTextMax;
} HD_TEXTFILTERA, *LPHD_TEXTFILTERA;
typedef struct _HD_TEXTFILTERW {
	LPWSTR pszText;
	INT cchTextMax;
} HD_TEXTFILTERW, *LPHD_TEXTFILTERW;
typedef struct {
	UINT cbSize;
	DWORD dwMask;
	int cxPad;
	int cyPad;
	int cxBarPad;
	int cyBarPad;
	int cxButtonSpacing;
	int cyButtonSpacing;
} TBMETRICS, * LPTBMETRICS;
typedef struct tagNMTBSAVE {
	NMHDR hdr;
	DWORD* pData;
	DWORD* pCurrent;
	UINT cbData;
	int iItem;
	int cButtons;
	TBBUTTON tbButton;
} NMTBSAVE, *LPNMTBSAVE;
typedef struct tagNMTBRESTORE {
	NMHDR hdr;
	DWORD* pData;
	DWORD* pCurrent;
	UINT cbData;
	int iItem;
	int cButtons;
	int cbBytesPerRecord;
	TBBUTTON tbButton;
} NMTBRESTORE, *LPNMTBRESTORE;
typedef struct tagNMREBARCHILDSIZE {
	NMHDR hdr;
	UINT uBand;
	UINT wID;
	RECT rcChild;
	RECT rcBand;
} NMREBARCHILDSIZE, *LPNMREBARCHILDSIZE;
typedef struct tagNMREBAR {
	NMHDR  hdr;
	DWORD  dwMask;
	UINT   uBand;
	UINT   fStyle;
	UINT   wID;
	LPARAM lParam;
} NMREBAR, *LPNMREBAR;
typedef struct tagLVGROUPMETRICS {
	UINT cbSize;
	UINT mask;
	UINT Left;
	UINT Top;
	UINT Right;
	UINT Bottom;
	COLORREF crLeft;
	COLORREF crTop;
	COLORREF crRight;
	COLORREF crBottom;
	COLORREF crHeader;
	COLORREF crFooter;
} LVGROUPMETRICS, *PLVGROUPMETRICS;
typedef struct tagLVGROUP {
	UINT cbSize;
	UINT mask;
	LPWSTR pszHeader;
	int cchHeader;
	LPWSTR pszFooter;
	int cchFooter;
	int iGroupId;
	UINT stateMask;
	UINT state;
	UINT uAlign;
} LVGROUP, *PLVGROUP;
typedef int (CALLBACK *PFNLVGROUPCOMPARE)(int, int, void *);
typedef struct tagLVINSERTGROUPSORTED {
	PFNLVGROUPCOMPARE pfnGroupCompare;
	void *pvData;
	LVGROUP lvGroup;
}LVINSERTGROUPSORTED, *PLVINSERTGROUPSORTED;
typedef struct tagLVTILEVIEWINFO {
	UINT cbSize;
	DWORD dwMask;
	DWORD dwFlags;
	SIZE sizeTile;
	int cLines;
	RECT rcLabelMargin;
} LVTILEVIEWINFO, *PLVTILEVIEWINFO;
typedef struct {
	UINT cbSize;
	DWORD dwFlags;
	int iItem;
	DWORD dwReserved;
} LVINSERTMARK, * LPLVINSERTMARK;
typedef struct tagLVSETINFOTIP {
	UINT cbSize;
	DWORD dwFlags;
	LPWSTR pszText;
	int iItem;
	int iSubItem;
} LVSETINFOTIP, *PLVSETINFOTIP;
typedef struct {
	HIMAGELIST himl;
	RECT margin;
	UINT uAlign;
} BUTTON_IMAGELIST, *PBUTTON_IMAGELIST;
typedef struct tagNMBCHOTITEM {
	NMHDR hdr;
	DWORD dwFlags;
} NMBCHOTITEM, *LPNMBCHOTITEM;
typedef struct _tagEDITBALLOONTIP {
	DWORD  cbStruct;
	LPCWSTR pszTitle;
	LPCWSTR pszText;
	INT   ttiIcon;
} EDITBALLOONTIP, *PEDITBALLOONTIP;
typedef struct tagNMHDFILTERBTNCLICK {
	NMHDR hdr;
	INT iItem;
	RECT rc;
} NMHDFILTERBTNCLICK, *LPNMHDFILTERBTNCLICK;
typedef struct tagNMRBAUTOSIZE {
	NMHDR hdr;
	BOOL fChanged;
	RECT rcTarget;
	RECT rcActual;
} NMRBAUTOSIZE, *LPNMRBAUTOSIZE;
typedef struct tagNMREBARCHEVRON {
	NMHDR hdr;
	UINT uBand;
	UINT wID;
	LPARAM lParam;
	RECT rc;
	LPARAM lParamNM;
} NMREBARCHEVRON, *LPNMREBARCHEVRON;
typedef struct tagNMREBARAUTOBREAK {
	NMHDR hdr;
	UINT uBand;
	UINT wID;
	LPARAM lParam;
	UINT uMsg;
	UINT fStyleCurrent;
	BOOL fAutoBreak;
} NMREBARAUTOBREAK, *LPNMREBARAUTOBREAK;
typedef struct _RB_HITTESTINFO {
	POINT pt;
	UINT flags;
	int iBand;
} RBHITTESTINFO, *LPRBHITTESTINFO;
typedef struct _TTGETTITLE {
	DWORD dwSize;
	UINT uTitleBitmap;
	UINT cch;
	WCHAR* pszTitle;
} TTGETTITLE, *PTTGETTITLE;
typedef struct _DRAWPATRECT {
	POINT ptPosition;
	POINT ptSize;
	WORD wStyle;
	WORD wPattern;
} DRAWPATRECT, *PDRAWPATRECT;
typedef struct _PSINJECTDATA {
	DWORD	DataBytes;
	WORD	InjectionPoint;
	WORD   PageNumber;
} PSINJECTDATA, *PPSINJECTDATA;
typedef struct _PSFEATURE_OUTPUT {
	BOOL bPageIndependent;
	BOOL bSetPageDevice;
} PSFEATURE_OUTPUT, *PPSFEATURE_OUTPUT;
typedef struct _PSFEATURE_CUSTPAPER {
	LONG lOrientation;
	LONG lWidth;
	LONG lHeight;
	LONG lWidthOffset;
	LONG lHeightOffset;
} PSFEATURE_CUSTPAPER, *PPSFEATURE_CUSTPAPER;
typedef struct tagWCRANGE {
	WCHAR wcLow;
	USHORT cGlyphs;
} WCRANGE, *PWCRANGE,*LPWCRANGE;
typedef struct tagGLYPHSET {
	DWORD   cbThis;
	DWORD   flAccel;
	DWORD   cGlyphsSupported;
	DWORD   cRanges;
	WCRANGE ranges[1];
} GLYPHSET, *PGLYPHSET, *LPGLYPHSET;
typedef struct _WGLSWAP {
	HDC hdc;
	UINT uiFlags;
} WGLSWAP, *PWGLSWAP, *LPWGLSWAP;
typedef struct tagLITEM {
	UINT	mask ;
	int	iLink ;
	UINT	state ;
	UINT	stateMask ;
	WCHAR	szID[MAX_LINKID_TEXT] ;
	WCHAR	szUrl[L_MAX_URL_LENGTH] ;
} LITEM, * PLITEM ;
typedef struct tagNMLINK {
	NMHDR hdr;
	LITEM item ;
} NMLINK, *PNMLINK;
typedef struct tagUPDATELAYEREDWINDOWINFO {
	DWORD	cbSize;
	HDC	hdcDst;
	POINT	*pptDst;
	SIZE	*psize;
	HDC	hdcSrc;
	POINT	*pptSrc;
	COLORREF	crKey;
	BLENDFUNCTION	 *pblend;
	DWORD	dwFlags;
	RECT	*prcDirty;
} UPDATELAYEREDWINDOWINFO, *PUPDATELAYEREDWINDOWINFO;
typedef struct tagLASTINPUTINFO { UINT cbSize; DWORD dwTime; } LASTINPUTINFO,*PLASTINPUTINFO;
/* Functions.h Declarations for all the WIN32 Functions */
BOOL WINAPI GetLastInputInfo(PLASTINPUTINFO);
DWORD WINAPI GetClipboardSequenceNumber(void);
BOOL WINAPI UpdateLayeredWindow(HWND,HDC,POINT *,SIZE *,HDC,POINT *,COLORREF,BLENDFUNCTION *,DWORD);
UINT WINAPI GetEnhMetaFilePixelFormat(HENHMETAFILE,UINT,PIXELFORMATDESCRIPTOR *);
BOOL WINAPI ColorCorrectPalette(HDC,HPALETTE,DWORD,DWORD);
DWORD WINAPI ReadEncryptedFileRaw(PFE_EXPORT_FUNC,PVOID,PVOID);
DWORD WINAPI WriteEncryptedFileRaw(PFE_IMPORT_FUNC,PVOID,PVOID);
VOID WINAPI CloseEncryptedFileRaw(PVOID);
BOOLEAN WINAPI Wow64EnableWow64FsRedirection(BOOLEAN);
BOOL WINAPI FileEncryptionStatusA(LPCSTR,LPDWORD);
BOOL WINAPI FileEncryptionStatusW(LPCWSTR,LPDWORD);
BOOL WINAPI AddAuditAccessAceEx(PACL,DWORD,DWORD,DWORD,PSID,BOOL,BOOL);
BOOL WINAPI AddAccessDeniedObjectAce(PACL,DWORD,DWORD,DWORD,GUID *,GUID *,PSID);
BOOL WINAPI AddAuditAccessObjectAce(PACL,DWORD,DWORD,DWORD,GUID *,GUID *,PSID,BOOL,BOOL);
BOOL WINAPI ZombifyActCtx(HANDLE);
HANDLE WINAPI CreateActCtxA(PCACTCTXA);
HANDLE WINAPI CreateActCtxW(PCACTCTXW);
VOID WINAPI AddRefActCtx(HANDLE);
VOID WINAPI ReleaseActCtx(HANDLE);
BOOL WINAPI ActivateActCtx(HANDLE,ULONG_PTR *);
BOOL WINAPI DeactivateActCtx(DWORD,ULONG_PTR);
BOOL WINAPI GetCurrentActCtx(HANDLE *);
BOOL WINAPI SetThreadStackGuarantee(PULONG);
BOOL WINAPI SetSecurityDescriptorControl(PSECURITY_DESCRIPTOR,SECURITY_DESCRIPTOR_CONTROL,SECURITY_DESCRIPTOR_CONTROL);
BOOL WINAPI SetPrivateObjectSecurityEx(SECURITY_INFORMATION,PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR *,ULONG,PGENERIC_MAPPING,HANDLE);
BOOL WINAPI MakeAbsoluteSD2(PSECURITY_DESCRIPTOR,LPDWORD);
BOOL WINAPI TzSpecificLocalTimeToSystemTime(LPTIME_ZONE_INFORMATION,LPSYSTEMTIME,LPSYSTEMTIME);
BOOL WINAPI IsTokenRestricted(HANDLE);
DWORD WINAPI GetThreadId(HANDLE);
BOOL WINAPI GetThreadIOPendingFlag(HANDLE,PBOOL);
LPVOID WINAPI CreateFiberEx(SIZE_T,SIZE_T,DWORD,LPFIBER_START_ROUTINE,LPVOID);
LPVOID WINAPI ConvertThreadToFiberEx(LPVOID,DWORD);
BOOL WINAPI ConvertFiberToThread(VOID);
BOOL WINAPI IsWellKnownSid (PSID, WELL_KNOWN_SID_TYPE);
HANDLE WINAPI CreateMemoryResourceNotification(MEMORY_RESOURCE_NOTIFICATION_TYPE);
BOOL WINAPI QueryMemoryResourceNotification(HANDLE,PBOOL);
DWORD WINAPI OpenEncryptedFileRawA(LPCSTR,ULONG,PVOID *);
DWORD WINAPI OpenEncryptedFileRawW(LPCWSTR,ULONG,PVOID *);
BOOL WINAPI IsTokenUntrusted(HANDLE);
BOOL APIENTRY CheckTokenMembership(HANDLE,PSID,PBOOL);
BOOL WINAPI NeedCurrentDirectoryForExePathA(LPCSTR);
BOOL WINAPI NeedCurrentDirectoryForExePathW(LPCWSTR);
HANDLE WINAPI OpenWaitableTimerA(DWORD,BOOL,LPCSTR);
HANDLE WINAPI OpenWaitableTimerW(DWORD,BOOL,LPCWSTR);
BOOL WINAPI SetFirmwareEnvironmentVariableA(LPCSTR,LPCSTR,PVOID,DWORD);
BOOL WINAPI SetFirmwareEnvironmentVariableW(LPCWSTR,LPCWSTR,PVOID,DWORD);
DWORD WINAPI GetFirmwareEnvironmentVariableA(LPCSTR,LPCSTR,PVOID,DWORD);
DWORD WINAPI GetFirmwareEnvironmentVariableW(LPCWSTR,LPCWSTR,PVOID,DWORD);
BOOL WINAPI GetWindowsAccountDomainSid(PSID,PSID,DWORD *);
BOOL WINAPI EqualDomainSid(PSID,PSID,BOOL *);
BOOL WINAPI CreatePrivateObjectSecurityEx(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,
	PSECURITY_DESCRIPTOR *,GUID *,BOOL,ULONG,HANDLE,PGENERIC_MAPPING);
BOOL WINAPI CreatePrivateObjectSecurityWithMultipleInheritance(PSECURITY_DESCRIPTOR,
	PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR *,GUID **,ULONG,BOOL,ULONG,
	HANDLE,PGENERIC_MAPPING);
BOOL WINAPI CreateWellKnownSid(WELL_KNOWN_SID_TYPE,PSID,PSID,DWORD *);
BOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmByHandleA(LPCSTR,LPVOID,HANDLE,LPCSTR,
	LPCSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,
	DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
BOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmByHandleW(LPCWSTR,LPVOID,HANDLE,LPCWSTR,
	LPCWSTR,PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,
	DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
BOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmA(LPCSTR,LPVOID,LPCSTR,LPCSTR,
	PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,
	DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
BOOL WINAPI AccessCheckByTypeResultListAndAuditAlarmW(LPCWSTR,LPVOID,LPCWSTR,LPCWSTR,
	PSECURITY_DESCRIPTOR,PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,
	DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPDWORD,LPBOOL);
BOOL WINAPI CheckNameLegalDOS8Dot3A(LPCSTR,LPSTR,DWORD,PBOOL,PBOOL);
BOOL WINAPI CheckNameLegalDOS8Dot3W(LPCWSTR,LPSTR,DWORD,PBOOL,PBOOL);
DWORD WINAPI GetDllDirectoryA(DWORD,LPSTR);
DWORD WINAPI GetDllDirectoryW(DWORD,LPWSTR);
BOOL WINAPI SetDllDirectoryA(LPCSTR);
BOOL WINAPI SetDllDirectoryW(LPCWSTR);
BOOL WINAPI DnsHostnameToComputerNameA(LPCSTR,LPSTR,LPDWORD);
BOOL WINAPI DnsHostnameToComputerNameW(LPCWSTR,LPWSTR,LPDWORD);
UINT WINAPI GetWriteWatch(DWORD,PVOID,SIZE_T,PVOID *,PULONG_PTR,PULONG);
UINT WINAPI ResetWriteWatch(LPVOID,SIZE_T);
SIZE_T WINAPI GetLargePageMinimum(void);
BOOL WINAPI HeapSetInformation(HANDLE,HEAP_INFORMATION_CLASS,PVOID,SIZE_T);
BOOL WINAPI HeapQueryInformation(HANDLE,HEAP_INFORMATION_CLASS,PVOID,SIZE_T,PSIZE_T);
DWORD WINAPI GetFreeSpace(UINT);
BOOL WINAPI AccessCheckByType(PSECURITY_DESCRIPTOR,PSID,HANDLE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,PPRIVILEGE_SET,LPDWORD,LPDWORD,LPBOOL);
BOOL WINAPI AccessCheckByTypeResultList (PSECURITY_DESCRIPTOR,PSID,HANDLE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,PPRIVILEGE_SET,LPDWORD,LPDWORD,LPDWORD);
BOOL WINAPI AccessCheckByTypeAndAuditAlarmA(LPCSTR,LPVOID,LPCSTR,LPCSTR,PSECURITY_DESCRIPTOR,
	PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,
	BOOL,LPDWORD,LPBOOL,LPBOOL);
BOOL WINAPI AccessCheckByTypeAndAuditAlarmW(LPCWSTR,LPVOID,LPCWSTR,LPCWSTR,PSECURITY_DESCRIPTOR,
	PSID,DWORD,AUDIT_EVENT_TYPE,DWORD,POBJECT_TYPE_LIST,DWORD,PGENERIC_MAPPING,
	BOOL,LPDWORD,LPBOOL,LPBOOL);
BOOL WINAPI AccessCheckAndAuditAlarmA(LPCSTR,LPVOID,LPSTR,LPSTR,PSECURITY_DESCRIPTOR,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPBOOL,LPBOOL);
BOOL WINAPI AccessCheckAndAuditAlarmW(LPCWSTR,LPVOID,LPWSTR,LPWSTR,PSECURITY_DESCRIPTOR,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPBOOL,LPBOOL);
HANDLE WINAPI FindFirstStreamW(LPCWSTR,STREAM_INFO_LEVELS,LPVOID,DWORD);
BOOL APIENTRY FindNextStreamW(HANDLE,LPVOID);
PVOID WINAPI AddVectoredContinueHandler (ULONG,PVECTORED_EXCEPTION_HANDLER);
ULONG WINAPI RemoveVectoredContinueHandler (PVOID);
BOOL WINAPI UnregisterWaitEx(HANDLE,HANDLE);
BOOL WINAPI DeleteTimerQueueTimer(HANDLE,HANDLE,HANDLE);
BOOL WINAPI VerifyVersionInfoA(LPOSVERSIONINFOEXA,DWORD,DWORDLONG);
BOOL WINAPI VerifyVersionInfoW(LPOSVERSIONINFOEXW,DWORD,DWORDLONG);
BOOL WINAPI GetEventLogInformation (HANDLE,DWORD,LPVOID,DWORD,LPDWORD);
BOOL WINAPI GetLongPathNameW(LPCWSTR,LPWSTR,DWORD);
UINT GetRawInputDeviceInfoA(HANDLE,UINT,LPVOID,PUINT);
UINT GetRawInputDeviceInfoW(HANDLE,UINT,LPVOID,PUINT);
UINT WINAPI GetRegisteredRawInputDevices(PRAWINPUTDEVICE,PUINT,UINT);
UINT WINAPI GetRawInputDeviceList(PRAWINPUTDEVICELIST,PUINT,UINT);
LRESULT WINAPI DefRawInputProc(PRAWINPUT*,INT,UINT);
BOOL WINAPI ReplaceFileA(LPCSTR,LPCSTR,LPCSTR,DWORD,LPVOID,LPVOID);
BOOL WINAPI ReplaceFileW(LPCWSTR,LPCWSTR,LPCWSTR,DWORD,LPVOID,LPVOID);
HANDLE WINAPI ReOpenFile(HANDLE,DWORD,DWORD,DWORD);
#ifdef UNICODE
#define FileEncryptionStatus FileEncryptionStatusW
#define CreateActCtx CreateActCtxW
#define OpenEncryptedFileRaw OpenEncryptedFileRawW
#define NeedCurrentDirectoryForExePath NeedCurrentDirectoryForExePathW
#define OpenWaitableTimer OpenWaitableTimerW
#define SetFirmwareEnvironmentVariable SetFirmwareEnvironmentVariableW
#define GetFirmwareEnvironmentVariable GetFirmwareEnvironmentVariableW
#define AccessCheckByTypeResultListAndAuditAlarmByHandle AccessCheckByTypeResultListAndAuditAlarmByHandleW
#define AccessCheckByTypeResultListAndAuditAlarm AccessCheckByTypeResultListAndAuditAlarmW
#define AccessCheckByTypeAndAuditAlarm AccessCheckByTypeAndAuditAlarmW
#define CheckNameLegalDOS8Dot3 CheckNameLegalDOS8Dot3W
#define GetDllDirectory GetDllDirectoryW
#define SetDllDirectory SetDllDirectoryW
#define DnsHostnameToComputerName DnsHostnameToComputerNameW
typedef PWIN32_FIND_DATAW PWIN32_FIND_DATA;
typedef LPWIN32_FIND_DATAW LPWIN32_FIND_DATA;
#define ReplaceFile ReplaceFileW
#define AccessCheckAndAuditAlarm AccessCheckAndAuditAlarmW
#define VerifyVersionInfo VerifyVersionInfoW
#define GetRawInputDeviceInfo GetRawInputDeviceInfoW
#define FindActCtxSectionString FindActCtxSectionStringW
#else
#define FileEncryptionStatus FileEncryptionStatusA
#define CreateActCtx CreateActCtxA
#define OpenEncryptedFileRaw OpenEncryptedFileRawA
#define NeedCurrentDirectoryForExePath NeedCurrentDirectoryForExePathA
#define OpenWaitableTimer OpenWaitableTimerA
#define SetFirmwareEnvironmentVariable SetFirmwareEnvironmentVariableA
#define GetFirmwareEnvironmentVariable GetFirmwareEnvironmentVariableA
#define AccessCheckByTypeResultListAndAuditAlarmByHandle AccessCheckByTypeResultListAndAuditAlarmByHandleA
#define AccessCheckByTypeResultListAndAuditAlarm AccessCheckByTypeResultListAndAuditAlarmA
#define AccessCheckByTypeAndAuditAlarm AccessCheckByTypeAndAuditAlarmA
#define CheckNameLegalDOS8Dot3 CheckNameLegalDOS8Dot3A
#define GetDllDirectory GetDllDirectoryA
#define SetDllDirectory SetDllDirectoryA
#define DnsHostnameToComputerName DnsHostnameToComputerNameA
typedef PWIN32_FIND_DATAA PWIN32_FIND_DATA;
typedef LPWIN32_FIND_DATAA LPWIN32_FIND_DATA;
#define ReplaceFile ReplaceFileA
#define GetRawInputDeviceInfo GetRawInputDeviceInfoA
#define FindActCtxSectionString FindActCtxSectionStringA
#define VerifyVersionInfo VerifyVersionInfoA
#define AccessCheckAndAuditAlarm AccessCheckAndAuditAlarmA
#endif
BOOL WINAPI FindActCtxSectionStringA(DWORD,const GUID *,ULONG,LPCSTR,PACTCTX_SECTION_KEYED_DATA);
BOOL WINAPI FindActCtxSectionStringW(DWORD,const GUID *,ULONG,LPCWSTR,PACTCTX_SECTION_KEYED_DATA);
BOOL WINAPI FindActCtxSectionGuid(DWORD,const GUID *,ULONG,const GUID *,PACTCTX_SECTION_KEYED_DATA);
UINT WINAPI GetRawInputBuffer(PRAWINPUT,PUINT,UINT);
UINT GetRawInputData(HRAWINPUT,UINT,LPVOID,PUINT,UINT);
void RtlZeroMemory(void *,unsigned int);
BOOL GetBinaryTypeW(LPCWSTR,LPDWORD);
DWORD GetShortPathNameW(LPCWSTR,LPWSTR,DWORD);
LPWSTR GetEnvironmentStringsW(VOID);
BOOL FreeEnvironmentStringsW(LPWSTR);
DWORD FormatMessageW(DWORD,LPCVOID,DWORD,DWORD,LPWSTR,DWORD,va_list *);
HANDLE CreateMailslotW(LPCWSTR,DWORD,DWORD,LPSECURITY_ATTRIBUTES);
int lstrcmpW(LPCWSTR,LPCWSTR);
int lstrcmpiW( LPCWSTR,LPCWSTR);
LPWSTR lstrcpynW(LPWSTR,LPCWSTR,int);
LPWSTR lstrcpyW(LPWSTR,LPCWSTR);
LPWSTR lstrcatW(LPWSTR,LPCWSTR);
int lstrlenW(LPCWSTR);
HANDLE CreateMutexW(LPSECURITY_ATTRIBUTES,BOOL,LPCWSTR);
HANDLE OpenMutexW(DWORD,BOOL,LPCWSTR);
HANDLE CreateEventW(LPSECURITY_ATTRIBUTES,BOOL,BOOL,LPCWSTR);
HANDLE OpenEventW(DWORD,BOOL,LPCWSTR);
HANDLE CreateSemaphoreW(LPSECURITY_ATTRIBUTES,LONG,LONG,LPCWSTR);
HANDLE OpenSemaphoreW(DWORD,BOOL,LPCWSTR);
HANDLE CreateFileMappingW(HANDLE,LPSECURITY_ATTRIBUTES,DWORD,DWORD,DWORD,LPCWSTR);
HANDLE OpenFileMappingW(DWORD,BOOL,LPCWSTR);
DWORD GetLogicalDriveStringsW(DWORD,LPWSTR);
HINSTANCE LoadLibraryW(LPCWSTR);
HINSTANCE LoadLibraryExW(LPCWSTR,HANDLE,DWORD);
DWORD GetModuleFileNameW(HINSTANCE,LPWSTR,DWORD);
HMODULE GetModuleHandleW(LPCWSTR);
BOOL WINAPI GetModuleHandleExA(DWORD,LPCSTR,HMODULE*);
BOOL WINAPI GetModuleHandleExW(DWORD,LPCWSTR,HMODULE*);
VOID FatalAppExitW(UINT,LPCWSTR);
LPWSTR GetCommandLineW(VOID);
DWORD GetEnvironmentVariableW(LPCWSTR,LPWSTR,DWORD);
BOOL SetEnvironmentVariableW(LPCWSTR,LPCWSTR);
DWORD ExpandEnvironmentStringsW(LPCWSTR,LPWSTR,DWORD);
VOID OutputDebugStringW(LPCWSTR);
HRSRC FindResourceW(HINSTANCE,LPCWSTR,LPCWSTR);
HRSRC FindResourceExW(HINSTANCE,LPCWSTR,LPCWSTR,WORD);
BOOL EnumResourceTypesW(HINSTANCE,ENUMRESTYPEPROC,LONG);
BOOL EnumResourceNamesW(HINSTANCE,LPCWSTR,ENUMRESNAMEPROC,LONG);
BOOL EnumResourceLanguagesW(HINSTANCE,LPCWSTR,LPCWSTR,ENUMRESLANGPROC,LONG);
HANDLE BeginUpdateResourceW(LPCWSTR,BOOL);
BOOL UpdateResourceW(HANDLE,LPCWSTR,LPCWSTR,WORD,LPVOID,DWORD);
BOOL EndUpdateResourceW(HANDLE,BOOL);
ATOM GlobalAddAtomW( LPCWSTR);
ATOM GlobalFindAtomW( LPCWSTR);
UINT GlobalGetAtomNameW(ATOM,LPWSTR,int);
ATOM AddAtomW(LPCWSTR);
ATOM FindAtomW(LPCWSTR);
UINT GetAtomNameW(ATOM,LPWSTR,int);
UINT GetProfileIntW(LPCWSTR,LPCWSTR,INT);
DWORD GetProfileStringW(LPCWSTR,LPCWSTR,LPCWSTR,LPWSTR,DWORD);
BOOL WriteProfileStringW(LPCWSTR,LPCWSTR,LPCWSTR);
DWORD GetProfileSectionW(LPCWSTR,LPWSTR,DWORD);
BOOL WriteProfileSectionW(LPCWSTR,LPCWSTR);
UINT GetPrivateProfileIntW(LPCWSTR,LPCWSTR,INT,LPCWSTR);
BOOL WINAPI GetPrivateProfileStructA(LPCSTR,LPCSTR,LPVOID,UINT,LPCSTR);
BOOL WINAPI GetPrivateProfileStructW(LPCWSTR,LPCWSTR,LPVOID,UINT,LPCWSTR);
DWORD GetPrivateProfileStringW(LPCWSTR,LPCWSTR,LPCWSTR,LPWSTR,DWORD,LPCWSTR);
BOOL WritePrivateProfileStringW(LPCWSTR,LPCWSTR,LPCWSTR,LPCWSTR);
BOOL WINAPI WritePrivateProfileStructA(LPCSTR,LPCSTR,LPVOID,UINT,LPCSTR);
BOOL WINAPI WritePrivateProfileStructW(LPCWSTR,LPCWSTR,LPVOID,UINT,LPCWSTR);
DWORD GetPrivateProfileSectionW(LPCWSTR,LPWSTR,DWORD,LPCWSTR);
DWORD WINAPI GetPrivateProfileSectionNamesA(LPSTR,DWORD,LPCSTR);
DWORD WINAPI GetPrivateProfileSectionNamesW(LPWSTR,DWORD,LPCWSTR);
BOOL WritePrivateProfileSectionW(LPCWSTR,LPCWSTR,LPCWSTR);
UINT GetDriveTypeW(LPCWSTR);
UINT GetSystemDirectoryW(LPWSTR,UINT);
DWORD GetTempPathW(DWORD,LPWSTR);
UINT GetTempFileNameW(LPCWSTR,LPCWSTR,UINT,LPWSTR);
UINT WINAPI GetWindowModuleFileNameA(HWND,LPSTR,UINT);
UINT WINAPI GetWindowModuleFileNameW(HWND,LPWSTR,UINT);
UINT WINAPI GetWindowsDirectoryW(LPWSTR,UINT);
UINT WINAPI GetSystemWindowsDirectoryA(LPSTR,UINT);
UINT WINAPI GetSystemWindowsDirectoryW(LPWSTR,UINT);
BOOL WINAPI GetWindowInfo(HWND,PWINDOWINFO);
DWORD WINAPI GetListBoxInfo(HWND);
BOOL WINAPI GetScrollBarInfo(HWND,LONG,PSCROLLBARINFO);
BOOL WINAPI GetCursorInfo(PCURSORINFO);
BOOL WINAPI GetTitleBarInfo(HWND,PTITLEBARINFO);
BOOL SetCurrentDirectoryW(LPCWSTR);
DWORD GetCurrentDirectoryW(DWORD,LPWSTR);
BOOL WINAPI GetCurrentHwProfileA(LPHW_PROFILE_INFOA);
BOOL WINAPI GetCurrentHwProfileW(LPHW_PROFILE_INFOW);
BOOL GetDiskFreeSpaceW(LPCWSTR,LPDWORD,LPDWORD,LPDWORD,LPDWORD);
BOOL WINAPI GetDiskFreeSpaceExW(LPCWSTR,long long *,long long *,long long *);
BOOL CreateDirectoryW(LPCWSTR,LPSECURITY_ATTRIBUTES);
BOOL CreateDirectoryExW(LPCWSTR,LPCWSTR,LPSECURITY_ATTRIBUTES);
BOOL RemoveDirectoryW(LPCWSTR);
DWORD GetFullPathNameW(LPCWSTR,DWORD,LPWSTR,LPWSTR *);
BOOL DefineDosDeviceW(DWORD,LPCWSTR,LPCWSTR);
DWORD QueryDosDeviceW(LPCWSTR,LPWSTR,DWORD);
HANDLE CreateFileW(LPCWSTR,DWORD,DWORD,LPSECURITY_ATTRIBUTES,DWORD,DWORD,HANDLE);
BOOL SetFileAttributesW(LPCWSTR,DWORD);
DWORD GetFileAttributesW(LPCWSTR);
BOOL WINAPI GetFileAttributesExA(LPCSTR,GET_FILEEX_INFO_LEVELS,LPVOID);
BOOL WINAPI GetFileAttributesExW(LPCWSTR,GET_FILEEX_INFO_LEVELS,LPVOID);
DWORD GetCompressedFileSizeW(LPCWSTR,LPDWORD);
BOOL DeleteFileW(LPCWSTR);
DWORD SearchPathW(LPCWSTR,LPCWSTR,LPCWSTR,DWORD,LPWSTR,LPWSTR *);
BOOL CopyFileW(LPCWSTR,LPCWSTR,BOOL);
BOOL WINAPI CopyFileExW(LPCWSTR,LPCWSTR,LPPROGRESS_ROUTINE,LPVOID,LPBOOL,DWORD);
BOOL WINAPI CreateHardLinkW(LPCWSTR,LPCWSTR,LPSECURITY_ATTRIBUTES);
BOOL MoveFileW(LPCWSTR,LPCWSTR);
BOOL MoveFileExW(LPCWSTR,LPCWSTR,DWORD);
BOOL WINAPI MoveFileWithProgressW(LPCWSTR,LPCWSTR,LPPROGRESS_ROUTINE,LPVOID,DWORD);
HANDLE CreateNamedPipeW(LPCWSTR,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,LPSECURITY_ATTRIBUTES);
BOOL GetNamedPipeHandleStateW(HANDLE,LPDWORD,LPDWORD,LPDWORD,LPDWORD,LPWSTR,DWORD);
BOOL CallNamedPipeW(LPCWSTR,LPVOID,DWORD,LPVOID,DWORD,LPDWORD,DWORD);
BOOL WaitNamedPipeW(LPCWSTR,DWORD);
BOOL SetVolumeLabelW(LPCWSTR,LPCWSTR);
BOOL GetVolumeInformationW(LPCWSTR,LPWSTR,DWORD,LPDWORD,LPDWORD,LPDWORD,LPWSTR,DWORD);
BOOL WINAPI CancelIo(HANDLE);
BOOL ClearEventLogW(HANDLE,LPCWSTR);
BOOL BackupEventLogW(HANDLE,LPCWSTR);
HANDLE OpenEventLogW(LPCWSTR,LPCWSTR);
HANDLE RegisterEventSourceW(LPCWSTR,LPCWSTR);
HANDLE OpenBackupEventLogW(LPCWSTR,LPCWSTR);
BOOL ReadEventLogW(HANDLE,DWORD,DWORD,LPVOID,DWORD,DWORD *,DWORD *);
BOOL ReportEventW(HANDLE,WORD,WORD,DWORD,PSID,WORD,DWORD,LPCWSTR *,LPVOID);
BOOL AccessCheckAndAuditAlarmW(LPCWSTR,LPVOID HandleId,LPWSTR,LPWSTR,PSECURITY_DESCRIPTOR,DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPBOOL,LPBOOL);
BOOL ObjectOpenAuditAlarmW(LPCWSTR,LPVOID,LPWSTR,LPWSTR,PSECURITY_DESCRIPTOR,HANDLE,DWORD,DWORD,PPRIVILEGE_SET,BOOL,BOOL,LPBOOL);
BOOL ObjectPrivilegeAuditAlarmW(LPCWSTR,LPVOID,HANDLE,DWORD,PPRIVILEGE_SET,BOOL);
BOOL ObjectCloseAuditAlarmW(LPCWSTR,LPVOID,BOOL);
BOOL WINAPI ObjectDeleteAuditAlarmA(LPCSTR,LPVOID,BOOL);
BOOL WINAPI ObjectDeleteAuditAlarmW(LPCWSTR,LPVOID,BOOL);
DWORD WINAPI GetGuiResources(HANDLE,DWORD);
COLORREF WINAPI SetDCBrushColor(HDC,COLORREF);
COLORREF WINAPI SetDCPenColor(HDC,COLORREF);
DWORD WINAPI SetLayout(HDC,DWORD);
DWORD WINAPI GetLayout(HDC);
BOOL LockWorkStation(void);
BOOL WINAPI UserHandleGrantAccess(HANDLE,HANDLE,BOOL);
HANDLE WINAPI AddFontMemResourceEx(PVOID,DWORD,PVOID,DWORD*);
BOOL WINAPI RemoveFontMemResourceEx(HANDLE);
#ifdef UNICODE
#define GetModuleHandleEx GetModuleHandleExW
#define GetCurrentHwProfile GetCurrentHwProfileW
#define ObjectDeleteAuditAlarm	ObjectDeleteAuditAlarmW
#define GetComputerNameEx GetComputerNameExW
#define SetComputerNameEx SetComputerNameExW
#define AddFontResourceEx AddFontResourceExW
#define RemoveFontResourceEx RemoveFontResourceExW
#else
#define RemoveFontResourceEx RemoveFontResourceExA
#define AddFontResourceEx AddFontResourceExA
#define GetModuleHandleEx GetModuleHandleExA
#define GetCurrentHwProfile GetCurrentHwProfileA
#define ObjectDeleteAuditAlarm	ObjectDeleteAuditAlarmA
#define GetComputerNameEx GetComputerNameExA
#define SetComputerNameEx SetComputerNameExA
#endif
BOOL PrivilegedServiceAuditAlarmW(LPCWSTR,LPCWSTR,HANDLE,PPRIVILEGE_SET,BOOL);
BOOL SetFileSecurityW(LPCWSTR,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR);
BOOL GetFileSecurityW(LPCWSTR,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR,DWORD,LPDWORD);
HANDLE FindFirstChangeNotificationW(LPCWSTR,BOOL,DWORD);
BOOL IsBadStringPtrW(LPCWSTR,UINT);
BOOL LookupAccountSidW(LPCWSTR,PSID,LPWSTR,LPDWORD,LPWSTR,LPDWORD,PSID_NAME_USE);
BOOL LookupAccountNameW(LPCWSTR,LPCWSTR,PSID,LPDWORD,LPWSTR,LPDWORD,PSID_NAME_USE);
BOOL LookupPrivilegeValueW(LPCWSTR,LPCWSTR,PLUID);
BOOL LookupPrivilegeNameW(LPCWSTR,PLUID,LPWSTR,LPDWORD);
BOOL LookupPrivilegeDisplayNameW(LPCWSTR,LPCWSTR,LPWSTR,LPDWORD,LPDWORD);
BOOL BuildCommDCBW(LPCWSTR,LPDCB);
BOOL BuildCommDCBAndTimeoutsW(LPCWSTR,LPDCB,LPCOMMTIMEOUTS);
BOOL CommConfigDialogW(LPCWSTR,HWND,LPCOMMCONFIG);
BOOL GetDefaultCommConfigW(LPCWSTR,LPCOMMCONFIG,LPDWORD);
BOOL SetDefaultCommConfigW(LPCWSTR,LPCOMMCONFIG,DWORD);
BOOL GetComputerNameW(LPWSTR,LPDWORD);
BOOL SetComputerNameW(LPCWSTR);
BOOL WINAPI GetComputerNameExA(COMPUTER_NAME_FORMAT,LPSTR,LPDWORD);
BOOL WINAPI GetComputerNameExW(COMPUTER_NAME_FORMAT,LPWSTR,LPDWORD);
BOOL WINAPI SetComputerNameExA(COMPUTER_NAME_FORMAT,LPCSTR);
BOOL WINAPI SetComputerNameExW(COMPUTER_NAME_FORMAT,LPCWSTR);
BOOL GetUserNameW(LPWSTR,LPDWORD);
int wvsprintfW(LPWSTR,LPCWSTR,va_list arglist);
int CDECL wsprintfW(LPWSTR,LPCWSTR,...);
HKL LoadKeyboardLayoutW(LPCWSTR,UINT);
BOOL GetKeyboardLayoutNameW(LPWSTR);
HDESK CreateDesktopW(LPWSTR,LPWSTR,LPDEVMODE,DWORD,DWORD,LPSECURITY_ATTRIBUTES);
HDESK OpenDesktopW(LPWSTR,DWORD,BOOL,DWORD);
BOOL EnumDesktopsW(HWINSTA,DESKTOPENUMPROC,LPARAM);
HWINSTA CreateWindowStationW(LPWSTR,DWORD,DWORD,LPSECURITY_ATTRIBUTES);
HWINSTA OpenWindowStationW(LPWSTR,BOOL,DWORD);
BOOL EnumWindowStationsW(ENUMWINDOWSTATIONPROC,LPARAM);
BOOL GetUserObjectInformationW(HANDLE,int,PVOID,DWORD,LPDWORD);
BOOL SetUserObjectInformationW(HANDLE,int,PVOID,DWORD);
UINT RegisterWindowMessageW(LPCWSTR);
BOOL GetMessageW(LPMSG,HWND,UINT,UINT);
LONG DispatchMessageW(CONST MSG *);
BOOL PeekMessageW(LPMSG,HWND,UINT,UINT,UINT);
LRESULT SendMessageW(HWND,UINT,WPARAM,LPARAM);
LRESULT SendMessageTimeoutW(HWND,UINT,WPARAM,LPARAM,UINT,UINT,LPDWORD);
BOOL SendNotifyMessageW(HWND,UINT,WPARAM,LPARAM);
BOOL SendMessageCallbackW(HWND,UINT,WPARAM,LPARAM,SENDASYNCPROC,DWORD);
BOOL PostMessageW(HWND,UINT,WPARAM,LPARAM);
BOOL PostThreadMessageW(DWORD,UINT,WPARAM,LPARAM);
LRESULT DefWindowProcW(HWND,UINT,WPARAM,LPARAM);
LRESULT CallWindowProcW(WNDPROC,HWND,UINT,WPARAM,LPARAM);
ATOM RegisterClassW(CONST WNDCLASSW *);
BOOL UnregisterClassW(LPCWSTR,HINSTANCE);
BOOL GetClassInfoW(HINSTANCE,LPCWSTR,LPWNDCLASS);
ATOM RegisterClassExW(CONST WNDCLASSEX *);
BOOL GetClassInfoExW(HINSTANCE,LPCWSTR,LPWNDCLASSEX);
HWND CreateWindowExW(DWORD,LPCWSTR,LPCWSTR,DWORD,int,int,int,int,HWND,HMENU,HINSTANCE,LPVOID);
HWND CreateDialogParamW(HINSTANCE,LPCWSTR,HWND,DLGPROC,LPARAM);
HWND CreateDialogIndirectParamW(HINSTANCE,LPCDLGTEMPLATE,HWND,DLGPROC,LPARAM);
int DialogBoxParamW(HINSTANCE,LPCWSTR,HWND,DLGPROC,LPARAM);
int DialogBoxIndirectParamW(HINSTANCE,LPCDLGTEMPLATE,HWND,DLGPROC,LPARAM);
BOOL SetDlgItemTextW(HWND,int,LPCWSTR);
UINT GetDlgItemTextW(HWND,int,LPWSTR,int);
LONG SendDlgItemMessageW(HWND,int,UINT,WPARAM,LPARAM);
LRESULT DefDlgProcW(HWND,UINT,WPARAM,LPARAM);
BOOL CallMsgFilterW(LPMSG,int);
UINT RegisterClipboardFormatW(LPCWSTR);
int GetClipboardFormatNameW(UINT,LPWSTR,int);
BOOL CharToOemW(LPCWSTR,LPSTR);
BOOL OemToCharW(LPCSTR,LPWSTR);
BOOL CharToOemBuffW(LPCWSTR,LPSTR,DWORD);
BOOL OemToCharBuffW(LPCSTR,LPWSTR,DWORD);
LPWSTR CharUpperW(LPWSTR);
DWORD CharUpperBuffW(LPWSTR,DWORD);
LPWSTR CharLowerW(LPWSTR);
DWORD CharLowerBuffW(LPWSTR,DWORD);
LPWSTR CharNextW(LPCWSTR);
LPWSTR CharPrevW(LPCWSTR,LPCWSTR);
BOOL IsCharAlphaW(WCHAR);
BOOL IsCharAlphaNumericW(WCHAR);
BOOL IsCharUpperW(WCHAR);
BOOL IsCharLowerW(WCHAR);
int GetKeyNameTextW(LONG,LPWSTR,int);
UINT WINAPI SendInput(UINT,LPINPUT,int);
SHORT VkKeyScanW(WCHAR);
SHORT VkKeyScanExW(WCHAR,HKL);
UINT MapVirtualKeyW(UINT,UINT);
UINT MapVirtualKeyExW(UINT,UINT,HKL);
HACCEL LoadAcceleratorsW(HINSTANCE,LPCWSTR);
HACCEL CreateAcceleratorTableW(LPACCEL,int);
int CopyAcceleratorTableW(HACCEL,LPACCEL,int);
int TranslateAcceleratorW(HWND,HACCEL,LPMSG);
HMENU LoadMenuW(HINSTANCE,LPCWSTR);
HMENU LoadMenuIndirectW(CONST MENUTEMPLATE *);
BOOL ChangeMenuW(HMENU,UINT,LPCWSTR,UINT,UINT);
int GetMenuStringW(HMENU,UINT,LPWSTR,int,UINT);
BOOL InsertMenuW(HMENU,UINT,UINT,UINT,LPCWSTR);
BOOL AppendMenuW(HMENU,UINT,UINT,LPCWSTR);
BOOL ModifyMenuW(HMENU,UINT,UINT,UINT,LPCWSTR);
BOOL InsertMenuItemW(HMENU,UINT,BOOL,LPCMENUITEMINFO);
BOOL GetMenuItemInfoW(HMENU,UINT,BOOL,LPMENUITEMINFO);
BOOL SetMenuItemInfoW( HMENU,UINT,BOOL,LPCMENUITEMINFO);
int DrawTextW(HDC,LPCWSTR,int,LPRECT,UINT);
int DrawTextExW(HDC,LPWSTR,int,LPRECT,UINT,LPDRAWTEXTPARAMS);
BOOL GrayStringW(HDC,HBRUSH,GRAYSTRINGPROC,LPARAM,int,int,int,int,int);
BOOL DrawStateW(HDC,HBRUSH,DRAWSTATEPROC,LPARAM,WPARAM,int,int,int,int,UINT);
LONG TabbedTextOutW(HDC,int,int,LPCWSTR,int,int,LPINT,int);
DWORD GetTabbedTextExtentW(HDC,LPCWSTR,int,int,LPINT);
BOOL SetPropW(HWND,LPCWSTR,HANDLE);
HANDLE GetPropW(HWND,LPCWSTR);
HANDLE RemovePropW(HWND,LPCWSTR);
int EnumPropsExW(HWND,PROPENUMPROCEX,LPARAM);
int EnumPropsW(HWND,PROPENUMPROC);
BOOL SetWindowTextW(HWND,LPCWSTR);
int GetWindowTextW(HWND,LPWSTR,int);
int GetWindowTextLengthW(HWND);
int MessageBoxW(HWND,LPCWSTR,LPCWSTR,UINT);
int MessageBoxExW(HWND,LPCWSTR,LPCWSTR,UINT,WORD);
int MessageBoxIndirectW(LPMSGBOXPARAMS);
LONG GetWindowLongW(HWND,int);
#define GetWindowLongPtrW	GetWindowLongW
#define GetWindowLongPtrA	GetWindowLongA
LONG SetWindowLongW(HWND,int,LONG);
#define SetWindowLongPtrW	SetWindowLongW
#define SetWindowLongPtrA	SetWindowLongA
#define GetClassLongPtrA	GetWindowLongA
#define GetClassLongPtrW	GetWindowLongW
#define SetClassLongPtrA	SetWindowLongA
#define SetClassLongPtrW	SetWindowLongA
DWORD GetClassLongW(HWND,int);
DWORD SetClassLongW(HWND,int,LONG);
HWND FindWindowW(LPCWSTR,LPCWSTR);
HWND FindWindowExW(HWND,HWND,LPCWSTR,LPCWSTR);
int GetClassNameW(HWND,LPWSTR,int);
HHOOK SetWindowsHookExW(int,HOOKPROC,HINSTANCE,DWORD);
#define DefHookProc(c,p,lp,hh) CallNextHookEx((HHOOK)*hh,c,p,lp)
HBITMAP LoadBitmapW(HINSTANCE,LPCWSTR);
HCURSOR LoadCursorW(HINSTANCE,LPCWSTR);
HCURSOR LoadCursorFromFileW(LPCWSTR);
HICON LoadIconW(HINSTANCE,LPCWSTR);
HANDLE LoadImageW(HINSTANCE,LPCWSTR,UINT,int,int,UINT);
int LoadStringW(HINSTANCE,UINT,LPWSTR,int);
BOOL IsDialogMessageW(HWND,LPMSG);
int DlgDirListW(HWND,LPWSTR,int,int,UINT);
BOOL DlgDirSelectExW(HWND,LPWSTR,int,int);
int DlgDirListComboBoxW(HWND,LPWSTR,int,int,UINT);
BOOL DlgDirSelectComboBoxExW(HWND,LPWSTR,int,int);
LRESULT DefFrameProcW(HWND,HWND,UINT,WPARAM,LPARAM);
LRESULT DefMDIChildProcW(HWND,UINT,WPARAM,LPARAM);
HWND CreateMDIWindowW(LPWSTR,LPWSTR,DWORD,int,int,int,int,HWND,HINSTANCE,LPARAM);
BOOL WinHelpW(HWND,LPCWSTR,UINT,DWORD);
LONG ChangeDisplaySettingsW(LPDEVMODE,DWORD);
LONG WINAPI ChangeDisplaySettingsExW(
   LPCWSTR lpszDeviceName,
   LPDEVMODEW lpDevMode,
   HWND hwnd,
   DWORD dwflags,
   LPVOID lParam);



BOOL EnumDisplaySettingsW(LPCWSTR,DWORD,LPDEVMODE);
BOOL SystemParametersInfoW(UINT,UINT,PVOID,UINT);
int AddFontResourceW(LPCWSTR);
int WINAPI AddFontResourceExA(LPCSTR,DWORD,PVOID);
int WINAPI AddFontResourceExW(LPCWSTR,DWORD,PVOID);
HMETAFILE CopyMetaFileW(HMETAFILE,LPCWSTR);
HFONT CreateFontIndirectW(CONST LOGFONT *);
HFONT CreateFontW(int,int,int,int,int,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,LPCWSTR);
HDC CreateICW(LPCWSTR,LPCWSTR,LPCWSTR,CONST DEVMODE *);
HDC CreateMetaFileW(LPCWSTR);
BOOL CreateScalableFontResourceW(DWORD,LPCWSTR,LPCWSTR,LPCWSTR);
int DeviceCapabilitiesW(LPCWSTR,LPCWSTR,WORD,LPWSTR,CONST DEVMODE *);
int EnumFontFamiliesExW(HDC,LPLOGFONT,FONTENUMEXPROC,LPARAM,DWORD);
int EnumFontFamiliesW(HDC,LPCWSTR,FONTENUMPROC,LPARAM);
int EnumFontsW(HDC,LPCWSTR,ENUMFONTSPROC,LPARAM);
BOOL GetCharWidthW(HDC,UINT,UINT,LPINT);
BOOL GetCharWidth32W(HDC,UINT,UINT,LPINT);
BOOL GetCharWidthFloatW(HDC,UINT,UINT,PFLOAT);
BOOL GetCharABCWidthsW(HDC,UINT,UINT,LPABC);
BOOL GetCharABCWidthsFloatW(HDC,UINT,UINT,LPABCFLOAT);
DWORD GetGlyphOutlineW(HDC,UINT,UINT,LPGLYPHMETRICS,DWORD,LPVOID,CONST MAT2 *);
HMETAFILE GetMetaFileW(LPCWSTR);
UINT GetOutlineTextMetricsW(HDC,UINT,LPOUTLINETEXTMETRIC);
BOOL GetTextExtentPointW(HDC,LPCWSTR,int,LPSIZE);
BOOL GetTextExtentPoint32W( HDC,LPCWSTR,int,LPSIZE);
BOOL GetTextExtentExPointW( HDC,LPCWSTR,int,int,LPINT,LPINT,LPSIZE );
BOOL WINAPI GetTextExtentPointI(HDC,LPWORD,int,LPSIZE);
BOOL WINAPI GetTextExtentExPointI(HDC,LPWORD,int,int,LPINT,LPINT,LPSIZE);
BOOL WINAPI GetCharWidthI(HDC,UINT,UINT,LPWORD,LPINT);
BOOL WINAPI GetCharABCWidthsI(HDC,UINT,UINT,LPWORD,LPABC);
DWORD GetCharacterPlacementW(HDC,LPCWSTR,int,int,LPGCP_RESULTS,DWORD);
HDC ResetDCW(HDC,CONST DEVMODE *);
BOOL RemoveFontResourceW(LPCWSTR);
BOOL WINAPI RemoveFontResourceExA(LPCSTR,DWORD,PVOID);
BOOL WINAPI RemoveFontResourceExW(LPCWSTR,DWORD,PVOID);
HENHMETAFILE CopyEnhMetaFileW(HENHMETAFILE,LPCWSTR);
HDC CreateEnhMetaFileW(HDC,LPCWSTR,CONST RECT *,LPCWSTR);
HENHMETAFILE GetEnhMetaFileW(LPCWSTR);
UINT GetEnhMetaFileDescriptionW(HENHMETAFILE,UINT,LPWSTR );
BOOL GetTextMetricsW(HDC,LPTEXTMETRICW);
int StartDocW(HDC,CONST DOCINFO *);
int GetObjectW(HGDIOBJ,int,LPVOID);
BOOL TextOutW(HDC,int,int,LPCWSTR,int);
BOOL ExtTextOutW(HDC,int,int,UINT,CONST RECT *,LPCWSTR,UINT,CONST INT *);
BOOL PolyTextOutW(HDC,CONST POLYTEXT *,int);
int GetTextFaceW(HDC,int,LPWSTR);
DWORD GetKerningPairsW(HDC,DWORD,LPKERNINGPAIR);
BOOL GetLogColorSpaceW(HCOLORSPACE,LPLOGCOLORSPACE,DWORD);
HCOLORSPACE CreateColorSpaceW(LPLOGCOLORSPACE);
BOOL GetICMProfileW(HDC,DWORD,LPWSTR);
BOOL SetICMProfileW(HDC,LPWSTR);
BOOL UpdateICMRegKeyW(DWORD,DWORD,LPWSTR,UINT);
int EnumICMProfilesW(HDC,ICMENUMPROC,LPARAM);
HPROPSHEETPAGE CreatePropertySheetPageW(LPCPROPSHEETPAGE);
int PropertySheetW(LPCPROPSHEETHEADER);
HIMAGELIST ImageList_LoadImageW(HINSTANCE,LPCWSTR,int,int,COLORREF,UINT,UINT);
HIMAGELIST WINAPI ImageList_Duplicate(HIMAGELIST);
BOOL WINAPI ImageList_Copy(HIMAGELIST,int,HIMAGELIST,int,UINT);
BOOL WINAPI ImageList_DrawIndirect(IMAGELISTDRAWPARAMS*);
#define	ImageList_LoadBitmap(h,l,x,G,M) ImageList_LoadImage(h,l,x,G,M,IMAGE_BITMAP,0)
#define ImageList_RemoveAll(himl) ImageList_Remove(himl,-1)
#define ImageList_ExtractIcon(hi, himl,i) ImageList_GetIcon(himl,i,0)
HWND CreateStatusWindowW(LONG,LPCWSTR,HWND,UINT);
void DrawStatusTextW(HDC,LPRECT,LPCWSTR,UINT);
BOOL GetOpenFileNameW(LPOPENFILENAME);
BOOL GetSaveFileNameW(LPOPENFILENAME);
short GetFileTitleW(LPCWSTR,LPWSTR,WORD);
BOOL ChooseColorW(LPCHOOSECOLOR);
HWND ReplaceTextW(LPFINDREPLACE);
BOOL ChooseFontW(LPCHOOSEFONT);
HWND FindTextW(LPFINDREPLACE);
BOOL PrintDlgW(LPPRINTDLG);
BOOL PageSetupDlgW(LPPAGESETUPDLG);
BOOL CreateProcessW(LPCWSTR,LPWSTR,LPSECURITY_ATTRIBUTES,LPSECURITY_ATTRIBUTES,BOOL,DWORD,LPVOID,LPCWSTR,LPSTARTUPINFO,LPPROCESS_INFORMATION);
BOOL WINAPI CreateProcessAsUserA(HANDLE,LPCSTR,LPSTR, LPSECURITY_ATTRIBUTES,LPSECURITY_ATTRIBUTES, BOOL,DWORD,LPVOID,LPCSTR, LPSTARTUPINFOA, LPPROCESS_INFORMATION);
BOOL WINAPI CreateProcessAsUserW(HANDLE,LPCWSTR,LPWSTR,LPSECURITY_ATTRIBUTES,LPSECURITY_ATTRIBUTES,BOOL,DWORD,LPVOID,LPCWSTR,LPSTARTUPINFOW,LPPROCESS_INFORMATION);
BOOL WINAPI CreateProcessWithLogonW(LPCWSTR,LPCWSTR,LPCWSTR,DWORD,LPCWSTR,LPWSTR,DWORD,LPVOID,LPCWSTR,LPSTARTUPINFOW,LPPROCESS_INFORMATION);
BOOL APIENTRY ImpersonateAnonymousToken(HANDLE);
VOID GetStartupInfoW(LPSTARTUPINFO);
HANDLE FindFirstFileW(LPCWSTR,LPWIN32_FIND_DATAW);
HANDLE WINAPI FindFirstFileExW(LPCWSTR,FINDEX_INFO_LEVELS,LPVOID,FINDEX_SEARCH_OPS,LPVOID,DWORD);
BOOL FindNextFileW(HANDLE,LPWIN32_FIND_DATA);
BOOL GetVersionExW(LPOSVERSIONINFO);
#define CreateWindowW(Class,Name,Style,x,y,W,H,Parent,Menu,Inst,Param) CreateWindowExW(0,Class,Name,Style,x,y,W,H,Parent,Menu,Inst,Param)
#define CreateDialogW(hI,lpN,hP,Func) CreateDialogParamW(hI,lpN,hP,Func,0)
#define CreateDialogIndirectW(I,T,hP,Func) CreateDialogIndirectParamW(I,T,hP,Func,0)
#define DialogBoxW(Inst,Template,Parent,Func) DialogBoxParamW(Inst,Template,Parent,Func,0)
#define DialogBoxIndirectW(Inst,Template,Parent,Func) DialogBoxIndirectParamW(Inst,Template,Parent,Func,0)
HDC CreateDCW(LPCWSTR,LPCWSTR,LPCWSTR,CONST DEVMODE *);
HFONT CreateFontA(int,int,int,int,int,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,LPCSTR);
DWORD VerInstallFileW(DWORD,LPWSTR,LPWSTR,LPWSTR,LPWSTR,LPWSTR,LPWSTR,PUINT);
DWORD GetFileVersionInfoSizeW(LPWSTR,LPDWORD);
BOOL GetFileVersionInfoW(LPWSTR,DWORD,DWORD,LPVOID);
DWORD VerLanguageNameW(DWORD,LPWSTR,DWORD);
DWORD VerFindFileW(DWORD,LPWSTR,LPWSTR,LPWSTR,LPWSTR,PUINT,LPWSTR,PUINT);
LONG RegSetValueExW(HKEY,LPCWSTR,DWORD,DWORD,BYTE*,DWORD);
LONG RegUnLoadKeyW(HKEY,LPCWSTR);
BOOL InitiateSystemShutdownW(LPWSTR,LPWSTR,DWORD,BOOL,BOOL);
BOOL AbortSystemShutdownW(LPWSTR);
LONG RegRestoreKeyW(HKEY,LPCWSTR,DWORD);
LONG RegSaveKeyW(HKEY,LPCWSTR,LPSECURITY_ATTRIBUTES);
LONG RegSetValueW(HKEY,LPCWSTR,DWORD,LPCWSTR,DWORD);
LONG RegQueryValueW(HKEY,LPCWSTR,LPWSTR,PLONG);
LONG RegQueryMultipleValuesW(HKEY,PVALENTW,DWORD,LPWSTR,LPDWORD);
LONG RegQueryValueExW(HKEY,LPCWSTR,LPDWORD,LPDWORD,LPBYTE,LPDWORD);
LONG RegReplaceKeyW(HKEY,LPCWSTR,LPCWSTR,LPCWSTR);
LONG RegConnectRegistryW(LPWSTR,HKEY,PHKEY);
LONG RegCreateKeyW(HKEY,LPCWSTR,PHKEY);
LONG RegCreateKeyExW(HKEY,LPCWSTR,DWORD,LPWSTR,DWORD,REGSAM,LPSECURITY_ATTRIBUTES,PHKEY,LPDWORD);
LONG RegDeleteKeyW(HKEY,LPCWSTR);
LONG RegDeleteValueW(HKEY,LPCWSTR);
LONG RegEnumKeyW(HKEY,DWORD,LPWSTR,DWORD);
LONG RegEnumKeyExW(HKEY,DWORD,LPWSTR,LPDWORD,LPDWORD,LPWSTR,LPDWORD,PFILETIME);
LONG RegEnumValueW(HKEY,DWORD,LPWSTR,LPDWORD,LPDWORD,LPDWORD,LPBYTE,LPDWORD);
LONG RegLoadKeyW(HKEY,LPCWSTR,LPCWSTR);
LONG RegOpenKeyW(HKEY,LPCWSTR,PHKEY);
LONG RegOpenKeyExW(HKEY,LPCWSTR,DWORD,REGSAM,PHKEY);
LONG RegQueryInfoKeyW(HKEY,LPWSTR,LPDWORD,LPDWORD,LPDWORD,LPDWORD,LPDWORD,LPDWORD,LPDWORD,LPDWORD,LPDWORD,PFILETIME);
int CompareStringW(LCID,DWORD,LPCWSTR,int,LPCWSTR,int);
int LCMapStringW(LCID,DWORD,LPCWSTR,int,LPWSTR,int);
int GetLocaleInfoW(LCID,LCTYPE,LPWSTR,int);
BOOL SetLocaleInfoW(LCID,LCTYPE,LPCWSTR);
int GetTimeFormatW(LCID,DWORD,CONST SYSTEMTIME *,LPCWSTR,LPWSTR,int);
int GetDateFormatW(LCID,DWORD,CONST SYSTEMTIME *,LPCWSTR,LPWSTR,int);
int GetNumberFormatW(LCID,DWORD,LPCWSTR,CONST NUMBERFMTW *,LPWSTR,int);
int GetCurrencyFormatW(LCID,DWORD,LPCWSTR,CONST CURRENCYFMTW *,LPWSTR,int);
BOOL EnumCalendarInfoW(CALINFO_ENUMPROC,LCID,CALID,CALTYPE);
BOOL EnumTimeFormatsW(TIMEFMT_ENUMPROC,LCID,DWORD);
BOOL EnumDateFormatsW(DATEFMT_ENUMPROC,LCID,DWORD);
BOOL GetStringTypeExW(LCID,DWORD,LPCWSTR,int,LPWORD);
BOOL GetStringTypeW(DWORD,LPCWSTR,int,LPWORD);
int FoldStringW(DWORD,LPCWSTR,int,LPWSTR,int);
BOOL EnumSystemLocalesW(LOCALE_ENUMPROC,DWORD);
BOOL EnumSystemCodePagesW(CODEPAGE_ENUMPROC,DWORD);
BOOL PeekConsoleInputW(HANDLE,PINPUT_RECORD,DWORD,LPDWORD);
BOOL ReadConsoleInputW(HANDLE,PINPUT_RECORD,DWORD,LPDWORD);
BOOL WriteConsoleInputW(HANDLE,CONST INPUT_RECORD *,DWORD,LPDWORD);
BOOL ReadConsoleOutputW(HANDLE,PCHAR_INFO,COORD,COORD,PSMALL_RECT);
BOOL WriteConsoleOutputW(HANDLE,CONST CHAR_INFO *,COORD,COORD,PSMALL_RECT);
BOOL ReadConsoleOutputCharacterW(HANDLE,LPWSTR,DWORD,COORD,LPDWORD);
BOOL WriteConsoleOutputCharacterW(HANDLE,LPCWSTR,DWORD,COORD,LPDWORD);
BOOL FillConsoleOutputCharacterW(HANDLE,WCHAR,DWORD,COORD,LPDWORD);
BOOL ScrollConsoleScreenBufferW(HANDLE,CONST SMALL_RECT *,CONST SMALL_RECT *,COORD,CONST CHAR_INFO *);
DWORD GetConsoleTitleW(LPWSTR,DWORD);
BOOL SetConsoleTitleW(LPCWSTR);
BOOL ReadConsoleW(HANDLE,LPVOID,DWORD,LPDWORD,LPVOID);
BOOL WriteConsoleW(HANDLE,CONST VOID *,DWORD,LPDWORD,LPVOID);
DWORD WNetAddConnectionW(LPCWSTR,LPCWSTR,LPCWSTR);
DWORD WNetAddConnection2W(LPNETRESOURCE,LPCWSTR,LPCWSTR,DWORD);
DWORD WNetAddConnection3W(HWND,LPNETRESOURCE,LPCWSTR,LPCWSTR,DWORD);
DWORD WNetCancelConnectionW(LPCWSTR,BOOL);
DWORD WNetCancelConnection2W(LPCWSTR,DWORD,BOOL);
DWORD WNetGetConnectionW(LPCWSTR,LPWSTR,LPDWORD);
DWORD WNetUseConnectionW(HWND,LPNETRESOURCE,LPCWSTR,LPCWSTR,DWORD,LPWSTR,LPDWORD,LPDWORD);
DWORD WNetSetConnectionW(LPCWSTR,DWORD,LPVOID);
DWORD WNetConnectionDialog1W(LPCONNECTDLGSTRUCT);
DWORD WNetDisconnectDialog1W(LPDISCDLGSTRUCT);
DWORD WNetOpenEnumW(DWORD,DWORD,DWORD,LPNETRESOURCE,LPHANDLE);
DWORD WNetEnumResourceW(HANDLE,LPDWORD,LPVOID,LPDWORD);
DWORD WNetGetUniversalNameW(LPCWSTR,DWORD,LPVOID,LPDWORD);
DWORD WNetGetUserW(LPCWSTR,LPWSTR,LPDWORD);
DWORD WNetGetProviderNameW(DWORD,LPWSTR,LPDWORD);
DWORD WNetGetNetworkInformationW(LPCWSTR,LPNETINFOSTRUCT);
DWORD WNetGetLastErrorW(LPDWORD,LPWSTR,DWORD,LPWSTR,DWORD);
DWORD MultinetGetConnectionPerformanceW(LPNETRESOURCE,LPNETCONNECTINFOSTRUCT);
/* ASCIIFunctions.h Declarations for all the WIN32 ASCII Functions */
DWORD WINAPI GetLongPathNameA(LPCSTR,LPSTR,DWORD);
BOOL GetBinaryTypeA(LPCSTR,LPDWORD);
DWORD GetShortPathNameA(LPCSTR,LPSTR,DWORD);
BOOL FreeEnvironmentStringsA(LPSTR);
DWORD FormatMessageA(DWORD,LPCVOID,DWORD,DWORD,LPSTR,DWORD,va_list *);
HANDLE CreateMailslotA(LPCSTR,DWORD,DWORD,LPSECURITY_ATTRIBUTES);
int lstrcmpA(LPCSTR,LPCSTR);
int lstrcmpiA(LPCSTR,LPCSTR);
LPSTR lstrcpynA(LPSTR,LPCSTR,int);
LPSTR lstrcpyA(LPSTR,LPCSTR);
LPSTR lstrcatA(LPSTR,LPCSTR);
int lstrlenA(LPCSTR);
HANDLE CreateMutexA(LPSECURITY_ATTRIBUTES,BOOL,LPCSTR);
HANDLE OpenMutexA(DWORD,BOOL,LPCSTR);
HANDLE CreateEventA(LPSECURITY_ATTRIBUTES,BOOL,BOOL,LPCSTR);
HANDLE OpenEventA(DWORD,BOOL,LPCSTR);
HANDLE CreateSemaphoreA(LPSECURITY_ATTRIBUTES,LONG,LONG,LPCSTR);
HANDLE OpenSemaphoreA(DWORD,BOOL,LPCSTR);
HANDLE CreateFileMappingA(HANDLE,LPSECURITY_ATTRIBUTES,DWORD,DWORD,DWORD,LPCSTR);
HANDLE OpenFileMappingA(DWORD,BOOL,LPCSTR);
DWORD GetLogicalDriveStringsA(DWORD,LPSTR);
HINSTANCE LoadLibraryA(LPCSTR);
HINSTANCE LoadLibraryExA(LPCSTR,HANDLE,DWORD);
DWORD GetModuleFileNameA(HINSTANCE,LPSTR,DWORD);
HMODULE GetModuleHandleA(LPCSTR);
VOID FatalAppExitA(UINT,LPCSTR);
LPSTR GetCommandLineA(VOID);
DWORD GetEnvironmentVariableA(LPCSTR,LPSTR,DWORD);
BOOL SetEnvironmentVariableA(LPCSTR,LPCSTR);
DWORD ExpandEnvironmentStringsA(LPCSTR,LPSTR,DWORD);
VOID OutputDebugStringA(LPCSTR);
HRSRC FindResourceA(HMODULE,LPCSTR,LPCSTR);
HRSRC FindResourceExA(HINSTANCE,LPCSTR,LPCSTR,WORD);
BOOL EnumResourceTypesA(HINSTANCE,ENUMRESTYPEPROC,LONG);
BOOL EnumResourceNamesA(HINSTANCE,LPCSTR,ENUMRESNAMEPROC,LONG);
BOOL EnumResourceLanguagesA(HINSTANCE,LPCSTR,LPCSTR,ENUMRESLANGPROC,LONG);
HANDLE BeginUpdateResourceA(LPCSTR,BOOL);
BOOL UpdateResourceA(HANDLE,LPCSTR,LPCSTR,WORD,LPVOID,DWORD);
BOOL EndUpdateResourceA(HANDLE,BOOL);
ATOM GlobalAddAtomA(LPCSTR);
ATOM GlobalFindAtomA(LPCSTR);
UINT GlobalGetAtomNameA(ATOM,LPSTR,int);
ATOM AddAtomA(LPCSTR);
ATOM FindAtomA(LPCSTR);
UINT GetAtomNameA(ATOM,LPSTR,int);
UINT GetProfileIntA(LPCSTR,LPCSTR,INT);
DWORD GetProfileStringA(LPCSTR,LPCSTR,LPCSTR,LPSTR,DWORD);
BOOL WriteProfileStringA(LPCSTR,LPCSTR,LPCSTR);
DWORD GetProfileSectionA(LPCSTR,LPSTR,DWORD);
BOOL WriteProfileSectionA(LPCSTR,LPCSTR);
UINT GetPrivateProfileIntA(LPCSTR,LPCSTR,INT,LPCSTR);
DWORD GetPrivateProfileStringA(LPCSTR,LPCSTR,LPCSTR,LPSTR,DWORD,LPCSTR);
BOOL WritePrivateProfileStringA(LPCSTR,LPCSTR,LPCSTR,LPCSTR);
DWORD GetPrivateProfileSectionA(LPCSTR,LPSTR,DWORD,LPCSTR);
BOOL WritePrivateProfileSectionA(LPCSTR,LPCSTR,LPCSTR);
UINT GetDriveTypeA(LPCSTR);
UINT GetSystemDirectoryA(LPSTR,UINT);
BOOL WINAPI GetSystemRegistryQuota(PDWORD,PDWORD);
BOOL WINAPI GetSystemTimes(LPFILETIME,LPFILETIME,LPFILETIME);
VOID WINAPI GetNativeSystemInfo(LPSYSTEM_INFO);
DWORD GetTempPathA(DWORD,LPSTR);
UINT GetTempFileNameA(LPCSTR,LPCSTR,UINT,LPSTR);
UINT GetWindowsDirectoryA(LPSTR,UINT);
BOOL SetCurrentDirectoryA(LPCSTR);
DWORD GetCurrentDirectoryA(DWORD,LPSTR);
BOOL GetDiskFreeSpaceA(LPCSTR,LPDWORD,LPDWORD,LPDWORD,LPDWORD);
BOOL WINAPI GetDiskFreeSpaceExA(LPCSTR,long long *,long long *,long long *);
BOOL CreateDirectoryA(LPCSTR,LPSECURITY_ATTRIBUTES);
BOOL CreateDirectoryExA(LPCSTR,LPCSTR,LPSECURITY_ATTRIBUTES);
BOOL RemoveDirectoryA(LPCSTR);
DWORD GetFullPathNameA(LPCSTR,DWORD,LPSTR,LPSTR *);
BOOL DefineDosDeviceA(DWORD,LPCSTR,LPCSTR);
DWORD QueryDosDeviceA(LPCSTR,LPSTR,DWORD);
HANDLE CreateFileA(LPCSTR,DWORD,DWORD,LPSECURITY_ATTRIBUTES,DWORD,DWORD,HANDLE);
BOOL SetFileAttributesA(LPCSTR,DWORD);
DWORD GetFileAttributesA(LPCSTR);
DWORD GetCompressedFileSizeA(LPCSTR,LPDWORD);
BOOL DeleteFileA(LPCSTR);
DWORD SearchPathA(LPCSTR,LPCSTR,LPCSTR,DWORD,LPSTR,LPSTR *);
HANDLE WINAPI FindFirstVolumeA(LPSTR,DWORD);
HANDLE WINAPI FindFirstVolumeW(LPWSTR,DWORD);
BOOL WINAPI FindNextVolumeA(HANDLE,LPSTR,DWORD);
BOOL WINAPI FindNextVolumeW(HANDLE,LPWSTR,DWORD);
BOOL CopyFileA(LPCSTR,LPCSTR,BOOL);
HANDLE WINAPI FindFirstVolumeMountPointA(LPCSTR,LPSTR,DWORD);
HANDLE WINAPI FindFirstVolumeMountPointW(LPCWSTR,LPWSTR,DWORD);
BOOL WINAPI FindNextVolumeMountPointA(HANDLE,LPSTR,DWORD);
BOOL WINAPI FindNextVolumeMountPointW(HANDLE,LPWSTR,DWORD);
BOOL WINAPI FindVolumeMountPointClose(HANDLE);
BOOL WINAPI FindVolumeClose(HANDLE);
BOOL WINAPI SetVolumeMountPointA(LPCSTR,LPCSTR);
BOOL WINAPI SetVolumeMountPointW(LPCWSTR,LPCWSTR);
BOOL WINAPI DeleteVolumeMountPointA(LPCSTR);
BOOL WINAPI DeleteVolumeMountPointW(LPCWSTR);
BOOL WINAPI GetVolumeNameForVolumeMountPointA(LPCSTR,LPSTR,DWORD);
BOOL WINAPI GetVolumeNameForVolumeMountPointW(LPCWSTR,LPWSTR,DWORD);
BOOL WINAPI GetVolumePathNameA(LPCSTR,LPSTR,DWORD);
BOOL WINAPI GetVolumePathNameW(LPCWSTR,LPWSTR,DWORD);
BOOL WINAPI GetVolumePathNamesForVolumeNameA(LPCSTR,LPSTR,DWORD,PDWORD);
BOOL WINAPI GetVolumePathNamesForVolumeNameW(LPCWSTR,LPWSTR,DWORD,PDWORD);
BOOL WINAPI AllocateUserPhysicalPages(HANDLE,PULONG_PTR,PULONG_PTR);
BOOL WINAPI FreeUserPhysicalPages(HANDLE,PULONG_PTR,PULONG_PTR);
BOOL WINAPI MapUserPhysicalPages(PVOID,ULONG_PTR,PULONG_PTR);
BOOL WINAPI MapUserPhysicalPagesScatter(PVOID *,ULONG_PTR,PULONG_PTR);
HANDLE WINAPI CreateJobObjectA(LPSECURITY_ATTRIBUTES,LPCSTR);
HANDLE WINAPI CreateJobObjectW(LPSECURITY_ATTRIBUTES,LPCWSTR);
#ifdef UNICODE
#define CreateJobObject CreateJobObjectW
#define OpenJobObject OpenJobObjectW
#define EncryptFile EncryptFileW
#else
#define CreateJobObject CreateJobObjectA
#define OpenJobObject OpenJobObjectA
#define EncryptFile EncryptFileA
#endif
typedef BOOL(WINAPI *PQUERYACTCTXW_FUNC)(DWORD,HANDLE,PVOID,ULONG,PVOID,SIZE_T,SIZE_T *);
BOOL WINAPI QueryActCtxW(DWORD,HANDLE,PVOID,ULONG,PVOID,SIZE_T,SIZE_T *);
DWORD WINAPI WTSGetActiveConsoleSessionId(void);
BOOL WINAPI IsWow64Process(HANDLE,PBOOL);
BOOL WINAPI GetNumaProcessorNode(UCHAR,PUCHAR);
BOOL WINAPI GetNumaNodeProcessorMask(UCHAR,PULONGLONG);
BOOL WINAPI GetNumaAvailableMemoryNode(UCHAR,PULONGLONG);
BOOL WINAPI GetNumaHighestNodeNumber(PULONG);
BOOL WINAPI GetLogicalProcessorInformation(PSYSTEM_LOGICAL_PROCESSOR_INFORMATION,PDWORD);
BOOL WINAPI EncryptFileA(LPCSTR);
BOOL WINAPI EncryptFileW(LPCWSTR);
BOOL WINAPI DecryptFileA(LPCSTR,DWORD);
BOOL WINAPI DecryptFileW(LPCWSTR,DWORD);
BOOL WINAPI AssignProcessToJobObject(HANDLE,HANDLE);
BOOL WINAPI TerminateJobObject(HANDLE,UINT);
BOOL WINAPI QueryInformationJobObject(HANDLE,JOBOBJECTINFOCLASS,LPVOID,DWORD,LPDWORD);
BOOL WINAPI SetInformationJobObject(HANDLE,JOBOBJECTINFOCLASS,LPVOID,DWORD);
BOOL WINAPI IsProcessInJob (HANDLE,HANDLE,PBOOL);
BOOL WINAPI CreateJobSet (ULONG,PJOB_SET_ARRAY,ULONG);
PVOID WINAPI AddVectoredExceptionHandler(ULONG,PVECTORED_EXCEPTION_HANDLER);
ULONG WINAPI RemoveVectoredExceptionHandler(PVOID);
HANDLE WINAPI OpenJobObjectA(DWORD,BOOL,LPCSTR);
HANDLE WINAPI OpenJobObjectW(DWORD,BOOL,LPCWSTR);
BOOL WINAPI CopyFileExA(LPCSTR,LPCSTR,LPPROGRESS_ROUTINE,LPVOID,LPBOOL,DWORD);
BOOL WINAPI CreateHardLinkA(LPCSTR,LPCSTR,LPSECURITY_ATTRIBUTES);
BOOL MoveFileA(LPCSTR,LPCSTR);
BOOL MoveFileExA(LPCSTR,LPCSTR,DWORD);
BOOL WINAPI MoveFileWithProgressA(LPCSTR,LPCSTR,LPPROGRESS_ROUTINE,LPVOID,DWORD);
HANDLE CreateNamedPipeA(LPCSTR,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,LPSECURITY_ATTRIBUTES);
BOOL GetNamedPipeHandleStateA(HANDLE,LPDWORD,LPDWORD,LPDWORD,LPDWORD,LPSTR,DWORD);
BOOL CallNamedPipeA(LPCSTR,LPVOID,DWORD,LPVOID,DWORD,LPDWORD,DWORD);
BOOL WaitNamedPipeA(LPCSTR,DWORD);
BOOL SetVolumeLabelA(LPCSTR,LPCSTR);
BOOL GetVolumeInformationA(LPCSTR,LPSTR,DWORD,LPDWORD,LPDWORD,LPDWORD,LPSTR,DWORD);
BOOL ClearEventLogA(HANDLE,LPCSTR);
BOOL BackupEventLogA(HANDLE,LPCSTR);
HANDLE OpenEventLogA (LPCSTR,LPCSTR);
HANDLE RegisterEventSourceA (LPCSTR,LPCSTR);
HANDLE OpenBackupEventLogA(LPCSTR,LPCSTR);
BOOL ReadEventLogA(HANDLE,DWORD,DWORD,LPVOID,DWORD,DWORD *,DWORD *);
BOOL ReportEventA(HANDLE,WORD,WORD,DWORD,PSID,WORD,DWORD,LPCSTR *,LPVOID);
BOOL AccessCheckAndAuditAlarmA(LPCSTR,LPVOID,LPSTR,LPSTR,PSECURITY_DESCRIPTOR,
	DWORD,PGENERIC_MAPPING,BOOL,LPDWORD,LPBOOL,LPBOOL);
BOOL ObjectOpenAuditAlarmA(LPCSTR,LPVOID,LPSTR,LPSTR,PSECURITY_DESCRIPTOR,HANDLE,DWORD,DWORD,PPRIVILEGE_SET,BOOL,BOOL,LPBOOL);
BOOL ObjectPrivilegeAuditAlarmA(LPCSTR,LPVOID,HANDLE,DWORD,PPRIVILEGE_SET,BOOL);
BOOL ObjectCloseAuditAlarmA(LPCSTR,LPVOID,BOOL);
BOOL PrivilegedServiceAuditAlarmA(LPCSTR,LPCSTR,HANDLE,PPRIVILEGE_SET,BOOL);
BOOL SetFileSecurityA(LPCSTR,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR);
BOOL GetFileSecurityA(LPCSTR,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR,DWORD,LPDWORD);
HANDLE FindFirstChangeNotificationA(LPCSTR,BOOL,DWORD);
BOOL IsBadStringPtrA(LPCSTR,UINT);
BOOL LookupAccountSidA(LPCSTR,PSID,LPSTR,LPDWORD,LPSTR,LPDWORD,PSID_NAME_USE);
BOOL LookupAccountNameA(LPCSTR,LPCSTR,PSID,LPDWORD,LPSTR,LPDWORD,PSID_NAME_USE);
BOOL LookupPrivilegeValueA(LPCSTR,LPCSTR,PLUID);
BOOL LookupPrivilegeNameA(LPCSTR,PLUID,LPSTR,LPDWORD);
BOOL LookupPrivilegeDisplayNameA(LPCSTR,LPCSTR,LPSTR,LPDWORD,LPDWORD);
BOOL BuildCommDCBA(LPCSTR lpDef,LPDCB lpDCB);
BOOL BuildCommDCBAndTimeoutsA(LPCSTR,LPDCB,LPCOMMTIMEOUTS);
BOOL CommConfigDialogA(LPCSTR,HWND,LPCOMMCONFIG);
BOOL GetDefaultCommConfigA(LPCSTR,LPCOMMCONFIG,LPDWORD);
BOOL SetDefaultCommConfigA(LPCSTR,LPCOMMCONFIG,DWORD);
BOOL GetComputerNameA (LPSTR,LPDWORD);
BOOL SetComputerNameA (LPCSTR);
BOOL GetUserNameA (LPSTR,LPDWORD);
int wvsprintfA(LPSTR,LPCSTR,va_list arglist);
int CDECL wsprintfA(LPSTR,LPCSTR,...);
HKL LoadKeyboardLayoutA(LPCSTR,UINT);
BOOL GetKeyboardLayoutNameA(LPSTR);
HDESK CreateDesktopA(LPSTR,LPSTR,LPDEVMODE,DWORD,DWORD,LPSECURITY_ATTRIBUTES);
HDESK OpenDesktopA(LPSTR,DWORD,BOOL,DWORD);
BOOL EnumDesktopsA(HWINSTA,DESKTOPENUMPROC,LPARAM);
HWINSTA CreateWindowStationA(LPSTR,DWORD,DWORD,LPSECURITY_ATTRIBUTES);
HWINSTA OpenWindowStationA(LPSTR,BOOL,DWORD);
BOOL EnumWindowStationsA(ENUMWINDOWSTATIONPROC,LPARAM);
BOOL GetUserObjectInformationA(HANDLE,int,PVOID,DWORD,LPDWORD);
BOOL SetUserObjectInformationA(HANDLE,int,PVOID,DWORD);
UINT RegisterWindowMessageA(LPCSTR);
BOOL GetMessageA(LPMSG,HWND,UINT,UINT);
LONG DispatchMessageA(CONST MSG *);
BOOL PeekMessageA(LPMSG,HWND,UINT,UINT,UINT);
LRESULT SendMessageA(HWND,UINT,WPARAM,LPARAM);
LRESULT SendMessageTimeoutA(HWND,UINT,WPARAM,LPARAM,UINT,UINT,LPDWORD);
BOOL SendNotifyMessageA(HWND,UINT,WPARAM,LPARAM);
BOOL SendMessageCallbackA(HWND,UINT,WPARAM,LPARAM,SENDASYNCPROC,DWORD);
BOOL PostMessageA(HWND,UINT,WPARAM,LPARAM);
BOOL PostThreadMessageA(DWORD,UINT,WPARAM,LPARAM);
LRESULT DefWindowProcA(HWND,UINT,WPARAM,LPARAM);
LRESULT CallWindowProcA(WNDPROC,HWND,UINT,WPARAM,LPARAM);
ATOM RegisterClassA(CONST WNDCLASS *);
BOOL UnregisterClassA(LPCSTR,HINSTANCE);
BOOL GetClassInfoA(HINSTANCE,LPCSTR,LPWNDCLASS);
ATOM RegisterClassExA(CONST WNDCLASSEX *);
BOOL GetClassInfoExA(HINSTANCE,LPCSTR,LPWNDCLASSEX);
HWND CreateWindowExA(DWORD,LPCSTR,LPCSTR,DWORD,int,int,int,int,HWND,HMENU,HINSTANCE,LPVOID);
HWND CreateDialogParamA(HINSTANCE,LPCSTR,HWND,DLGPROC,LPARAM);
HWND CreateDialogIndirectParamA(HINSTANCE,LPCDLGTEMPLATE,HWND,DLGPROC,LPARAM);
int DialogBoxParamA(HINSTANCE,LPCSTR,HWND,DLGPROC,LPARAM);
int DialogBoxIndirectParamA(HINSTANCE,LPCDLGTEMPLATE,HWND,DLGPROC,LPARAM);
BOOL SetDlgItemTextA(HWND,int,LPCSTR);
UINT GetDlgItemTextA(HWND,int,LPSTR,int);
LONG SendDlgItemMessageA(HWND,int,UINT,WPARAM,LPARAM);
LRESULT DefDlgProcA(HWND,UINT,WPARAM,LPARAM);
BOOL CallMsgFilterA(LPMSG,int);
UINT RegisterClipboardFormatA(LPCSTR);
int GetClipboardFormatNameA(UINT,LPSTR,int);
BOOL CharToOemA(LPCSTR,LPSTR);
BOOL OemToCharA(LPCSTR,LPSTR);
BOOL CharToOemBuffA(LPCSTR,LPSTR,DWORD);
BOOL OemToCharBuffA(LPCSTR,LPSTR,DWORD);
LPSTR CharUpperA(LPSTR);
DWORD CharUpperBuffA(LPSTR,DWORD);
LPSTR CharLowerA(LPSTR);
DWORD CharLowerBuffA(LPSTR,DWORD);
LPSTR CharNextA(LPCSTR);
LPSTR CharPrevA(LPCSTR,LPCSTR);
BOOL IsCharAlphaA(CHAR ch);
BOOL IsCharAlphaNumericA(CHAR);
BOOL IsCharUpperA(CHAR);
BOOL IsCharLowerA(CHAR);
int GetKeyNameTextA(LONG,LPSTR,int);
SHORT VkKeyScanA(CHAR);
SHORT VkKeyScanExA(CHAR,HKL);
UINT MapVirtualKeyA(UINT,UINT);
UINT MapVirtualKeyExA(UINT,UINT,HKL);
HACCEL LoadAcceleratorsA(HINSTANCE,LPCSTR);
HACCEL CreateAcceleratorTableA(LPACCEL,int);
int CopyAcceleratorTableA(HACCEL,LPACCEL,int);
int TranslateAcceleratorA(HWND,HACCEL,LPMSG);
HMENU LoadMenuA(HINSTANCE,LPCSTR);
HMENU LoadMenuIndirectA(CONST MENUTEMPLATE *);
BOOL ChangeMenuA(HMENU,UINT,LPCSTR,UINT,UINT);
int GetMenuStringA(HMENU,UINT,LPSTR,int,UINT);
BOOL InsertMenuA(HMENU,UINT,UINT,UINT,LPCSTR);
BOOL AppendMenuA(HMENU,UINT,UINT,LPCSTR);
BOOL ModifyMenuA(HMENU,UINT,UINT,UINT,LPCSTR);
BOOL InsertMenuItemA(HMENU,UINT,BOOL,LPCMENUITEMINFO);
BOOL GetMenuItemInfoA(HMENU,UINT,BOOL,LPMENUITEMINFO);
BOOL SetMenuItemInfoA(HMENU,UINT,BOOL,LPCMENUITEMINFO);
int DrawTextA(HDC,LPCSTR,int,LPRECT,UINT);
int DrawTextExA(HDC,LPSTR,int,LPRECT,UINT,LPDRAWTEXTPARAMS);
BOOL GrayStringA(HDC,HBRUSH,GRAYSTRINGPROC,LPARAM,int,int,int,int,int);
BOOL DrawStateA(HDC,HBRUSH,DRAWSTATEPROC,LPARAM,WPARAM,int,int,int,int,UINT);
LONG TabbedTextOutA(HDC,int,int,LPCSTR,int,int,LPINT,int);
DWORD GetTabbedTextExtentA(HDC,LPCSTR,int,int,LPINT);
BOOL SetPropA(HWND,LPCSTR,HANDLE);
HANDLE GetPropA(HWND,LPCSTR);
HANDLE RemovePropA(HWND,LPCSTR);
int EnumPropsExA(HWND,PROPENUMPROCEX,LPARAM);
int EnumPropsA(HWND,PROPENUMPROC);
BOOL SetWindowTextA(HWND,LPCSTR);
int GetWindowTextA(HWND,LPSTR,int);
int GetWindowTextLengthA(HWND);
int MessageBoxA(HWND,LPCSTR,LPCSTR,UINT);
int MessageBoxExA(HWND,LPCSTR,LPCSTR,UINT,WORD);
int MessageBoxIndirectA(LPMSGBOXPARAMS);
LONG GetWindowLongA(HWND,int);
LONG SetWindowLongA(HWND,int,LONG);
#define GetWindowLongPtrA	GetWindowLongA
#define SetWindowLongPtrA	SetWindowLongA
DWORD GetClassLongA(HWND,int);
DWORD SetClassLongA(HWND,int,LONG);
HWND FindWindowA(LPCSTR,LPCSTR);
HWND FindWindowExA(HWND,HWND,LPCSTR,LPCSTR);
int GetClassNameA(HWND,LPSTR,int);
HHOOK SetWindowsHookExA(int,HOOKPROC,HINSTANCE,DWORD);
HOOKPROC WINAPI SetWindowsHookA(int,HOOKPROC);
HBITMAP LoadBitmapA(HINSTANCE,LPCSTR);
HCURSOR LoadCursorA(HINSTANCE,LPCSTR);
HCURSOR LoadCursorFromFileA(LPCSTR);
HICON LoadIconA(HINSTANCE,LPCSTR);
HANDLE LoadImageA(HINSTANCE,LPCSTR,UINT,int,int,UINT);
int LoadStringA(HINSTANCE,UINT,LPSTR,int);
BOOL IsDialogMessageA(HWND,LPMSG);
int DlgDirListA(HWND,LPSTR,int,int,UINT);
BOOL DlgDirSelectExA(HWND,LPSTR,int,int);
int DlgDirListComboBoxA(HWND,LPSTR,int,int,UINT);
BOOL DlgDirSelectComboBoxExA(HWND,LPSTR,int,int);
LRESULT DefFrameProcA(HWND,HWND,UINT,WPARAM,LPARAM);
LRESULT DefMDIChildProcA(HWND,UINT,WPARAM,LPARAM);
HWND CreateMDIWindowA(LPSTR,LPSTR,DWORD,int,int,int,int,HWND,HINSTANCE,LPARAM);
BOOL WinHelpA(HWND,LPCSTR,UINT,DWORD);
LONG ChangeDisplaySettingsA(LPDEVMODE,DWORD);
LONG WINAPI ChangeDisplaySettingsExA(LPCSTR lpszDeviceName, LPDEVMODEA lpDevMode, HWND hwnd,
											   DWORD dwflags, LPVOID lParam);
BOOL EnumDisplaySettingsA(LPCSTR,DWORD,LPDEVMODE);
BOOL SystemParametersInfoA(UINT,UINT,PVOID,UINT);
int AddFontResourceA(LPCSTR);
int WINAPI ChoosePixelFormat(HDC,PIXELFORMATDESCRIPTOR *);
BOOL WINAPI SetPixelFormat(HDC,int,PIXELFORMATDESCRIPTOR *);
HMETAFILE CopyMetaFileA(HMETAFILE,LPCSTR);
HFONT CreateFontIndirectA(CONST LOGFONT *);
HDC CreateICA(LPCSTR,LPCSTR,LPCSTR,CONST DEVMODE *);
HDC CreateMetaFileA(LPCSTR);
BOOL CreateScalableFontResourceA(DWORD,LPCSTR,LPCSTR,LPCSTR);
int DeviceCapabilitiesA(LPCSTR,LPCSTR,WORD,LPSTR,CONST DEVMODE *);
int EnumFontFamiliesExA(HDC,LPLOGFONT,FONTENUMEXPROC,LPARAM,DWORD);
int EnumFontFamiliesA(HDC,LPCSTR,FONTENUMPROC,LPARAM);
int EnumFontsA(HDC,LPCSTR,ENUMFONTSPROC,LPARAM);
BOOL GetCharWidthA(HDC,UINT,UINT,LPINT);
BOOL GetCharWidth32A(HDC,UINT,UINT,LPINT);
BOOL GetCharWidthFloatA(HDC,UINT,UINT,PFLOAT);
BOOL GetCharABCWidthsA(HDC,UINT,UINT,LPABC);
BOOL GetCharABCWidthsFloatA(HDC,UINT,UINT,LPABCFLOAT);
DWORD GetGlyphOutlineA(HDC,UINT,UINT,LPGLYPHMETRICS,DWORD,LPVOID,CONST MAT2 *);
HMETAFILE GetMetaFileA(LPCSTR);
UINT GetOutlineTextMetricsA(HDC,UINT,LPOUTLINETEXTMETRIC);
BOOL GetTextExtentPointA(HDC,LPCSTR,int,LPSIZE);
BOOL GetTextExtentPoint32A(HDC,LPCSTR,int,LPSIZE);
BOOL GetTextExtentExPointA(HDC,LPCSTR,int,int,LPINT,LPINT,LPSIZE);
BOOL SignalObjectAndWait(HANDLE,HANDLE,DWORD,BOOL);
DWORD GetCharacterPlacementA(HDC,LPCSTR,int,int,LPGCP_RESULTS,DWORD);
HDC ResetDCA(HDC,CONST DEVMODE *);
BOOL RemoveFontResourceA(LPCSTR);
HENHMETAFILE CopyEnhMetaFileA(HENHMETAFILE,LPCSTR);
HDC CreateEnhMetaFileA(HDC,LPCSTR,CONST RECT *,LPCSTR);
HENHMETAFILE GetEnhMetaFileA(LPCSTR);
UINT GetEnhMetaFileDescriptionA(HENHMETAFILE,UINT,LPSTR);
BOOL GetTextMetricsA(HDC,LPTEXTMETRIC);
int StartDocA(HDC,CONST DOCINFO *);
int GetObjectA(HGDIOBJ,int,LPVOID);
BOOL TextOutA(HDC,int,int,LPCSTR,int);
BOOL ExtTextOutA(HDC,int,int,UINT,CONST RECT *,LPCSTR,UINT,CONST INT *);
BOOL PolyTextOutA(HDC,CONST POLYTEXT *,int);
int GetTextFaceA(HDC,int,LPSTR);
DWORD GetKerningPairsA(HDC,DWORD,LPKERNINGPAIR);
HCOLORSPACE CreateColorSpaceA(LPLOGCOLORSPACE);
BOOL GetLogColorSpaceA(HCOLORSPACE,LPLOGCOLORSPACE,DWORD);
BOOL GetICMProfileA(HDC,DWORD,LPSTR);
BOOL SetICMProfileA(HDC,LPSTR);
BOOL UpdateICMRegKeyA(DWORD,DWORD,LPSTR,UINT);
int EnumICMProfilesA(HDC,ICMENUMPROC,LPARAM);
int PropertySheetA(LPCPROPSHEETHEADER);
HIMAGELIST ImageList_LoadImageA(HINSTANCE,LPCSTR,int,int,COLORREF,UINT,UINT);
HWND CreateStatusWindowA(LONG,LPCSTR,HWND,UINT);
void DrawStatusTextA(HDC,LPRECT,LPCSTR,UINT);
BOOL GetOpenFileNameA(LPOPENFILENAME);
BOOL GetSaveFileNameA(LPOPENFILENAME);
short GetFileTitleA(LPCSTR,LPSTR,WORD);
BOOL ChooseColorA(LPCHOOSECOLOR);
HWND FindTextA(LPFINDREPLACE);
HWND ReplaceTextA(LPFINDREPLACE);
BOOL ChooseFontA(LPCHOOSEFONT);
BOOL PrintDlgA(LPPRINTDLG);
BOOL PageSetupDlgA(LPPAGESETUPDLG);
BOOL CreateProcessA(LPCSTR,LPSTR,LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES,BOOL,DWORD,LPVOID,LPCSTR,LPSTARTUPINFO,LPPROCESS_INFORMATION);
BOOL WINAPI CreateProcessWithTokenW(HANDLE,DWORD,LPCWSTR,LPWSTR,DWORD,LPVOID,
	LPCWSTR,LPSTARTUPINFOW,LPPROCESS_INFORMATION);
VOID GetStartupInfoA(LPSTARTUPINFO);
HANDLE FindFirstFileA(LPCSTR,LPWIN32_FIND_DATA);
HANDLE WINAPI FindFirstFileExA(LPCSTR,FINDEX_INFO_LEVELS,LPVOID,FINDEX_SEARCH_OPS,LPVOID,DWORD);
BOOL FindNextFileA(HANDLE,LPWIN32_FIND_DATA);
BOOL GetVersionExA(LPOSVERSIONINFO);
#define CreateWindowA(C,WN,S,x,y,W,H,hW,hM,hI,l) CreateWindowExA(0,C,WN,S,x,y,W,H,hW,hM,hI,l)
#define CreateDialogA(hI,Name,hP,Func) CreateDialogParamA(hI,Name,hP,Func,0)
#define CreateDialogIndirectA(hI,T,P,Func) CreateDialogIndirectParamA(hI,T,P,Func,0)
#define DialogBoxA(h,T,P,D) DialogBoxParamA(h,T,P,D,0)
#define DialogBoxIndirectA(h,T,P,D) DialogBoxIndirectParamA(h,T,P,D,0)
HDC CreateDCA(LPCSTR,LPCSTR,LPCSTR,CONST DEVMODE *);
DWORD VerInstallFileA(DWORD,LPSTR,LPSTR,LPSTR,LPSTR,LPSTR,LPSTR,PUINT);
DWORD GetFileVersionInfoSizeA(LPSTR,LPDWORD);
BOOL GetFileVersionInfoA(LPSTR,DWORD,DWORD,LPVOID);
DWORD VerLanguageNameA(DWORD,LPSTR,DWORD);
DWORD VerFindFileA(DWORD,LPSTR,LPSTR,LPSTR,LPSTR,PUINT,LPSTR,PUINT);
LONG RegConnectRegistryA(LPSTR,HKEY,PHKEY);
LONG RegCreateKeyA(HKEY,LPCSTR,PHKEY);
LONG RegCreateKeyExA(HKEY,LPCSTR,DWORD,LPSTR,DWORD,REGSAM,LPSECURITY_ATTRIBUTES,PHKEY,LPDWORD);
LONG RegDeleteKeyA(HKEY,LPCSTR);
LONG RegDeleteValueA (HKEY,LPCSTR);
LONG RegEnumKeyA (HKEY,DWORD,LPSTR,DWORD);
LONG RegEnumKeyExA(HKEY,DWORD,LPSTR,LPDWORD,LPDWORD,LPSTR,LPDWORD,PFILETIME);
LONG RegEnumValueA(HKEY,DWORD,LPSTR,LPDWORD,LPDWORD,LPDWORD,LPBYTE,LPDWORD);
LONG RegLoadKeyA(HKEY,LPCSTR,LPCSTR);
LONG RegOpenKeyA(HKEY,LPCSTR,PHKEY);
LONG RegOpenKeyExA(HKEY,LPCSTR,DWORD,REGSAM,PHKEY);
LONG RegQueryInfoKeyA(HKEY,LPSTR,LPDWORD,LPDWORD,LPDWORD,LPDWORD,
	LPDWORD,LPDWORD,LPDWORD,LPDWORD,LPDWORD,PFILETIME);
LONG RegQueryValueA(HKEY,LPCSTR,LPSTR,PLONG);
LONG RegQueryMultipleValuesA(HKEY,PVALENT,DWORD,LPSTR,LPDWORD);
LONG RegQueryValueExA (HKEY,LPCSTR,LPDWORD,LPDWORD,LPBYTE,LPDWORD);
LONG RegReplaceKeyA(HKEY,LPCSTR,LPCSTR,LPCSTR);
LONG RegRestoreKeyA (HKEY,LPCSTR,DWORD);
LONG RegSaveKeyA(HKEY,LPCSTR,LPSECURITY_ATTRIBUTES);
LONG RegSetValueA(HKEY,LPCSTR,DWORD,LPCSTR,DWORD);
LONG RegSetValueExA(HKEY,LPCSTR,DWORD,DWORD,BYTE*,DWORD);
LONG RegUnLoadKeyA(HKEY,LPCSTR);
BOOL InitiateSystemShutdownA(LPSTR,LPSTR,DWORD,BOOL,BOOL);
BOOL AbortSystemShutdownA(LPSTR);
int CompareStringA(LCID,DWORD,LPCSTR,int,LPCSTR,int);
int LCMapStringA(LCID,DWORD,LPCSTR,int,LPSTR,int);
int GetLocaleInfoA(LCID,LCTYPE,LPSTR,int);
BOOL SetLocaleInfoA(LCID,LCTYPE,LPCSTR);
int GetTimeFormatA(LCID,DWORD,CONST SYSTEMTIME *,LPCSTR,LPSTR,int);
int GetDateFormatA(LCID,DWORD,CONST SYSTEMTIME *,LPCSTR,LPSTR,int);
int GetNumberFormatA(LCID,DWORD,LPCSTR,CONST NUMBERFMTA *,LPSTR,int);
int GetCurrencyFormatA(LCID,DWORD,LPCSTR,CONST CURRENCYFMT *,LPSTR,int);
BOOL EnumCalendarInfoA(CALINFO_ENUMPROC,LCID,CALID,CALTYPE);
BOOL EnumTimeFormatsA(TIMEFMT_ENUMPROC,LCID,DWORD);
BOOL EnumDateFormatsA(DATEFMT_ENUMPROC,LCID,DWORD);
BOOL GetStringTypeExA(LCID,DWORD,LPCSTR,int,LPWORD);
BOOL GetStringTypeA(LCID,DWORD,LPCSTR,int,LPWORD);
int FoldStringA(DWORD,LPCSTR,int,LPSTR,int);
BOOL EnumSystemLocalesA(LOCALE_ENUMPROC,DWORD);
BOOL EnumSystemCodePagesA(CODEPAGE_ENUMPROC,DWORD);
BOOL PeekConsoleInputA(HANDLE,PINPUT_RECORD,DWORD,LPDWORD);
BOOL ReadConsoleInputA(HANDLE,PINPUT_RECORD,DWORD,LPDWORD);
BOOL WriteConsoleInputA(HANDLE,CONST INPUT_RECORD *,DWORD,LPDWORD);
BOOL ReadConsoleOutputA(HANDLE,PCHAR_INFO,COORD,COORD,PSMALL_RECT);
BOOL WriteConsoleOutputA(HANDLE,CONST CHAR_INFO *,COORD,COORD,PSMALL_RECT);
BOOL ReadConsoleOutputCharacterA(HANDLE,LPSTR,DWORD,COORD,LPDWORD);
BOOL WriteConsoleOutputCharacterA(HANDLE,LPCSTR,DWORD,COORD,LPDWORD);
BOOL FillConsoleOutputCharacterA(HANDLE,CHAR,DWORD,COORD,LPDWORD);
BOOL ScrollConsoleScreenBufferA(HANDLE,CONST SMALL_RECT *,CONST SMALL_RECT *,COORD,CONST CHAR_INFO *);
DWORD GetConsoleTitleA(LPSTR,DWORD);
BOOL SetConsoleTitleA(LPCSTR);
BOOL ReadConsoleA(HANDLE,LPVOID,DWORD,LPDWORD,LPVOID);
BOOL WriteConsoleA(HANDLE,CONST VOID *,DWORD,LPDWORD,LPVOID);
DWORD WNetAddConnectionA(LPCSTR,LPCSTR,LPCSTR);
DWORD WNetAddConnection2A(LPNETRESOURCE,LPCSTR,LPCSTR,DWORD);
DWORD WNetAddConnection3A(HWND,LPNETRESOURCE,LPCSTR,LPCSTR,DWORD);
DWORD WNetCancelConnectionA(LPCSTR,BOOL);
DWORD WNetCancelConnection2A(LPCSTR,DWORD,BOOL);
DWORD WNetGetConnectionA(LPCSTR,LPSTR,LPDWORD);
DWORD WNetUseConnectionA(HWND,LPNETRESOURCE,LPCSTR,LPCSTR,DWORD,LPSTR,LPDWORD,LPDWORD);
DWORD WNetSetConnectionA(LPCSTR,DWORD,LPVOID);
DWORD WNetConnectionDialog1A(LPCONNECTDLGSTRUCT);
DWORD WNetDisconnectDialog1A(LPDISCDLGSTRUCT);
DWORD WNetOpenEnumA(DWORD,DWORD,DWORD,LPNETRESOURCE,LPHANDLE);
DWORD WNetEnumResourceA(HANDLE,LPDWORD,LPVOID,LPDWORD);
DWORD WNetGetUniversalNameA(LPCSTR,DWORD,LPVOID,LPDWORD);
DWORD WNetGetUserA(LPCSTR,LPSTR,LPDWORD);
DWORD WNetGetProviderNameA(DWORD,LPSTR,LPDWORD);
DWORD WNetGetNetworkInformationA(LPCSTR,LPNETINFOSTRUCT);
DWORD WNetGetLastErrorA(LPDWORD,LPSTR,DWORD,LPSTR,DWORD);
DWORD MultinetGetConnectionPerformanceA(LPNETRESOURCE,LPNETCONNECTINFOSTRUCT);
BOOL WINAPI TrackMouseEvent(LPTRACKMOUSEEVENT);
HWND WINAPI GetAncestor(HWND,UINT);
BOOL WINAPI GetComboBoxInfo(HWND,PCOMBOBOXINFO);
UCHAR APIENTRY Netbios(PNCB);
LANGID WINAPI GetMUILanguage(void);
void WINAPI InitMUILanguage(LANGID);
#ifdef UNICODE
#define GetLongPathName GetLongPathNameW
#define GetDiskFreeSpaceEx GetDiskFreeSpaceExW
#define CreateProcessAsUser CreateProcessAsUserW
#define HDITEM	HDITEMW
#define LPHDITEM LPHDITEMW
#define COMBOBOXEXITEM	COMBOBOXEXITEMW
#define PCOMBOBOXEXITEM	PCOMBOBOXEXITEMW
#define PCCOMBOBOXEXITEM	PCCOMBOBOXEXITEMW
#define CBEM_INSERTITEM	CBEM_INSERTITEMW
#define CBEM_SETITEM	CBEM_SETITEMW
#define CBEM_GETITEM	CBEM_GETITEMW
#define DATETIMEPICK_CLASS	DATETIMEPICK_CLASSW
#define DTN_USERSTRING	DTN_USERSTRINGW
#define NMDATETIMESTRING	NMDATETIMESTRINGW
#define LPNMDATETIMESTRING	LPNMDATETIMESTRINGW
#define DTN_WMKEYDOWN	DTN_WMKEYDOWNW
#define NMDATETIMEWMKEYDOWN	NMDATETIMEWMKEYDOWNW
#define LPNMDATETIMEWMKEYDOWN	LPNMDATETIMEWMKEYDOWNW
#define DTN_FORMAT	DTN_FORMATW
#define NMDATETIMEFORMAT	NMDATETIMEFORMATW
#define LPNMDATETIMEFORMAT	LPNMDATETIMEFORMATW
#define DTN_FORMATQUERY	DTN_FORMATQUERYW
#define NMDATETIMEFORMATQUERY	NMDATETIMEFORMATQUERYW
#define LPNMDATETIMEFORMATQUERY	LPNMDATETIMEFORMATQUERYW
#define RegConnectRegistry	RegConnectRegistryW
#define RegCreateKey	RegCreateKeyW
#define RegCreateKeyEx	RegCreateKeyExW
#define RegDeleteKey	RegDeleteKeyW
#define RegDeleteValue	RegDeleteValueW
#define RegEnumKey	RegEnumKeyW
#define RegEnumKeyEx	RegEnumKeyExW
#define RegEnumValue	RegEnumValueW
#define RegLoadKey	RegLoadKeyW
#define RegOpenKey	RegOpenKeyW
#define RegOpenKeyEx	RegOpenKeyExW
#define RegQueryInfoKey RegQueryInfoKeyW
#define RegQueryValue	RegQueryValueW
#define RegQueryMultipleValues RegQueryMultipleValuesW
#define RegQueryValueEx RegQueryValueExW
#define RegReplaceKey	RegReplaceKeyW
#define RegRestoreKey	RegRestoreKeyW
#define RegSaveKey	RegSaveKeyW
#define RegSetValue	RegSetValueW
#define RegSetValueEx RegSetValueExW
#define AbortSystemShutdown AbortSystemShutdownW
#define InitiateSystemShutdown InitiateSystemShutdownW
#define RegUnLoadKey RegUnLoadKeyW
#define SetProp SetPropW
#define GetProp GetPropW
#define RemoveProp RemovePropW
#define EnumPropsEx EnumPropsExW
#define EnumProps EnumPropsW
#define SetWindowText SetWindowTextW
#define GetWindowText GetWindowTextW
#define GetWindowTextLength GetWindowTextLengthW
#define MessageBox MessageBoxW
#define MessageBoxEx MessageBoxExW
#define MessageBoxIndirect MessageBoxIndirectW
#define GetWindowLong GetWindowLongW
#define SetWindowLong SetWindowLongW
#define GetWindowLongPtr GetWindowLongPtrW
#define SetWindowLongPtr SetWindowLongPtrW
#define SetWindowLongPtrW	SetWindowLongW
#define GetClassLong GetClassLongW
#define SetClassLong SetClassLongW
#define GetClassLongPtr GetClassLongPtrW
#define SetClassLongPtr	SetClassLongPtrW
#define FindWindow FindWindowW
#define FindWindowEx FindWindowExW
#define GetClassName	GetClassNameW
#define SetWindowsHookEx	SetWindowsHookExW
#define SetWindowsHook	SetWindowsHookW
#define LoadBitmap	LoadBitmapW
#define LoadCursor	LoadCursorW
#define LoadCursorFromFile	LoadCursorFromFileW
#define LoadIcon	LoadIconW
#define LoadImage LoadImageW
#define LoadString LoadStringW
#define IsDialogMessage IsDialogMessageW
#define DlgDirList DlgDirListW
#define DlgDirSelectEx DlgDirSelectExW
#define DlgDirListComboBox DlgDirListComboBoxW
#define DlgDirSelectComboBoxEx DlgDirSelectComboBoxExW
#define DefFrameProc DefFrameProcW
#define DefMDIChildProc DefMDIChildProcW
#define CreateMDIWindow CreateMDIWindowW
#define WinHelp WinHelpW
#define ChangeDisplaySettings ChangeDisplaySettingsW
#define ChangeDisplaySettingsEx ChangeDisplaySettingsExW
#define EnumDisplaySettings EnumDisplaySettingsW
#define SystemParametersInfo SystemParametersInfoW
#define AddFontResource AddFontResourceW
#define CopyMetaFile CopyMetaFileW
#define CreateDC CreateDCW
#define CreateFontIndirect CreateFontIndirectW
#define CreateFont CreateFontW
#define CreateIC CreateICW
#define CreateMetaFile CreateMetaFileW
#define CreateScalableFontResource CreateScalableFontResourceW
#define DeviceCapabilities DeviceCapabilitiesW
#define EnumFontFamiliesEx EnumFontFamiliesExW
#define EnumFontFamilies EnumFontFamiliesW
#define EnumFonts EnumFontsW
#define GetCharWidth GetCharWidthW
#define GetCharWidth32 GetCharWidth32W
#define GetCharWidthFloat GetCharWidthFloatW
#define GetCharABCWidths GetCharABCWidthsW
#define GetCharABCWidthsFloat GetCharABCWidthsFloatW
#define GetGlyphOutline GetGlyphOutlineW
#define GetMetaFile GetMetaFileW
#define GetOutlineTextMetrics GetOutlineTextMetricsW
#define GetTextExtentPoint GetTextExtentPointW
#define GetTextExtentPoint32 GetTextExtentPoint32W
#define GetTextExtentExPoint GetTextExtentExPointW
#define GetCharacterPlacement GetCharacterPlacementW
#define ResetDC ResetDCW
#define RemoveFontResource RemoveFontResourceW
#define CopyEnhMetaFile CopyEnhMetaFileW
#define CreateEnhMetaFile CreateEnhMetaFileW
#define GetEnhMetaFile GetEnhMetaFileW
#define GetEnhMetaFileDescription GetEnhMetaFileDescriptionW
#define GetTextMetrics GetTextMetricsW
#define StartDoc StartDocW
#define GetObject GetObjectW
#define TextOut TextOutW
#define ExtTextOut ExtTextOutW
#define PolyTextOut PolyTextOutW
#define GetTextFace GetTextFaceW
#define GetKerningPairs GetKerningPairsW
#define GetLogColorSpace GetLogColorSpaceW
#define CreateColorSpace CreateColorSpaceW
#define GetICMProfile GetICMProfileW
#define SetICMProfile SetICMProfileW
#define UpdateICMRegKey UpdateICMRegKeyW
#define EnumICMProfiles EnumICMProfilesW
#define CreatePropertySheetPage CreatePropertySheetPageW
#define PropertySheet PropertySheetW
#define ImageList_LoadImage ImageList_LoadImageW
#define CreateStatusWindow CreateStatusWindowW
#define DrawStatusText DrawStatusTextW
#define GetOpenFileName GetOpenFileNameW
#define GetSaveFileName GetSaveFileNameW
#define GetFileTitle GetFileTitleW
#define ChooseColor ChooseColorW
#define FindText FindTextW
#define ReplaceText ReplaceTextW
#define ChooseFont ChooseFontW
#define PrintDlg PrintDlgW
#define PageSetupDlg PageSetupDlgW
#define DefWindowProc DefWindowProcW
#define CallWindowProc CallWindowProcW
#define RegisterClass RegisterClassW
#define UnregisterClass UnregisterClassW
#define GetClassInfo GetClassInfoW
#define RegisterClassEx RegisterClassExW
#define GetClassInfoEx GetClassInfoExW
#define CreateWindowEx CreateWindowExW
#define CreateWindow CreateWindowW
#define CreateDialogParam CreateDialogParamW
#define CreateDialogIndirectParam CreateDialogIndirectParamW
#define CreateDialog CreateDialogW
#define CreateDialogIndirect CreateDialogIndirectW
#define DialogBoxParam DialogBoxParamW
#define DialogBoxIndirectParam DialogBoxIndirectParamW
#define DialogBox DialogBoxW
#define DialogBoxIndirect DialogBoxIndirectW
#define RegisterClipboardFormat RegisterClipboardFormatW
#define SetDlgItemText SetDlgItemTextW
#define GetDlgItemText GetDlgItemTextW
#define SendDlgItemMessage SendDlgItemMessageW
#define DefDlgProc DefDlgProcW
#define CallMsgFilter CallMsgFilterW
#define GetClipboardFormatName GetClipboardFormatNameW
#define CharToOem CharToOemW
#define OemToChar OemToCharW
#define CharToOemBuff CharToOemBuffW
#define OemToCharBuff OemToCharBuffW
#define CharUpper CharUpperW
#define CharUpperBuff CharUpperBuffW
#define CharLower CharLowerW
#define CharLowerBuff CharLowerBuffW
#define CharNext CharNextW
#define CharPrev CharPrevW
#define IsCharAlpha IsCharAlphaW
#define IsCharAlphaNumeric IsCharAlphaNumericW
#define IsCharUpper IsCharUpperW
#define IsCharLower IsCharLowerW
#define GetKeyNameText GetKeyNameTextW
#define VkKeyScan VkKeyScanW
#define VkKeyScanEx VkKeyScanExW
#define MapVirtualKey MapVirtualKeyW
#define MapVirtualKeyEx MapVirtualKeyExW
#define LoadAccelerators LoadAcceleratorsW
#define CreateAcceleratorTable CreateAcceleratorTableW
#define CopyAcceleratorTable CopyAcceleratorTableW
#define TranslateAccelerator TranslateAcceleratorW
#define LoadMenu LoadMenuW
#define LoadMenuIndirect LoadMenuIndirectW
#define ChangeMenu ChangeMenuW
#define GetMenuString GetMenuStringW
#define InsertMenu InsertMenuW
#define AppendMenu AppendMenuW
#define ModifyMenu ModifyMenuW
#define InsertMenuItem InsertMenuItemW
#define GetMenuItemInfo GetMenuItemInfoW
#define SetMenuItemInfo SetMenuItemInfoW
#define DrawText DrawTextW
#define DrawTextEx DrawTextExW
#define GrayString GrayStringW
#define DrawState DrawStateW
#define TabbedTextOut TabbedTextOutW
#define GetTabbedTextExtent GetTabbedTextExtentW
#define GetVersionEx GetVersionExW
#define wvsprintf wvsprintfW
#define wsprintf wsprintfW
#define LoadKeyboardLayout LoadKeyboardLayoutW
#define GetKeyboardLayoutName GetKeyboardLayoutNameW
#define CreateDesktop CreateDesktopW
#define OpenDesktop OpenDesktopW
#define EnumDesktops EnumDesktopsW
#define CreateWindowStation CreateWindowStationW
#define OpenWindowStation OpenWindowStationW
#define EnumWindowStations EnumWindowStationsW
#define IsBadStringPtr IsBadStringPtrW
#define LookupAccountSid LookupAccountSidW
#define LookupAccountName LookupAccountNameW
#define LookupPrivilegeValue LookupPrivilegeValueW
#define LookupPrivilegeName LookupPrivilegeNameW
#define LookupPrivilegeDisplayName LookupPrivilegeDisplayNameW
#define BuildCommDCB BuildCommDCBW
#define BuildCommDCBAndTimeouts BuildCommDCBAndTimeoutsW
#define CommConfigDialog CommConfigDialogW
#define GetDefaultCommConfig GetDefaultCommConfigW
#define SetDefaultCommConfig SetDefaultCommConfigW
#define GetComputerName GetComputerNameW
#define SetComputerName SetComputerNameW
#define GetUserName GetUserNameW
#define CreateMailslot CreateMailslotW
#define FormatMessage FormatMessageW
#define GetEnvironmentStrings GetEnvironmentStringsW
#define FreeEnvironmentStrings FreeEnvironmentStringsW
#define lstrcmp lstrcmpW
#define lstrcmpi lstrcmpiW
#define lstrcpyn lstrcpynW
#define lstrcpy lstrcpyW
#define lstrcat lstrcatW
#define lstrlen lstrlenW
#define GetBinaryType GetBinaryTypeW
#define GetShortPathName GetShortPathNameW
#define SetFileSecurity SetFileSecurityW
#define GetFileSecurity GetFileSecurityW
#define FindFirstChangeNotification FindFirstChangeNotificationW
#define AccessCheckAndAuditAlarm AccessCheckAndAuditAlarmW
#define ObjectOpenAuditAlarm ObjectOpenAuditAlarmW
#define ObjectPrivilegeAuditAlarm ObjectPrivilegeAuditAlarmW
#define ObjectCloseAuditAlarm ObjectCloseAuditAlarmW
#define PrivilegedServiceAuditAlarm PrivilegedServiceAuditAlarmW
#define OpenEventLog OpenEventLogW
#define RegisterEventSource RegisterEventSourceW
#define OpenBackupEventLog OpenBackupEventLogW
#define ReadEventLog ReadEventLogW
#define ReportEvent ReportEventW
#define CreateProcess CreateProcessW
#define FatalAppExit FatalAppExitW
#define GetStartupInfo GetStartupInfoW
#define GetEnvironmentVariable GetEnvironmentVariableW
#define GetCommandLine GetCommandLineW
#define SetEnvironmentVariable SetEnvironmentVariableW
#define ExpandEnvironmentStrings ExpandEnvironmentStringsW
#define OutputDebugString OutputDebugStringW
#define FindResource FindResourceW
#define FindResourceEx FindResourceExW
#define EnumResourceTypes EnumResourceTypesW
#define EnumResourceNames EnumResourceNamesW
#define EnumResourceLanguages EnumResourceLanguagesW
#define BeginUpdateResource BeginUpdateResourceW
#define UpdateResource UpdateResourceW
#define EndUpdateResource EndUpdateResourceW
#define GlobalAddAtom GlobalAddAtomW
#define GlobalFindAtom GlobalFindAtomW
#define GlobalGetAtomName GlobalGetAtomNameW
#define AddAtom AddAtomW
#define FindAtom FindAtomW
#define GetAtomName GetAtomNameW
#define GetProfileInt GetProfileIntW
#define GetProfileString GetProfileStringW
#define WriteProfileString WriteProfileStringW
#define GetProfileSection GetProfileSectionW
#define WriteProfileSection WriteProfileSectionW
#define GetPrivateProfileInt GetPrivateProfileIntW
#define GetPrivateProfileSectionNames GetrivateProfileSectionNamesW
#define GetPrivateProfileString GetPrivateProfileStringW
#define WritePrivateProfileString WritePrivateProfileStringW
#define WritePrivateProfileStruct WritePrivateProfileStructW
#define GetPrivateProfileSection GetPrivateProfileSectionW
#define WritePrivateProfileSection WritePrivateProfileSectionW
#define GetDriveType GetDriveTypeW
#define GetSystemDirectory GetSystemDirectoryW
#define GetTempPath GetTempPathW
#define GetTempFileName GetTempFileNameW
#define GetWindowsDirectory GetWindowsDirectoryW
#define SetCurrentDirectory SetCurrentDirectoryW
#define GetCurrentDirectory GetCurrentDirectoryW
#define GetDiskFreeSpace GetDiskFreeSpaceW
#define CreateDirectory CreateDirectoryW
#define CreateDirectoryEx CreateDirectoryExW
#define RemoveDirectory RemoveDirectoryW
#define GetFullPathName GetFullPathNameW
#define DefineDosDevice DefineDosDeviceW
#define QueryDosDevice QueryDosDeviceW
#define CreateFile CreateFileW
#define SetFileAttributes SetFileAttributesW
#define GetFileAttributes GetFileAttributesW
#define GetCompressedFileSize GetCompressedFileSizeW
#define DeleteFile DeleteFileW
#define FindFirstFile FindFirstFileW
#define FindFirstFileEx FindFirstFileExW
#define FindNextFile FindNextFileW
#define SearchPath SearchPathW
#define CopyFile CopyFileW
#define CopyFileEx CopyFileExW
#define CreateHardLink CreateHardLinkW
#define MoveFile MoveFileW
#define MoveFileWithProgress MoveFileWithProgressW
#define MoveFileEx MoveFileExW
#define CreateNamedPipe CreateNamedPipeW
#define GetNamedPipeHandleState GetNamedPipeHandleStateW
#define CallNamedPipe CallNamedPipeW
#define WaitNamedPipe WaitNamedPipeW
#define SetVolumeLabel SetVolumeLabelW
#define GetVolumeInformation GetVolumeInformationW
#define ClearEventLog ClearEventLogW
#define BackupEventLog BackupEventLogW
#define CreateMutex CreateMutexW
#define OpenMutex OpenMutexW
#define CreateEvent CreateEventW
#define OpenEvent OpenEventW
#define CreateSemaphore CreateSemaphoreW
#define OpenSemaphore OpenSemaphoreW
#define CreateFileMapping CreateFileMappingW
#define OpenFileMapping OpenFileMappingW
#define GetLogicalDriveStrings GetLogicalDriveStringsW
#define LoadLibrary LoadLibraryW
#define LoadLibraryEx LoadLibraryExW
#define GetModuleFileName GetModuleFileNameW
#define GetModuleHandle GetModuleHandleW
#define GetUserObjectInformation GetUserObjectInformationW
#define SetUserObjectInformation SetUserObjectInformationW
#define RegisterWindowMessage RegisterWindowMessageW
#define GetMessage GetMessageW
#define DispatchMessage DispatchMessageW
#define PeekMessage PeekMessageW
#define SendMessage SendMessageW
#define SendMessageTimeout SendMessageTimeoutW
#define SendNotifyMessage SendNotifyMessageW
#define SendMessageCallback SendMessageCallbackW
#define PostMessage PostMessageW
#define PostThreadMessage PostThreadMessageW
#define VerFindFile VerFindFileW
#define VerInstallFile VerInstallFileW
#define GetFileVersionInfoSize GetFileVersionInfoSizeW
#define GetFileVersionInfo GetFileVersionInfoW
#define VerLanguageName VerLanguageNameW
#define VerQueryValue VerQueryValueW
#define CompareString CompareStringW
#define LCMapString LCMapStringW
#define GetLocaleInfo GetLocaleInfoW
#define SetLocaleInfo SetLocaleInfoW
#define GetTimeFormat GetTimeFormatW
#define GetDateFormat GetDateFormatW
#define GetNumberFormat GetNumberFormatW
#define GetCurrencyFormat GetCurrencyFormatW
#define EnumCalendarInfo EnumCalendarInfoW
#define EnumTimeFormats EnumTimeFormatsW
#define FoldString FoldStringW
#define EnumSystemCodePages EnumSystemCodePagesW
#define EnumSystemLocales EnumSystemLocalesW
#define GetStringTypeEx GetStringTypeExW
#define EnumDateFormats EnumDateFormatsW
#define GetConsoleTitle GetConsoleTitleW
#define ScrollConsoleScreenBuffer ScrollConsoleScreenBufferW
#define SetConsoleTitle SetConsoleTitleW
#define ReadConsole ReadConsoleW
#define WriteConsole WriteConsoleW
#define PeekConsoleInput PeekConsoleInputW
#define ReadConsoleInput ReadConsoleInputW
#define WriteConsoleInput WriteConsoleInputW
#define ReadConsoleOutput ReadConsoleOutputW
#define WriteConsoleOutput WriteConsoleOutputW
#define ReadConsoleOutputCharacter ReadConsoleOutputCharacterW
#define WriteConsoleOutputCharacter WriteConsoleOutputCharacterW
#define FillConsoleOutputCharacter FillConsoleOutputCharacterW
#define WNetGetProviderName WNetGetProviderNameW
#define WNetGetNetworkInformation WNetGetNetworkInformationW
#define WNetGetLastError WNetGetLastErrorW
#define MultinetGetConnectionPerformance MultinetGetConnectionPerformanceW
#define WNetConnectionDialog1 WNetConnectionDialog1W
#define WNetDisconnectDialog1 WNetDisconnectDialog1W
#define WNetOpenEnum WNetOpenEnumW
#define WNetEnumResource WNetEnumResourceW
#define WNetGetUniversalName WNetGetUniversalNameW
#define WNetGetUser WNetGetUserW
#define WNetAddConnection WNetAddConnectionW
#define WNetAddConnection2 WNetAddConnection2W
#define WNetAddConnection3 WNetAddConnection3W
#define WNetCancelConnection WNetCancelConnectionW
#define WNetCancelConnection2 WNetCancelConnection2W
#define WNetGetConnection WNetGetConnectionW
#define WNetUseConnection WNetUseConnectionW
#define WNetSetConnection WNetSetConnectionW
#define CreateService CreateServiceW
#define ChangeServiceConfig ChangeServiceConfigW
#define EnumDependentServices EnumDependentServicesW
#define EnumServicesStatus EnumServicesStatusW
#define GetServiceKeyName GetServiceKeyNameW
#define GetServiceDisplayName GetServiceDisplayNameW
#define OpenSCManager OpenSCManagerW
#define OpenService OpenServiceW
#define QueryServiceConfig QueryServiceConfigW
#define QueryServiceLockStatus QueryServiceLockStatusW
#define RegisterServiceCtrlHandler RegisterServiceCtrlHandlerW
#define StartServiceCtrlDispatcher StartServiceCtrlDispatcherW
#define StartService StartServiceW
#define CommDlg_OpenSave_GetSpec CommDlg_OpenSave_GetSpecW
#define CommDlg_OpenSave_GetFilePath CommDlg_OpenSave_GetFilePathW
#define CommDlg_OpenSave_GetFolderPath CommDlg_OpenSave_GetFolderPathW
#define GetPrivateProfileStruct GetPrivateProfileStructW
#define LVCOLUMN LVCOLUMNW
#define GetVolumeNameForVolumeMountPoint GetVolumeNameForVolumeMountPointW
#define GetVolumePathName GetVolumePathNameW
#define GetVolumePathNamesForVolumeName GetVolumePathNamesForVolumeNameW
#define DeleteVolumeMountPoint DeleteVolumeMountPointW
#define SetVolumeMountPoint SetVolumeMountPointW
#define FindNextVolumeMountPoint FindNextVolumeMountPointW
#define FindFirstVolumeMountPoint FindFirstVolumeMountPointW
#define FindNextVolume FindNextVolumeW
#define FindFirstVolume FindFirstVolumeW
#define GetGlyphIndices GetGlyphIndicesW
#else
#define GetGlyphIndices GetGlyphIndicesA
#define GetLongPathName GetLongPathNameA
#define GetDiskFreeSpaceEx GetDiskFreeSpaceExA
#define CreateProcessAsUser CreateProcessAsUserA
#define HDITEM HDITEMA
#define LPHDITEM LPHDITEMA
#define COMBOBOXEXITEM	COMBOBOXEXITEMA
#define PCOMBOBOXEXITEM	PCOMBOBOXEXITEMA
#define PCCOMBOBOXEXITEM	PCCOMBOBOXEXITEMA
#define CBEM_INSERTITEM	CBEM_INSERTITEMA
#define CBEM_SETITEM	CBEM_SETITEMA
#define CBEM_GETITEM	CBEM_GETITEMA
#define DATETIMEPICK_CLASS	DATETIMEPICK_CLASSA
#define DATETIMEPICK_CLASS	DATETIMEPICK_CLASSA
#define DTN_USERSTRING	DTN_USERSTRINGA
#define NMDATETIMESTRING	NMDATETIMESTRINGA
#define LPNMDATETIMESTRING	LPNMDATETIMESTRINGA
#define DTN_WMKEYDOWN	DTN_WMKEYDOWNA
#define NMDATETIMEWMKEYDOWN	NMDATETIMEWMKEYDOWNA
#define LPNMDATETIMEWMKEYDOWN	LPNMDATETIMEWMKEYDOWNA
#define DTN_FORMAT	DTN_FORMATA
#define NMDATETIMEFORMAT	NMDATETIMEFORMATA
#define LPNMDATETIMEFORMAT	LPNMDATETIMEFORMATA
#define DTN_FORMATQUERY	DTN_FORMATQUERYA
#define NMDATETIMEFORMATQUERY	NMDATETIMEFORMATQUERYA
#define LPNMDATETIMEFORMATQUERY	LPNMDATETIMEFORMATQUERYA
#define RegConnectRegistry RegConnectRegistryA
#define RegCreateKey RegCreateKeyA
#define RegCreateKeyEx RegCreateKeyExA
#define RegDeleteKey RegDeleteKeyA
#define RegDeleteValue RegDeleteValueA
#define RegEnumKey RegEnumKeyA
#define RegEnumKeyEx RegEnumKeyExA
#define RegEnumValue RegEnumValueA
#define RegLoadKey RegLoadKeyA
#define RegOpenKey RegOpenKeyA
#define RegOpenKeyEx RegOpenKeyExA
#define RegQueryInfoKey RegQueryInfoKeyA
#define RegQueryValue RegQueryValueA
#define RegQueryMultipleValues RegQueryMultipleValuesA
#define RegQueryValueEx RegQueryValueExA
#define RegReplaceKey RegReplaceKeyA
#define RegRestoreKey RegRestoreKeyA
#define RegSaveKey RegSaveKeyA
#define RegSetValue RegSetValueA
#define RegSetValueEx RegSetValueExA
#define AbortSystemShutdown AbortSystemShutdownA
#define InitiateSystemShutdown InitiateSystemShutdownA
#define RegUnLoadKey RegUnLoadKeyA
#define LoadIcon LoadIconA
#define LoadImage LoadImageA
#define LoadString LoadStringA
#define IsDialogMessage IsDialogMessageA
#define DlgDirList DlgDirListA
#define DlgDirSelectEx DlgDirSelectExA
#define DlgDirListComboBox DlgDirListComboBoxA
#define DlgDirSelectComboBoxEx DlgDirSelectComboBoxExA
#define DefFrameProc DefFrameProcA
#define DefMDIChildProc DefMDIChildProcA
#define CreateMDIWindow CreateMDIWindowA
#define WinHelp WinHelpA
#define ChangeDisplaySettings ChangeDisplaySettingsA
#define ChangeDisplaySettingsEx ChangeDisplaySettingsExA
#define EnumDisplaySettings EnumDisplaySettingsA
#define SystemParametersInfo SystemParametersInfoA
#define GetWindowLong GetWindowLongA
#define SetWindowLong SetWindowLongA
#define GetWindowLongPtrA	GetWindowLongA
#define GetWindowLongPtr	GetWindowLongPtrA
#define SetWindowLongPtr	SetWindowLongPtrA
#define GetClassLong GetClassLongA
#define GetClassLongPtr	GetClassLongPtrA
#define SetClassLongPtr	SetClassLongPtrA
#define SetClassLong SetClassLongA
#define FindWindow FindWindowA
#define FindWindowEx FindWindowExA
#define GetClassName GetClassNameA
#define SetWindowsHookEx SetWindowsHookExA
#define SetWindowsHook SetWindowsHookA
#define LoadBitmap LoadBitmapA
#define LoadCursor LoadCursorA
#define LoadCursorFromFile LoadCursorFromFileA
#define SetProp SetPropA
#define GetProp GetPropA
#define RemoveProp RemovePropA
#define EnumPropsEx EnumPropsExA
#define EnumProps EnumPropsA
#define SetWindowText SetWindowTextA
#define GetWindowText GetWindowTextA
#define GetWindowTextLength GetWindowTextLengthA
#define MessageBox MessageBoxA
#define MessageBoxEx MessageBoxExA
#define MessageBoxIndirect MessageBoxIndirectA
#define AddFontResource AddFontResourceA
#define CopyMetaFile CopyMetaFileA
#define CreateDC CreateDCA
#define CreateFontIndirect CreateFontIndirectA
#define CreateFont CreateFontA
#define CreateIC CreateICA
#define CreateMetaFile CreateMetaFileA
#define CreateScalableFontResource CreateScalableFontResourceA
#define DeviceCapabilities DeviceCapabilitiesA
#define EnumFontFamiliesEx EnumFontFamiliesExA
#define EnumFontFamilies EnumFontFamiliesA
#define EnumFonts EnumFontsA
#define GetCharWidth GetCharWidthA
#define GetCharWidth32 GetCharWidth32A
#define GetCharWidthFloat GetCharWidthFloatA
#define GetCharABCWidths GetCharABCWidthsA
#define GetCharABCWidthsFloat GetCharABCWidthsFloatA
#define GetGlyphOutline GetGlyphOutlineA
#define GetMetaFile GetMetaFileA
#define GetOutlineTextMetrics GetOutlineTextMetricsA
#define GetTextExtentPoint GetTextExtentPointA
#define GetTextExtentPoint32 GetTextExtentPoint32A
#define GetTextExtentExPoint GetTextExtentExPointA
#define GetCharacterPlacement GetCharacterPlacementA
#define ResetDC ResetDCA
#define RemoveFontResource RemoveFontResourceA
#define CopyEnhMetaFile CopyEnhMetaFileA
#define CreateEnhMetaFile CreateEnhMetaFileA
#define GetEnhMetaFile GetEnhMetaFileA
#define GetEnhMetaFileDescription GetEnhMetaFileDescriptionA
#define GetTextMetrics GetTextMetricsA
#define StartDoc StartDocA
#define GetObject GetObjectA
#define TextOut TextOutA
#define ExtTextOut ExtTextOutA
#define PolyTextOut PolyTextOutA
#define GetTextFace GetTextFaceA
#define GetKerningPairs GetKerningPairsA
#define GetLogColorSpace GetLogColorSpaceA
#define CreateColorSpace CreateColorSpaceA
#define GetICMProfile GetICMProfileA
#define SetICMProfile SetICMProfileA
#define UpdateICMRegKey UpdateICMRegKeyA
#define EnumICMProfiles EnumICMProfilesA
#define CreatePropertySheetPage CreatePropertySheetPageA
#define PropertySheet PropertySheetA
#define ImageList_LoadImage ImageList_LoadImageA
#define CreateStatusWindow CreateStatusWindowA
#define DrawStatusText DrawStatusTextA
#define GetOpenFileName GetOpenFileNameA
#define GetSaveFileName GetSaveFileNameA
#define GetFileTitle GetFileTitleA
#define ChooseColor ChooseColorA
#define FindText FindTextA
#define ReplaceText ReplaceTextA
#define ChooseFont ChooseFontA
#define PrintDlg PrintDlgA
#define PageSetupDlg PageSetupDlgA
#define DefWindowProc DefWindowProcA
#define CallWindowProc CallWindowProcA
#define RegisterClass RegisterClassA
#define UnregisterClass UnregisterClassA
#define GetClassInfo GetClassInfoA
#define RegisterClassEx RegisterClassExA
#define GetClassInfoEx GetClassInfoExA
#define CreateWindowEx CreateWindowExA
#define CreateWindow CreateWindowA
#define CreateDialogParam CreateDialogParamA
#define CreateDialogIndirectParam CreateDialogIndirectParamA
#define CreateDialog CreateDialogA
#define CreateDialogIndirect CreateDialogIndirectA
#define DialogBoxParam DialogBoxParamA
#define DialogBoxIndirectParam DialogBoxIndirectParamA
#define DialogBox DialogBoxA
#define DialogBoxIndirect DialogBoxIndirectA
#define RegisterClipboardFormat RegisterClipboardFormatA
#define SetDlgItemText SetDlgItemTextA
#define GetDlgItemText GetDlgItemTextA
#define SendDlgItemMessage SendDlgItemMessageA
#define DefDlgProc DefDlgProcA
#define CallMsgFilter CallMsgFilterA
#define GetClipboardFormatName GetClipboardFormatNameA
#define CharToOem CharToOemA
#define OemToChar OemToCharA
#define CharToOemBuff CharToOemBuffA
#define OemToCharBuff OemToCharBuffA
#define CharUpper CharUpperA
#define CharUpperBuff CharUpperBuffA
#define CharLower CharLowerA
#define CharLowerBuff CharLowerBuffA
#define CharNext CharNextA
#define CharPrev CharPrevA
#define IsCharAlpha IsCharAlphaA
#define IsCharAlphaNumeric IsCharAlphaNumericA
#define IsCharUpper IsCharUpperA
#define IsCharLower IsCharLowerA
#define GetKeyNameText GetKeyNameTextA
#define VkKeyScan VkKeyScanA
#define VkKeyScanEx VkKeyScanExA
#define MapVirtualKey MapVirtualKeyA
#define MapVirtualKeyEx MapVirtualKeyExA
#define LoadAccelerators LoadAcceleratorsA
#define CreateAcceleratorTable CreateAcceleratorTableA
#define CopyAcceleratorTable CopyAcceleratorTableA
#define TranslateAccelerator TranslateAcceleratorA
#define LoadMenu LoadMenuA
#define LoadMenuIndirect LoadMenuIndirectA
#define ChangeMenu ChangeMenuA
#define GetMenuString GetMenuStringA
#define InsertMenu InsertMenuA
#define AppendMenu AppendMenuA
#define ModifyMenu ModifyMenuA
#define InsertMenuItem InsertMenuItemA
#define GetMenuItemInfo GetMenuItemInfoA
#define SetMenuItemInfo SetMenuItemInfoA
#define DrawText DrawTextA
#define DrawTextEx DrawTextExA
#define GrayString GrayStringA
#define DrawState DrawStateA
#define TabbedTextOut TabbedTextOutA
#define GetTabbedTextExtent GetTabbedTextExtentA
#define GetVersionEx GetVersionExA
#define wvsprintf wvsprintfA
#define wsprintf wsprintfA
#define LoadKeyboardLayout LoadKeyboardLayoutA
#define GetKeyboardLayoutName GetKeyboardLayoutNameA
#define CreateDesktop CreateDesktopA
#define OpenDesktop OpenDesktopA
#define EnumDesktops EnumDesktopsA
#define CreateWindowStation CreateWindowStationA
#define OpenWindowStation OpenWindowStationA
#define EnumWindowStations EnumWindowStationsA
#define IsBadStringPtr IsBadStringPtrA
#define LookupAccountSid LookupAccountSidA
#define LookupAccountName LookupAccountNameA
#define LookupPrivilegeValue LookupPrivilegeValueA
#define LookupPrivilegeName LookupPrivilegeNameA
#define LookupPrivilegeDisplayName LookupPrivilegeDisplayNameA
#define BuildCommDCB BuildCommDCBA
#define BuildCommDCBAndTimeouts BuildCommDCBAndTimeoutsA
#define CommConfigDialog CommConfigDialogA
#define GetDefaultCommConfig GetDefaultCommConfigA
#define SetDefaultCommConfig SetDefaultCommConfigA
#define GetComputerName GetComputerNameA
#define SetComputerName SetComputerNameA
#define GetUserName GetUserNameA
#define CreateMailslot CreateMailslotA
#define FormatMessage FormatMessageA
#define GetEnvironmentStrings GetEnvironmentStringsA
#define FreeEnvironmentStrings FreeEnvironmentStringsA
#define lstrcmp lstrcmpA
#define lstrcmpi lstrcmpiA
#define lstrcpyn lstrcpynA
#define lstrcpy lstrcpyA
#define lstrcat lstrcatA
#define lstrlen lstrlenA
#define GetBinaryType GetBinaryTypeA
#define GetShortPathName GetShortPathNameA
#define SetFileSecurity SetFileSecurityA
#define GetFileSecurity GetFileSecurityA
#define FindFirstChangeNotification FindFirstChangeNotificationA
#define AccessCheckAndAuditAlarm AccessCheckAndAuditAlarmA
#define ObjectOpenAuditAlarm ObjectOpenAuditAlarmA
#define ObjectPrivilegeAuditAlarm ObjectPrivilegeAuditAlarmA
#define ObjectCloseAuditAlarm ObjectCloseAuditAlarmA
#define PrivilegedServiceAuditAlarm PrivilegedServiceAuditAlarmA
#define OpenEventLog OpenEventLogA
#define RegisterEventSource RegisterEventSourceA
#define OpenBackupEventLog OpenBackupEventLogA
#define ReadEventLog ReadEventLogA
#define ReportEvent ReportEventA
#define CreateProcess CreateProcessA
#define FatalAppExit FatalAppExitA
#define GetStartupInfo GetStartupInfoA
#define GetCommandLine GetCommandLineA
#define GetEnvironmentVariable GetEnvironmentVariableA
#define SetEnvironmentVariable SetEnvironmentVariableA
#define ExpandEnvironmentStrings ExpandEnvironmentStringsA
#define OutputDebugString OutputDebugStringA
#define FindResource FindResourceA
#define FindResourceEx FindResourceExA
#define EnumResourceTypes EnumResourceTypesA
#define EnumResourceNames EnumResourceNamesA
#define EnumResourceLanguages EnumResourceLanguagesA
#define BeginUpdateResource BeginUpdateResourceA
#define UpdateResource UpdateResourceA
#define EndUpdateResource EndUpdateResourceA
#define GlobalAddAtom GlobalAddAtomA
#define GlobalFindAtom GlobalFindAtomA
#define GlobalGetAtomName GlobalGetAtomNameA
#define AddAtom AddAtomA
#define FindAtom FindAtomA
#define GetProfileInt GetProfileIntA
#define GetAtomName GetAtomNameA
#define GetProfileString GetProfileStringA
#define WriteProfileString WriteProfileStringA
#define GetProfileSection GetProfileSectionA
#define WriteProfileSection WriteProfileSectionA
#define GetPrivateProfileInt GetPrivateProfileIntA
#define GetPrivateProfileSectionNames GetPrivateProfileSectionNamesA
#define GetPrivateProfileString GetPrivateProfileStringA
#define WritePrivateProfileString WritePrivateProfileStringA
#define WritePrivateProfileStruct WritePrivateProfileStructA
#define GetPrivateProfileSection GetPrivateProfileSectionA
#define WritePrivateProfileSection WritePrivateProfileSectionA
#define GetDriveType GetDriveTypeA
#define GetSystemDirectory GetSystemDirectoryA
#define GetTempPath GetTempPathA
#define GetTempFileName GetTempFileNameA
#define GetWindowsDirectory GetWindowsDirectoryA
#define SetCurrentDirectory SetCurrentDirectoryA
#define GetCurrentDirectory GetCurrentDirectoryA
#define GetDiskFreeSpace GetDiskFreeSpaceA
#define CreateDirectory CreateDirectoryA
#define CreateDirectoryEx CreateDirectoryExA
#define RemoveDirectory RemoveDirectoryA
#define GetFullPathName GetFullPathNameA
#define DefineDosDevice DefineDosDeviceA
#define QueryDosDevice QueryDosDeviceA
#define CreateFile CreateFileA
#define SetFileAttributes SetFileAttributesA
#define GetFileAttributes GetFileAttributesA
#define GetCompressedFileSize GetCompressedFileSizeA
#define DeleteFile DeleteFileA
#define FindFirstFile FindFirstFileA
#define FindFirstFileEx FindFirstFileExA
#define FindNextFile FindNextFileA
#define SearchPath SearchPathA
#define CopyFile CopyFileA
#define CopyFileEx CopyFileExA
#define CreateHardLink CreateHardLinkA
#define MoveFile MoveFileA
#define MoveFileEx MoveFileExA
#define MoveFileWithProgress MoveFileWithProgressA
#define CreateNamedPipe CreateNamedPipeA
#define GetNamedPipeHandleState GetNamedPipeHandleStateA
#define CallNamedPipe CallNamedPipeA
#define WaitNamedPipe WaitNamedPipeA
#define SetVolumeLabel SetVolumeLabelA
#define GetVolumeInformation GetVolumeInformationA
#define ClearEventLog ClearEventLogA
#define BackupEventLog BackupEventLogA
#define CreateMutex CreateMutexA
#define OpenMutex OpenMutexA
#define CreateEvent CreateEventA
#define OpenEvent OpenEventA
#define CreateSemaphore CreateSemaphoreA
#define OpenSemaphore OpenSemaphoreA
#define CreateFileMapping CreateFileMappingA
#define OpenFileMapping OpenFileMappingA
#define GetLogicalDriveStrings GetLogicalDriveStringsA
#define LoadLibrary LoadLibraryA
#define LoadLibraryEx LoadLibraryExA
#define GetModuleFileName GetModuleFileNameA
#define GetModuleHandle GetModuleHandleA
#define GetUserObjectInformation GetUserObjectInformationA
#define SetUserObjectInformation SetUserObjectInformationA
#define RegisterWindowMessage RegisterWindowMessageA
#define GetMessage GetMessageA
#define DispatchMessage DispatchMessageA
#define PeekMessage PeekMessageA
#define SendMessage SendMessageA
#define SendMessageTimeout SendMessageTimeoutA
#define SendNotifyMessage SendNotifyMessageA
#define SendMessageCallback SendMessageCallbackA
#define PostMessage PostMessageA
#define PostThreadMessage PostThreadMessageA
#define VerFindFile VerFindFileA
#define VerInstallFile VerInstallFileA
#define GetFileVersionInfoSize GetFileVersionInfoSizeA
#define GetFileVersionInfo GetFileVersionInfoA
#define VerLanguageName VerLanguageNameA
#define VerQueryValue VerQueryValueA
#define CompareString CompareStringA
#define LCMapString LCMapStringA
#define GetLocaleInfo GetLocaleInfoA
#define SetLocaleInfo SetLocaleInfoA
#define GetTimeFormat GetTimeFormatA
#define GetDateFormat GetDateFormatA
#define GetNumberFormat GetNumberFormatA
#define GetCurrencyFormat GetCurrencyFormatA
#define EnumCalendarInfo EnumCalendarInfoA
#define EnumTimeFormats EnumTimeFormatsA
#define FoldString FoldStringA
#define EnumSystemCodePages EnumSystemCodePagesA
#define EnumSystemLocales EnumSystemLocalesA
#define GetStringTypeEx GetStringTypeExA
#define EnumDateFormats EnumDateFormatsA
#define GetConsoleTitle GetConsoleTitleA
#define ScrollConsoleScreenBuffer ScrollConsoleScreenBufferA
#define SetConsoleTitle SetConsoleTitleA
#define ReadConsole ReadConsoleA
#define WriteConsole WriteConsoleA
#define PeekConsoleInput PeekConsoleInputA
#define ReadConsoleInput ReadConsoleInputA
#define WriteConsoleInput WriteConsoleInputA
#define ReadConsoleOutput ReadConsoleOutputA
#define WriteConsoleOutput WriteConsoleOutputA
#define ReadConsoleOutputCharacter ReadConsoleOutputCharacterA
#define WriteConsoleOutputCharacter WriteConsoleOutputCharacterA
#define FillConsoleOutputCharacter FillConsoleOutputCharacterA
#define MultinetGetConnectionPerformance MultinetGetConnectionPerformanceA
#define WNetGetLastError WNetGetLastErrorA
#define WNetGetProviderName WNetGetProviderNameA
#define WNetGetNetworkInformation WNetGetNetworkInformationA
#define WNetConnectionDialog1 WNetConnectionDialog1A
#define WNetDisconnectDialog1 WNetDisconnectDialog1A
#define WNetOpenEnum WNetOpenEnumA
#define WNetEnumResource WNetEnumResourceA
#define WNetGetUniversalName WNetGetUniversalNameA
#define WNetGetUser WNetGetUserA
#define WNetAddConnection WNetAddConnectionA
#define WNetAddConnection2 WNetAddConnection2A
#define WNetAddConnection3 WNetAddConnection3A
#define WNetCancelConnection WNetCancelConnectionA
#define WNetCancelConnection2 WNetCancelConnection2A
#define WNetGetConnection WNetGetConnectionA
#define WNetUseConnection WNetUseConnectionA
#define WNetSetConnection WNetSetConnectionA
#define OpenService OpenServiceA
#define QueryServiceConfig QueryServiceConfigA
#define QueryServiceLockStatus QueryServiceLockStatusA
#define RegisterServiceCtrlHandler RegisterServiceCtrlHandlerA
#define StartServiceCtrlDispatcher StartServiceCtrlDispatcherA
#define StartService StartServiceA
#define ChangeServiceConfig ChangeServiceConfigA
#define CreateService CreateServiceA
#define EnumDependentServices EnumDependentServicesA
#define EnumServicesStatus EnumServicesStatusA
#define GetServiceKeyName GetServiceKeyNameA
#define GetServiceDisplayName GetServiceDisplayNameA
#define OpenSCManager OpenSCManagerA
#define CommDlg_OpenSave_GetSpec CommDlg_OpenSave_GetSpecA
#define CommDlg_OpenSave_GetFilePath CommDlg_OpenSave_GetFilePathA
#define CommDlg_OpenSave_GetFolderPath CommDlg_OpenSave_GetFolderPathA
#define GetPrivateProfileStruct GetPrivateProfileStructA
#define LVCOLUMN LVCOLUMNA
#define GetVolumeNameForVolumeMountPoint GetVolumeNameForVolumeMountPointA
#define GetVolumePathName GetVolumePathNameA
#define GetVolumePathNamesForVolumeName GetVolumePathNamesForVolumeNameA
#define DeleteVolumeMountPoint DeleteVolumeMountPointA
#define SetVolumeMountPoint SetVolumeMountPointA
#define FindNextVolumeMountPoint FindNextVolumeMountPointA
#define FindFirstVolumeMountPoint FindFirstVolumeMountPointA
#define FindNextVolume FindNextVolumeA
#define FindFirstVolume FindFirstVolumeA
#endif
long get_osfhandle(int);
#define _get_osfhandle get_osfhandle
BOOL AbnormalTermination(VOID);
int AbortDoc(HDC);
BOOL AbortPrinter(HANDLE);
BOOL CALLBACK AbortProc(HDC,int);
LONG InterlockedIncrement(LPLONG);
LONG WINAPI InterlockedExchangeAdd ( LONG volatile *Addend, LONG Value );
LONG WINAPI InterlockedCompareExchange ( LONG volatile *Destination, LONG Exchange, LONG Comperand );
LONG InterlockedDecrement(LPLONG);
LONG InterlockedExchange(LPLONG,LONG);
BOOL FreeResource(HGLOBAL);
LPVOID LockResource(HGLOBAL);
int WinMain(HINSTANCE,HINSTANCE,LPSTR,int);
BOOL FreeLibrary(HINSTANCE);
VOID FreeLibraryAndExitThread(HMODULE,DWORD);
BOOL DisableThreadLibraryCalls(HMODULE);
FARPROC GetProcAddress(HINSTANCE,LPCSTR);
DWORD GetVersion(VOID);
HGLOBAL GlobalAlloc(UINT,DWORD);
HGLOBAL GlobalDiscard(HGLOBAL);
HGLOBAL GlobalReAlloc(HGLOBAL,DWORD,UINT);
DWORD GlobalSize(HGLOBAL);
UINT GlobalFlags(HGLOBAL);
LPVOID GlobalLock(HGLOBAL);
HGLOBAL GlobalHandle(LPCVOID);
BOOL GlobalUnlock(HGLOBAL);
HGLOBAL GlobalFree(HGLOBAL);
UINT GlobalCompact(DWORD);
VOID GlobalFix(HGLOBAL);
VOID GlobalUnfix(HGLOBAL);
LPVOID GlobalWire(HGLOBAL);
BOOL GlobalUnWire(HGLOBAL);
VOID GlobalMemoryStatus(LPMEMORYSTATUS);
BOOL GlobalMemoryStatusEx(LPMEMORYSTATUSEX);
HLOCAL LocalAlloc(UINT,UINT);
HLOCAL LocalDiscard(HLOCAL);
HLOCAL LocalReAlloc(HLOCAL,UINT,UINT);
LPVOID LocalLock(HLOCAL);
HLOCAL LocalHandle(LPCVOID);
BOOL LocalUnlock(HLOCAL);
UINT LocalSize(HLOCAL);
UINT LocalFlags(HLOCAL);
HLOCAL LocalFree(HLOCAL);
UINT LocalShrink(HLOCAL,UINT);
UINT LocalCompact(UINT);
BOOL FlushInstructionCache(HANDLE,LPCVOID,DWORD);
LPVOID VirtualAlloc(LPVOID,DWORD,DWORD,DWORD);
LPVOID WINAPI VirtualAllocEx(HANDLE,LPVOID,unsigned long,DWORD,DWORD);
BOOL VirtualFree(LPVOID,DWORD,DWORD);
BOOL WINAPI VirtualFreeEx(HANDLE,LPVOID,DWORD,DWORD);
BOOL VirtualProtect(LPVOID,DWORD,DWORD,PDWORD);
DWORD VirtualQuery(LPCVOID,PMEMORY_BASIC_INFORMATION,DWORD);
BOOL VirtualProtectEx(HANDLE,LPVOID,DWORD,DWORD,PDWORD);
DWORD VirtualQueryEx(HANDLE,LPCVOID,PMEMORY_BASIC_INFORMATION,DWORD);
HANDLE HeapCreate(DWORD,DWORD,DWORD);
BOOL HeapDestroy(HANDLE);
LPVOID HeapAlloc(HANDLE,DWORD,DWORD);
LPVOID HeapReAlloc(HANDLE,DWORD,LPVOID,DWORD);
BOOL HeapFree(HANDLE,DWORD,LPVOID);
DWORD HeapSize(HANDLE,DWORD,LPCVOID);
BOOL HeapValidate(HANDLE,DWORD,LPCVOID);
UINT HeapCompact(HANDLE,DWORD);
HANDLE GetProcessHeap(VOID);
DWORD WINAPI GetProcessIdOfThread(HANDLE);
DWORD WINAPI GetProcessId(HANDLE);
DWORD WINAPI GetCurrentProcessorNumber(void);
BOOL WINAPI GetProcessHandleCount(HANDLE,PDWORD);
BOOL WINAPI GetProcessIoCounters(HANDLE,PIO_COUNTERS);
BOOL WINAPI GetProcessWorkingSetSize(HANDLE,PSIZE_T,PSIZE_T);
BOOL WINAPI GetProcessWorkingSetSizeEx(HANDLE,PSIZE_T,PSIZE_T,PDWORD);
BOOL WINAPI SetProcessWorkingSetSize(HANDLE,SIZE_T,SIZE_T);
BOOL WINAPI SetProcessWorkingSetSizeEx(HANDLE,SIZE_T,SIZE_T,DWORD);
DWORD GetProcessHeaps(DWORD,PHANDLE);
DWORD GetProcessVersion(DWORD);
BOOL WINAPI SetEnvironmentStringsA(LPSTR);
BOOL WINAPI SetEnvironmentStringsW(LPWSTR);
BOOL HeapLock(HANDLE);
BOOL HeapUnlock(HANDLE);
BOOL HeapWalk(HANDLE,LPPROCESS_HEAP_ENTRY);
BOOL GetProcessAffinityMask(HANDLE,LPDWORD,LPDWORD);
BOOL GetProcessTimes(HANDLE,LPFILETIME,LPFILETIME,LPFILETIME,LPFILETIME);
BOOL GetProcessWorkingSetSize(HANDLE,LPDWORD,LPDWORD);
BOOL SetProcessWorkingSetSize(HANDLE,DWORD,DWORD);
BOOL WINAPI SetProcessAffinityMask(HANDLE,DWORD);
BOOL WINAPI SetProcessPriorityBoost(HANDLE,BOOL);
BOOL WINAPI GetProcessPriorityBoost(HANDLE,BOOL *);
BOOL WINAPI RequestWakeupLatency(LATENCY_TIME);
BOOL WINAPI IsSystemResumeAutomatic(VOID);
HANDLE WINAPI OpenThread(DWORD,BOOL,DWORD);
HANDLE OpenProcess(DWORD,BOOL,DWORD);
HANDLE GetCurrentProcess(VOID);
DWORD GetCurrentProcessId(VOID);
BOOL ProcessIdToSessionId(DWORD DWORD);
VOID ExitProcess(UINT);
BOOL TerminateProcess(HANDLE,UINT);
BOOL GetExitCodeProcess(HANDLE,LPDWORD);
VOID FatalExit(int);
LPTSTR GetEnvironmentStrings(VOID);
VOID RaiseException(DWORD,DWORD,DWORD,CONST DWORD *);
LONG UnhandledExceptionFilter(struct _EXCEPTION_POINTERS *);
LPTOP_LEVEL_EXCEPTION_FILTER SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER);
HANDLE CreateThread(LPSECURITY_ATTRIBUTES,DWORD,LPTHREAD_START_ROUTINE,LPVOID,DWORD,LPDWORD);
HANDLE CreateRemoteThread(HANDLE,LPSECURITY_ATTRIBUTES,DWORD,LPTHREAD_START_ROUTINE,LPVOID,DWORD,LPDWORD);
HANDLE GetCurrentThread(VOID);
DWORD GetCurrentThreadId(VOID);
DWORD SetThreadAffinityMask(HANDLE,DWORD);
DWORD WINAPI SetThreadIdealProcessor(HANDLE,DWORD);
BOOL SetThreadPriority(HANDLE,int);
int GetThreadPriority(HANDLE);
BOOL WINAPI SetThreadPriorityBoost(HANDLE,BOOL);
BOOL WINAPI GetThreadPriorityBoost(HANDLE,BOOL *);
BOOL GetThreadTimes(HANDLE,LPFILETIME,LPFILETIME,LPFILETIME,LPFILETIME);
BOOL WINAPI GetGUIThreadInfo(DWORD,PGUITHREADINFO pgui);
VOID ExitThread(DWORD);
BOOL TerminateThread(HANDLE,DWORD);
EXECUTION_STATE WINAPI SetThreadExecutionState(EXECUTION_STATE);
BOOL GetExitCodeThread(HANDLE,LPDWORD);
BOOL GetThreadSelectorEntry(HANDLE,DWORD,LPLDT_ENTRY);
DWORD GetLastError(VOID);
VOID WINAPI RestoreLastError(DWORD);
VOID SetLastError(DWORD);
BOOL GetOverlappedResult(HANDLE,LPOVERLAPPED,LPDWORD,BOOL);
HANDLE CreateIoCompletionPort(HANDLE,HANDLE,DWORD,DWORD);
BOOL GetQueuedCompletionStatus(HANDLE,LPDWORD,LPDWORD,LPOVERLAPPED *,DWORD);
BOOL WINAPI PostQueuedCompletionStatus(HANDLE,DWORD,long long int *,LPOVERLAPPED);
DWORD WINAPI QueueUserAPC(PAPCFUNC,HANDLE,long long int *);
BOOL WINAPI IsDebuggerPresent(void);
UINT SetErrorMode(UINT);
BOOL ReadProcessMemory(HANDLE,LPCVOID,LPVOID,DWORD,LPDWORD);
BOOL WriteProcessMemory(HANDLE,LPVOID,LPVOID,DWORD,LPDWORD);
BOOL GetThreadContext(HANDLE,LPCONTEXT);
BOOL SetThreadContext(HANDLE,CONST CONTEXT *);
DWORD SuspendThread(HANDLE);
DWORD ResumeThread(HANDLE);
VOID DebugBreak(VOID);
BOOL WaitForDebugEvent(LPDEBUG_EVENT,DWORD);
BOOL ContinueDebugEvent(DWORD,DWORD,DWORD);
BOOL DebugActiveProcess(DWORD);
BOOL WINAPI DebugActiveProcessStop(DWORD);
BOOL WINAPI DebugSetProcessKillOnExit(BOOL);
BOOL WINAPI DebugBreakProcess(HANDLE);
BOOL WINAPI CheckRemoteDebuggerPresent(HANDLE,PBOOL);
VOID InitializeCriticalSection(LPCRITICAL_SECTION);
VOID EnterCriticalSection(LPCRITICAL_SECTION);
VOID LeaveCriticalSection(LPCRITICAL_SECTION);
VOID DeleteCriticalSection(LPCRITICAL_SECTION);
BOOL WINAPI InitializeCriticalSectionAndSpinCount(LPCRITICAL_SECTION,DWORD);
WINBASEAPI DWORD WINAPI SetCriticalSectionSpinCount(LPCRITICAL_SECTION,DWORD);
WINBASEAPI BOOL WINAPI TryEnterCriticalSection(LPCRITICAL_SECTION);
BOOL SetEvent(HANDLE);
BOOL ResetEvent(HANDLE);
BOOL PulseEvent(HANDLE);
BOOL ReleaseSemaphore(HANDLE,LONG,LPLONG);
BOOL ReleaseMutex(HANDLE);
DWORD WaitForSingleObject(HANDLE,DWORD);
DWORD WaitForMultipleObjects(DWORD,CONST HANDLE *,BOOL,DWORD);
VOID Sleep(DWORD);
HGLOBAL LoadResource(HINSTANCE,HRSRC);
DWORD SizeofResource(HINSTANCE,HRSRC);
ATOM GlobalDeleteAtom(ATOM);
BOOL InitAtomTable(DWORD);
ATOM DeleteAtom(ATOM);
UINT SetHandleCount(UINT);
DWORD GetLogicalDrives(VOID);
BOOL LockFile( HANDLE,DWORD,DWORD,DWORD,DWORD);
BOOL UnlockFile(HANDLE,DWORD,DWORD,DWORD,DWORD);
BOOL LockFileEx(HANDLE,DWORD,DWORD,DWORD,DWORD,LPOVERLAPPED);
BOOL UnlockFileEx(HANDLE,DWORD,DWORD,DWORD,LPOVERLAPPED);
BOOL GetFileInformationByHandle(HANDLE,LPBY_HANDLE_FILE_INFORMATION);
DWORD GetFileType(HANDLE);
DWORD GetFileSize(HANDLE,LPDWORD);
BOOL WINAPI GetFileSizeEx(HANDLE,PLARGE_INTEGER);
HANDLE GetStdHandle(DWORD);
BOOL SetStdHandle(DWORD,HANDLE);
BOOL WriteFile(HANDLE,LPCVOID,DWORD,LPDWORD,LPOVERLAPPED);
BOOL ReadFile(HANDLE,LPVOID,DWORD,LPDWORD,LPOVERLAPPED);
BOOL WINAPI ReadFileScatter(HANDLE h,FILE_SEGMENT_ELEMENT aSegmentArray[],DWORD,LPDWORD,LPOVERLAPPED);
BOOL WINAPI WriteFileGather(HANDLE hFile,FILE_SEGMENT_ELEMENT aSegmentArray[],DWORD n,LPDWORD l,LPOVERLAPPED);
BOOL FlushFileBuffers(HANDLE);
BOOL DeviceIoControl(HANDLE,DWORD,LPVOID,DWORD,LPVOID,DWORD,LPDWORD,LPOVERLAPPED);
BOOL WINAPI RequestDeviceWakeup(HANDLE);
BOOL WINAPI CancelDeviceWakeupRequest(HANDLE);
BOOL WINAPI GetDevicePowerState(HANDLE,BOOL *);
BOOL WINAPI SetMessageWaitingIndicator(HANDLE,ULONG);
BOOL SetEndOfFile(HANDLE);
DWORD SetFilePointer(HANDLE,LONG,PLONG,DWORD);
BOOL WINAPI SetFilePointerEx(HANDLE,LARGE_INTEGER,PLARGE_INTEGER,DWORD);
BOOL WINAPI SetFileValidData(HANDLE,LONGLONG);
BOOL WINAPI SetFileShortNameA(HANDLE,LPCSTR);
BOOL WINAPI SetFileShortNameW(HANDLE,LPCWSTR);
BOOL FindClose(HANDLE);
BOOL GetFileTime(HANDLE,LPFILETIME,LPFILETIME,LPFILETIME);
BOOL SetFileTime(HANDLE,CONST FILETIME *,CONST FILETIME *,CONST FILETIME *);
BOOL CloseHandle(HANDLE);
BOOL DuplicateHandle(HANDLE,HANDLE,HANDLE,LPHANDLE,DWORD,BOOL,DWORD);
BOOL GetHandleInformation(HANDLE,LPDWORD);
BOOL SetHandleInformation(HANDLE,DWORD,DWORD);
DWORD LoadModule(LPCSTR,LPVOID);
UINT WinExec(LPCSTR,UINT);
BOOL ClearCommBreak(HANDLE);
BOOL ClearCommError(HANDLE,LPDWORD,LPCOMSTAT);
BOOL SetupComm(HANDLE,DWORD,DWORD);
BOOL EscapeCommFunction(HANDLE,DWORD);
BOOL GetCommConfig(HANDLE,LPCOMMCONFIG,LPDWORD);
BOOL GetCommMask(HANDLE,LPDWORD);
BOOL GetCommProperties(HANDLE,LPCOMMPROP);
BOOL GetCommModemStatus(HANDLE,LPDWORD);
BOOL GetCommState(HANDLE,LPDCB);
BOOL GetCommTimeouts(HANDLE,LPCOMMTIMEOUTS);
BOOL PurgeComm(HANDLE,DWORD);
BOOL SetCommBreak(HANDLE);
BOOL SetCommConfig(HANDLE,LPCOMMCONFIG,DWORD);
BOOL SetCommMask(HANDLE,DWORD);
BOOL SetCommState(HANDLE,LPDCB);
BOOL SetCommTimeouts(HANDLE,LPCOMMTIMEOUTS);
BOOL TransmitCommChar(HANDLE,char);
BOOL WaitCommEvent(HANDLE,LPDWORD,LPOVERLAPPED);
DWORD SetTapePosition(HANDLE,DWORD,DWORD,DWORD,DWORD,BOOL);
DWORD GetTapePosition(HANDLE,DWORD,LPDWORD,LPDWORD,LPDWORD);
DWORD PrepareTape(HANDLE,DWORD,BOOL);
DWORD EraseTape(HANDLE,DWORD,BOOL);
DWORD CreateTapePartition(HANDLE,DWORD,DWORD,DWORD);
DWORD WriteTapemark(HANDLE,DWORD,DWORD,BOOL);
DWORD GetTapeStatus(HANDLE);
DWORD GetTapeParameters(HANDLE,DWORD,LPDWORD,LPVOID);
DWORD SetTapeParameters( HANDLE,DWORD,LPVOID);
BOOL Beep(DWORD,DWORD);
VOID OpenSound(VOID);
VOID CloseSound(VOID);
VOID StartSound(VOID);
VOID StopSound(VOID);
DWORD WaitSoundState(DWORD);
DWORD SyncAllVoices(VOID);
DWORD CountVoiceNotes(DWORD nVoice);
LPDWORD GetThresholdEvent(VOID);
DWORD GetThresholdStatus(VOID);
DWORD SetSoundNoise(DWORD,DWORD);
DWORD SetVoiceAccent(DWORD,DWORD,DWORD,DWORD,DWORD);
DWORD SetVoiceEnvelope(DWORD,DWORD,DWORD);
DWORD SetVoiceNote(DWORD,DWORD,DWORD,DWORD);
DWORD SetVoiceQueueSize(DWORD,DWORD);
DWORD SetVoiceSound(DWORD,DWORD,DWORD);
DWORD SetVoiceThreshold(DWORD,DWORD);
int MulDiv(int,int,int);
VOID GetSystemTime(LPSYSTEMTIME);
VOID GetSystemTimeAsFileTime(LPFILETIME);
BOOL SetSystemTime(CONST SYSTEMTIME *);
BOOL SetSystemPowerState(BOOL,BOOL);
BOOL WINAPI GetSystemPowerStatus(LPSYSTEM_POWER_STATUS);
VOID GetLocalTime(LPSYSTEMTIME);
BOOL SetLocalTime(CONST SYSTEMTIME *);
VOID GetSystemInfo(LPSYSTEM_INFO);
BOOL SystemTimeToTzSpecificLocalTime(LPTIME_ZONE_INFORMATION,LPSYSTEMTIME,LPSYSTEMTIME);
DWORD GetTimeZoneInformation(LPTIME_ZONE_INFORMATION);
BOOL SetTimeZoneInformation(CONST TIME_ZONE_INFORMATION *);
BOOL SystemTimeToFileTime(CONST SYSTEMTIME *,LPFILETIME);
BOOL FileTimeToLocalFileTime(CONST FILETIME *,LPFILETIME);
BOOL LocalFileTimeToFileTime(CONST FILETIME *,LPFILETIME);
BOOL FileTimeToSystemTime(CONST FILETIME *,LPSYSTEMTIME);
LONG CompareFileTime(CONST FILETIME *,CONST FILETIME *);
BOOL FileTimeToDosDateTime(CONST FILETIME *,LPWORD,LPWORD);
BOOL DosDateTimeToFileTime(WORD,WORD,LPFILETIME);
DWORD GetTickCount(VOID);
BOOL SetSystemTimeAdjustment(DWORD,BOOL);
BOOL GetSystemTimeAdjustment(PDWORD,PDWORD,PWINBOOL);
BOOL CreatePipe(PHANDLE,PHANDLE,LPSECURITY_ATTRIBUTES,DWORD);
BOOL ConnectNamedPipe(HANDLE,LPOVERLAPPED);
BOOL DisconnectNamedPipe(HANDLE);
BOOL SetNamedPipeHandleState(HANDLE,LPDWORD,LPDWORD,LPDWORD);
BOOL GetNamedPipeInfo(HANDLE,LPDWORD,LPDWORD,LPDWORD,LPDWORD);
BOOL PeekNamedPipe(HANDLE,LPVOID,DWORD,LPDWORD,LPDWORD,LPDWORD);
BOOL TransactNamedPipe(HANDLE,LPVOID,DWORD,LPVOID,DWORD,LPDWORD,LPOVERLAPPED);
BOOL GetMailslotInfo(HANDLE,LPDWORD,LPDWORD,LPDWORD,LPDWORD);
BOOL SetMailslotInfo(HANDLE,DWORD);
LPVOID MapViewOfFile(HANDLE,DWORD,DWORD,DWORD,DWORD);
BOOL FlushViewOfFile(LPCVOID,DWORD);
BOOL UnmapViewOfFile(LPVOID);
HFILE OpenFile(LPCSTR,LPOFSTRUCT,UINT);
HFILE _lopen( LPCSTR,int);
HFILE _lcreat(LPCSTR,int);
UINT _lread(HFILE,LPVOID,UINT);
UINT _lwrite(HFILE,LPCSTR,UINT);
long _hread(HFILE,LPVOID,long);
long _hwrite(HFILE,LPCSTR,long);
HFILE _lclose(HFILE);
LONG _llseek(HFILE,LONG,int);
BOOL IsTextUnicode(CONST LPVOID,int,LPINT);
WINBASEAPI DWORD WINAPI FlsAlloc(PFLS_CALLBACK_FUNCTION);
WINBASEAPI PVOID WINAPI FlsGetValue(DWORD);
WINBASEAPI BOOL WINAPI FlsSetValue(DWORD,PVOID);
WINBASEAPI BOOL WINAPI FlsFree(DWORD);
DWORD TlsAlloc(VOID);
LPVOID TlsGetValue(DWORD);
BOOL TlsSetValue(DWORD,LPVOID);
BOOL TlsFree(DWORD);
DWORD SleepEx(DWORD,BOOL);
DWORD WaitForSingleObjectEx(HANDLE,DWORD,BOOL);
DWORD WaitForMultipleObjectsEx(DWORD,CONST HANDLE *,BOOL,DWORD,BOOL);
BOOL ReadFileEx(HANDLE,LPVOID,DWORD,LPOVERLAPPED,LPOVERLAPPED_COMPLETION_ROUTINE);
BOOL WriteFileEx( HANDLE,LPCVOID,DWORD,LPOVERLAPPED,LPOVERLAPPED_COMPLETION_ROUTINE);
BOOL BackupRead(HANDLE,LPBYTE,DWORD,LPDWORD,BOOL,BOOL,LPVOID *);
BOOL BackupSeek(HANDLE,DWORD,DWORD,LPDWORD,LPDWORD,LPVOID *);
BOOL BackupWrite(HANDLE,LPBYTE,DWORD,LPDWORD,BOOL,BOOL,LPVOID *);
BOOL SetProcessShutdownParameters(DWORD,DWORD);
BOOL GetProcessShutdownParameters(LPDWORD,LPDWORD);
VOID SetFileApisToOEM(VOID);
VOID SetFileApisToANSI(VOID);
BOOL AreFileApisANSI(VOID);
BOOL CloseEventLog(HANDLE);
BOOL DeregisterEventSource(HANDLE);
BOOL NotifyChangeEventLog (HANDLE,HANDLE);
BOOL GetNumberOfEventLogRecords(HANDLE,PDWORD);
BOOL GetOldestEventLogRecord(HANDLE,PDWORD);
BOOL DuplicateToken(HANDLE,SECURITY_IMPERSONATION_LEVEL,PHANDLE);
BOOL WINAPI DuplicateTokenEx(HANDLE,DWORD,LPSECURITY_ATTRIBUTES,SECURITY_IMPERSONATION_LEVEL,TOKEN_TYPE,PHANDLE);
BOOL APIENTRY CreateRestrictedToken(HANDLE,DWORD,DWORD,PSID_AND_ATTRIBUTES,DWORD,PLUID_AND_ATTRIBUTES,DWORD,PSID_AND_ATTRIBUTES,PHANDLE);
BOOL GetKernelObjectSecurity(HANDLE,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR,DWORD,LPDWORD);
BOOL WINAPI IsProcessRestricted(void);
BOOL ImpersonateNamedPipeClient(HANDLE);
BOOL WINAPI ImpersonateLoggedOnUser(HANDLE);
BOOL WINAPI LogonUserA(LPSTR,LPSTR,LPSTR,DWORD,DWORD,PHANDLE);
BOOL WINAPI LogonUserW(LPWSTR,LPWSTR,LPWSTR,DWORD,DWORD,PHANDLE);
BOOL WINAPI LogonUserExA (LPCSTR,LPCSTR,LPCSTR,DWORD,DWORD,PHANDLE,PSID *,PVOID *,LPDWORD,PQUOTA_LIMITS);
BOOL WINAPI LogonUserExW (LPCWSTR,LPCWSTR,LPCWSTR,DWORD,DWORD,PHANDLE,PSID *,PVOID *,LPDWORD,PQUOTA_LIMITS);
#ifdef UNICODE
#define SetFileShortName SetFileShortNameW
#define SetEnvironmentStrings SetEnvironmentStringsW
#define LogonUserEx LogonUserExW
#define LogonUser LogonUserW
#define GetFileAttributesEx GetFileAttributesExW
#else
#define SetFileShortName SetFileShortNameA
#define SetEnvironmentStrings SetEnvironmentStringsW
#define LogonUser	LogonUserA
#define GetFileAttributesEx GetFileAttributesExA
#define LogonUserEx LogonUserExA
#endif
BOOL ImpersonateSelf(SECURITY_IMPERSONATION_LEVEL);
BOOL RevertToSelf(VOID);
BOOL SetThreadToken (PHANDLE,HANDLE);
BOOL AccessCheck(PSECURITY_DESCRIPTOR,HANDLE,DWORD,PGENERIC_MAPPING,PPRIVILEGE_SET,LPDWORD,LPDWORD,LPBOOL);
BOOL OpenProcessToken(HANDLE,DWORD,PHANDLE);
BOOL OpenThreadToken(HANDLE,DWORD,BOOL,PHANDLE);
BOOL GetTokenInformation(HANDLE,TOKEN_INFORMATION_CLASS,LPVOID,DWORD,PDWORD);
BOOL SetTokenInformation(HANDLE,TOKEN_INFORMATION_CLASS,LPVOID,DWORD);
BOOL AdjustTokenPrivileges(HANDLE,BOOL,PTOKEN_PRIVILEGES,DWORD,PTOKEN_PRIVILEGES,PDWORD);
BOOL AdjustTokenGroups (HANDLE,BOOL,PTOKEN_GROUPS,DWORD,PTOKEN_GROUPS,PDWORD);
BOOL PrivilegeCheck (HANDLE,PPRIVILEGE_SET,LPBOOL);
BOOL IsValidSid (PSID);
BOOL EqualSid(PSID,PSID);
BOOL EqualPrefixSid (PSID,PSID);
DWORD GetSidLengthRequired(UCHAR);
BOOL AllocateAndInitializeSid(PSID_IDENTIFIER_AUTHORITY,BYTE,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,DWORD,PSID *);
PVOID FreeSid(PSID);
BOOL InitializeSid (PSID,PSID_IDENTIFIER_AUTHORITY,BYTE);
PSID_IDENTIFIER_AUTHORITY GetSidIdentifierAuthority(PSID);
PDWORD GetSidSubAuthority (PSID,DWORD);
PUCHAR GetSidSubAuthorityCount (PSID);
DWORD GetLengthSid (PSID);
BOOL CopySid(DWORD,PSID,PSID);
BOOL AreAllAccessesGranted (DWORD,DWORD);
BOOL AreAnyAccessesGranted (DWORD,DWORD);
VOID MapGenericMask(PDWORD,PGENERIC_MAPPING);
BOOL IsValidAcl(PACL);
BOOL InitializeAcl(PACL,DWORD,DWORD);
BOOL GetAclInformation(PACL,LPVOID,DWORD,ACL_INFORMATION_CLASS);
BOOL SetAclInformation (PACL,LPVOID,DWORD,ACL_INFORMATION_CLASS);
BOOL AddAce(PACL,DWORD,DWORD,LPVOID,DWORD);
BOOL WINAPI AddAccessAllowedObjectAce(PACL,DWORD,DWORD,DWORD,GUID *,GUID *,PSID);
BOOL WINAPI AddAccessDeniedAceEx(PACL,DWORD,DWORD,DWORD,PSID);
BOOL DeleteAce(PACL,DWORD);
BOOL GetAce (PACL,DWORD,LPVOID *);
BOOL AddAccessAllowedAce(PACL,DWORD,DWORD,PSID);
BOOL WINAPI AddAccessAllowedAceEx(PACL,DWORD,DWORD,DWORD,PSID);
BOOL AddAccessDeniedAce(PACL,DWORD,DWORD,PSID);
BOOL AddAuditAccessAce(PACL,DWORD,DWORD,PSID,BOOL,BOOL);
BOOL FindFirstFreeAce (PACL,LPVOID *);
BOOL InitializeSecurityDescriptor(PSECURITY_DESCRIPTOR,DWORD);
BOOL IsValidSecurityDescriptor(PSECURITY_DESCRIPTOR);
DWORD GetSecurityDescriptorLength(PSECURITY_DESCRIPTOR);
BOOL GetSecurityDescriptorControl(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR_CONTROL,LPDWORD);
BOOL SetSecurityDescriptorDacl(PSECURITY_DESCRIPTOR,BOOL,PACL,BOOL);
BOOL GetSecurityDescriptorDacl(PSECURITY_DESCRIPTOR,LPBOOL,PACL *,LPBOOL);
BOOL SetSecurityDescriptorSacl(PSECURITY_DESCRIPTOR,BOOL,PACL,BOOL);
BOOL GetSecurityDescriptorSacl(PSECURITY_DESCRIPTOR,LPBOOL,PACL *,LPBOOL);
BOOL SetSecurityDescriptorOwner(PSECURITY_DESCRIPTOR,PSID pOwner,BOOL);
BOOL GetSecurityDescriptorOwner(PSECURITY_DESCRIPTOR,PSID *,LPBOOL);
BOOL SetSecurityDescriptorGroup(PSECURITY_DESCRIPTOR,PSID,BOOL);
BOOL GetSecurityDescriptorGroup(PSECURITY_DESCRIPTOR,PSID *,LPBOOL);
DWORD WINAPI SetSecurityDescriptorRMControl(PSECURITY_DESCRIPTOR,PUCHAR);
DWORD WINAPI GetSecurityDescriptorRMControl(PSECURITY_DESCRIPTOR,PUCHAR);
BOOL WINAPI ConvertToAutoInheritPrivateObjectSecurity(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR *,GUID *,BOOLEAN,PGENERIC_MAPPING);
BOOL CreatePrivateObjectSecurity(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR *,BOOL,HANDLE,PGENERIC_MAPPING);
BOOL SetPrivateObjectSecurity(SECURITY_INFORMATION,PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR *,PGENERIC_MAPPING,HANDLE);
BOOL GetPrivateObjectSecurity(PSECURITY_DESCRIPTOR,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR,DWORD,PDWORD);
BOOL DestroyPrivateObjectSecurity(PSECURITY_DESCRIPTOR *);
BOOL MakeSelfRelativeSD(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,LPDWORD);
BOOL MakeAbsoluteSD(PSECURITY_DESCRIPTOR,PSECURITY_DESCRIPTOR,LPDWORD,PACL,LPDWORD,PACL,LPDWORD,PSID,LPDWORD,PSID,LPDWORD);
BOOL SetKernelObjectSecurity(HANDLE,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR);
BOOL FindNextChangeNotification(HANDLE);
BOOL FindCloseChangeNotification(HANDLE);
BOOL VirtualLock(LPVOID,DWORD);
BOOL VirtualUnlock(LPVOID,DWORD);
LPVOID MapViewOfFileEx(HANDLE,DWORD,DWORD,DWORD,DWORD,LPVOID);
BOOL SetPriorityClass(HANDLE,DWORD);
DWORD GetPriorityClass(HANDLE);
BOOL IsBadReadPtr(CONST VOID *,UINT);
BOOL IsBadWritePtr(LPVOID,UINT);
BOOL IsBadHugeReadPtr(CONST VOID *,UINT);
BOOL IsBadHugeWritePtr(LPVOID,UINT);
BOOL IsBadCodePtr(FARPROC);
BOOL AllocateLocallyUniqueId(PLUID);
BOOL QueryPerformanceCounter(LARGE_INTEGER *);
BOOL QueryPerformanceFrequency(LARGE_INTEGER *);
VOID MoveMemory(PVOID,CONST VOID *,DWORD);
VOID NTAPI RtlMoveMemory(VOID *,CONST VOID *,SIZE_T);
#define MoveMemory(a,b,c) RtlMoveMemory(a,b,c)
VOID FillMemory(PVOID,DWORD,BYTE);
VOID ZeroMemory(PVOID,DWORD);
#ifdef WIN95
HKL ActivateKeyboardLayout(HKL,UINT);
#else
BOOL ActivateKeyboardLayout(HKL,UINT);
#endif
int ToUnicodeEx(UINT,UINT,PBYTE,LPWSTR,int,UINT,HKL);
BOOL UnloadKeyboardLayout(HKL);
int GetKeyboardLayoutList(int,HKL *);
HKL GetKeyboardLayout(DWORD);
HDESK OpenInputDesktop(DWORD,BOOL,DWORD);
BOOL EnumDesktopWindows(HDESK,ENUMWINDOWSPROC,LPARAM);
BOOL SwitchDesktop(HDESK);
BOOL SetThreadDesktop(HDESK);
BOOL CloseDesktop(HDESK);
HDESK GetThreadDesktop(DWORD);
BOOL CloseWindowStation(HWINSTA);
BOOL SetProcessWindowStation(HWINSTA);
HWINSTA GetProcessWindowStation(VOID);
BOOL SetUserObjectSecurity(HANDLE,PSECURITY_INFORMATION,PSECURITY_DESCRIPTOR);
BOOL GetUserObjectSecurity(HANDLE,PSECURITY_INFORMATION,PSECURITY_DESCRIPTOR,DWORD,LPDWORD);
BOOL TranslateMessage(CONST MSG *);
BOOL SetMessageQueue(int);
BOOL RegisterHotKey(HWND,int,UINT,UINT);
BOOL UnregisterHotKey(HWND,int);
BOOL ExitWindowsEx(UINT,DWORD);
#define ExitWindows(a,b) ExitWindowsEx(EWX_LOGOFF,0xFFFFFFFF)
BOOL SwapMouseButton(BOOL);
DWORD GetMessagePos(VOID);
LONG GetMessageTime(VOID);
LONG GetMessageExtraInfo(VOID);
LPARAM SetMessageExtraInfo(LPARAM);
long BroadcastSystemMessage(DWORD,LPDWORD,UINT,WPARAM,LPARAM);
BOOL AttachThreadInput(DWORD,DWORD,BOOL);
BOOL ReplyMessage(LRESULT);
BOOL WaitMessage(VOID);
DWORD WaitForInputIdle(HANDLE,DWORD);
VOID PostQuitMessage(int);
BOOL InSendMessage(VOID);
UINT GetDoubleClickTime(VOID);
BOOL SetDoubleClickTime(UINT);
BOOL IsWindow(HWND);
BOOL IsMenu(HMENU);
BOOL IsChild(HWND,HWND);
BOOL DestroyWindow(HWND);
BOOL ShowWindow(HWND,int);
BOOL AnimateWindow(HWND,DWORD,DWORD);
BOOL UpdateLayeredWindow(HWND,HDC,POINT *,SIZE *,HDC,POINT *,COLORREF,BLENDFUNCTION *,DWORD);
BOOL SetLayeredWindowAttributes(HWND,COLORREF,BYTE,DWORD);
#define LWA_COLORKEY	1
#define LWA_ALPHA	2
#define ULW_COLORKEY	1
#define ULW_ALPHA	2
#define ULW_OPAQUE	4
BOOL ShowWindowAsync(HWND,int);
BOOL FlashWindow(HWND,BOOL);
BOOL FlashWindowEx(PFLASHWINFO);
#define FLASHW_STOP	0
#define FLASHW_CAPTION	1
#define FLASHW_TRAY	2
#define FLASHW_ALL	(FLASHW_CAPTION|FLASHW_TRAY)
#define FLASHW_TIMER	4
#define FLASHW_TIMERNOFG	0xC
BOOL ShowOwnedPopups(HWND,BOOL);
BOOL OpenIcon(HWND);
BOOL CloseWindow(HWND);
BOOL MoveWindow(HWND,int,int,int,int,BOOL);
BOOL SetWindowPos(HWND,HWND,int,int,int,int,UINT);
BOOL GetWindowPlacement(HWND,WINDOWPLACEMENT *);
BOOL SetWindowPlacement(HWND hWnd,CONST WINDOWPLACEMENT *);
HDWP BeginDeferWindowPos(int);
HDWP DeferWindowPos(HDWP,HWND,HWND,int,int,int,int,UINT);
BOOL EndDeferWindowPos(HDWP);
BOOL IsWindowVisible(HWND);
BOOL IsIconic(HWND);
BOOL AnyPopup(VOID);
BOOL BringWindowToTop(HWND);
BOOL IsZoomed(HWND);
BOOL EndDialog(HWND,int);
HWND GetDlgItem(HWND,int);
BOOL SetDlgItemInt(HWND,int,UINT,BOOL);
UINT GetDlgItemInt(HWND,int,BOOL *,BOOL);
BOOL CheckDlgButton(HWND,int,UINT);
BOOL CheckRadioButton(HWND,int,int,int);
UINT IsDlgButtonChecked(HWND,int);
HWND GetNextDlgGroupItem(HWND,HWND,BOOL);
HWND GetNextDlgTabItem(HWND,HWND,BOOL);
int GetDlgCtrlID(HWND);
long GetDialogBaseUnits(VOID);
BOOL OpenClipboard(HWND);
BOOL CloseClipboard(VOID);
HWND GetClipboardOwner(VOID);
HWND SetClipboardViewer(HWND);
HWND GetClipboardViewer(VOID);
BOOL ChangeClipboardChain(HWND,HWND);
HANDLE SetClipboardData(UINT,HANDLE);
HANDLE GetClipboardData(UINT);
int CountClipboardFormats(VOID);
UINT EnumClipboardFormats(UINT);
BOOL EmptyClipboard(VOID);
BOOL IsClipboardFormatAvailable(UINT);
int GetPriorityClipboardFormat(UINT *,int);
HWND GetOpenClipboardWindow(VOID);
LPSTR CharNextExA(WORD,LPCSTR,DWORD);
LPSTR CharPrevExA(WORD,LPCSTR,LPCSTR,DWORD dwFlags);
HWND SetFocus(HWND);
HWND GetActiveWindow(VOID);
HWND GetFocus(VOID);
UINT GetKBCodePage(VOID);
SHORT GetKeyState(int);
SHORT GetAsyncKeyState(int);
BOOL GetKeyboardState(PBYTE);
BOOL SetKeyboardState(LPBYTE);
int GetKeyboardType(int);
int ToAscii(UINT,UINT,PBYTE,LPWORD,UINT);
int ToAsciiEx(UINT,UINT,PBYTE,LPWORD,UINT,HKL);
int ToUnicode(UINT,UINT,PBYTE,LPWSTR,int,UINT);
DWORD OemKeyScan(WORD);
VOID keybd_event(BYTE,BYTE,DWORD,DWORD);
VOID mouse_event(DWORD,DWORD,DWORD,DWORD,DWORD);
BOOL GetInputState(VOID);
DWORD GetQueueStatus(UINT flags);
HWND GetCapture(VOID);
HWND SetCapture(HWND hWnd);
BOOL ReleaseCapture(VOID);
DWORD MsgWaitForMultipleObjects(DWORD,LPHANDLE,BOOL,DWORD,DWORD);
DWORD WINAPI MsgWaitForMultipleObjectsEx(DWORD,CONST HANDLE *,DWORD,DWORD,DWORD);
UINT SetTimer(HWND,UINT,UINT,TIMERPROC);
BOOL KillTimer(HWND,UINT);
BOOL IsWindowUnicode(HWND);
BOOL EnableWindow(HWND,BOOL);
BOOL IsWindowEnabled(HWND);
BOOL DestroyAcceleratorTable(HACCEL);
int GetSystemMetrics(int);
HMENU GetMenu(HWND);
BOOL WINAPI GetMenuBarInfo(HWND,LONG,LONG,PMENUBARINFO);
BOOL SetMenu(HWND,HMENU);
BOOL HiliteMenuItem(HWND,HMENU,UINT,UINT);
UINT GetMenuState(HMENU,UINT,UINT);
BOOL DrawMenuBar(HWND);
HMENU GetSystemMenu(HWND,BOOL);
HMENU CreateMenu(VOID);
HMENU CreatePopupMenu(VOID);
BOOL DestroyMenu(HMENU);
DWORD CheckMenuItem(HMENU,UINT,UINT);
BOOL EnableMenuItem(HMENU,UINT,UINT);
HMENU GetSubMenu(HMENU,int);
UINT GetMenuItemID(HMENU,int);
int GetMenuItemCount(HMENU);
BOOL RemoveMenu(HMENU,UINT,UINT);
BOOL DeleteMenu(HMENU,UINT,UINT);
BOOL SetMenuItemBitmaps(HMENU,UINT,UINT,HBITMAP,HBITMAP);
LONG GetMenuCheckMarkDimensions(VOID);
BOOL TrackPopupMenu(HMENU,UINT,int,int,int,HWND,CONST RECT *);
BOOL WINAPI GetMenuInfo(HMENU,LPMENUINFO);
BOOL WINAPI SetMenuInfo(HMENU,LPCMENUINFO);
BOOL WINAPI EndMenu(VOID);
UINT GetMenuDefaultItem(HMENU,UINT,UINT);
BOOL SetMenuDefaultItem(HMENU,UINT,UINT);
BOOL GetMenuItemRect(HWND,HMENU,UINT,LPRECT);
int MenuItemFromPoint(HWND,HMENU,POINT);
DWORD DragObject(HWND,HWND,UINT,DWORD,HCURSOR);
BOOL DragDetect(HWND,POINT);
BOOL DrawIcon(HDC,int,int,HICON);
BOOL UpdateWindow(HWND);
HWND SetActiveWindow(HWND);
HWND GetForegroundWindow(VOID);
BOOL PaintDesktop(HDC);
BOOL SetForegroundWindow(HWND hWnd);
HWND WindowFromDC(HDC hDC);
HDC GetDC(HWND);
HDC GetDCEx(HWND,HRGN,DWORD);
HDC GetWindowDC(HWND);
int ReleaseDC(HWND,HDC);
HDC BeginPaint( HWND,LPPAINTSTRUCT);
BOOL EndPaint(HWND,CONST PAINTSTRUCT *);
BOOL GetUpdateRect(HWND,LPRECT,BOOL);
int GetUpdateRgn(HWND,HRGN,BOOL);
int SetWindowRgn(HWND,HRGN,BOOL);
int GetWindowRgn(HWND,HRGN);
int ExcludeUpdateRgn(HDC,HWND);
BOOL InvalidateRect(HWND,CONST RECT *,BOOL);
BOOL ValidateRect(HWND,CONST RECT *);
BOOL InvalidateRgn(HWND,HRGN,BOOL);
BOOL ValidateRgn(HWND,HRGN);
BOOL RedrawWindow(HWND,CONST RECT *,HRGN,UINT);
BOOL LockWindowUpdate(HWND );
BOOL ScrollWindow(HWND,int,int,CONST RECT *,CONST RECT *);
BOOL ScrollDC(HDC,int,int,CONST RECT *,CONST RECT *,HRGN,LPRECT);
int ScrollWindowEx(HWND,int,int,CONST RECT *,CONST RECT *,HRGN,LPRECT,UINT);
int SetScrollPos(HWND,int,int,BOOL);
int GetScrollPos(HWND,int);
BOOL SetScrollRange(HWND,int,int,int,BOOL);
BOOL GetScrollRange(HWND,int,LPINT,LPINT);
BOOL ShowScrollBar(HWND,int,BOOL);
BOOL EnableScrollBar(HWND,UINT,UINT);
BOOL GetClientRect(HWND,LPRECT);
BOOL GetWindowRect(HWND,LPRECT);
BOOL AdjustWindowRect(LPRECT,DWORD,BOOL);
BOOL AdjustWindowRectEx(LPRECT,DWORD,BOOL,DWORD);
BOOL SetWindowContextHelpId(HWND,DWORD);
DWORD GetWindowContextHelpId(HWND);
BOOL SetMenuContextHelpId(HMENU,DWORD);
DWORD GetMenuContextHelpId(HMENU);
BOOL MessageBeep(UINT);
int ShowCursor(BOOL);
BOOL SetCursorPos(int,int);
HCURSOR SetCursor(HCURSOR);
BOOL GetCursorPos(LPPOINT);
BOOL ClipCursor(CONST RECT *);
BOOL GetClipCursor(LPRECT);
HCURSOR GetCursor(VOID);
BOOL CreateCaret(HWND,HBITMAP,int,int);
UINT GetCaretBlinkTime(VOID);
BOOL SetCaretBlinkTime(UINT);
BOOL DestroyCaret(VOID);
BOOL HideCaret(HWND);
BOOL ShowCaret(HWND);
BOOL SetCaretPos(int,int);
BOOL GetCaretPos(LPPOINT);
BOOL ClientToScreen(HWND,LPPOINT);
BOOL ScreenToClient(HWND,LPPOINT);
int MapWindowPoints(HWND,HWND,LPPOINT,UINT);
HWND WindowFromPoint(POINT);
HWND ChildWindowFromPoint(HWND,POINT);
DWORD GetSysColor(int);
HBRUSH GetSysColorBrush(int);
BOOL SetSysColors(int,CONST INT *,CONST COLORREF *);
BOOL DrawFocusRect(HDC,CONST RECT *);
int FillRect(HDC,CONST RECT *,HBRUSH);
int FrameRect(HDC,CONST RECT *,HBRUSH);
BOOL InvertRect(HDC,CONST RECT *);
BOOL SetRect(LPRECT,int,int,int,int);
BOOL SetRectEmpty(LPRECT);
BOOL CopyRect(LPRECT,CONST RECT *);
BOOL InflateRect(LPRECT,int,int);
BOOL IntersectRect(LPRECT,CONST RECT *,CONST RECT *);
BOOL UnionRect(LPRECT,CONST RECT *,CONST RECT *);
BOOL SubtractRect(LPRECT,CONST RECT *,CONST RECT *);
BOOL OffsetRect(LPRECT,int,int);
BOOL IsRectEmpty( CONST RECT *);
BOOL EqualRect(CONST RECT *,CONST RECT *);
BOOL PtInRect( CONST RECT *lprc,POINT pt);
WORD GetWindowWord(HWND,int);
WORD SetWindowWord(HWND,int,WORD);
WORD GetClassWord(HWND,int);
WORD SetClassWord(HWND,int,WORD);
HWND GetDesktopWindow(VOID);
HWND GetParent(HWND);
HWND SetParent(HWND,HWND);
BOOL EnumChildWindows(HWND,ENUMWINDOWSPROC,LPARAM);
BOOL EnumWindows(ENUMWINDOWSPROC,LPARAM );
BOOL EnumThreadWindows(DWORD,ENUMWINDOWSPROC,LPARAM);
HWND GetTopWindow(HWND);
DWORD GetWindowThreadProcessId(HWND,LPDWORD);
HWND GetLastActivePopup(HWND);
HWND GetWindow(HWND,UINT);
BOOL UnhookWindowsHook(int,HOOKPROC);
BOOL UnhookWindowsHookEx(HHOOK);
BOOL WINAPI UnhookWinEvent(HWINEVENTHOOK);
HWINEVENTHOOK WINAPI SetWinEventHook(DWORD,DWORD,HMODULE,WINEVENTPROC,DWORD,DWORD,DWORD);
LRESULT CallNextHookEx(HHOOK,int,WPARAM,LPARAM);
VOID WINAPI NotifyWinEvent(DWORD,HWND,LONG,LONG);
BOOL CheckMenuRadioItem(HMENU,UINT,UINT,UINT,UINT);
HCURSOR CreateCursor(HINSTANCE,int,int,int,int,CONST VOID *,CONST VOID *);
BOOL DestroyCursor(HCURSOR);
BOOL SetSystemCursor( HCURSOR,DWORD);
HICON CreateIcon(HINSTANCE,int,int,BYTE,BYTE,CONST BYTE *,CONST BYTE *);
BOOL DestroyIcon(HICON);
int LookupIconIdFromDirectory(PBYTE,BOOL);
int LookupIconIdFromDirectoryEx(PBYTE,BOOL,int,int,UINT);
HICON CreateIconFromResource(PBYTE,DWORD,BOOL,DWORD);
HICON CreateIconFromResourceEx(PBYTE,DWORD,BOOL,DWORD,int,int,UINT);
HICON CopyImage( HANDLE,UINT,int,int,UINT);
HICON CreateIconIndirect(PICONINFO);
HICON CopyIcon(HICON);
#define CopyCursor(p) ((HCURSOR)CopyIcon((HICON)(p)))
BOOL GetIconInfo( HICON hIcon,PICONINFO piconinfo);
BOOL MapDialogRect( HWND hDlg,LPRECT lpRect);
int SetScrollInfo(HWND,int,LPCSCROLLINFO,BOOL);
BOOL GetScrollInfo(HWND,int,LPSCROLLINFO);
BOOL TranslateMDISysAccel(HWND,LPMSG);
UINT ArrangeIconicWindows(HWND);
WORD TileWindows(HWND,UINT,CONST RECT *,UINT,const HWND *);
WORD CascadeWindows(HWND,UINT,CONST RECT *,UINT,const HWND *);
VOID SetLastErrorEx(DWORD,DWORD);
VOID SetDebugErrorLevel(DWORD);
BOOL DrawEdge(HDC,LPRECT,UINT,UINT);
BOOL DrawFrameControl(HDC,LPRECT,UINT,UINT);
BOOL DrawCaption(HWND,HDC,CONST RECT *,UINT);
BOOL DrawAnimatedRects(HWND,int,CONST RECT *,CONST RECT *);
BOOL TrackPopupMenuEx(HMENU,UINT,int,int,HWND,LPTPMPARAMS);
HWND ChildWindowFromPointEx(HWND,POINT,UINT);
HWND WINAPI RealChildWindowFromPoint(HWND,POINT);
UINT WINAPI RealGetWindowClassA(HWND,LPSTR,UINT);
BOOL WINAPI IsProcessorFeaturePresent(DWORD);
BOOL DrawIconEx(HDC,int,int,HICON,int,int,UINT,HBRUSH,UINT);
BOOL AnimatePalette(HPALETTE,UINT,UINT,CONST PALETTEENTRY *);
BOOL Arc(HDC,int,int,int,int,int,int,int,int);
BOOL BitBlt(HDC,int,int,int,int,HDC,int,int,DWORD);
BOOL CancelDC(HDC);
BOOL Chord(HDC,int,int,int,int,int,int,int,int);
HMETAFILE CloseMetaFile(HDC);
int CombineRgn(HRGN,HRGN,HRGN,int);
HBITMAP CreateBitmap(int,int,UINT,UINT,CONST VOID *);
HBITMAP CreateBitmapIndirect(CONST BITMAP *);
HBRUSH CreateBrushIndirect(CONST LOGBRUSH *);
HBITMAP CreateCompatibleBitmap(HDC,int,int);
HBITMAP CreateDiscardableBitmap(HDC,int,int);
HDC CreateCompatibleDC(HDC);
HBITMAP CreateDIBitmap(HDC,CONST BITMAPINFOHEADER *,DWORD,CONST VOID *,CONST BITMAPINFO *,UINT);
HBRUSH CreateDIBPatternBrush(HGLOBAL,UINT);
HBRUSH CreateDIBPatternBrushPt(CONST VOID *,UINT);
HRGN CreateEllipticRgn(int,int,int,int);
HRGN CreateEllipticRgnIndirect(CONST RECT *);
HBRUSH CreateHatchBrush(int,COLORREF);
HPALETTE CreatePalette(CONST LOGPALETTE *);
HPEN CreatePen(int,int,COLORREF);
HPEN CreatePenIndirect(CONST LOGPEN *);
HRGN CreatePolyPolygonRgn(CONST POINT *,CONST INT *,int,int);
HBRUSH CreatePatternBrush(HBITMAP);
HRGN CreateRectRgn(int,int,int,int);
HRGN CreateRectRgnIndirect(CONST RECT *);
HRGN CreateRoundRectRgn(int,int,int,int,int,int);
HBRUSH CreateSolidBrush(COLORREF);
BOOL DeleteDC(HDC);
BOOL DeleteMetaFile(HMETAFILE);
BOOL DeleteObject(HGDIOBJ);
int WINAPI DescribePixelFormat(HDC,int, UINT, LPPIXELFORMATDESCRIPTOR);
BOOL WINAPI SwapBuffers(HDC);
int DrawEscape(HDC,int,int,LPCSTR);
BOOL Ellipse(HDC,int,int,int,int);
int EnumObjects(HDC,int,ENUMOBJECTSPROC,LPARAM);
BOOL EqualRgn(HRGN,HRGN);
int Escape(HDC,int,int,LPCSTR,LPVOID);
int ExtEscape(HDC,int,int,LPCSTR,int,LPSTR);
int ExcludeClipRect(HDC,int,int,int,int);
HRGN ExtCreateRegion(CONST XFORM *,DWORD,CONST RGNDATA *);
BOOL ExtFloodFill(HDC,int,int,COLORREF,UINT);
BOOL FillRgn(HDC,HRGN,HBRUSH);
BOOL FloodFill(HDC,int,int,COLORREF);
BOOL FrameRgn(HDC,HRGN,HBRUSH,int,int);
int GetROP2(HDC);
BOOL GetAspectRatioFilterEx(HDC,LPSIZE);
COLORREF GetBkColor(HDC);
COLORREF GetDCBrushColor(HDC);
COLORREF GetDCPenColor(HDC);
int GetBkMode(HDC);
LONG GetBitmapBits(HBITMAP,LONG,LPVOID);
BOOL GetBitmapDimensionEx(HBITMAP,LPSIZE);
UINT GetBoundsRect(HDC,LPRECT,UINT);
BOOL GetBrushOrgEx(HDC,LPPOINT);
int GetClipBox(HDC,LPRECT);
int GetClipRgn(HDC,HRGN);
int GetMetaRgn(HDC,HRGN);
HGDIOBJ GetCurrentObject(HDC,UINT);
BOOL GetCurrentPositionEx(HDC,LPPOINT);
int GetDeviceCaps(HDC,int);
int GetDIBits(HDC,HBITMAP,UINT,UINT,LPVOID,LPBITMAPINFO,UINT);
DWORD GetFontData(HDC,DWORD,DWORD,LPVOID,DWORD);
DWORD WINAPI GetFontUnicodeRanges(HDC,LPGLYPHSET);
DWORD WINAPI GetGlyphIndicesA(HDC,LPCSTR,int,LPWORD,DWORD);
DWORD WINAPI GetGlyphIndicesW(HDC,LPCWSTR,int,LPWORD,DWORD);
int GetGraphicsMode(HDC);
int GetMapMode(HDC);
UINT GetMetaFileBitsEx(HMETAFILE,UINT,LPVOID);
COLORREF GetNearestColor(HDC,COLORREF);
UINT GetNearestPaletteIndex(HPALETTE,COLORREF);
DWORD GetObjectType(HGDIOBJ);
UINT GetPaletteEntries(HPALETTE,UINT,UINT,LPPALETTEENTRY);
COLORREF GetPixel(HDC,int,int);
int GetPixelFormat(HDC);
int GetPolyFillMode(HDC);
BOOL GetRasterizerCaps(LPRASTERIZER_STATUS,UINT);
int WINAPI GetRandomRgn (HDC,HRGN,INT);
DWORD GetRegionData(HRGN,DWORD,LPRGNDATA);
int GetRgnBox(HRGN,LPRECT);
HGDIOBJ GetStockObject(int);
int GetStretchBltMode(HDC);
UINT GetSystemPaletteEntries(HDC,UINT,UINT,LPPALETTEENTRY);
UINT GetSystemPaletteUse(HDC);
int GetTextCharacterExtra(HDC);
UINT GetTextAlign(HDC);
COLORREF GetTextColor(HDC);
int GetTextCharset(HDC);
int GetTextCharsetInfo(HDC,LPFONTSIGNATURE,DWORD);
BOOL TranslateCharsetInfo( DWORD *,LPCHARSETINFO,DWORD);
DWORD GetFontLanguageInfo(HDC);
BOOL GetViewportExtEx(HDC,LPSIZE);
BOOL GetViewportOrgEx(HDC,LPPOINT);
BOOL GetWindowExtEx(HDC,LPSIZE);
BOOL GetWindowOrgEx(HDC,LPPOINT);
int IntersectClipRect(HDC,int,int,int,int);
BOOL InvertRgn(HDC,HRGN);
BOOL LineDDA(int,int,int,int,LINEDDAPROC,LPARAM);
BOOL LineTo(HDC,int,int);
BOOL MaskBlt(HDC,int,int,int,int,HDC,int,int,HBITMAP,int,int,DWORD);
BOOL PlgBlt(HDC,CONST POINT *,HDC,int,int,int,int,HBITMAP,int,int);
int OffsetClipRgn(HDC,int,int);
int OffsetRgn(HRGN,int,int);
BOOL PatBlt(HDC,int,int,int,int,DWORD);
BOOL Pie(HDC,int,int,int,int,int,int,int,int);
BOOL PlayMetaFile(HDC,HMETAFILE);
BOOL PaintRgn(HDC,HRGN);
BOOL PolyPolygon(HDC,CONST POINT *,CONST INT *,int);
BOOL PtInRegion(HRGN,int,int);
BOOL PtVisible(HDC,int,int);
BOOL RectInRegion(HRGN,CONST RECT *);
BOOL RectVisible(HDC,CONST RECT *);
BOOL Rectangle(HDC,int,int,int,int);
BOOL RestoreDC(HDC,int);
UINT RealizePalette(HDC);
BOOL RoundRect(HDC,int,int,int,int,int,int);
BOOL ResizePalette(HPALETTE,UINT);
int SaveDC(HDC);
int SelectClipRgn(HDC,HRGN);
int ExtSelectClipRgn(HDC,HRGN,int);
int SetMetaRgn(HDC);
HGDIOBJ SelectObject(HDC,HGDIOBJ);
HPALETTE SelectPalette(HDC,HPALETTE,BOOL);
COLORREF SetBkColor(HDC,COLORREF);
int SetBkMode(HDC,int);
LONG SetBitmapBits(HBITMAP,DWORD,CONST VOID *);
UINT SetBoundsRect(HDC,CONST RECT *,UINT);
int SetDIBits(HDC,HBITMAP,UINT,UINT,CONST VOID *,CONST BITMAPINFO *,UINT);
int SetDIBitsToDevice(HDC,int,int,DWORD,DWORD,int,int,UINT,UINT,CONST VOID *,CONST BITMAPINFO *,UINT);
DWORD SetMapperFlags(HDC,DWORD);
int SetGraphicsMode(HDC,int);
int SetMapMode(HDC,int);
HMETAFILE SetMetaFileBitsEx(UINT,CONST BYTE *);
UINT SetPaletteEntries(HPALETTE,UINT,UINT,CONST PALETTEENTRY *);
COLORREF SetPixel(HDC,int,int,COLORREF);
BOOL SetPixelV(HDC,int,int,COLORREF);
int SetPolyFillMode(HDC,int);
BOOL StretchBlt(HDC,int,int,int,int,HDC,int,int,int,int,DWORD);
BOOL SetRectRgn(HRGN,int,int,int,int);
int StretchDIBits(HDC,int,int,int,int,int,int,int,int,CONST VOID *,CONST BITMAPINFO *,UINT,DWORD);
int SetROP2(HDC,int);
int SetStretchBltMode(HDC,int);
UINT SetSystemPaletteUse(HDC,UINT);
int SetTextCharacterExtra(HDC,int);
COLORREF SetTextColor(HDC,COLORREF);
UINT SetTextAlign(HDC,UINT);
BOOL SetTextJustification(HDC,int,int);
BOOL UpdateColors(HDC);
BOOL PlayMetaFileRecord(HDC,LPHANDLETABLE,LPMETARECORD,UINT);
BOOL EnumMetaFile(HDC,HMETAFILE,ENUMMETAFILEPROC,LPARAM);
HENHMETAFILE CloseEnhMetaFile(HDC);
BOOL DeleteEnhMetaFile(HENHMETAFILE);
BOOL EnumEnhMetaFile(HDC,HENHMETAFILE,ENHMETAFILEPROC,LPVOID,CONST RECT *);
UINT GetEnhMetaFileHeader(HENHMETAFILE,UINT,LPENHMETAHEADER );
UINT GetEnhMetaFilePaletteEntries(HENHMETAFILE,UINT,LPPALETTEENTRY );
UINT WINAPI GetEnhMetaFileBits(HENHMETAFILE,UINT,LPBYTE);
UINT GetWinMetaFileBits(HENHMETAFILE,UINT,LPBYTE,INT,HDC);
BOOL PlayEnhMetaFile(HDC,HENHMETAFILE,CONST RECT *);
BOOL PlayEnhMetaFileRecord(HDC,LPHANDLETABLE,CONST ENHMETARECORD *,UINT);
HENHMETAFILE SetEnhMetaFileBits(UINT,CONST BYTE *);
HENHMETAFILE SetWinMetaFileBits(UINT,CONST BYTE *,HDC,CONST METAFILEPICT *);
BOOL GdiComment(HDC,UINT,CONST BYTE *);
BOOL AngleArc(HDC,int,int,DWORD,FLOAT,FLOAT);
BOOL PolyPolyline(HDC,CONST POINT *,CONST DWORD *,DWORD);
BOOL GetWorldTransform(HDC,LPXFORM);
BOOL SetWorldTransform(HDC,CONST XFORM *);
BOOL ModifyWorldTransform(HDC,CONST XFORM *,DWORD);
BOOL CombineTransform(LPXFORM,CONST XFORM *,CONST XFORM *);
HBITMAP CreateDIBSection(HDC,CONST BITMAPINFO *,UINT,VOID **,HANDLE,DWORD);
UINT GetDIBColorTable(HDC,UINT,UINT,RGBQUAD *);
UINT SetDIBColorTable(HDC,UINT,UINT,CONST RGBQUAD *);
BOOL SetColorAdjustment(HDC,CONST COLORADJUSTMENT *);
BOOL GetColorAdjustment(HDC,LPCOLORADJUSTMENT);
HPALETTE CreateHalftonePalette(HDC);
BOOL WINAPI ReadDirectoryChangesW(HANDLE,LPVOID,DWORD,BOOL,DWORD,LPDWORD,LPOVERLAPPED,LPOVERLAPPED_COMPLETION_ROUTINE);
int EndDoc(HDC);
int StartPage(HDC);
int EndPage(HDC);
int AbortDoc(HDC);
int SetAbortProc(HDC,ABORTPROC);
BOOL AbortPath(HDC);
BOOL ArcTo(HDC,int,int,int,int,int,int,int,int);
BOOL BeginPath(HDC);
BOOL CloseFigure(HDC);
BOOL EndPath(HDC);
BOOL FillPath(HDC);
BOOL FlattenPath(HDC);
int GetPath(HDC,LPPOINT,LPBYTE,int);
HRGN PathToRegion(HDC);
BOOL PolyDraw(HDC,CONST POINT *,CONST BYTE *,int);
BOOL SelectClipPath(HDC,int);
int SetArcDirection(HDC,int);
BOOL SetMiterLimit(HDC,FLOAT,PFLOAT);
BOOL StrokeAndFillPath(HDC);
BOOL StrokePath(HDC);
BOOL WidenPath(HDC);
HPEN ExtCreatePen(DWORD,DWORD,CONST LOGBRUSH *,DWORD,CONST DWORD *);
BOOL GetMiterLimit(HDC,PFLOAT);
int GetArcDirection(HDC);
BOOL MoveToEx(HDC,int,int,LPPOINT);
HRGN CreatePolygonRgn(CONST POINT *,int,int);
BOOL DPtoLP(HDC,LPPOINT,int);
BOOL LPtoDP(HDC,LPPOINT,int);
BOOL Polygon(HDC,CONST POINT *,int);
BOOL Polyline(HDC,CONST POINT *,int);
BOOL PolyBezier(HDC,CONST POINT *,DWORD);
BOOL PolyBezierTo(HDC,CONST POINT *,DWORD);
BOOL PolylineTo(HDC,CONST POINT *,DWORD);
BOOL SetViewportExtEx(HDC,int,int,LPSIZE);
BOOL SetViewportOrgEx(HDC,int,int,LPPOINT);
BOOL SetWindowExtEx(HDC,int,int,LPSIZE);
BOOL SetWindowOrgEx(HDC,int,int,LPPOINT);
BOOL OffsetViewportOrgEx(HDC,int,int,LPPOINT);
BOOL OffsetWindowOrgEx(HDC,int,int,LPPOINT);
BOOL ScaleViewportExtEx(HDC,int,int,int,int,LPSIZE);
BOOL ScaleWindowExtEx(HDC,int,int,int,int,LPSIZE);
BOOL SetBitmapDimensionEx(HBITMAP,int,int,LPSIZE);
BOOL SetBrushOrgEx(HDC,int,int,LPPOINT);
BOOL GetDCOrgEx(HDC,LPPOINT);
BOOL FixBrushOrgEx(HDC,int,int,LPPOINT);
BOOL UnrealizeObject(HGDIOBJ);
BOOL GdiFlush(void);
DWORD GdiSetBatchLimit(DWORD);
DWORD GdiGetBatchLimit(void);
int SetICMMode(HDC,int);
BOOL CheckColorsInGamut(HDC,LPVOID,LPVOID,DWORD);
HANDLE GetColorSpace(HDC);
BOOL SetColorSpace(HDC,HCOLORSPACE);
BOOL DeleteColorSpace(HCOLORSPACE);
BOOL GetDeviceGammaRamp(HDC,LPVOID);
BOOL SetDeviceGammaRamp(HDC,LPVOID);
BOOL ColorMatchToTarget(HDC,HDC,DWORD);
HPROPSHEETPAGE CreatePropertySheetPageA(LPCPROPSHEETPAGE);
BOOL DestroyPropertySheetPage(HPROPSHEETPAGE);
void InitCommonControls(void);
typedef struct tagINITCOMMONCONTROLSEX { DWORD dwSize; DWORD dwICC; } INITCOMMONCONTROLSEX, *LPINITCOMMONCONTROLSEX;
#define ICC_LISTVIEW_CLASSES 1
#define ICC_TREEVIEW_CLASSES 2
#define ICC_BAR_CLASSES	4
#define ICC_TAB_CLASSES 8
#define ICC_UPDOWN_CLASS 0x10
#define ICC_PROGRESS_CLASS 0x20
#define ICC_HOTKEY_CLASS 0x40
#define ICC_ANIMATE_CLASS 0x80
#define ICC_WIN95_CLASSES 0xFF
#define ICC_DATE_CLASSES 0x100
#define ICC_USEREX_CLASSES 0x200
#define ICC_COOL_CLASSES 0x400
#define ICC_INTERNET_CLASSES 0x800
#define ICC_PAGESCROLLER_CLASS 0x1000
#define ICC_NATIVEFNTCTL_CLASS 0x2000
#define ICC_STANDARD_CLASSES 0x04000
#define ECM_FIRST 0x1500
#define BCM_FIRST 0x1600
#define BCM_GETIDEALSIZE  (BCM_FIRST + 1)
#define BCM_SETIMAGELIST  (BCM_FIRST + 2)
#define BCM_GETIMAGELIST  (BCM_FIRST + 3)
#define BCM_SETTEXTMARGIN (BCM_FIRST + 4)
#define BCM_GETTEXTMARGIN (BCM_FIRST + 5)
#define CBM_FIRST 0x1700
#define ICC_LINK_CLASS 0x08000
BOOL AlphaBlend(HDC,int,int,int,int,HDC,int,int,int,int,BLENDFUNCTION);
BOOL TransparentBlt(HDC,int,int,int,int,HDC,int,int,int,int,UINT);
#define AC_SRC_OVER 0
#define AC_SRC_ALPHA 1
#define GRADIENT_FILL_RECT_H	0
#define GRADIENT_FILL_RECT_V	1
#define GRADIENT_FILL_TRIANGLE	2
#define GRADIENT_FILL_OP_FLAG	0x0ff
BOOL GradientFill(HDC,PTRIVERTEX,ULONG,PVOID,ULONG,ULONG);
BOOL WINAPI InitCommonControlsEx(LPINITCOMMONCONTROLSEX);
#define ImageList_AddIcon(himl,hicon) ImageList_ReplaceIcon(himl,-1,hicon)
HIMAGELIST ImageList_Create(int,int,UINT,int,int);
BOOL ImageList_Destroy(HIMAGELIST);
int ImageList_GetImageCount(HIMAGELIST);
int ImageList_Add(HIMAGELIST,HBITMAP,HBITMAP);
int ImageList_ReplaceIcon(HIMAGELIST,int,HICON);
COLORREF ImageList_SetBkColor(HIMAGELIST,COLORREF);
COLORREF ImageList_GetBkColor(HIMAGELIST himl);
BOOL ImageList_SetOverlayImage(HIMAGELIST,int,int);
BOOL ImageList_Draw(HIMAGELIST,int,HDC,int,int,UINT);
BOOL ImageList_Replace(HIMAGELIST,int,HBITMAP,HBITMAP);
int ImageList_AddMasked(HIMAGELIST,HBITMAP,COLORREF);
BOOL ImageList_DrawEx(HIMAGELIST,int,HDC,int,int,int,int,COLORREF,COLORREF,UINT);
BOOL ImageList_Remove(HIMAGELIST,int);
HICON ImageList_GetIcon(HIMAGELIST,int,UINT);
BOOL ImageList_BeginDrag(HIMAGELIST,int,int,int);
void ImageList_EndDrag(VOID);
BOOL ImageList_DragEnter(HWND,int,int);
BOOL ImageList_DragLeave(HWND);
BOOL ImageList_DragMove(int,int);
BOOL ImageList_SetDragCursorImage(HIMAGELIST,int,int,int);
BOOL ImageList_DragShowNolock(BOOL);
HIMAGELIST ImageList_GetDragImage(POINT *,POINT *);
BOOL ImageList_GetIconSize(HIMAGELIST,int *,int *);
BOOL ImageList_SetIconSize(HIMAGELIST,int,int);
BOOL ImageList_GetImageInfo(HIMAGELIST,int,IMAGEINFO *);
HIMAGELIST ImageList_Merge(HIMAGELIST,int,HIMAGELIST,int,int,int);
BOOL WINAPI ImageList_SetImageCount(HIMAGELIST,UINT);
HWND CreateToolbarEx(HWND,DWORD,UINT,int,HINSTANCE,UINT,LPCTBBUTTON,int,int,int,int,int,UINT);
HBITMAP CreateMappedBitmap(HINSTANCE,int,UINT,LPCOLORMAP,int);
void MenuHelp(UINT,WPARAM,LPARAM,HMENU,HINSTANCE,HWND,UINT *);
BOOL ShowHideMenuCtl(HWND,UINT,LPINT);
void GetEffectiveClientRect(HWND,LPRECT,LPINT);
BOOL MakeDragList(HWND);
void DrawInsert(HWND,HWND,int);
int LBItemFromPt(HWND,POINT,BOOL);
HWND CreateUpDownControl(DWORD,int,int,int,int,HWND,int,HINSTANCE,HWND,int,int,int);
DWORD CommDlgExtendedError(VOID);
BOOL SetWaitableTimer(HANDLE,const LARGE_INTEGER *,LONG,PTIMERAPCROUTINE,LPVOID,BOOL);
BOOL CancelWaitableTimer(HANDLE);
HANDLE WINAPI CreateWaitableTimerA(LPSECURITY_ATTRIBUTES,BOOL,LPCSTR);
HANDLE WINAPI CreateWaitableTimerW(LPSECURITY_ATTRIBUTES,BOOL,LPCWSTR);
#define WSB_PROP_CYVSCROLL	1
#define WSB_PROP_CXHSCROLL	2
#define WSB_PROP_CYHSCROLL	4
#define WSB_PROP_CXVSCROLL	8
#define WSB_PROP_CXHTHUMB	0x10
#define WSB_PROP_CYVTHUMB	0x20
#define WSB_PROP_VBKGCOLOR	0x40
#define WSB_PROP_HBKGCOLOR	0x80
#define WSB_PROP_VSTYLE	0x100
#define WSB_PROP_HSTYLE	0x200
#define WSB_PROP_WINSTYLE	0x400
#define WSB_PROP_PALETTE	0x800
#define WSB_PROP_MASK	0xFFF
#define FSB_FLAT_MODE	2
#define FSB_ENCARTA_MODE	1
#define FSB_REGULAR_MODE	0
BOOL WINAPI FlatSB_EnableScrollBar(HWND,int,UINT);
BOOL WINAPI FlatSB_ShowScrollBar(HWND,int,BOOL);
BOOL WINAPI FlatSB_GetScrollRange(HWND,int,LPINT,LPINT);
BOOL WINAPI FlatSB_GetScrollInfo(HWND,int,LPSCROLLINFO);
int WINAPI FlatSB_GetScrollPos(HWND,int);
BOOL WINAPI FlatSB_GetScrollProp(HWND,int,LPINT);
#define FlatSB_GetScrollPropPtr FlatSB_GetScrollProp
int WINAPI FlatSB_SetScrollPos(HWND,int,int,BOOL);
int WINAPI FlatSB_SetScrollInfo(HWND,int,LPSCROLLINFO,BOOL);
int WINAPI FlatSB_SetScrollRange(HWND,int,int,int,BOOL);
BOOL WINAPI FlatSB_SetScrollProp(HWND,UINT,int,BOOL);
#define FlatSB_SetScrollPropPtr FlatSB_SetScrollProp
BOOL WINAPI InitializeFlatSB(HWND);
HRESULT WINAPI UninitializeFlatSB(HWND);
#define Button_GetTextMargin(h,p) (BOOL)SNDMSG((h),BCM_GETTEXTMARGIN,0,(LPARAM)(p))
#define Button_SetTextMargin(h, p) (BOOL)SNDMSG((h),BCM_SETTEXTMARGIN,0, (LPARAM)(p))
#define Button_GetImageList(h,p) (BOOL)SNDMSG((h),BCM_GETIMAGELIST,0,(LPARAM)(p))
#define Button_SetImageList(hwnd, pbuttonImagelist) (BOOL)SNDMSG((hwnd), BCM_SETIMAGELIST, 0, (LPARAM)(pbuttonImagelist))
#define Button_GetIdealSize(hwnd, psize) (BOOL)SNDMSG((hwnd), BCM_GETIDEALSIZE, 0, (LPARAM)(psize))
#define Edit_SetCueBannerText(hwnd, lpcwText) (BOOL)SNDMSG((hwnd), EM_SETCUEBANNER, 0, (LPARAM)(lpcwText))
#define Edit_GetCueBannerText(h,lpwText, cchText) (BOOL)SNDMSG((h),EM_GETCUEBANNER, (WPARAM)(lpwText), (LPARAM)(cchText))
#define Edit_ShowBalloonTip(hwnd, peditballoontip) (BOOL)SNDMSG((hwnd), EM_SHOWBALLOONTIP, 0, (LPARAM)(peditballoontip))
#define Edit_HideBalloonTip(hwnd) (BOOL)SNDMSG((hwnd), EM_HIDEBALLOONTIP, 0, 0)
#define DateTime_GetSystemtime(hdp, pst) (DWORD)SNDMSG(hdp, DTM_GETSYSTEMTIME, 0, (LPARAM)(pst))
#define DateTime_SetSystemtime(hdp, gd, pst) (BOOL)SNDMSG(hdp, DTM_SETSYSTEMTIME, (WPARAM)(gd), (LPARAM)(pst))
#define DateTime_GetRange(hdp, rgst) (DWORD)SNDMSG(hdp, DTM_GETRANGE, 0, (LPARAM)(rgst))
#define DateTime_SetRange(hdp, gd, rgst) (BOOL)SNDMSG(hdp, DTM_SETRANGE, (WPARAM)(gd), (LPARAM)(rgst))
#define Animate_Create(hP,id,S,I) CreateWindow(ANIMATE_CLASS,NULL,S,0,0,0,0,hP,(HMENU)(id),I,NULL)
#define Animate_Open(hw,Name) SendMessage(hw,ACM_OPEN,0,(LPARAM)(LPTSTR)(Name))
#define Animate_Play(h,f,t,r) SendMessage(h,ACM_PLAY,(WPARAM)(r),(LPARAM)MAKELONG(f,t))
#define Animate_Stop(hw) SendMessage(hw,ACM_STOP,0,0)
#define Animate_Close(h) Animate_Open(h,NULL)
#define Animate_Seek(h,f) Animate_Play(h,f,f,1)
#define PropSheet_AddPage(h,hp) SendMessage(h,PSM_ADDPAGE,0,(LPARAM)hp)
#define PropSheet_Apply(h) SendMessage(h,PSM_APPLY,0,0)
#define PropSheet_CancelToClose(h) SendMessage(h,PSM_CANCELTOCLOSE,0,0)
#define PropSheet_Changed(h,w) SendMessage(h,PSM_CHANGED,(WPARAM)w,0)
#define PropSheet_GetCurrentPageHwnd(h) SendMessage(h,PSM_GETCURRENTPAGEHWND,0,0)
#define PropSheet_GetTabControl(h) SendMessage(h,PSM_GETTABCONTROL,0,0)
#define PropSheet_IsDialogMessage(h,M) SendMessage(h,PSM_ISDIALOGMESSAGE,0,(LPARAM)M)
#define PropSheet_PressButton(h,B) SendMessage(h,PSM_PRESSBUTTON,(WPARAM)B,0)
#define PropSheet_QuerySiblings(h,p1,p2) SendMessage(h,PSM_QUERYSIBLINGS,(WPARAM)p1,(LPARAM)p2)
#define PropSheet_RebootSystem(h) SendMessage(h,PSM_REBOOTSYSTEM,0,0)
#define PropSheet_RemovePage(h,i,p) SendMessage(h,PSM_REMOVEPAGE,(WPARAM)(int)i,(LPARAM)p)
#define PropSheet_RestartWindows(h) SendMessage(h,PSM_RESTARTWINDOWS,0,0)
#define PropSheet_SetCurSel(hDlg,hpage,index) SendMessage(hDlg,PSM_SETCURSEL,(WPARAM)index,(LPARAM)hpage)
#define PropSheet_SetCurSelByID(hPropSheetDlg,id) SendMessage(hPropSheetDlg,PSM_SETCURSELID,0,(LPARAM)id)
#define PropSheet_SetFinishText(h,T) SendMessage(h,PSM_SETFINISHTEXT,0,(LPARAM)T)
#define PropSheet_SetTitle(h,S,T) SendMessage(h,PSM_SETTITLE,(WPARAM)S,(LPARAM)T)
#define PropSheet_SetWizButtons(h,F) SendMessage(h,PSM_SETWIZBUTTONS,0,(LPARAM)F)
#define PropSheet_UnChanged(hDlg,hP) SendMessage(hDlg,PSM_UNCHANGED,(WPARAM)(HWND)hP,0)
#define Header_DeleteItem(hHD,i) (BOOL)SendMessage((hHD),HDM_DELETEITEM,(WPARAM)(i),0)
#define Header_GetItem(hHD,i,p) (BOOL)SendMessage((hHD),HDM_GETITEM,(WPARAM)(i),(LPARAM)(p))
#define Header_GetUnicodeFormat(h) (BOOL)SendMessage(h,HDM_GETUNICODEFORMAT,0,0)
#define Header_SetUnicodeFormat(h,f) (BOOL)SendMessage(h,HDM_SETUNICODEFORMAT,f,0)
#define Header_GetItemCount(hHD) (int)SendMessage((hHD),HDM_GETITEMCOUNT,0,0)
#define Header_InsertItem(hHD,i,phdi) (int)SendMessage((hHD),HDM_INSERTITEM,(WPARAM)(i),(LPARAM)(phdi))
#define Header_Layout(hHD,p) (BOOL)SendMessage((hHD),HDM_LAYOUT,0,(LPARAM)(p))
#define Header_SetItem(hHD,i,p) (BOOL)SendMessage((hHD),HDM_SETITEM,(WPARAM)(i),(LPARAM)(p))
#define ListView_MapIDToIndex(hwnd, id) (UINT)SNDMSG((hwnd), LVM_MAPIDTOINDEX, (WPARAM)id, (LPARAM)0)
#define ListView_MapIndexToID(hwnd, index) (UINT)SNDMSG((hwnd), LVM_MAPINDEXTOID, (WPARAM)index, (LPARAM)0)
#define ListView_CancelEditLabel(hwnd) (VOID)SNDMSG((hwnd), LVM_CANCELEDITLABEL, (WPARAM)0, (LPARAM)0)
#define ListView_SetOutlineColor(hwnd, color) (COLORREF)SNDMSG((hwnd), LVM_SETOUTLINECOLOR, (WPARAM)0, (LPARAM)(COLORREF)(color))
#define ListView_GetOutlineColor(hwnd) (COLORREF)SNDMSG((hwnd), LVM_GETOUTLINECOLOR, 0, 0)
#define ListView_IsGroupViewEnabled(h) (BOOL)SNDMSG((h), LVM_ISGROUPVIEWENABLED, 0, 0)
#define ListView_GetSelectedColumn(hwnd) (UINT)SNDMSG((hwnd), LVM_GETSELECTEDCOLUMN, 0, 0)
#define ListView_SetInfoTip(hwndLV, plvInfoTip) (BOOL)SNDMSG((hwndLV), LVM_SETINFOTIP, (WPARAM)0, (LPARAM)plvInfoTip)
#define ListView_GetInsertMarkColor(h) (COLORREF)SNDMSG((h),LVM_GETINSERTMARKCOLOR,(WPARAM)0, (LPARAM)0)
#define ListView_SetInsertMarkColor(hwnd, color) (COLORREF)SNDMSG((hwnd), LVM_SETINSERTMARKCOLOR, (WPARAM)0, (LPARAM)(COLORREF)(color))
#define ListView_GetInsertMarkRect(h,rc) (int)SNDMSG((h),LVM_GETINSERTMARKRECT,(WPARAM)0,(LPARAM)(LPRECT)(rc))
#define ListView_InsertMarkHitTest(h,p,lvim) (int)SNDMSG((h),LVM_INSERTMARKHITTEST,(WPARAM)(LPPOINT)(p),(LPARAM)(LPLVINSERTMARK)(lvim))
#define ListView_GetInsertMark(hwnd, lvim) (BOOL)SNDMSG((hwnd), LVM_GETINSERTMARK, (WPARAM) 0, (LPARAM) (lvim))
#define ListView_SetInsertMark(hwnd, lvim) (BOOL)SNDMSG((hwnd), LVM_SETINSERTMARK, (WPARAM) 0, (LPARAM) (lvim))
#define ListView_GetTileInfo(hwnd, pti) SNDMSG((hwnd), LVM_GETTILEINFO, 0, (LPARAM)pti)
#define ListView_SetTileInfo(hwnd, pti) SNDMSG((hwnd), LVM_SETTILEINFO, 0, (LPARAM)pti)
#define ListView_GetTileViewInfo(hwnd, ptvi) SNDMSG((hwnd), LVM_GETTILEVIEWINFO, 0, (LPARAM)ptvi)
#define ListView_SetTileViewInfo(hwnd, ptvi) SNDMSG((hwnd), LVM_SETTILEVIEWINFO, 0, (LPARAM)ptvi)
#define ListView_HasGroup(hwnd, dwGroupId) SNDMSG((hwnd), LVM_HASGROUP, dwGroupId, 0)
#define ListView_RemoveAllGroups(hwnd) SNDMSG((hwnd), LVM_REMOVEALLGROUPS, 0, 0)
#define ListView_InsertGroupSorted(hwnd, structInsert) SNDMSG((hwnd), LVM_INSERTGROUPSORTED, (WPARAM)structInsert, 0)
#define ListView_SortGroups(hwnd, _pfnGroupCompate, _plv) SNDMSG((hwnd), LVM_SORTGROUPS, (WPARAM)_pfnGroupCompate, (LPARAM)_plv)
#define ListView_EnableGroupView(hwnd, fEnable) SNDMSG((hwnd), LVM_ENABLEGROUPVIEW, (WPARAM)fEnable, 0)
#define ListView_GetGroupMetrics(hwnd, pGroupMetrics) SNDMSG((hwnd), LVM_GETGROUPMETRICS, 0, (LPARAM)pGroupMetrics)
#define ListView_SetGroupMetrics(hwnd, pGroupMetrics) SNDMSG((hwnd),LVM_SETGROUPMETRICS, 0, (LPARAM)pGroupMetrics)
#define ListView_MoveItemToGroup(hwnd, idItemFrom, idGroupTo) SNDMSG((hwnd), LVM_MOVEITEMTOGROUP, (WPARAM)idItemFrom, (LPARAM)idGroupTo)
#define ListView_MoveGroup(hwnd, iGroupId, toIndex) SNDMSG((hwnd), LVM_MOVEGROUP, (WPARAM)iGroupId, (LPARAM)toIndex)
#define ListView_RemoveGroup(hwnd, iGroupId) SNDMSG((hwnd), LVM_REMOVEGROUP, (WPARAM)iGroupId, 0)
#define ListView_GetGroupInfo(hwnd, iGroupId, pgrp) SNDMSG((hwnd),LVM_GETGROUPINFO, (WPARAM)iGroupId, (LPARAM)pgrp)
#define ListView_SetGroupInfo(hwnd, iGroupId, pgrp) SNDMSG((hwnd), LVM_SETGROUPINFO, (WPARAM)iGroupId, (LPARAM)pgrp)
#define ListView_InsertGroup(hwnd, index, pgrp) SNDMSG((hwnd), LVM_INSERTGROUP, (WPARAM)index, (LPARAM)pgrp)
#define ListView_SetTileWidth(h,cpWidth) SNDMSG((h), LVM_SETTILEWIDTH,(WPARAM)cpWidth,0)
#define ListView_SetSelectedColumn(h,iCol) SNDMSG((h), LVM_SETSELECTEDCOLUMN, (WPARAM)iCol, 0)
#define ListView_ApproximateViewRect(h,W,H,C) (DWORD)SNDMSG((h),LVM_APPROXIMATEVIEWRECT,C,MAKELPARAM(W,H))
#define ListView_SetView(hwnd, iView) (DWORD)SNDMSG((hwnd), LVM_SETVIEW, (WPARAM)(DWORD)iView, 0)
#define ListView_GetColumnOrderArray(h,iCount, pi) (BOOL)SendMessage((h),LVM_GETCOLUMNORDERARRAY,(WPARAM)(iCount),(LPARAM)(LPINT)(pi))
#define ListView_GetExtendedListViewStyle(h) (DWORD)SendMessage((h),LVM_GETEXTENDEDLISTVIEWSTYLE, 0, 0)
#define ListView_GetHeader(hwnd) (HWND)SendMessage((hwnd), LVM_GETHEADER, 0, 0L)
#define ListView_GetHotCursor(hwnd) (HCURSOR)SendMessage((hwnd), LVM_GETHOTCURSOR, 0, 0)
#define ListView_GetHotItem(hwnd) (int)SendMessage((hwnd), LVM_GETHOTITEM, 0, 0)
#define ListView_SetColumnOrderArray(hwnd, iCount, pi) (BOOL)SendMessage((hwnd), LVM_SETCOLUMNORDERARRAY, (WPARAM)(iCount), (LPARAM)(LPINT)(pi))
#define ListView_SetExtendedListViewStyle(h,dw) (DWORD)SNDMSG((h),LVM_SETEXTENDEDLISTVIEWSTYLE,0,dw)
#define ListView_SetExtendedListViewStyleEx(h,M,dw) (DWORD)SNDMSG(h,LVM_SETEXTENDEDLISTVIEWSTYLE,M,dw)
#define ListView_SetHotItem(hwnd, i) (int)SendMessage((hwnd),LVM_SETHOTITEM, (WPARAM)(i),0)
#define ListView_SetHotCursor(hwnd, hcur) (HCURSOR)SendMessage((hwnd), LVM_SETHOTCURSOR, 0, (LPARAM)(hcur))
#define ListView_SetIconSpacing(hwndLV, cx, cy) (DWORD)SendMessage((hwndLV), LVM_SETICONSPACING,0, MAKELONG(cx,cy))
#define ListView_SetWorkAreas(h,WA,prc) (BOOL)SNDMSG((h),LVM_SETWORKAREAS,(WPARAM)(int)(WA),(LPARAM)(RECT *)(prc))
#define ListView_SetCheckState(h,i,f) ListView_SetItemState(h,i,INDEXTOSTATEIMAGEMASK((f)?2:1),LVIS_STATEIMAGEMASK)
#define ListView_GetCheckState(h,i) ((((UINT)(SNDMSG((h),LVM_GETITEMSTATE,(WPARAM)(i),LVIS_STATEIMAGEMASK))) >> 12) -1)
#define ListView_GetWorkAreas(hwnd, nWorkAreas, prc) (BOOL)SNDMSG((hwnd),LVM_GETWORKAREAS,(WPARAM)(int)(nWorkAreas),(LPARAM)(RECT *)(prc))
#define ListView_GetNumberOfWorkAreas(hwnd, pnWorkAreas) (BOOL)SNDMSG((hwnd),LVM_GETNUMBEROFWORKAREAS,0,(LPARAM)(UINT *)(pnWorkAreas))
#define ListView_GetSelectionMark(hwnd) (int)SNDMSG((hwnd),LVM_GETSELECTIONMARK,0,0)
#define ListView_SetSelectionMark(hwnd, i) (int)SNDMSG((hwnd),LVM_SETSELECTIONMARK,0,(LPARAM)(i))
#define ListView_GetSubItemRect(h,i,SI,code,prc) (BOOL)SNDMSG((h),LVM_GETSUBITEMRECT,(WPARAM)(int)(i), ((prc) ? ((((LPRECT)(prc))->top=SI),(((LPRECT)(prc))->left = code), (LPARAM)(prc)) : (LPARAM)(LPRECT)NULL))
#define ListView_SubItemHitTest(h,p) (int)SNDMSG((h),LVM_SUBITEMHITTEST,0,(LPARAM)(LPLVHITTESTINFO)(p))
#define ListView_SetHoverTime(hwndLV, dwHoverTimeMs) (DWORD)SNDMSG((hwndLV),LVM_SETHOVERTIME,0,(LPARAM)(dwHoverTimeMs))
#define ListView_GetHoverTime(hwndLV) (DWORD)SNDMSG((hwndLV),LVM_GETHOVERTIME,0,0)
#define ListView_SetToolTips(hwndLV, hwndNewHwnd) (HWND)SNDMSG((hwndLV),LVM_SETTOOLTIPS,(WPARAM)(hwndNewHwnd),0)
#define ListView_GetToolTips(hwndLV) (HWND)SNDMSG((hwndLV),LVM_GETTOOLTIPS,0,0)
#define ListView_SortItemsEx(hwndLV, _pfnCompare, _lPrm) (BOOL)SNDMSG((hwndLV),LVM_SORTITEMSEX,(WPARAM)(LPARAM)(_lPrm),(LPARAM)(PFNLVCOMPARE)(_pfnCompare))
#define ListView_SetBkImage(hwnd, plvbki) (BOOL)SNDMSG((hwnd),LVM_SETBKIMAGE,0,(LPARAM)(plvbki))
#define ListView_GetBkImage(hwnd, plvbki) (BOOL)SNDMSG((hwnd),LVM_GETBKIMAGE,0,(LPARAM)(plvbki))
#define ListView_Arrange(hLV,c) SendMessage((hLV),LVM_ARRANGE,(WPARAM)(c),0)
#define ListView_CreateDragImage(h,i,l) SendMessage((h),LVM_CREATEDRAGIMAGE,(WPARAM)(i),(LPARAM)(l))
#define ListView_DeleteAllItems(h) SendMessage(h,LVM_DELETEALLITEMS,0,0)
#define ListView_DeleteColumn(h,iCol) SendMessage((h),LVM_DELETECOLUMN,(WPARAM)(iCol),0)
#define ListView_DeleteItem(h,iItem) SendMessage(h,LVM_DELETEITEM,(WPARAM)iItem,0)
#define ListView_EditLabel(hLV,i) (HWND)SendMessage((hLV),LVM_EDITLABEL,(WPARAM)i,0)
#define ListView_EnsureVisible(hLV,i,fOK) SendMessage(hLV,LVM_ENSUREVISIBLE,(WPARAM)i,MAKELPARAM((fOK),0))
#define ListView_FindItem(hwnd,i,p) SendMessage(hwnd,LVM_FINDITEM,(WPARAM)i,(LPARAM)p)
#define ListView_GetBkColor(hwnd) SendMessage((HWND)hwnd,LVM_GETBKCOLOR,0,0)
#define ListView_GetCallbackMask(h) SendMessage(h,LVM_GETCALLBACKMASK,0,0)
#define ListView_GetColumn(hwnd,iCol,pcol) SendMessage((hwnd),LVM_GETCOLUMN,(WPARAM)(iCol),(LPARAM)(pcol))
#define ListView_GetColumnWidth(h,iCol) SendMessage((h),LVM_GETCOLUMNWIDTH,(WPARAM)(iCol),0)
#define ListView_GetCountPerPage(h) SendMessage((h),LVM_GETCOUNTPERPAGE,0,0)
#define ListView_GetEditControl(h) (HWND)SendMessage((h),LVM_GETEDITCONTROL,0,0)
#define ListView_GetImageList(h,iIL) SendMessage(h,LVM_GETIMAGELIST,(WPARAM)iIL,0)
#define ListView_GetISearchString(h,l) SendMessage((h),LVM_GETISEARCHSTRING,0,(LPARAM)l)
#define ListView_GetItem(h,p) SendMessage(h,LVM_GETITEM,0,(LPARAM)(p))
#define ListView_GetItemCount(h) SendMessage(h,LVM_GETITEMCOUNT,0,0)
#define ListView_GetItemPosition(h,i,ppt) SendMessage(h,LVM_GETITEMPOSITION,(WPARAM)(int)i,(LPARAM)ppt)
#define ListView_GetItemRect(h,i,p,c) SendMessage(h,LVM_GETITEMRECT,(WPARAM)i,((p) ? (((RECT *)(p))->left=(c),(LPARAM)(p)):(LPARAM)NULL))
#define ListView_GetItemSpacing(hLV,f) SendMessage((hLV),LVM_GETITEMSPACING,f,0)
#define ListView_GetItemState(hLV,i,m) SendMessage((hLV),LVM_GETITEMSTATE,(WPARAM)i,(LPARAM)m)
#define ListView_GetItemText(hLV,i,iS,T,c) {LV_ITEM _gnu_l;_gnu_l.iSubItem=iS;_gnu_l.cchTextMax=c;_gnu_l.pszText=(TCHAR *)T;SendMessage((hLV),LVM_GETITEMTEXT,(WPARAM)i,(LPARAM)&_gnu_l);}
#define ListView_GetNextItem(h,S,f) SendMessage(h,LVM_GETNEXTITEM,(WPARAM)S,(LPARAM)f)
#define ListView_GetOrigin(hLV,ppt) SendMessage((hLV),LVM_GETORIGIN,(WPARAM)0,(LPARAM)(ppt))
#define ListView_GetSelectedCount(h) SendMessage((h),LVM_GETSELECTEDCOUNT,0,0)
#define ListView_GetStringWidth(h,psz) SendMessage(h,LVM_GETSTRINGWIDTH,0,(LPARAM)psz)
#define ListView_GetTextBkColor(h) SendMessage((h),LVM_GETTEXTBKCOLOR,0,0)
#define ListView_GetTextColor(h) SendMessage((h),LVM_GETTEXTCOLOR,0,0)
#define ListView_GetTopIndex(h) SendMessage((h),LVM_GETTOPINDEX,0,0)
#define ListView_GetViewRect(h,prc) SendMessage((h),LVM_GETVIEWRECT,0,(LPARAM)(prc))
#define ListView_HitTest(hLV,pinfo) SendMessage(hLV,LVM_HITTEST,0,(LPARAM)pinfo)
#define ListView_InsertColumn(hwnd,iCol,pcol) SendMessage((hwnd),LVM_INSERTCOLUMN,(WPARAM)(int)(iCol),(LPARAM)(pcol))
#define ListView_InsertItem(hwnd,pitem) SendMessage(hwnd,LVM_INSERTITEM,0,(LPARAM)pitem)
#define ListView_RedrawItems(hLV,iFirst,iLast) SendMessage((hLV),LVM_REDRAWITEMS,(WPARAM)iFirst,(LPARAM)iLast)
#define ListView_Scroll(hLV,dx,dy) SendMessage((hLV),LVM_SCROLL,(WPARAM)dx,(LPARAM)dy)
#define ListView_SetBkColor(h,clrBk) SendMessage(h,LVM_SETBKCOLOR,0,(LPARAM)(COLORREF)clrBk)
#define ListView_SetCallbackMask(h,m) SendMessage(h,LVM_SETCALLBACKMASK,(WPARAM)(UINT)(m),0)
#define ListView_SetColumn(h,iCol,pcol) SendMessage((h),LVM_SETCOLUMN,(WPARAM)(iCol),(LPARAM)(pcol))
#define ListView_SetColumnWidth(hwnd,iCol,cx) SendMessage((hwnd),LVM_SETCOLUMNWIDTH,(WPARAM)(int)(iCol),MAKELPARAM((cx),0))
#define ListView_SetImageList(hwnd,himl,iImageList) (HIMAGELIST)SendMessage(hwnd,LVM_SETIMAGELIST,(WPARAM)(iImageList),(LPARAM)(HIMAGELIST)(himl))
#define ListView_SetItem(hwnd,pitem) SendMessage(hwnd,LVM_SETITEM,0,(LPARAM)pitem)
#define ListView_SetItemCount(hLV,cItems) SendMessage((hLV),LVM_SETITEMCOUNT,(WPARAM)cItems,0)
#define ListView_SetItemPosition(hLV,i,x,y) SendMessage(hLV,LVM_SETITEMPOSITION,(WPARAM)(int)(i),MAKELPARAM((x),(y)))
#define ListView_SetItemPosition32(hLV,i,x,y) {POINT ptNewPos={x,y};SendMessage((hLV),LVM_SETITEMPOSITION32,(WPARAM)(i),(LPARAM)&ptNewPos);}
#define ListView_SetItemState(hLV,i,d,m) {LV_ITEM _gnu_l;_gnu_l.stateMask=m;_gnu_l.state=d;SendMessage((hLV),LVM_SETITEMSTATE,(WPARAM)(i),(LPARAM)&_gnu_l);}
#define ListView_SetItemText(hLV,i,iS,T) {LV_ITEM _gnu_l;_gnu_l.iSubItem=iS;_gnu_l.pszText=T;SendMessage((hLV),LVM_SETITEMTEXT,(WPARAM)(i),(LPARAM)&_gnu_l);}
#define ListView_SetTextBkColor(h,c) SendMessage((h),LVM_SETTEXTBKCOLOR,0,(LPARAM)(c))
#define ListView_SetTextColor(h,c) SendMessage((h),LVM_SETTEXTCOLOR,0,(LPARAM)(c))
#define ListView_SortItems(hLV,p,l) SendMessage((hLV),LVM_SORTITEMS,(WPARAM)l,(LPARAM)p)
#define ListView_Update(hLV,i) SendMessage((hLV),LVM_UPDATE,(WPARAM)i,0)
#define ListView_GetUnicodeFormat(h) (BOOL)SendMessage((h),LVM_GETUNICODEFORMAT,0,0)
#define ListView_SetUnicodeFormat(h,f) (BOOL)SendMessage((h),LVM_SETUNICODEFORMAT,(WPARAM)f,0)
#define TreeView_GetScrollTime(h) (UINT)SendMessage(h,TVM_GETSCROLLTIME,0,0)
#define TreeView_SetItemHeight(h,iHeight) (int)SendMessage((h), TVM_SETITEMHEIGHT,(WPARAM)(iHeight), 0)
#define TreeView_GetItemHeight(h) (int)SendMessage((h),TVM_GETITEMHEIGHT, 0, 0)
#define TreeView_SetItemState(h,hti,d,m) {TVITEM TVi;TVi.mask=TVIF_STATE;TVi.hItem = hti;TVi.stateMask=m;TVi.state=d;SNDMSG((h),TVM_SETITEM,0,(LPARAM)(TV_ITEM *)&TVi);}
#define TreeView_SetBkColor(h,clr) (COLORREF)SendMessage((h),TVM_SETBKCOLOR, 0, (LPARAM)(clr))
#define TreeView_SetTextColor(hwnd, clr) (COLORREF)SendMessage((hwnd), TVM_SETTEXTCOLOR, 0, (LPARAM)(clr))
#define TreeView_GetBkColor(hwnd) (COLORREF)SendMessage((hwnd), TVM_GETBKCOLOR, 0, 0)
#define TreeView_GetTextColor(hwnd) (COLORREF)SendMessage((hwnd),TVM_GETTEXTCOLOR, 0, 0)
#define TreeView_SetScrollTime(hwnd, uTime) (UINT)SendMessage((hwnd), TVM_SETSCROLLTIME, uTime, 0)
#define TreeView_SetInsertMarkColor(hwnd, clr) (COLORREF)SendMessage((hwnd),TVM_SETINSERTMARKCOLOR, 0, (LPARAM)(clr))
#define TreeView_GetInsertMarkColor(hwnd) (COLORREF)SendMessage((hwnd), TVM_GETINSERTMARKCOLOR, 0, 0)
#define TreeView_InsertItem(h,l) (HTREEITEM)SendMessage((h),TVM_INSERTITEM,0,(LPARAM)(l))
#define TreeView_DeleteItem(h,i) (HTREEITEM)SendMessage((h),TVM_DELETEITEM,0,(LPARAM)(i))
#define TreeView_DeleteAllItems(h) SendMessage((h),TVM_DELETEITEM,0,(LPARAM)TVI_ROOT)
#define TreeView_Expand(h,i,c) SendMessage((h),TVM_EXPAND,(WPARAM)c,(LPARAM)(i))
#define TreeView_GetLineColor(h) (COLORREF)SendMessage(h,TVM_GETLINECOLOR,0,0)
#define TreeView_SetLineColor(h,c) (COLORREF)SendMessage(h,TVM_SETLINECOLOR,0,(LPARAM)c)
#define TreeView_GetCheckState(h,i) ((((UINT)(SendMessage(h,TVM_GETITEMSTATE,(WPARAM)i,TVIS_STATEIMAGEMASK))) >> 12) -1)
#define TreeView_GetItemState(h,i,m) (UINT)SendMessage(h,TVM_GETITEMSTATE,(WPARAM)i,(LPARAM)m)
#define TreeView_SetCheckState(h,i,C) TreeView_SetItemState(h,i,INDEXTOSTATEIMAGEMASK((C)?2:1),TVIS_STATEIMAGEMASK)
#define TreeView_GetItemRect(h,hitem,prc,c) (*(HTREEITEM *)prc=(hitem),(BOOL)SendMessage((h),TVM_GETITEMRECT,(WPARAM)(c),(LPARAM)(RECT *)(prc)))
#define TreeView_GetCount(h) SendMessage((h),TVM_GETCOUNT,0,0)
#define TreeView_GetIndent(h) SendMessage((h),TVM_GETINDENT,0,0)
#define TreeView_SetIndent(h,i) SendMessage((h),TVM_SETINDENT,(WPARAM)i,0)
#define TreeView_GetImageList(h,i) SendMessage((h),TVM_GETIMAGELIST,i,0)
#define TreeView_SetImageList(h,hi,i) SendMessage((h),TVM_SETIMAGELIST,i,(LPARAM)(hi))
#define TreeView_GetNextItem(h,hi,c) (HTREEITEM)SendMessage((h),TVM_GETNEXTITEM,(WPARAM)c,(LPARAM)(hi))
#define TreeView_GetChild(h,i) TreeView_GetNextItem(h,i,TVGN_CHILD)
#define TreeView_GetNextSibling(h,i) TreeView_GetNextItem(h,i,TVGN_NEXT)
#define TreeView_GetPrevSibling(h,i) TreeView_GetNextItem(h,i,TVGN_PREVIOUS)
#define TreeView_GetParent(h,i) TreeView_GetNextItem(h,i,TVGN_PARENT)
#define TreeView_GetFirstVisible(h) TreeView_GetNextItem(h,NULL,TVGN_FIRSTVISIBLE)
#define TreeView_GetNextVisible(h,i) TreeView_GetNextItem(h,i,TVGN_NEXTVISIBLE)
#define TreeView_GetPrevVisible(h,i) TreeView_GetNextItem(h,i,TVGN_PREVIOUSVISIBLE)
#define TreeView_GetSelection(h) TreeView_GetNextItem(h,NULL,TVGN_CARET)
#define TreeView_GetDropHilight(h) TreeView_GetNextItem(h,NULL,TVGN_DROPHILITE)
#define TreeView_GetRoot(h) (HTREEITEM)TreeView_GetNextItem(h,NULL,TVGN_ROOT)
#define TreeView_Select(h,i,c) SendMessage((h),TVM_SELECTITEM,(WPARAM)c,(LPARAM)(i))
#define TreeView_SelectItem(h,i) TreeView_Select(h,i,TVGN_CARET)
#define TreeView_SelectDropTarget(h,i) TreeView_Select(h,i,TVGN_DROPHILITE)
#define TreeView_SelectSetFirstVisible(h,p) TreeView_Select(h,p,TVGN_FIRSTVISIBLE)
#define TreeView_GetItem(h,p) SendMessage((h),TVM_GETITEM,0,(LPARAM)(TV_ITEM *)(p))
#define TreeView_SetItem(h,p) (int)SendMessage((h),TVM_SETITEM,0,(LPARAM)(TV_ITEM *)(p))
#define TreeView_EditLabel(h,i) (HWND)SendMessage((h),TVM_EDITLABEL,0,(LPARAM)(HTREEITEM)(i))
#define TreeView_GetEditControl(h) (HWND)SendMessage((h),TVM_GETEDITCONTROL,0,0)
#define TreeView_GetVisibleCount(h) (unsigned int)SendMessage((h),TVM_GETVISIBLECOUNT,0,0)
#define TreeView_HitTest(h,l) (HTREEITEM)SendMessage((h),TVM_HITTEST,0,(LPARAM)(LPTV_HITTESTINFO)(l))
#define TreeView_CreateDragImage(hwnd,hitem) (HIMAGELIST)SendMessage((hwnd),TVM_CREATEDRAGIMAGE,0,(LPARAM)(hitem))
#define TreeView_SortChildren(h,i,r) (BOOL)SendMessage((h),TVM_SORTCHILDREN,(WPARAM)r,(LPARAM)(i))
#define TreeView_EnsureVisible(h,i) (BOOL)SendMessage((h),TVM_ENSUREVISIBLE,0,(LPARAM)(i))
#define TreeView_SortChildrenCB(h,p,r) SendMessage((h),TVM_SORTCHILDRENCB,(WPARAM)r,(LPARAM)(p))
#define TreeView_EndEditLabelNow(h,f) SendMessage((h),TVM_ENDEDITLABELNOW,(WPARAM)f,0)
#define TreeView_GetISearchString(h,lpsz) SendMessage((h),TVM_GETISEARCHSTRING,0,(LPARAM)(LPTSTR)lpsz)
#define TabCtrl_GetImageList(h) SendMessage((h),TCM_GETIMAGELIST,0,0)
#define TabCtrl_SetImageList(hwnd,himl) SendMessage((hwnd),TCM_SETIMAGELIST,0,(LPARAM)(himl))
#define TabCtrl_GetItemCount(hwnd) SendMessage((hwnd),TCM_GETITEMCOUNT,0,0)
#define TabCtrl_GetItem(h,i,p) SendMessage(h,TCM_GETITEM,(WPARAM)i,(LPARAM)(TC_ITEM *)(p))
#define TabCtrl_SetItem(h,i,p) SendMessage((h),TCM_SETITEM,(WPARAM)i,(LPARAM)(TC_ITEM *)(p))
#define TabCtrl_InsertItem(h,i,p) SendMessage((h),TCM_INSERTITEM,(WPARAM)i,(LPARAM)(TC_ITEM *)(p))
#define TabCtrl_DeleteItem(hwnd,i) SendMessage((hwnd),TCM_DELETEITEM,(WPARAM)(int)(i),0)
#define TabCtrl_DeleteAllItems(h) SendMessage((h),TCM_DELETEALLITEMS,0,0)
#define TabCtrl_GetItemRect(h,i,prc) SendMessage((h),TCM_GETITEMRECT,(WPARAM)(i),(LPARAM)(prc))
#define TabCtrl_GetCurSel(h) SendMessage((h),TCM_GETCURSEL,0,0)
#define TabCtrl_SetCurSel(h,i) SendMessage((h),TCM_SETCURSEL,(WPARAM)i,0)
#define TabCtrl_HitTest(h,p) SendMessage((h),TCM_HITTEST,0,(LPARAM)(TC_HITTESTINFO *)(p))
#define TabCtrl_SetItemExtra(h,cb) SendMessage((h),TCM_SETITEMEXTRA,(WPARAM)(cb),0)
#define TabCtrl_AdjustRect(h,L,prc) SendMessage(h,TCM_ADJUSTRECT,(WPARAM)L,(LPARAM)(RECT *)prc)
#define TabCtrl_SetItemSize(h,x,y) SendMessage((h),TCM_SETITEMSIZE,0,MAKELPARAM(x,y))
#define TabCtrl_RemoveImage(h,i) SendMessage((h),TCM_REMOVEIMAGE,i,0)
#define TabCtrl_SetPadding(h,cx,cy) SendMessage((h),TCM_SETPADDING,0,MAKELPARAM(cx,cy))
#define TabCtrl_GetRowCount(h) SendMessage((h),TCM_GETROWCOUNT,0,0)
#define TabCtrl_GetToolTips(h) SendMessage((h),TCM_GETTOOLTIPS,0,0)
#define TabCtrl_SetToolTips(h,T) SendMessage((h),TCM_SETTOOLTIPS,(WPARAM)T,0)
#define TabCtrl_GetCurFocus(hwnd) SendMessage((hwnd),TCM_GETCURFOCUS,0,0)
#define TabCtrl_SetCurFocus(hwnd,i) SendMessage((hwnd),TCM_SETCURFOCUS,i,0)
#define TabCtrl_SetMinTabWidth(h,x) (int)SNDMSG((h),TCM_SETMINTABWIDTH,0,x)
#define TabCtrl_DeselectAll(h,E) (void)SNDMSG((h), TCM_DESELECTALL,E,0)
#define TabCtrl_SetExtendedStyle(h,d) (DWORD)SNDMSG((h),TCM_SETEXTENDEDSTYLE,0,d)
#define TabCtrl_GetExtendedStyle(h) (DWORD)SNDMSG((h),TCM_GETEXTENDEDSTYLE,0,0)
#define TabCtrl_SetUnicodeFormat(h,U) (BOOL)SNDMSG((h),TCM_SETUNICODEFORMAT,(WPARAM)(U),0)
#define TabCtrl_GetUnicodeFormat(h) (BOOL)SNDMSG((h),TCM_GETUNICODEFORMAT,0,0)
#define CommDlg_OpenSave_GetSpecA(h,p,c) SendMessage(h,CDM_GETSPEC,(WPARAM)c,(LPARAM)p)
#define CommDlg_OpenSave_GetSpecW(h,_psz,c) SendMessage(h,CDM_GETSPEC,(WPARAM)c,(LPARAM)_psz)
#define CommDlg_OpenSave_GetFilePathA(_hdlg,_psz,c) SendMessage(_hdlg,CDM_GETFILEPATH,(WPARAM)c,(LPARAM)(LPSTR)_psz)
#define CommDlg_OpenSave_GetFilePathW(h,p,c) SendMessage(h,CDM_GETFILEPATH,(WPARAM)c,(LPARAM)(LPWSTR)p)
#define CommDlg_OpenSave_GetFolderPathA(h,_psz,c) SendMessage(h,CDM_GETFOLDERPATH,(WPARAM)c,(LPARAM)(LPSTR)_psz)
#define CommDlg_OpenSave_GetFolderPathW(h,p,c) SendMessage(h,CDM_GETFOLDERPATH,(WPARAM)c,(LPARAM)(LPWSTR)p)
#define CommDlg_OpenSave_GetFolderIDList(g,p,c) SendMessage(g,CDM_GETFOLDERIDLIST,(WPARAM)c,(LPARAM)(LPVOID)p)
#define CommDlg_OpenSave_SetControlText(h,id,t) SendMessage(h,CDM_SETCONTROLTEXT,(WPARAM)id,(LPARAM)t)
#define CommDlg_OpenSave_HideControl(_hdlg,_id) SendMessage(_hdlg,CDM_HIDECONTROL,(WPARAM)_id,0)
#define CommDlg_OpenSave_SetDefExt(h,psz) SendMessage(h,CDM_SETDEFEXT,0,(LPARAM)psz)
#define GetCurrentFiber() (((PNT_TIB)NtCurrentTeb())->FiberData)
#define GetFiberData() (*(PVOID *)(GetCurrentFiber()))
LONG RegCloseKey (HKEY);
LONG RegSetKeySecurity(HKEY,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR);
LONG RegFlushKey(HKEY);
LONG RegGetKeySecurity(HKEY,SECURITY_INFORMATION,PSECURITY_DESCRIPTOR,LPDWORD);
LONG RegNotifyChangeKeyValue(HKEY,BOOL,DWORD,HANDLE,BOOL);
BOOL IsValidCodePage(UINT);
UINT GetACP(void);
UINT GetOEMCP(void);
BOOL GetCPInfo(UINT,LPCPINFO);
BOOL IsDBCSLeadByte(BYTE);
BOOL IsDBCSLeadByteEx(UINT,BYTE);
int MultiByteToWideChar(UINT,DWORD,LPCSTR,int,LPWSTR,int);
int WideCharToMultiByte(UINT,DWORD,LPCWSTR,int,LPSTR,int,LPCSTR,LPBOOL);
BOOL IsValidLocale(LCID,DWORD);
LCID ConvertDefaultLocale(LCID);
LCID GetThreadLocale(void);
BOOL SetThreadLocale(LCID);
LANGID GetSystemDefaultLangID(void);
LANGID GetUserDefaultLangID(void);
LCID GetSystemDefaultLCID(void);
LCID GetUserDefaultLCID(void);
BOOL ReadConsoleOutputAttribute(HANDLE,LPWORD,DWORD,COORD,LPDWORD);
BOOL WriteConsoleOutputAttribute(HANDLE,CONST WORD *,DWORD,COORD,LPDWORD);
BOOL FillConsoleOutputAttribute(HANDLE,WORD,DWORD,COORD,LPDWORD);
BOOL GetConsoleMode(HANDLE,LPDWORD);
BOOL GetNumberOfConsoleInputEvents(HANDLE,LPDWORD);
BOOL GetConsoleScreenBufferInfo(HANDLE,PCONSOLE_SCREEN_BUFFER_INFO);
COORD GetLargestConsoleWindowSize(HANDLE);
BOOL GetConsoleCursorInfo(HANDLE,PCONSOLE_CURSOR_INFO);
BOOL GetNumberOfConsoleMouseButtons(LPDWORD);
BOOL SetConsoleMode(HANDLE,DWORD);
BOOL SetConsoleActiveScreenBuffer(HANDLE);
BOOL FlushConsoleInputBuffer(HANDLE);
BOOL SetConsoleScreenBufferSize(HANDLE,COORD);
BOOL SetConsoleCursorPosition(HANDLE,COORD);
BOOL SetConsoleCursorInfo(HANDLE,CONST CONSOLE_CURSOR_INFO *);
BOOL SetConsoleWindowInfo(HANDLE,BOOL,CONST SMALL_RECT *);
BOOL SetConsoleTextAttribute(HANDLE,WORD);
BOOL SetConsoleCtrlHandler(PHANDLER_ROUTINE,BOOL);
BOOL GenerateConsoleCtrlEvent(DWORD,DWORD);
BOOL AllocConsole(VOID);
BOOL FreeConsole(VOID);
HANDLE CreateConsoleScreenBuffer(DWORD,DWORD,CONST SECURITY_ATTRIBUTES *,DWORD,LPVOID);
UINT GetConsoleCP(VOID);
BOOL SetConsoleCP(UINT);
UINT GetConsoleOutputCP(VOID);
BOOL SetConsoleOutputCP(UINT);
DWORD WNetConnectionDialog(HWND,DWORD);
DWORD WNetDisconnectDialog(HWND,DWORD);
DWORD WNetCloseEnum( HANDLE);
BOOL NotifyBootConfigStatus(BOOL);
BOOL WinLoadTrustProvider(GUID *);
LONG WinVerifyTrust(HWND,GUID *,LPVOID);
BOOL WinSubmitCertificate(LPWIN_CERTIFICATE);
BOOL	WINAPI wglCopyContext(HGLRC,HGLRC, UINT);
HGLRC	WINAPI wglCreateContext(HDC);
HGLRC	WINAPI wglCreateLayerContext(HDC,int);
BOOL	WINAPI wglDeleteContext(HGLRC);
HGLRC	WINAPI wglGetCurrentContext(VOID);
HDC	WINAPI wglGetCurrentDC(VOID);
FARPROC	WINAPI wglGetProcAddress(LPCSTR);
BOOL	WINAPI wglMakeCurrent(HDC,HGLRC);
BOOL	WINAPI wglShareLists(HGLRC,HGLRC);
BOOL	WINAPI wglUseFontBitmapsA(HDC,DWORD, DWORD, DWORD);
BOOL	WINAPI wglUseFontBitmapsW(HDC,DWORD, DWORD, DWORD);
BOOL	WINAPI SwapBuffers(HDC);
BOOL	WINAPI wglSwapLayerBuffers(HDC,UINT);
BOOL	WINAPI GetAltTabInfoA(HWND,int,PALTTABINFO,LPSTR,UINT);
BOOL	WINAPI GetAltTabInfoW(HWND,int,PALTTABINFO,LPWSTR,UINT);
#ifdef UNICODE
#define wglUseFontBitmaps wglUseFontBitmapsW
#define GetAltTabInfo	GetAltTabInfoW
#define CreateWaitableTimer	CreateWaitableTimerW
#else
#define wglUseFontBitmaps wglUseFontBitmapsA
#define GetAltTabInfo	GetAltTabInfoA
#define CreateWaitableTimer	CreateWaitableTimerA
#endif
typedef struct _POINTFLOAT {
	FLOAT	x;
	FLOAT	y;
} POINTFLOAT,*PPOINTFLOAT;
typedef struct _GLYPHMETRICSFLOAT {
	FLOAT	gmfBlackBoxX;
	FLOAT	gmfBlackBoxY;
	POINTFLOAT gmfptGlyphOrigin;
	FLOAT	gmfCellIncX;
	FLOAT	gmfCellIncY;
} GLYPHMETRICSFLOAT,*PGLYPHMETRICSFLOAT,*LPGLYPHMETRICSFLOAT;
#define WGL_FONT_LINES	0
#define WGL_FONT_POLYGONS	1
#define WGL_SWAPMULTIPLE_MAX 16
BOOL	WINAPI wglUseFontOutlinesA(HDC,DWORD,DWORD,DWORD,FLOAT,FLOAT,int,LPGLYPHMETRICSFLOAT);
BOOL	WINAPI wglUseFontOutlinesW(HDC,DWORD,DWORD,DWORD,FLOAT,FLOAT,int,LPGLYPHMETRICSFLOAT);
#ifdef UNICODE
#define wglUseFontOutlines wglUseFontOutlinesW
#else
#define wglUseFontOutlines wglUseFontOutlinesA
#endif
typedef struct _LAYERPLANEDESCRIPTOR {
	WORD	nSize;
	WORD	nVersion;
	DWORD	dwFlags;
	BYTE	iPixelType;
	BYTE	cColorBits;
	BYTE	cRedBits;
	BYTE	cRedShift;
	BYTE	cGreenBits;
	BYTE	cGreenShift;
	BYTE	cBlueBits;
	BYTE	cBlueShift;
	BYTE	cAlphaBits;
	BYTE	cAlphaShift;
	BYTE	cAccumBits;
	BYTE	cAccumRedBits;
	BYTE	cAccumGreenBits;
	BYTE	cAccumBlueBits;
	BYTE	cAccumAlphaBits;
	BYTE	cDepthBits;
	BYTE	cStencilBits;
	BYTE	cAuxBuffers;
	BYTE	iLayerPlane;
	BYTE	bReserved;
	COLORREF crTransparent;
} LAYERPLANEDESCRIPTOR,*PLAYERPLANEDESCRIPTOR,*LPLAYERPLANEDESCRIPTOR;
#define LPD_DOUBLEBUFFER	1
#define LPD_STEREO	2
#define LPD_SUPPORT_GDI	16
#define LPD_SUPPORT_OPENGL	32
#define LPD_SHARE_DEPTH	0x40
#define LPD_SHARE_STENCIL	0x80
#define LPD_SHARE_ACCUM	0x100
#define LPD_SWAP_EXCHANGE	0x200
#define LPD_SWAP_COPY	0x400
#define LPD_TRANSPARENT	0x1000
#define LPD_TYPE_RGBA	0
#define LPD_TYPE_COLORINDEX	1
#define WGL_SWAP_MAIN_PLANE	1
#define WGL_SWAP_OVERLAY1	2
#define WGL_SWAP_OVERLAY2	4
#define WGL_SWAP_OVERLAY3	8
#define	WGL_SWAP_OVERLAY4	0x10
#define	WGL_SWAP_OVERLAY5	0x20
#define	WGL_SWAP_OVERLAY6	0x40
#define	WGL_SWAP_OVERLAY7	0x80
#define	WGL_SWAP_OVERLAY8	0x100
#define	WGL_SWAP_OVERLAY9	0x200
#define	WGL_SWAP_OVERLAY10	0x400
#define	WGL_SWAP_OVERLAY11	0x800
#define	WGL_SWAP_OVERLAY12	0x1000
#define	WGL_SWAP_OVERLAY13	0x2000
#define	WGL_SWAP_OVERLAY14	0x4000
#define	WGL_SWAP_OVERLAY15	0x8000
#define	WGL_SWAP_UNDERLAY1	0x10000
#define	WGL_SWAP_UNDERLAY2	0x20000
#define	WGL_SWAP_UNDERLAY3	0x40000
#define	WGL_SWAP_UNDERLAY4	0x80000
#define	WGL_SWAP_UNDERLAY5	0x100000
#define	WGL_SWAP_UNDERLAY6	0x200000
#define	WGL_SWAP_UNDERLAY7	0x400000
#define	WGL_SWAP_UNDERLAY8	0x800000
#define	WGL_SWAP_UNDERLAY9	0x1000000
#define	WGL_SWAP_UNDERLAY10	0x2000000
#define	WGL_SWAP_UNDERLAY11	0x4000000
#define	WGL_SWAP_UNDERLAY12	0x08000000
#define WGL_SWAP_UNDERLAY13 0x10000000
#define WGL_SWAP_UNDERLAY14 0x20000000
#define WGL_SWAP_UNDERLAY15 0x40000000
BOOL WINAPI wglDescribeLayerPlane(HDC,int,int,UINT,LPLAYERPLANEDESCRIPTOR);
int WINAPI wglSetLayerPaletteEntries(HDC,int,int,int,COLORREF *);
int WINAPI wglGetLayerPaletteEntries(HDC,int,int,int,COLORREF *);
BOOL WINAPI wglRealizeLayerPalette(HDC,int, BOOL);
BOOL WINAPI wglSwapLayerBuffers(HDC,UINT);
struct	_TEB	*NtCurrentTeb(void);
LPVOID	WINAPI	CreateFiber(DWORD,LPFIBER_START_ROUTINE,LPVOID);
VOID WINAPI DeleteFiber(LPVOID);
LPVOID WINAPI ConvertThreadToFiber(LPVOID);
VOID WINAPI SwitchToFiber(LPVOID);
BOOL WINAPI SwitchToThread(VOID);
typedef void (* WAITORTIMERCALLBACKFUNC)(PVOID,BOOL);
typedef WAITORTIMERCALLBACKFUNC WAITORTIMERCALLBACK ;
HANDLE WINAPI RegisterWaitForSingleObject(HANDLE,WAITORTIMERCALLBACK,PVOID,ULONG);
HANDLE WINAPI RegisterWaitForSingleObjectEx(HANDLE,WAITORTIMERCALLBACK,PVOID,ULONG,ULONG);
BOOL WINAPI UnregisterWait(HANDLE);
BOOL WINAPI QueueUserWorkItem(LPTHREAD_START_ROUTINE,PVOID,BOOL);
BOOL WINAPI CreateTimerQueueTimer(PHANDLE,HANDLE, WAITORTIMERCALLBACK,PVOID,DWORD,DWORD,ULONG);
BOOL WINAPI BindIoCompletionCallback (HANDLE,LPOVERLAPPED_COMPLETION_ROUTINE,ULONG);
HANDLE WINAPI CreateTimerQueue(VOID);
HANDLE WINAPI SetTimerQueueTimer(HANDLE,WAITORTIMERCALLBACK,PVOID,DWORD,DWORD,BOOL);
BOOL WINAPI ChangeTimerQueueTimer(HANDLE,HANDLE,ULONG,ULONG);
WINBASEAPI BOOL WINAPI CancelTimerQueueTimer(HANDLE,HANDLE);
WINBASEAPI BOOL WINAPI DeleteTimerQueue(HANDLE);
BOOL WINAPI DeleteTimerQueueEx(HANDLE, HANDLE);
#define MakeProcInstance(a,b) (a)
#define FreeProcInstance(a)	(a)
#define AnsiToOem CharToOemA
#define OemToAnsi OemToCharA
#define AnsiToOemBuff CharToOemBuffA
#define OemToAnsiBuff OemToCharBuffA
#define AnsiUpper CharUpperA
#define AnsiUpperBuff CharUpperBuffA
#define AnsiLower CharLowerA
#define AnsiLowerBuff CharLowerBuffA
#define AnsiNext CharNextA
#define AnsiPrev CharPrevA
#define DefineHandleTable(w) ((w),TRUE)
#define LimitEmsPages(dw)
#define SetSwapAreaSize(w) (w)
#define LockSegment(w) GlobalFix((HANDLE)(w))
#define UnlockSegment(w) GlobalUnfix((HANDLE)(w))
#define GetCurrentTime() GetTickCount()
#define Yield()
#define ZeroMemory RtlZeroMemory
#define RtlFillMemory(Destination,Length,Fill) memset((Destination),(Fill),(Length))
#define MAKE_HRESULT(s,f,c) ((HRESULT)(((DWORD)(s)<<31)|((DWORD)(f)<<16)|((DWORD)(c))))

//#ifdef RC_INVOKED
//#define _HRESULT_TYPEDEF_(_sc) _sc
//#else
//#define _HRESULT_TYPEDEF_(_sc) ((HRESULT)_sc)
//#endif

#define E_FAIL	_HRESULT_TYPEDEF_(0x80004005)
#define E_UNEXPECTED	_HRESULT_TYPEDEF_(0x8000FFFF)
#define E_NOTIMPL	_HRESULT_TYPEDEF_(0x80004001)
#define E_OUTOFMEMORY	_HRESULT_TYPEDEF_(0x8007000E)
#define E_INVALIDARG	_HRESULT_TYPEDEF_(0x80070057)
#define E_NOINTERFACE	_HRESULT_TYPEDEF_(0x80004002)
#define E_POINTER	_HRESULT_TYPEDEF_(0x80004003)
#define E_HANDLE	_HRESULT_TYPEDEF_(0x80070006)
#define E_ABORT		_HRESULT_TYPEDEF_(0x80004004)
#define E_ACCESSDENIED	_HRESULT_TYPEDEF_(0x80070005)
#define CO_E_INIT_TLS	_HRESULT_TYPEDEF_(0x80004006)
#define CO_E_INIT_SHARED_ALLOCATOR	_HRESULT_TYPEDEF_(0x80004007)
#define CO_E_INIT_MEMORY_ALLOCATOR	_HRESULT_TYPEDEF_(0x80004008)
#define CO_E_INIT_CLASS_CACHE	_HRESULT_TYPEDEF_(0x80004009)
#define CO_E_INIT_RPC_CHANNEL	_HRESULT_TYPEDEF_(0x8000400A)
#define CO_E_INIT_TLS_SET_CHANNEL_CONTROL	_HRESULT_TYPEDEF_(0x8000400B)
#define CO_E_INIT_TLS_CHANNEL_CONTROL	_HRESULT_TYPEDEF_(0x8000400C)
#define CO_E_INIT_UNACCEPTED_USER_ALLOCATOR _HRESULT_TYPEDEF_(0x8000400D)
#define CO_E_INIT_SCM_MUTEX_EXISTS	_HRESULT_TYPEDEF_(0x8000400E)
#define CO_E_INIT_SCM_FILE_MAPPING_EXISTS _HRESULT_TYPEDEF_(0x8000400F)
#define CO_E_INIT_SCM_MAP_VIEW_OF_FILE	_HRESULT_TYPEDEF_(0x80004010)
#define CO_E_INIT_SCM_EXEC_FAILURE	_HRESULT_TYPEDEF_(0x80004011)
#define CO_E_INIT_ONLY_SINGLE_THREADED	_HRESULT_TYPEDEF_(0x80004012)
#define CO_E_CANT_REMOTE	_HRESULT_TYPEDEF_(0x80004013)
#define CO_E_BAD_SERVER_NAME	_HRESULT_TYPEDEF_(0x80004014)
#define CO_E_WRONG_SERVER_IDENTITY	_HRESULT_TYPEDEF_(0x80004015)
#define CO_E_OLE1DDE_DISABLED	_HRESULT_TYPEDEF_(0x80004016)
#define CO_E_RUNAS_SYNTAX	_HRESULT_TYPEDEF_(0x80004017)
#define CO_E_CREATEPROCESS_FAILURE	_HRESULT_TYPEDEF_(0x80004018)
#define CO_E_RUNAS_CREATEPROCESS_FAILURE _HRESULT_TYPEDEF_(0x80004019)
#define CO_E_RUNAS_LOGON_FAILURE	_HRESULT_TYPEDEF_(0x8000401A)
#define CO_E_LAUNCH_PERMSSION_DENIED	_HRESULT_TYPEDEF_(0x8000401B)
#define CO_E_START_SERVICE_FAILURE	_HRESULT_TYPEDEF_(0x8000401C)
#define CO_E_REMOTE_COMMUNICATION_FAILURE _HRESULT_TYPEDEF_(0x8000401D)
#define CO_E_SERVER_START_TIMEOUT	_HRESULT_TYPEDEF_(0x8000401E)
#define CO_E_CLSREG_INCONSISTENT	_HRESULT_TYPEDEF_(0x8000401F)
#define CO_E_IIDREG_INCONSISTENT	_HRESULT_TYPEDEF_(0x80004020)
#define CO_E_NOT_SUPPORTED	_HRESULT_TYPEDEF_(0x80004021)
#define CO_E_RELOAD_DLL	_HRESULT_TYPEDEF_(0x80004022)
#define CO_E_MSI_ERROR	_HRESULT_TYPEDEF_(0x80004023)
#define	CLASS_E_NOAGGREGATION	_HRESULT_TYPEDEF_(0x80040110)
#define CLASS_E_CLASSNOTAVAILABLE	_HRESULT_TYPEDEF_(0x80040111)
/* Errors.h WIN32 error codes Numerical order */
#define NO_ERROR 0
#define ERROR_SUCCESS 0
#define ERROR_INVALID_FUNCTION 1
#define ERROR_FILE_NOT_FOUND 2
#define ERROR_PATH_NOT_FOUND 3
#define ERROR_TOO_MANY_OPEN_FILES 4
#define ERROR_ACCESS_DENIED 5
#define ERROR_INVALID_HANDLE 6
#define ERROR_ARENA_TRASHED 7
#define ERROR_NOT_ENOUGH_MEMORY 8
#define ERROR_INVALID_BLOCK 9
#define ERROR_BAD_ENVIRONMENT 10
#define ERROR_BAD_FORMAT 11
#define ERROR_INVALID_ACCESS 12
#define ERROR_INVALID_DATA 13
#define ERROR_OUTOFMEMORY 14
#define ERROR_INVALID_DRIVE 15
#define ERROR_CURRENT_DIRECTORY 16
#define ERROR_NOT_SAME_DEVICE 17
#define ERROR_NO_MORE_FILES 18
#define ERROR_WRITE_PROTECT 19
#define ERROR_BAD_UNIT 20
#define ERROR_NOT_READY 21
#define ERROR_BAD_COMMAND 22
#define ERROR_CRC 23
#define ERROR_BAD_LENGTH 24
#define ERROR_SEEK 25
#define ERROR_NOT_DOS_DISK 26
#define ERROR_SECTOR_NOT_FOUND 27
#define ERROR_OUT_OF_PAPER 28
#define ERROR_WRITE_FAULT 29
#define ERROR_READ_FAULT 30
#define ERROR_GEN_FAILURE 31
#define ERROR_SHARING_VIOLATION 32
#define ERROR_LOCK_VIOLATION 33
#define ERROR_WRONG_DISK 34
#define ERROR_SHARING_BUFFER_EXCEEDED 36
#define ERROR_HANDLE_EOF 38
#define ERROR_HANDLE_DISK_FULL 39
#define ERROR_NOT_SUPPORTED 50
#define ERROR_REM_NOT_LIST 51
#define ERROR_DUP_NAME 52
#define ERROR_BAD_NETPATH 53
#define ERROR_NETWORK_BUSY 54
#define ERROR_DEV_NOT_EXIST 55
#define ERROR_TOO_MANY_CMDS 56
#define ERROR_ADAP_HDW_ERR 57
#define ERROR_BAD_NET_RESP 58
#define ERROR_UNEXP_NET_ERR 59
#define ERROR_BAD_REM_ADAP 60
#define ERROR_PRINTQ_FULL 61
#define ERROR_NO_SPOOL_SPACE 62
#define ERROR_PRINT_CANCELLED 63
#define ERROR_NETNAME_DELETED 64
#define ERROR_NETWORK_ACCESS_DENIED 65
#define ERROR_BAD_DEV_TYPE 66
#define ERROR_BAD_NET_NAME 67
#define ERROR_TOO_MANY_NAMES 68
#define ERROR_TOO_MANY_SESS 69
#define ERROR_SHARING_PAUSED 70
#define ERROR_REQ_NOT_ACCEP 71
#define ERROR_REDIR_PAUSED 72
#define ERROR_FILE_EXISTS 80
#define ERROR_CANNOT_MAKE 82
#define ERROR_FAIL_I24 83
#define ERROR_OUT_OF_STRUCTURES 84
#define ERROR_ALREADY_ASSIGNED 85
#define ERROR_INVALID_PASSWORD 86
#define ERROR_INVALID_PARAMETER 87
#define ERROR_NET_WRITE_FAULT 88
#define ERROR_NO_PROC_SLOTS 89
#define ERROR_TOO_MANY_SEMAPHORES 100
#define ERROR_EXCL_SEM_ALREADY_OWNED 101
#define ERROR_SEM_IS_SET 102
#define ERROR_TOO_MANY_SEM_REQUESTS 103
#define ERROR_INVALID_AT_INTERRUPT_TIME 104
#define ERROR_SEM_OWNER_DIED 105
#define ERROR_SEM_USER_LIMIT 106
#define ERROR_DISK_CHANGE 107
#define ERROR_DRIVE_LOCKED 108
#define ERROR_BROKEN_PIPE 109
#define ERROR_OPEN_FAILED 110
#define ERROR_BUFFER_OVERFLOW 111
#define ERROR_DISK_FULL 112
#define ERROR_NO_MORE_SEARCH_HANDLES 113
#define ERROR_INVALID_TARGET_HANDLE 114
#define ERROR_INVALID_CATEGORY 117
#define ERROR_INVALID_VERIFY_SWITCH 118
#define ERROR_BAD_DRIVER_LEVEL 119
#define ERROR_CALL_NOT_IMPLEMENTED 120
#define ERROR_SEM_TIMEOUT 121
#define ERROR_INSUFFICIENT_BUFFER 122
#define ERROR_INVALID_NAME 123
#define ERROR_INVALID_LEVEL 124
#define ERROR_NO_VOLUME_LABEL 125
#define ERROR_MOD_NOT_FOUND 126
#define ERROR_PROC_NOT_FOUND 127
#define ERROR_WAIT_NO_CHILDREN 128
#define ERROR_CHILD_NOT_COMPLETE 129
#define ERROR_DIRECT_ACCESS_HANDLE 130
#define ERROR_NEGATIVE_SEEK 131
#define ERROR_SEEK_ON_DEVICE 132
#define ERROR_IS_JOIN_TARGET 133
#define ERROR_IS_JOINED 134
#define ERROR_IS_SUBSTED 135
#define ERROR_NOT_JOINED 136
#define ERROR_NOT_SUBSTED 137
#define ERROR_JOIN_TO_JOIN 138
#define ERROR_SUBST_TO_SUBST 139
#define ERROR_JOIN_TO_SUBST 140
#define ERROR_SUBST_TO_JOIN 141
#define ERROR_BUSY_DRIVE 142
#define ERROR_SAME_DRIVE 143
#define ERROR_DIR_NOT_ROOT 144
#define ERROR_DIR_NOT_EMPTY 145
#define ERROR_IS_SUBST_PATH 146
#define ERROR_IS_JOIN_PATH 147
#define ERROR_PATH_BUSY 148
#define ERROR_IS_SUBST_TARGET 149
#define ERROR_SYSTEM_TRACE 150
#define ERROR_INVALID_EVENT_COUNT 151
#define ERROR_TOO_MANY_MUXWAITERS 152
#define ERROR_INVALID_LIST_FORMAT 153
#define ERROR_LABEL_TOO_LONG 154
#define ERROR_TOO_MANY_TCBS 155
#define ERROR_SIGNAL_REFUSED 156
#define ERROR_DISCARDED 157
#define ERROR_NOT_LOCKED 158
#define ERROR_BAD_THREADID_ADDR 159
#define ERROR_BAD_ARGUMENTS 160
#define ERROR_BAD_PATHNAME 161
#define ERROR_SIGNAL_PENDING 162
#define ERROR_MAX_THRDS_REACHED 164
#define ERROR_LOCK_FAILED 167
#define ERROR_BUSY 170
#define ERROR_CANCEL_VIOLATION 173
#define ERROR_ATOMIC_LOCKS_NOT_SUPPORTED 174
#define ERROR_INVALID_SEGMENT_NUMBER 180
#define ERROR_INVALID_ORDINAL 182
#define ERROR_ALREADY_EXISTS 183
#define ERROR_INVALID_FLAG_NUMBER 186
#define ERROR_SEM_NOT_FOUND 187
#define ERROR_INVALID_STARTING_CODESEG 188
#define ERROR_INVALID_STACKSEG 189
#define ERROR_INVALID_MODULETYPE 190
#define ERROR_INVALID_EXE_SIGNATURE 191
#define ERROR_EXE_MARKED_INVALID 192
#define ERROR_EXE_MACHINE_TYPE_MISMATCH 216
#define ERROR_BAD_EXE_FORMAT 193
#define ERROR_ITERATED_DATA_EXCEEDS_64k 194
#define ERROR_INVALID_MINALLOCSIZE 195
#define ERROR_DYNLINK_FROM_INVALID_RING 196
#define ERROR_IOPL_NOT_ENABLED 197
#define ERROR_INVALID_SEGDPL 198
#define ERROR_AUTODATASEG_EXCEEDS_64k 199
#define ERROR_RING2SEG_MUST_BE_MOVABLE 200
#define ERROR_RELOC_CHAIN_XEEDS_SEGLIM 201
#define ERROR_INFLOOP_IN_RELOC_CHAIN 202
#define ERROR_ENVVAR_NOT_FOUND 203
#define ERROR_NO_SIGNAL_SENT 205
#define ERROR_FILENAME_EXCED_RANGE 206
#define ERROR_RING2_STACK_IN_USE 207
#define ERROR_META_EXPANSION_TOO_LONG 208
#define ERROR_INVALID_SIGNAL_NUMBER 209
#define ERROR_THREAD_1_INACTIVE 210
#define ERROR_LOCKED 212
#define ERROR_TOO_MANY_MODULES 214
#define ERROR_NESTING_NOT_ALLOWED 215
#define ERROR_BAD_PIPE 230
#define ERROR_PIPE_BUSY 231
#define ERROR_NO_DATA 232
#define ERROR_PIPE_NOT_CONNECTED 233
#define ERROR_MORE_DATA 234
#define ERROR_VC_DISCONNECTED 240
#define ERROR_INVALID_EA_NAME 254
#define ERROR_EA_LIST_INCONSISTENT 255
#define ERROR_NO_MORE_ITEMS 259
#define ERROR_CANNOT_COPY 266
#define ERROR_DIRECTORY 267
#define ERROR_EAS_DIDNT_FIT 275
#define ERROR_EA_FILE_CORRUPT 276
#define ERROR_EA_TABLE_FULL 277
#define ERROR_INVALID_EA_HANDLE 278
#define ERROR_EAS_NOT_SUPPORTED 282
#define ERROR_NOT_OWNER 288
#define ERROR_TOO_MANY_POSTS 298
#define ERROR_PARTIAL_COPY 299
#define ERROR_MR_MID_NOT_FOUND 317
#define ERROR_INVALID_ADDRESS 487
#define ERROR_ARITHMETIC_OVERFLOW 534
#define ERROR_PIPE_CONNECTED 535
#define ERROR_PIPE_LISTENING 536
#define ERROR_EA_ACCESS_DENIED 994
#define ERROR_OPERATION_ABORTED 995
#define ERROR_IO_INCOMPLETE 996
#define ERROR_IO_PENDING 997
#define ERROR_NOACCESS 998
#define ERROR_SWAPERROR 999
#define ERROR_STACK_OVERFLOW 1001
#define ERROR_INVALID_MESSAGE 1002
#define ERROR_CAN_NOT_COMPLETE 1003
#define ERROR_INVALID_FLAGS 1004
#define ERROR_UNRECOGNIZED_VOLUME 1005
#define ERROR_FILE_INVALID 1006
#define ERROR_FULLSCREEN_MODE 1007
#define ERROR_NO_TOKEN 1008
#define ERROR_BADDB 1009
#define ERROR_BADKEY 1010
#define ERROR_CANTOPEN 1011
#define ERROR_CANTREAD 1012
#define ERROR_CANTWRITE 1013
#define ERROR_REGISTRY_RECOVERED 1014
#define ERROR_REGISTRY_CORRUPT 1015
#define ERROR_REGISTRY_IO_FAILED 1016
#define ERROR_NOT_REGISTRY_FILE 1017
#define ERROR_KEY_DELETED 1018
#define ERROR_NO_LOG_SPACE 1019
#define ERROR_KEY_HAS_CHILDREN 1020
#define ERROR_CHILD_MUST_BE_VOLATILE 1021
#define ERROR_NOTIFY_ENUM_DIR 1022
#define ERROR_DEPENDENT_SERVICES_RUNNING 1051
#define ERROR_INVALID_SERVICE_CONTROL 1052
#define ERROR_SERVICE_REQUEST_TIMEOUT 1053
#define ERROR_SERVICE_NO_THREAD 1054
#define ERROR_SERVICE_DATABASE_LOCKED 1055
#define ERROR_SERVICE_ALREADY_RUNNING 1056
#define ERROR_INVALID_SERVICE_ACCOUNT 1057
#define ERROR_SERVICE_DISABLED 1058
#define ERROR_CIRCULAR_DEPENDENCY 1059
#define ERROR_SERVICE_DOES_NOT_EXIST 1060
#define ERROR_SERVICE_CANNOT_ACCEPT_CTRL 1061
#define ERROR_SERVICE_NOT_ACTIVE 1062
#define ERROR_FAILED_SERVICE_CONTROLLER_CONNECT 1063
#define ERROR_EXCEPTION_IN_SERVICE 1064
#define ERROR_DATABASE_DOES_NOT_EXIST 1065
#define ERROR_SERVICE_SPECIFIC_ERROR 1066
#define ERROR_PROCESS_ABORTED 1067
#define ERROR_SERVICE_DEPENDENCY_FAIL 1068
#define ERROR_SERVICE_LOGON_FAILED 1069
#define ERROR_SERVICE_START_HANG 1070
#define ERROR_INVALID_SERVICE_LOCK 1071
#define ERROR_SERVICE_MARKED_FOR_DELETE 1072
#define ERROR_SERVICE_EXISTS 1073
#define ERROR_ALREADY_RUNNING_LKG 1074
#define ERROR_SERVICE_DEPENDENCY_DELETED 1075
#define ERROR_BOOT_ALREADY_ACCEPTED 1076
#define ERROR_SERVICE_NEVER_STARTED 1077
#define ERROR_DUPLICATE_SERVICE_NAME 1078
#define ERROR_DIFFERENT_SERVICE_ACCOUNT 1079
#define ERROR_END_OF_MEDIA 1100
#define ERROR_FILEMARK_DETECTED 1101
#define ERROR_BEGINNING_OF_MEDIA 1102
#define ERROR_SETMARK_DETECTED 1103
#define ERROR_NO_DATA_DETECTED 1104
#define ERROR_PARTITION_FAILURE 1105
#define ERROR_INVALID_BLOCK_LENGTH 1106

#define ERROR_DEVICE_NOT_PARTITIONED 1107
#define ERROR_UNABLE_TO_LOCK_MEDIA 1108
#define ERROR_UNABLE_TO_UNLOAD_MEDIA 1109
#define ERROR_MEDIA_CHANGED 1110
#define ERROR_BUS_RESET 1111
#define ERROR_NO_MEDIA_IN_DRIVE 1112
#define ERROR_NO_UNICODE_TRANSLATION 1113
#define ERROR_DLL_INIT_FAILED 1114
#define ERROR_SHUTDOWN_IN_PROGRESS 1115
#define ERROR_NO_SHUTDOWN_IN_PROGRESS 1116
#define ERROR_IO_DEVICE 1117
#define ERROR_SERIAL_NO_DEVICE 1118
#define ERROR_IRQ_BUSY 1119
#define ERROR_MORE_WRITES 1120
#define ERROR_COUNTER_TIMEOUT 1121
#define ERROR_FLOPPY_ID_MARK_NOT_FOUND 1122
#define ERROR_FLOPPY_WRONG_CYLINDER 1123
#define ERROR_FLOPPY_UNKNOWN_ERROR 1124
#define ERROR_FLOPPY_BAD_REGISTERS 1125
#define ERROR_DISK_RECALIBRATE_FAILED 1126
#define ERROR_DISK_OPERATION_FAILED 1127
#define ERROR_DISK_RESET_FAILED 1128
#define ERROR_EOM_OVERFLOW 1129
#define ERROR_NOT_ENOUGH_SERVER_MEMORY 1130
#define ERROR_POSSIBLE_DEADLOCK 1131
#define ERROR_MAPPED_ALIGNMENT 1132
#define ERROR_SET_POWER_STATE_VETOED 1140
#define ERROR_SET_POWER_STATE_FAILED 1141
#define ERROR_TOO_MANY_LINKS 1142
#define ERROR_OLD_WIN_VERSION 1150
#define ERROR_APP_WRONG_OS 1151
#define ERROR_SINGLE_INSTANCE_APP 1152
#define ERROR_RMODE_APP 1153
#define ERROR_INVALID_DLL 1154
#define ERROR_NO_ASSOCIATION 1155
#define ERROR_DDE_FAIL 1156
#define ERROR_DLL_NOT_FOUND 1157
#define ERROR_BAD_USERNAME 2202
#define ERROR_NOT_CONNECTED 2250
#define ERROR_OPEN_FILES 2401
#define ERROR_ACTIVE_CONNECTIONS 2402
#define ERROR_DEVICE_IN_USE 2404
#define ERROR_BAD_DEVICE 1200
#define ERROR_CONNECTION_UNAVAIL 1201
#define ERROR_DEVICE_ALREADY_REMEMBERED 1202
#define ERROR_NO_NET_OR_BAD_PATH 1203
#define ERROR_BAD_PROVIDER 1204
#define ERROR_CANNOT_OPEN_PROFILE 1205
#define ERROR_BAD_PROFILE 1206
#define ERROR_NOT_CONTAINER 1207
#define ERROR_EXTENDED_ERROR 1208
#define ERROR_INVALID_GROUPNAME 1209
#define ERROR_INVALID_COMPUTERNAME 1210
#define ERROR_INVALID_EVENTNAME 1211
#define ERROR_INVALID_DOMAINNAME 1212
#define ERROR_INVALID_SERVICENAME 1213
#define ERROR_INVALID_NETNAME 1214
#define ERROR_INVALID_SHARENAME 1215
#define ERROR_INVALID_PASSWORDNAME 1216
#define ERROR_INVALID_MESSAGENAME 1217
#define ERROR_INVALID_MESSAGEDEST 1218
#define ERROR_SESSION_CREDENTIAL_CONFLICT 1219
#define ERROR_REMOTE_SESSION_LIMIT_EXCEEDED 1220
#define ERROR_DUP_DOMAINNAME 1221
#define ERROR_NO_NETWORK 1222
#define ERROR_CANCELLED 1223
#define ERROR_USER_MAPPED_FILE 1224
#define ERROR_CONNECTION_REFUSED 1225
#define ERROR_GRACEFUL_DISCONNECT 1226
#define ERROR_ADDRESS_ALREADY_ASSOCIATED 1227
#define ERROR_ADDRESS_NOT_ASSOCIATED 1228
#define ERROR_CONNECTION_INVALID 1229
#define ERROR_CONNECTION_ACTIVE 1230
#define ERROR_NETWORK_UNREACHABLE 1231
#define ERROR_HOST_UNREACHABLE 1232
#define ERROR_PROTOCOL_UNREACHABLE 1233
#define ERROR_PORT_UNREACHABLE 1234
#define ERROR_REQUEST_ABORTED 1235
#define ERROR_CONNECTION_ABORTED 1236
#define ERROR_RETRY 1237
#define ERROR_CONNECTION_COUNT_LIMIT 1238
#define ERROR_LOGIN_TIME_RESTRICTION 1239
#define ERROR_LOGIN_WKSTA_RESTRICTION 1240
#define ERROR_INCORRECT_ADDRESS 1241
#define ERROR_ALREADY_REGISTERED 1242
#define ERROR_SERVICE_NOT_FOUND 1243
#define ERROR_NOT_AUTHENTICATED 1244
#define ERROR_NOT_LOGGED_ON 1245
#define ERROR_CONTINUE 1246
#define ERROR_ALREADY_INITIALIZED 1247
#define ERROR_NO_MORE_DEVICES 1248
#define ERROR_NOT_ALL_ASSIGNED 1300
#define ERROR_SOME_NOT_MAPPED 1301
#define ERROR_NO_QUOTAS_FOR_ACCOUNT 1302
#define ERROR_LOCAL_USER_SESSION_KEY 1303
#define ERROR_NULL_LM_PASSWORD 1304
#define ERROR_UNKNOWN_REVISION 1305
#define ERROR_REVISION_MISMATCH 1306
#define ERROR_INVALID_OWNER 1307
#define ERROR_INVALID_PRIMARY_GROUP 1308
#define ERROR_NO_IMPERSONATION_TOKEN 1309
#define ERROR_CANT_DISABLE_MANDATORY 1310
#define ERROR_NO_LOGON_SERVERS 1311
#define ERROR_NO_SUCH_LOGON_SESSION 1312
#define ERROR_NO_SUCH_PRIVILEGE 1313
#define ERROR_PRIVILEGE_NOT_HELD 1314
#define ERROR_INVALID_ACCOUNT_NAME 1315
#define ERROR_USER_EXISTS 1316
#define ERROR_NO_SUCH_USER 1317
#define ERROR_GROUP_EXISTS 1318
#define ERROR_NO_SUCH_GROUP 1319
#define ERROR_MEMBER_IN_GROUP 1320
#define ERROR_MEMBER_NOT_IN_GROUP 1321
#define ERROR_LAST_ADMIN 1322
#define ERROR_WRONG_PASSWORD 1323
#define ERROR_ILL_FORMED_PASSWORD 1324
#define ERROR_PASSWORD_RESTRICTION 1325
#define ERROR_LOGON_FAILURE 1326
#define ERROR_ACCOUNT_RESTRICTION 1327
#define ERROR_INVALID_LOGON_HOURS 1328
#define ERROR_INVALID_WORKSTATION 1329
#define ERROR_PASSWORD_EXPIRED 1330
#define ERROR_ACCOUNT_DISABLED 1331
#define ERROR_NONE_MAPPED 1332
#define ERROR_TOO_MANY_LUIDS_REQUESTED 1333
#define ERROR_LUIDS_EXHAUSTED 1334
#define ERROR_INVALID_SUB_AUTHORITY 1335
#define ERROR_INVALID_ACL 1336
#define ERROR_INVALID_SID 1337
#define ERROR_INVALID_SECURITY_DESCR 1338
#define ERROR_BAD_INHERITANCE_ACL 1340
#define ERROR_SERVER_DISABLED 1341
#define ERROR_SERVER_NOT_DISABLED 1342
#define ERROR_INVALID_ID_AUTHORITY 1343
#define ERROR_ALLOTTED_SPACE_EXCEEDED 1344
#define ERROR_INVALID_GROUP_ATTRIBUTES 1345
#define ERROR_BAD_IMPERSONATION_LEVEL 1346
#define ERROR_CANT_OPEN_ANONYMOUS 1347
#define ERROR_BAD_VALIDATION_CLASS 1348
#define ERROR_BAD_TOKEN_TYPE 1349
#define ERROR_NO_SECURITY_ON_OBJECT 1350
#define ERROR_CANT_ACCESS_DOMAIN_INFO 1351
#define ERROR_INVALID_SERVER_STATE 1352
#define ERROR_INVALID_DOMAIN_STATE 1353
#define ERROR_INVALID_DOMAIN_ROLE 1354
#define ERROR_NO_SUCH_DOMAIN 1355
#define ERROR_DOMAIN_EXISTS 1356
#define ERROR_DOMAIN_LIMIT_EXCEEDED 1357
#define ERROR_INTERNAL_DB_CORRUPTION 1358
#define ERROR_INTERNAL_ERROR 1359
#define ERROR_GENERIC_NOT_MAPPED 1360
#define ERROR_BAD_DESCRIPTOR_FORMAT 1361
#define ERROR_NOT_LOGON_PROCESS 1362
#define ERROR_LOGON_SESSION_EXISTS 1363
#define ERROR_NO_SUCH_PACKAGE 1364
#define ERROR_BAD_LOGON_SESSION_STATE 1365
#define ERROR_LOGON_SESSION_COLLISION 1366
#define ERROR_INVALID_LOGON_TYPE 1367
#define ERROR_CANNOT_IMPERSONATE 1368
#define ERROR_RXACT_INVALID_STATE 1369
#define ERROR_RXACT_COMMIT_FAILURE 1370
#define ERROR_SPECIAL_ACCOUNT 1371
#define ERROR_SPECIAL_GROUP 1372
#define ERROR_SPECIAL_USER 1373
#define ERROR_MEMBERS_PRIMARY_GROUP 1374
#define ERROR_TOKEN_ALREADY_IN_USE 1375
#define ERROR_NO_SUCH_ALIAS 1376
#define ERROR_MEMBER_NOT_IN_ALIAS 1377
#define ERROR_MEMBER_IN_ALIAS 1378
#define ERROR_ALIAS_EXISTS 1379
#define ERROR_LOGON_NOT_GRANTED 1380
#define ERROR_TOO_MANY_SECRETS 1381
#define ERROR_SECRET_TOO_LONG 1382
#define ERROR_INTERNAL_DB_ERROR 1383
#define ERROR_TOO_MANY_CONTEXT_IDS 1384
#define ERROR_LOGON_TYPE_NOT_GRANTED 1385
#define ERROR_NT_CROSS_ENCRYPTION_REQUIRED 1386
#define ERROR_NO_SUCH_MEMBER 1387
#define ERROR_INVALID_MEMBER 1388
#define ERROR_TOO_MANY_SIDS 1389
#define ERROR_LM_CROSS_ENCRYPTION_REQUIRED 1390
#define ERROR_NO_INHERITANCE 1391
#define ERROR_FILE_CORRUPT 1392
#define ERROR_DISK_CORRUPT 1393
#define ERROR_NO_USER_SESSION_KEY 1394
#define ERROR_LICENSE_QUOTA_EXCEEDED 1395
#define ERROR_INVALID_WINDOW_HANDLE 1400
#define ERROR_INVALID_MENU_HANDLE 1401
#define ERROR_INVALID_CURSOR_HANDLE 1402
#define ERROR_INVALID_ACCEL_HANDLE 1403
#define ERROR_INVALID_HOOK_HANDLE 1404
#define ERROR_INVALID_DWP_HANDLE 1405
#define ERROR_TLW_WITH_WSCHILD 1406
#define ERROR_CANNOT_FIND_WND_CLASS 1407
#define ERROR_WINDOW_OF_OTHER_THREAD 1408
#define ERROR_HOTKEY_ALREADY_REGISTERED 1409
#define ERROR_CLASS_ALREADY_EXISTS 1410
#define ERROR_CLASS_DOES_NOT_EXIST 1411
#define ERROR_CLASS_HAS_WINDOWS 1412
#define ERROR_INVALID_INDEX 1413
#define ERROR_INVALID_ICON_HANDLE 1414
#define ERROR_PRIVATE_DIALOG_INDEX 1415
#define ERROR_LISTBOX_ID_NOT_FOUND 1416
#define ERROR_NO_WILDCARD_CHARACTERS 1417
#define ERROR_CLIPBOARD_NOT_OPEN 1418
#define ERROR_HOTKEY_NOT_REGISTERED 1419
#define ERROR_WINDOW_NOT_DIALOG 1420
#define ERROR_CONTROL_ID_NOT_FOUND 1421
#define ERROR_INVALID_COMBOBOX_MESSAGE 1422
#define ERROR_WINDOW_NOT_COMBOBOX 1423
#define ERROR_INVALID_EDIT_HEIGHT 1424
#define ERROR_DC_NOT_FOUND 1425
#define ERROR_INVALID_HOOK_FILTER 1426
#define ERROR_INVALID_FILTER_PROC 1427
#define ERROR_HOOK_NEEDS_HMOD 1428
#define ERROR_GLOBAL_ONLY_HOOK 1429
#define ERROR_JOURNAL_HOOK_SET 1430
#define ERROR_HOOK_NOT_INSTALLED 1431
#define ERROR_INVALID_LB_MESSAGE 1432
#define ERROR_SETCOUNT_ON_BAD_LB 1433
#define ERROR_LB_WITHOUT_TABSTOPS 1434
#define ERROR_DESTROY_OBJECT_OF_OTHER_THREAD 1435
#define ERROR_CHILD_WINDOW_MENU 1436
#define ERROR_NO_SYSTEM_MENU 1437
#define ERROR_INVALID_MSGBOX_STYLE 1438
#define ERROR_INVALID_SPI_VALUE 1439
#define ERROR_SCREEN_ALREADY_LOCKED 1440
#define ERROR_HWNDS_HAVE_DIFF_PARENT 1441
#define ERROR_NOT_CHILD_WINDOW 1442
#define ERROR_INVALID_GW_COMMAND 1443
#define ERROR_INVALID_THREAD_ID 1444
#define ERROR_NON_MDICHILD_WINDOW 1445
#define ERROR_POPUP_ALREADY_ACTIVE 1446
#define ERROR_NO_SCROLLBARS 1447
#define ERROR_INVALID_SCROLLBAR_RANGE 1448
#define ERROR_INVALID_SHOWWIN_COMMAND 1449
#define ERROR_NO_SYSTEM_RESOURCES 1450
#define ERROR_NONPAGED_SYSTEM_RESOURCES 1451
#define ERROR_PAGED_SYSTEM_RESOURCES 1452
#define ERROR_WORKING_SET_QUOTA 1453
#define ERROR_PAGEFILE_QUOTA 1454
#define ERROR_COMMITMENT_LIMIT 1455
#define ERROR_MENU_ITEM_NOT_FOUND 1456
#define ERROR_INVALID_KEYBOARD_HANDLE 1457
#define ERROR_HOOK_TYPE_NOT_ALLOWED 1458
#define ERROR_REQUIRES_INTERACTIVE_WINDOWSTATION 1459
#define ERROR_EVENTLOG_FILE_CORRUPT 1500
#define ERROR_EVENTLOG_CANT_START 1501
#define ERROR_LOG_FILE_FULL 1502
#define ERROR_EVENTLOG_FILE_CHANGED 1503
#define RPC_S_INVALID_STRING_BINDING 1700
#define RPC_S_WRONG_KIND_OF_BINDING 1701
#define RPC_S_INVALID_BINDING 1702
#define RPC_S_PROTSEQ_NOT_SUPPORTED 1703
#define RPC_S_INVALID_RPC_PROTSEQ 1704
#define RPC_S_INVALID_STRING_UUID 1705
#define RPC_S_INVALID_ENDPOINT_FORMAT 1706
#define RPC_S_INVALID_NET_ADDR 1707
#define RPC_S_NO_ENDPOINT_FOUND 1708
#define RPC_S_INVALID_TIMEOUT 1709
#define RPC_S_OBJECT_NOT_FOUND 1710
#define RPC_S_ALREADY_REGISTERED 1711
#define RPC_S_TYPE_ALREADY_REGISTERED 1712
#define RPC_S_ALREADY_LISTENING 1713
#define RPC_S_NO_PROTSEQS_REGISTERED 1714
#define RPC_S_NOT_LISTENING 1715
#define RPC_S_UNKNOWN_MGR_TYPE 1716
#define RPC_S_UNKNOWN_IF 1717
#define RPC_S_NO_BINDINGS 1718
#define RPC_S_NO_PROTSEQS 1719
#define RPC_S_CANT_CREATE_ENDPOINT 1720
#define RPC_S_OUT_OF_RESOURCES 1721
#define RPC_S_SERVER_UNAVAILABLE 1722
#define RPC_S_SERVER_TOO_BUSY 1723
#define RPC_S_INVALID_NETWORK_OPTIONS 1724
#define RPC_S_NO_CALL_ACTIVE 1725
#define RPC_S_CALL_FAILED 1726
#define RPC_S_CALL_FAILED_DNE 1727
#define RPC_S_PROTOCOL_ERROR 1728
#define RPC_S_UNSUPPORTED_TRANS_SYN 1730
#define RPC_S_UNSUPPORTED_TYPE 1732
#define RPC_S_INVALID_TAG 1733
#define RPC_S_INVALID_BOUND 1734
#define RPC_S_NO_ENTRY_NAME 1735
#define RPC_S_INVALID_NAME_SYNTAX 1736
#define RPC_S_UNSUPPORTED_NAME_SYNTAX 1737
#define RPC_S_UUID_NO_ADDRESS 1739
#define RPC_S_DUPLICATE_ENDPOINT 1740
#define RPC_S_UNKNOWN_AUTHN_TYPE 1741
#define RPC_S_MAX_CALLS_TOO_SMALL 1742
#define RPC_S_STRING_TOO_LONG 1743
#define RPC_S_PROTSEQ_NOT_FOUND 1744
#define RPC_S_PROCNUM_OUT_OF_RANGE 1745
#define RPC_S_BINDING_HAS_NO_AUTH 1746
#define RPC_S_UNKNOWN_AUTHN_SERVICE 1747
#define RPC_S_UNKNOWN_AUTHN_LEVEL 1748
#define RPC_S_INVALID_AUTH_IDENTITY 1749
#define RPC_S_UNKNOWN_AUTHZ_SERVICE 1750
#define EPT_S_INVALID_ENTRY 1751
#define EPT_S_CANT_PERFORM_OP 1752
#define EPT_S_NOT_REGISTERED 1753
#define RPC_S_NOTHING_TO_EXPORT 1754
#define RPC_S_INCOMPLETE_NAME 1755
#define RPC_S_INVALID_VERS_OPTION 1756
#define RPC_S_NO_MORE_MEMBERS 1757
#define RPC_S_NOT_ALL_OBJS_UNEXPORTED 1758
#define RPC_S_INTERFACE_NOT_FOUND 1759
#define RPC_S_ENTRY_ALREADY_EXISTS 1760
#define RPC_S_ENTRY_NOT_FOUND 1761
#define RPC_S_NAME_SERVICE_UNAVAILABLE 1762
#define RPC_S_INVALID_NAF_ID 1763
#define RPC_S_CANNOT_SUPPORT 1764
#define RPC_S_NO_CONTEXT_AVAILABLE 1765
#define RPC_S_INTERNAL_ERROR 1766
#define RPC_S_ZERO_DIVIDE 1767
#define RPC_S_ADDRESS_ERROR 1768
#define RPC_S_FP_DIV_ZERO 1769
#define RPC_S_FP_UNDERFLOW 1770
#define RPC_S_FP_OVERFLOW 1771
#define RPC_X_NO_MORE_ENTRIES 1772
#define RPC_X_SS_CHAR_TRANS_OPEN_FAIL 1773
#define RPC_X_SS_CHAR_TRANS_SHORT_FILE 1774
#define RPC_X_SS_IN_NULL_CONTEXT 1775
#define RPC_X_SS_CONTEXT_DAMAGED 1777
#define RPC_X_SS_HANDLES_MISMATCH 1778
#define RPC_X_SS_CANNOT_GET_CALL_HANDLE 1779
#define RPC_X_NULL_REF_POINTER 1780
#define RPC_X_ENUM_VALUE_OUT_OF_RANGE 1781
#define RPC_X_BYTE_COUNT_TOO_SMALL 1782
#define RPC_X_BAD_STUB_DATA 1783
#define ERROR_INVALID_USER_BUFFER 1784
#define ERROR_UNRECOGNIZED_MEDIA 1785
#define ERROR_NO_TRUST_LSA_SECRET 1786
#define ERROR_NO_TRUST_SAM_ACCOUNT 1787
#define ERROR_TRUSTED_DOMAIN_FAILURE 1788
#define ERROR_TRUSTED_RELATIONSHIP_FAILURE 1789
#define ERROR_TRUST_FAILURE 1790
#define RPC_S_CALL_IN_PROGRESS 1791
#define ERROR_NETLOGON_NOT_STARTED 1792
#define ERROR_ACCOUNT_EXPIRED 1793
#define ERROR_REDIRECTOR_HAS_OPEN_HANDLES 1794
#define ERROR_PRINTER_DRIVER_ALREADY_INSTALLED 1795
#define ERROR_UNKNOWN_PORT 1796
#define ERROR_UNKNOWN_PRINTER_DRIVER 1797
#define ERROR_UNKNOWN_PRINTPROCESSOR 1798
#define ERROR_INVALID_SEPARATOR_FILE 1799
#define ERROR_INVALID_PRIORITY 1800
#define ERROR_INVALID_PRINTER_NAME 1801
#define ERROR_PRINTER_ALREADY_EXISTS 1802
#define ERROR_INVALID_PRINTER_COMMAND 1803
#define ERROR_INVALID_DATATYPE 1804
#define ERROR_INVALID_ENVIRONMENT 1805
#define RPC_S_NO_MORE_BINDINGS 1806
#define ERROR_NOLOGON_INTERDOMAIN_TRUST_ACCOUNT 1807
#define ERROR_NOLOGON_WORKSTATION_TRUST_ACCOUNT 1808
#define ERROR_NOLOGON_SERVER_TRUST_ACCOUNT 1809
#define ERROR_DOMAIN_TRUST_INCONSISTENT 1810
#define ERROR_SERVER_HAS_OPEN_HANDLES 1811
#define ERROR_RESOURCE_DATA_NOT_FOUND 1812
#define ERROR_RESOURCE_TYPE_NOT_FOUND 1813
#define ERROR_RESOURCE_NAME_NOT_FOUND 1814
#define ERROR_RESOURCE_LANG_NOT_FOUND 1815
#define ERROR_NOT_ENOUGH_QUOTA 1816
#define RPC_S_NO_INTERFACES 1817
#define RPC_S_CALL_CANCELLED 1818
#define RPC_S_BINDING_INCOMPLETE 1819
#define RPC_S_COMM_FAILURE 1820
#define RPC_S_UNSUPPORTED_AUTHN_LEVEL 1821
#define RPC_S_NO_PRINC_NAME 1822
#define RPC_S_NOT_RPC_ERROR 1823
#define RPC_S_UUID_LOCAL_ONLY 1824
#define RPC_S_SEC_PKG_ERROR 1825
#define RPC_S_NOT_CANCELLED 1826
#define RPC_X_INVALID_ES_ACTION 1827
#define RPC_X_WRONG_ES_VERSION 1828
#define RPC_X_WRONG_STUB_VERSION 1829
#define RPC_S_GROUP_MEMBER_NOT_FOUND 1898
#define EPT_S_CANT_CREATE 1899
#define RPC_S_INVALID_OBJECT 1900
#define ERROR_INVALID_TIME 1901
#define ERROR_INVALID_FORM_NAME 1902
#define ERROR_INVALID_FORM_SIZE 1903
#define ERROR_ALREADY_WAITING 1904
#define ERROR_PRINTER_DELETED 1905
#define ERROR_INVALID_PRINTER_STATE 1906
#define ERROR_PASSWORD_MUST_CHANGE 1907
#define ERROR_DOMAIN_CONTROLLER_NOT_FOUND 1908
#define ERROR_ACCOUNT_LOCKED_OUT 1909
#define ERROR_NO_BROWSER_SERVERS_FOUND 6118
#define ERROR_INVALID_PIXEL_FORMAT 2000
#define ERROR_BAD_DRIVER 2001
#define ERROR_INVALID_WINDOW_STYLE 2002
#define ERROR_METAFILE_NOT_SUPPORTED 2003
#define ERROR_TRANSFORM_NOT_SUPPORTED 2004
#define ERROR_CLIPPING_NOT_SUPPORTED 2005
#define ERROR_UNKNOWN_PRINT_MONITOR 3000
#define ERROR_PRINTER_DRIVER_IN_USE 3001
#define ERROR_SPOOL_FILE_NOT_FOUND 3002
#define ERROR_SPL_NO_STARTDOC 3003
#define ERROR_SPL_NO_ADDJOB 3004
#define ERROR_PRINT_PROCESSOR_ALREADY_INSTALLED 3005
#define ERROR_PRINT_MONITOR_ALREADY_INSTALLED 3006
#define ERROR_INVALID_PRINT_MONITOR 3007
#define ERROR_PRINT_MONITOR_IN_USE 3008
#define ERROR_PRINTER_HAS_JOBS_QUEUED 3009
#define ERROR_SUCCESS_REBOOT_REQUIRED 3010
#define ERROR_SUCCESS_RESTART_REQUIRED 3011
#define ERROR_WINS_INTERNAL 4000
#define ERROR_CAN_NOT_DEL_LOCAL_WINS 4001
#define ERROR_STATIC_INIT 4002
#define ERROR_INC_BACKUP 4003
#define ERROR_FULL_BACKUP 4004
#define ERROR_REC_NON_EXISTENT 4005
#define ERROR_RPL_NOT_ALLOWED 4006
#define ERROR_NO_BROWSER_SERVERS_FOUND 6118
#define FAILED(S) ((HRESULT)((S)<0))
#define SUCCEEDED(Status) ((HRESULT)(Status) >= 0)
#define FACILITY_WINDOWS	8
#define FACILITY_STORAGE	3
#define FACILITY_SSPI	9
#define FACILITY_SCARD	16
#define FACILITY_SETUPAPI	15
#define FACILITY_RPC	1
#define FACILITY_WIN32	7
#define FACILITY_CONTROL	10
#define FACILITY_NULL	0
#define FACILITY_MSMQ	14
#define FACILITY_MEDIASERVER	13
#define FACILITY_INTERNET	12
#define FACILITY_ITF	4
#define FACILITY_DISPATCH	2
#define FACILITY_CERT	11
#define FACILITY_NT_BIT 0x10000000
#define S_OK	0
#define S_FALSE	1
#define HRESULT_FROM_NT(x)	((HRESULT) ((x)|FACILITY_NT_BIT))
#define HRESULT_FROM_WIN32(x) ((HRESULT)(x) <= 0 ? ((HRESULT)(x)):((HRESULT) (((x) & 0x0000FFFF) | (FACILITY_WIN32 << 16) | 0x80000000)))
#define HRESULT_SEVERITY(hr) (((hr) >> 31) & 1)
#define SCODE_CODE(s)	((s)&0xFFFF)
#define GetScode(h)	((SCODE)(h))
#define NOERROR	S_OK
#define IS_ERROR(Status) ((unsigned long)(Status) >> 31 == SEVERITY_ERROR)
#define UNREFERENCED_PARAMETER(a)
#define CDERR_DIALOGFAILURE 0xFFFF
#define CDERR_GENERALCODES 0
#define CDERR_STRUCTSIZE 1
#define CDERR_INITIALIZATION 2
#define CDERR_NOTEMPLATE 3
#define CDERR_NOHINSTANCE 4
#define CDERR_LOADSTRFAILURE 5
#define CDERR_FINDRESFAILURE 6
#define CDERR_LOADRESFAILURE 7
#define CDERR_LOCKRESFAILURE 8
#define CDERR_MEMALLOCFAILURE 9
#define CDERR_MEMLOCKFAILURE 10
#define CDERR_NOHOOK 0xB
#define CDERR_REGISTERMSGFAIL 0xC
#define PDERR_PRINTERCODES 0x1000
#define PDERR_SETUPFAILURE 0x1001
#define PDERR_PARSEFAILURE 0x1002
#define PDERR_RETDEFFAILURE 0x1003
#define PDERR_LOADDRVFAILURE 0x1004
#define PDERR_GETDEVMODEFAIL 0x1005
#define PDERR_INITFAILURE 0x1006
#define PDERR_NODEVICES 0x1007
#define PDERR_NODEFAULTPRN 0x1008
#define PDERR_DNDMMISMATCH 0x1009
#define PDERR_CREATEICFAILURE 0x100A
#define PDERR_PRINTERNOTFOUND 0x100B
#define PDERR_DEFAULTDIFFERENT 0x100C
#define CFERR_CHOOSEFONTCODES 0x2000
#define CFERR_NOFONTS 0x2001
#define CFERR_MAXLESSTHANMIN 0x2002
#define FNERR_FILENAMECODES 0x3000
#define FNERR_SUBCLASSFAILURE 0x3001
#define FNERR_INVALIDFILENAME 0x3002
#define FNERR_BUFFERTOOSMALL 0x3003
#define FRERR_FINDREPLACECODES 0x4000
#define FRERR_BUFFERLENGTHZERO 0x4001
#define CCERR_CHOOSECOLORCODES 0x5000
#define	TYPE_E_BUFFERTOOSMALL	0x80028016
#define	TYPE_E_INVDATAREAD	0x80028018
#define	TYPE_E_UNSUPFORMAT	0x80028019
#define	TYPE_E_REGISTRYACCESS	0x8002801C
#define	TYPE_E_LIBNOTREGISTERED	0x8002801D
#define	TYPE_E_UNDEFINEDTYPE	0x80028027
#define	TYPE_E_QUALIFIEDNAMEDISALLOWED	0x80028028
#define	TYPE_E_INVALIDSTATE	0x80028029
#define	TYPE_E_WRONGTYPEKIND	0x8002802A
#define	TYPE_E_ELEMENTNOTFOUND	0x8002802B
#define	TYPE_E_AMBIGUOUSNAME	0x8002802C
#define	TYPE_E_NAMECONFLICT	0x8002802D
#define	TYPE_E_UNKNOWNLCID	0x8002802E
#define	TYPE_E_DLLFUNCTIONNOTFOUND	0x8002802F
#define	TYPE_E_BADMODULEKIND	0x800288BD
#define	TYPE_E_SIZETOOBIG	0x800288C5
#define	TYPE_E_DUPLICATEID	0x800288C6
#define	TYPE_E_INVALIDID	0x800288CF
#define	TYPE_E_TYPEMISMATCH	0x80028CA0
#define	TYPE_E_OUTOFBOUNDS	0x80028CA1
#define	TYPE_E_IOERROR	0x80028CA2
#define	TYPE_E_CANTCREATETMPFILE	0x80028CA3
#define	TYPE_E_CANTLOADLIBRARY	0x80029C4A
#define	TYPE_E_INCONSISTENTPROPFUNCS	0x80029C83
#define	TYPE_E_CIRCULARTYPE	0x80029C84
#define REGDB_E_FIRST	0x80040150
#define REGDB_E_LAST	0x8004015F
#define REGDB_S_FIRST	0x40150
#define REGDB_S_LAST	0x4015F
#define REGDB_E_READREGDB	_HRESULT_TYPEDEF_(0x80040150)
#define REGDB_E_WRITEREGDB	_HRESULT_TYPEDEF_(0x80040151)
#define REGDB_E_KEYMISSING	_HRESULT_TYPEDEF_(0x80040152)
#define REGDB_E_INVALIDVALUE	_HRESULT_TYPEDEF_(0x80040153)
#define REGDB_E_CLASSNOTREG	_HRESULT_TYPEDEF_(0x80040154)
#define REGDB_E_IIDNOTREG	_HRESULT_TYPEDEF_(0x80040155)
#define OLE_E_FIRST ((HRESULT)0x80040000)
#define OLE_E_LAST ((HRESULT)0x800400FF)
#define OLE_S_FIRST ((HRESULT)0x40000)
#define OLE_S_LAST ((HRESULT)0x400FF)
#define OLE_E_OLEVERB _HRESULT_TYPEDEF_(0x80040000)
#define OLE_E_ADVF _HRESULT_TYPEDEF_(0x80040001)
#define OLE_E_ENUM_NOMORE _HRESULT_TYPEDEF_(0x80040002)
#define OLE_E_ADVISENOTSUPPORTED _HRESULT_TYPEDEF_(0x80040003)
#define OLE_E_NOCONNECTION _HRESULT_TYPEDEF_(0x80040004)
#define OLE_E_NOTRUNNING _HRESULT_TYPEDEF_(0x80040005)
#define OLE_E_NOCACHE _HRESULT_TYPEDEF_(0x80040006)
#define OLE_E_BLANK _HRESULT_TYPEDEF_(0x80040007)
#define OLE_E_CLASSDIFF _HRESULT_TYPEDEF_(0x80040008)
#define OLE_E_CANT_GETMONIKER _HRESULT_TYPEDEF_(0x80040009)
#define OLE_E_CANT_BINDTOSOURCE _HRESULT_TYPEDEF_(0x8004000A)
#define OLE_E_STATIC _HRESULT_TYPEDEF_(0x8004000B)
#define OLE_E_PROMPTSAVECANCELLED _HRESULT_TYPEDEF_(0x8004000C)
#define OLE_E_INVALIDRECT _HRESULT_TYPEDEF_(0x8004000D)
#define OLE_E_WRONGCOMPOBJ _HRESULT_TYPEDEF_(0x8004000E)
#define OLE_E_INVALIDHWND _HRESULT_TYPEDEF_(0x8004000F)
#define OLE_E_NOT_INPLACEACTIVE _HRESULT_TYPEDEF_(0x80040010)
#define OLE_E_CANTCONVERT _HRESULT_TYPEDEF_(0x80040011)
#define OLE_E_NOSTORAGE _HRESULT_TYPEDEF_(0x80040012)
#define DV_E_FORMATETC _HRESULT_TYPEDEF_(0x80040064)
#define DV_E_DVTARGETDEVICE _HRESULT_TYPEDEF_(0x80040065)
#define DV_E_STGMEDIUM _HRESULT_TYPEDEF_(0x80040066)
#define DV_E_STATDATA _HRESULT_TYPEDEF_(0x80040067)
#define DV_E_LINDEX _HRESULT_TYPEDEF_(0x80040068)
#define DV_E_TYMED _HRESULT_TYPEDEF_(0x80040069)
#define DV_E_CLIPFORMAT _HRESULT_TYPEDEF_(0x8004006A)
#define DV_E_DVASPECT _HRESULT_TYPEDEF_(0x8004006B)
#define DV_E_DVTARGETDEVICE_SIZE _HRESULT_TYPEDEF_(0x8004006C)
#define DV_E_NOIVIEWOBJECT _HRESULT_TYPEDEF_(0x8004006D)
#define DRAGDROP_E_FIRST 0x80040100
#define DRAGDROP_E_LAST 0x8004010F
#define DRAGDROP_S_FIRST 0x40100
#define DRAGDROP_S_LAST 0x4010F
#define DRAGDROP_E_NOTREGISTERED _HRESULT_TYPEDEF_(0x80040100)
#define DRAGDROP_E_ALREADYREGISTERED _HRESULT_TYPEDEF_(0x80040101)
#define DRAGDROP_E_INVALIDHWND _HRESULT_TYPEDEF_(0x80040102)
#define CLASSFACTORY_E_FIRST 0x80040110
#define CLASSFACTORY_E_LAST 0x8004011F
#define CLASSFACTORY_S_FIRST 0x40110
#define CLASSFACTORY_S_LAST 0x4011F
#define CLASS_E_NOAGGREGATION _HRESULT_TYPEDEF_(0x80040110)
#define CLASS_E_CLASSNOTAVAILABLE _HRESULT_TYPEDEF_(0x80040111)
#define CLASS_E_NOTLICENSED _HRESULT_TYPEDEF_(0x80040112)
#define MARSHAL_E_FIRST 0x80040120
#define MARSHAL_E_LAST 0x8004012F
#define MARSHAL_S_FIRST 0x40120
#define MARSHAL_S_LAST 0x4012F
#define DATA_E_FIRST 0x80040130
#define DATA_E_LAST 0x8004013F
#define DATA_S_FIRST 0x40130
#define DATA_S_LAST 0x4013F
#define VIEW_E_FIRST 0x80040140
#define VIEW_E_LAST 0x8004014F
#define VIEW_S_FIRST 0x40140
#define VIEW_S_LAST 0x4014F
#define VIEW_E_DRAW _HRESULT_TYPEDEF_(0x80040140)
#define REGDB_E_FIRST 0x80040150
#define REGDB_E_LAST 0x8004015F
#define REGDB_S_FIRST 0x40150
#define REGDB_S_LAST 0x4015F
#define REGDB_E_READREGDB _HRESULT_TYPEDEF_(0x80040150)
#define REGDB_E_WRITEREGDB _HRESULT_TYPEDEF_(0x80040151)
#define REGDB_E_KEYMISSING _HRESULT_TYPEDEF_(0x80040152)
#define REGDB_E_INVALIDVALUE _HRESULT_TYPEDEF_(0x80040153)
#define REGDB_E_CLASSNOTREG _HRESULT_TYPEDEF_(0x80040154)
#define REGDB_E_IIDNOTREG _HRESULT_TYPEDEF_(0x80040155)
#define CAT_E_FIRST 0x80040160
#define CAT_E_LAST 0x80040161
#define CAT_E_CATIDNOEXIST _HRESULT_TYPEDEF_(0x80040160)
#define CAT_E_NODESCRIPTION _HRESULT_TYPEDEF_(0x80040161)
#define CS_E_FIRST 0x80040164
#define CS_E_LAST 0x8004016F
#define CS_E_PACKAGE_NOTFOUND _HRESULT_TYPEDEF_(0x80040164)
#define CS_E_NOT_DELETABLE _HRESULT_TYPEDEF_(0x80040165)
#define CS_E_CLASS_NOTFOUND _HRESULT_TYPEDEF_(0x80040166)
#define CS_E_INVALID_VERSION _HRESULT_TYPEDEF_(0x80040167)
#define CS_E_NO_CLASSSTORE _HRESULT_TYPEDEF_(0x80040168)
#define CS_E_OBJECT_NOTFOUND _HRESULT_TYPEDEF_(0x80040169)
#define CS_E_OBJECT_ALREADY_EXISTS _HRESULT_TYPEDEF_(0x8004016A)
#define CS_E_INVALID_PATH _HRESULT_TYPEDEF_(0x8004016B)
#define CS_E_NETWORK_ERROR _HRESULT_TYPEDEF_(0x8004016C)
#define CS_E_ADMIN_LIMIT_EXCEEDED _HRESULT_TYPEDEF_(0x8004016D)
#define CS_E_SCHEMA_MISMATCH _HRESULT_TYPEDEF_(0x8004016E)
#define CS_E_INTERNAL_ERROR _HRESULT_TYPEDEF_(0x8004016F)
#define CACHE_E_FIRST 0x80040170
#define CACHE_E_LAST 0x8004017F
#define CACHE_S_FIRST 0x40170
#define CACHE_S_LAST 0x4017F
#define CACHE_E_NOCACHE_UPDATED _HRESULT_TYPEDEF_(0x80040170)
#define OLEOBJ_E_FIRST 0x80040180
#define OLEOBJ_E_LAST 0x8004018F
#define OLEOBJ_S_FIRST 0x40180
#define OLEOBJ_S_LAST 0x4018F
#define OLEOBJ_E_NOVERBS _HRESULT_TYPEDEF_(0x80040180)
#define OLEOBJ_E_INVALIDVERB _HRESULT_TYPEDEF_(0x80040181)
#define CLIENTSITE_E_FIRST 0x80040190
#define CLIENTSITE_E_LAST 0x8004019F
#define CLIENTSITE_S_FIRST 0x40190
#define CLIENTSITE_S_LAST 0x4019F
#define INPLACE_E_NOTUNDOABLE _HRESULT_TYPEDEF_(0x800401A0)
#define INPLACE_E_NOTOOLSPACE _HRESULT_TYPEDEF_(0x800401A1)
#define INPLACE_E_FIRST 0x800401A0
#define INPLACE_E_LAST 0x800401AF
#define INPLACE_S_FIRST 0x401A0
#define INPLACE_S_LAST 0x401AF
#define ENUM_E_FIRST 0x800401B0
#define ENUM_E_LAST 0x800401BF
#define ENUM_S_FIRST 0x401B0
#define ENUM_S_LAST 0x401BF
#define CONVERT10_E_FIRST 0x800401C0
#define CONVERT10_E_LAST 0x800401CF
#define CONVERT10_S_FIRST 0x401C0
#define CONVERT10_S_LAST 0x401CF
#define CONVERT10_E_OLESTREAM_GET _HRESULT_TYPEDEF_(0x800401C0)
#define CONVERT10_E_OLESTREAM_PUT _HRESULT_TYPEDEF_(0x800401C1)
#define CONVERT10_E_OLESTREAM_FMT _HRESULT_TYPEDEF_(0x800401C2)
#define CONVERT10_E_OLESTREAM_BITMAP_TO_DIB _HRESULT_TYPEDEF_(0x800401C3)
#define CONVERT10_E_STG_FMT _HRESULT_TYPEDEF_(0x800401C4)
#define CONVERT10_E_STG_NO_STD_STREAM _HRESULT_TYPEDEF_(0x800401C5)
#define CONVERT10_E_STG_DIB_TO_BITMAP _HRESULT_TYPEDEF_(0x800401C6)
#define CLIPBRD_E_FIRST 0x800401D0
#define CLIPBRD_E_LAST 0x800401DF
#define CLIPBRD_S_FIRST 0x401D0
#define CLIPBRD_S_LAST 0x401DF
#define CLIPBRD_E_CANT_OPEN _HRESULT_TYPEDEF_(0x800401D0)
#define CLIPBRD_E_CANT_EMPTY _HRESULT_TYPEDEF_(0x800401D1)
#define CLIPBRD_E_CANT_SET _HRESULT_TYPEDEF_(0x800401D2)
#define CLIPBRD_E_BAD_DATA _HRESULT_TYPEDEF_(0x800401D3)
#define CLIPBRD_E_CANT_CLOSE _HRESULT_TYPEDEF_(0x800401D4)
#define MK_E_FIRST 0x800401E0
#define MK_E_LAST 0x800401EF
#define MK_S_FIRST 0x401E0
#define MK_S_LAST 0x401EF
#define MK_E_CONNECTMANUALLY _HRESULT_TYPEDEF_(0x800401E0)
#define MK_E_EXCEEDEDDEADLINE _HRESULT_TYPEDEF_(0x800401E1)
#define MK_E_NEEDGENERIC _HRESULT_TYPEDEF_(0x800401E2)
#define MK_E_UNAVAILABLE _HRESULT_TYPEDEF_(0x800401E3)
#define MK_E_SYNTAX _HRESULT_TYPEDEF_(0x800401E4)
#define MK_E_NOOBJECT _HRESULT_TYPEDEF_(0x800401E5)
#define MK_E_INVALIDEXTENSION _HRESULT_TYPEDEF_(0x800401E6)
#define MK_E_INTERMEDIATEINTERFACENOTSUPPORTED _HRESULT_TYPEDEF_(0x800401E7)
#define MK_E_NOTBINDABLE _HRESULT_TYPEDEF_(0x800401E8)
#define MK_E_NOTBOUND _HRESULT_TYPEDEF_(0x800401E9)
#define MK_E_CANTOPENFILE _HRESULT_TYPEDEF_(0x800401EA)
#define MK_E_MUSTBOTHERUSER _HRESULT_TYPEDEF_(0x800401EB)
#define MK_E_NOINVERSE _HRESULT_TYPEDEF_(0x800401EC)
#define MK_E_NOSTORAGE _HRESULT_TYPEDEF_(0x800401ED)
#define MK_E_NOPREFIX _HRESULT_TYPEDEF_(0x800401EE)
#define MK_E_ENUMERATION_FAILED _HRESULT_TYPEDEF_(0x800401EF)
#define CO_E_FIRST 0x800401F0
#define CO_E_LAST 0x800401FF
#define CO_S_FIRST 0x401F0
#define CO_S_LAST 0x401FF
#define CO_E_NOTINITIALIZED _HRESULT_TYPEDEF_(0x800401F0)
#define CO_E_ALREADYINITIALIZED _HRESULT_TYPEDEF_(0x800401F1)
#define CO_E_CANTDETERMINECLASS _HRESULT_TYPEDEF_(0x800401F2)
#define CO_E_CLASSSTRING _HRESULT_TYPEDEF_(0x800401F3)
#define CO_E_IIDSTRING _HRESULT_TYPEDEF_(0x800401F4)
#define CO_E_APPNOTFOUND _HRESULT_TYPEDEF_(0x800401F5)
#define CO_E_APPSINGLEUSE _HRESULT_TYPEDEF_(0x800401F6)
#define CO_E_ERRORINAPP _HRESULT_TYPEDEF_(0x800401F7)
#define CO_E_DLLNOTFOUND _HRESULT_TYPEDEF_(0x800401F8)
#define CO_E_ERRORINDLL _HRESULT_TYPEDEF_(0x800401F9)
#define CO_E_WRONGOSFORAPP _HRESULT_TYPEDEF_(0x800401FA)
#define CO_E_OBJNOTREG _HRESULT_TYPEDEF_(0x800401FB)
#define CO_E_OBJISREG _HRESULT_TYPEDEF_(0x800401FC)
#define CO_E_OBJNOTCONNECTED _HRESULT_TYPEDEF_(0x800401FD)
#define CO_E_APPDIDNTREG _HRESULT_TYPEDEF_(0x800401FE)
#define CO_E_RELEASED _HRESULT_TYPEDEF_(0x800401FF)
#define OLE_S_USEREG _HRESULT_TYPEDEF_(0x40000)
#define OLE_S_STATIC _HRESULT_TYPEDEF_(0x40001)
#define OLE_S_MAC_CLIPFORMAT _HRESULT_TYPEDEF_(0x40002)
#define DRAGDROP_S_DROP _HRESULT_TYPEDEF_(0x40100)
#define DRAGDROP_S_CANCEL _HRESULT_TYPEDEF_(0x40101)
#define DRAGDROP_S_USEDEFAULTCURSORS _HRESULT_TYPEDEF_(0x40102)
#define DATA_S_SAMEFORMATETC _HRESULT_TYPEDEF_(0x40130)
#define VIEW_S_ALREADY_FROZEN _HRESULT_TYPEDEF_(0x40140)
#define CACHE_S_FORMATETC_NOTSUPPORTED _HRESULT_TYPEDEF_(0x40170)
#define CACHE_S_SAMECACHE _HRESULT_TYPEDEF_(0x40171)
#define CACHE_S_SOMECACHES_NOTUPDATED _HRESULT_TYPEDEF_(0x40172)
#define OLEOBJ_S_INVALIDVERB _HRESULT_TYPEDEF_(0x40180)
#define OLEOBJ_S_CANNOT_DOVERB_NOW _HRESULT_TYPEDEF_(0x40181)
#define OLEOBJ_S_INVALIDHWND _HRESULT_TYPEDEF_(0x40182)
#define INPLACE_S_TRUNCATED _HRESULT_TYPEDEF_(0x401A0)
#define CONVERT10_S_NO_PRESENTATION _HRESULT_TYPEDEF_(0x401C0)
#define MK_S_REDUCED_TO_SELF _HRESULT_TYPEDEF_(0x401E2)
#define MK_S_ME _HRESULT_TYPEDEF_(0x401E4)
#define MK_S_HIM _HRESULT_TYPEDEF_(0x401E5)
#define MK_S_US _HRESULT_TYPEDEF_(0x401E6)
#define MK_S_MONIKERALREADYREGISTERED _HRESULT_TYPEDEF_(0x401E7)
#define CO_E_CLASS_CREATE_FAILED _HRESULT_TYPEDEF_(0x80080001)
#define CO_E_SCM_ERROR _HRESULT_TYPEDEF_(0x80080002)
#define CO_E_SCM_RPC_FAILURE _HRESULT_TYPEDEF_(0x80080003)
#define CO_E_BAD_PATH _HRESULT_TYPEDEF_(0x80080004)
#define CO_E_SERVER_EXEC_FAILURE _HRESULT_TYPEDEF_(0x80080005)
#define CO_E_OBJSRV_RPC_FAILURE _HRESULT_TYPEDEF_(0x80080006)
#define MK_E_NO_NORMALIZED _HRESULT_TYPEDEF_(0x80080007)
#define CO_E_SERVER_STOPPING _HRESULT_TYPEDEF_(0x80080008)
#define MEM_E_INVALID_ROOT _HRESULT_TYPEDEF_(0x80080009)
#define MEM_E_INVALID_LINK _HRESULT_TYPEDEF_(0x80080010)
#define MEM_E_INVALID_SIZE _HRESULT_TYPEDEF_(0x80080011)
#define CO_S_NOTALLINTERFACES _HRESULT_TYPEDEF_(0x80012)
#define DIGSIG_E_ENCODE	_HRESULT_TYPEDEF_(0x800B0005)
#define DIGSIG_E_DECODE	_HRESULT_TYPEDEF_(0x800B0006)
#define DIGSIG_E_EXTENSIBILITY	_HRESULT_TYPEDEF_(0x800B0007)
#define DIGSIG_E_CRYPTO	_HRESULT_TYPEDEF_(0x800B0008)
#define PERSIST_E_SIZEDEFINITE	_HRESULT_TYPEDEF_(0x800B0009)
#define PERSIST_E_SIZEINDEFINITE	_HRESULT_TYPEDEF_(0x800B000A)
#define PERSIST_E_NOTSELFSIZING	_HRESULT_TYPEDEF_(0x800B000B)
#define DISP_E_UNKNOWNINTERFACE _HRESULT_TYPEDEF_(0x80020001)
#define DISP_E_MEMBERNOTFOUND _HRESULT_TYPEDEF_(0x80020003)
#define DISP_E_PARAMNOTFOUND _HRESULT_TYPEDEF_(0x80020004)
#define DISP_E_TYPEMISMATCH _HRESULT_TYPEDEF_(0x80020005)
#define DISP_E_UNKNOWNNAME _HRESULT_TYPEDEF_(0x80020006)
#define DISP_E_NONAMEDARGS _HRESULT_TYPEDEF_(0x80020007)
#define DISP_E_BADVARTYPE _HRESULT_TYPEDEF_(0x80020008)
#define DISP_E_EXCEPTION _HRESULT_TYPEDEF_(0x80020009)
#define DISP_E_OVERFLOW _HRESULT_TYPEDEF_(0x8002000A)
#define DISP_E_BADINDEX _HRESULT_TYPEDEF_(0x8002000B)
#define DISP_E_UNKNOWNLCID _HRESULT_TYPEDEF_(0x8002000C)
#define DISP_E_ARRAYISLOCKED _HRESULT_TYPEDEF_(0x8002000D)
#define DISP_E_BADPARAMCOUNT _HRESULT_TYPEDEF_(0x8002000E)
#define DISP_E_PARAMNOTOPTIONAL _HRESULT_TYPEDEF_(0x8002000F)
#define DISP_E_BADCALLEE _HRESULT_TYPEDEF_(0x80020010)
#define DISP_E_NOTACOLLECTION _HRESULT_TYPEDEF_(0x80020011)
#define DISP_E_DIVBYZERO _HRESULT_TYPEDEF_(0x80020012)
#define DISP_E_BUFFERTOOSMALL _HRESULT_TYPEDEF_(0x80020013)
#define STG_E_INVALIDFUNCTION _HRESULT_TYPEDEF_(0x80030001)
#define STG_E_FILENOTFOUND _HRESULT_TYPEDEF_(0x80030002)
#define STG_E_PATHNOTFOUND _HRESULT_TYPEDEF_(0x80030003)
#define STG_E_TOOMANYOPENFILES _HRESULT_TYPEDEF_(0x80030004)
#define STG_E_ACCESSDENIED _HRESULT_TYPEDEF_(0x80030005)
#define STG_E_INVALIDHANDLE _HRESULT_TYPEDEF_(0x80030006)
#define STG_E_INSUFFICIENTMEMORY _HRESULT_TYPEDEF_(0x80030008)
#define STG_E_INVALIDPOINTER _HRESULT_TYPEDEF_(0x80030009)
#define STG_E_NOMOREFILES _HRESULT_TYPEDEF_(0x80030012)
#define STG_E_DISKISWRITEPROTECTED _HRESULT_TYPEDEF_(0x80030013)
#define STG_E_SEEKERROR _HRESULT_TYPEDEF_(0x80030019)
#define STG_E_WRITEFAULT _HRESULT_TYPEDEF_(0x8003001D)
#define STG_E_READFAULT _HRESULT_TYPEDEF_(0x8003001E)
#define STG_E_SHAREVIOLATION _HRESULT_TYPEDEF_(0x80030020)
#define STG_E_LOCKVIOLATION _HRESULT_TYPEDEF_(0x80030021)
#define STG_E_FILEALREADYEXISTS _HRESULT_TYPEDEF_(0x80030050)
#define STG_E_INVALIDPARAMETER _HRESULT_TYPEDEF_(0x80030057)
#define STG_E_MEDIUMFULL _HRESULT_TYPEDEF_(0x80030070)
#define STG_E_PROPSETMISMATCHED _HRESULT_TYPEDEF_(0x800300F0)
#define STG_E_ABNORMALAPIEXIT _HRESULT_TYPEDEF_(0x800300FA)
#define STG_E_INVALIDHEADER _HRESULT_TYPEDEF_(0x800300FB)
#define STG_E_INVALIDNAME _HRESULT_TYPEDEF_(0x800300FC)
#define STG_E_UNKNOWN _HRESULT_TYPEDEF_(0x800300FD)
#define STG_E_UNIMPLEMENTEDFUNCTION _HRESULT_TYPEDEF_(0x800300FE)
#define STG_E_INVALIDFLAG _HRESULT_TYPEDEF_(0x800300FF)
#define STG_E_INUSE _HRESULT_TYPEDEF_(0x80030100)
#define STG_E_NOTCURRENT _HRESULT_TYPEDEF_(0x80030101)
#define STG_E_REVERTED _HRESULT_TYPEDEF_(0x80030102)
#define STG_E_CANTSAVE _HRESULT_TYPEDEF_(0x80030103)
#define STG_E_OLDFORMAT _HRESULT_TYPEDEF_(0x80030104)
#define STG_E_OLDDLL _HRESULT_TYPEDEF_(0x80030105)
#define STG_E_SHAREREQUIRED _HRESULT_TYPEDEF_(0x80030106)
#define STG_E_NOTFILEBASEDSTORAGE _HRESULT_TYPEDEF_(0x80030107)
#define STG_E_EXTANTMARSHALLINGS _HRESULT_TYPEDEF_(0x80030108)
#define STG_E_DOCFILETOOLARGE _HRESULT_TYPEDEF_(0x80030111)
#define STG_E_NOTSIMPLEFORMAT _HRESULT_TYPEDEF_(0x80030112)
#define STG_E_INCOMPLETE _HRESULT_TYPEDEF_(0x80030201)
#define STG_E_TERMINATED _HRESULT_TYPEDEF_(0x80030202)
#define STG_E_DOCFILECORRUPT _HRESULT_TYPEDEF_(0x80030109)
#define STG_E_BADBASEADDRESS _HRESULT_TYPEDEF_(0x80030110)
#define STG_S_CONVERTED _HRESULT_TYPEDEF_(0x30200)
#define STG_S_BLOCK _HRESULT_TYPEDEF_(0x30201)
#define STG_S_RETRYNOW _HRESULT_TYPEDEF_(0x30202)
#define STG_S_MONITORING _HRESULT_TYPEDEF_(0x30203)
#define STG_S_MULTIPLEOPENS _HRESULT_TYPEDEF_(0x30204)
#define STG_S_CONSOLIDATIONFAILED _HRESULT_TYPEDEF_(0x30205)
#define STG_S_CANNOTCONSOLIDATE _HRESULT_TYPEDEF_(0x30206)
#define SCHED_E_SERVICE_NOT_LOCALSYSTEM	6200
#define SCHED_E_TRIGGER_NOT_FOUND	_HRESULT_TYPEDEF_(0x80041309L)
#define SCHED_E_TASK_NOT_READY		_HRESULT_TYPEDEF_(0x8004130AL)
#define SCHED_E_TASK_NOT_RUNNING	_HRESULT_TYPEDEF_(0x8004130BL)
#define SCHED_E_SERVICE_NOT_INSTALLED	_HRESULT_TYPEDEF_(0x8004130CL)
#define SCHED_E_CANNOT_OPEN_TASK	_HRESULT_TYPEDEF_(0x8004130DL)
#define SCHED_E_INVALID_TASK		_HRESULT_TYPEDEF_(0x8004130EL)
#define SCHED_E_ACCOUNT_INFORMATION_NOT_SET _HRESULT_TYPEDEF_(0x8004130FL)
#define SCHED_E_ACCOUNT_NAME_NOT_FOUND	_HRESULT_TYPEDEF_(0x80041310L)
#define SCHED_E_ACCOUNT_DBASE_CORRUPT	_HRESULT_TYPEDEF_(0x80041311L)
#define SCHED_E_NO_SECURITY_SERVICES	_HRESULT_TYPEDEF_(0x80041312L)
#define SCHED_E_UNKNOWN_OBJECT_VERSION	_HRESULT_TYPEDEF_(0x80041313L)
#define SCHED_E_UNSUPPORTED_ACCOUNT_OPTION _HRESULT_TYPEDEF_(0x80041314L)
#define SCHED_E_SERVICE_NOT_RUNNING	_HRESULT_TYPEDEF_(0x80041315L)
#define CERT_E_EXPIRED _HRESULT_TYPEDEF_(0x800B0101)
#define CERT_E_VALIDITYPERIODNESTING _HRESULT_TYPEDEF_(0x800B0102)
#define CERT_E_ROLE _HRESULT_TYPEDEF_(0x800B0103)
#define CERT_E_PATHLENCONST _HRESULT_TYPEDEF_(0x800B0104)
#define CERT_E_CRITICAL _HRESULT_TYPEDEF_(0x800B0105)
#define CERT_E_PURPOSE _HRESULT_TYPEDEF_(0x800B0106)
#define CERT_E_ISSUERCHAINING _HRESULT_TYPEDEF_(0x800B0107)
#define CERT_E_MALFORMED _HRESULT_TYPEDEF_(0x800B0108)
#define CERT_E_UNTRUSTEDROOT _HRESULT_TYPEDEF_(0x800B0109)
#define CERT_E_CHAINING _HRESULT_TYPEDEF_(0x800B010A)
#define CERT_E_REVOKED _HRESULT_TYPEDEF_(0x800B010C)
#define CERT_E_UNTRUSTEDTESTROOT _HRESULT_TYPEDEF_(0x800B010D)
#define CERT_E_REVOCATION_FAILURE _HRESULT_TYPEDEF_(0x800B010E)
#define CERT_E_CN_NO_MATCH _HRESULT_TYPEDEF_(0x800B010F)
#define CERT_E_WRONG_USAGE _HRESULT_TYPEDEF_(0x800B0110)
#define SEVERITY_ERROR 1
#define OR_INVALID_OXID	1910
#define OR_INVALID_OID	1911
#define OR_INVALID_SET	1912
#define MAKE_SCODE(sev,fac,code) ((SCODE) (((unsigned long)(sev)<<31) | ((unsigned long)(fac)<<16) | ((unsigned long)(code))) )
#define HRESULT_FACILITY(hr) (((hr) >> 16) & 0x1fff)
#define HRESULT_CODE(hr) (hr&0xFFFF)
#define EXTERN_C extern
#define ResultFromScode(sc) ((HRESULT) (sc))
#define UNALIGNED
#define WHEEL_DELTA 120

enum VARENUM { VT_EMPTY=0,VT_NULL=1, VT_I2=2, VT_I4=3, VT_R4=4, VT_R8=5,
 VT_CY=6,VT_DATE=7, VT_BSTR=8, VT_DISPATCH=9, VT_ERROR=10, VT_BOOL=11,
 VT_VARIANT=12,VT_UNKNOWN=13, VT_DECIMAL=14, VT_I1=16, VT_UI1=17,
 VT_UI2=18,VT_UI4=19, VT_I8=20, VT_UI8=21, VT_INT=22, VT_UINT=23,
 VT_VOID=24,VT_HRESULT=25, VT_PTR=26, VT_SAFEARRAY=27, VT_CARRAY=28,
 VT_USERDEFINED=29,VT_LPSTR=30, VT_LPWSTR=31, VT_RECORD=36, VT_FILETIME=64,
 VT_BLOB=65,VT_STREAM=66, VT_STORAGE=67, VT_STREAMED_OBJECT=68, VT_STORED_OBJECT=69,
 VT_BLOB_OBJECT=70,VT_CF=71, VT_CLSID=72, VT_VERSIONED_STREAM=73, VT_BSTR_BLOB=0xfff,
 VT_VECTOR=0x1000,VT_ARRAY=0x2000, VT_BYREF=0x4000, VT_RESERVED=0x8000,
 VT_ILLEGAL=0xffff,VT_ILLEGALMASKED=0xfff, VT_TYPEMASK=0xfff
};

//#ifndef _VARIANT_BOOL_DEFINED
//typedef short VARIANT_BOOL;
//typedef short _VARIANT_BOOL;
//#define _VARIANT_BOOL_DEFINED
//#endif

#define VARIANT_TRUE ((VARIANT_BOOL)-1)
#define VARIANT_FALSE ((VARIANT_BOOL)0)

BOOL GdiGradientFill(
  HDC        hdc,
  PTRIVERTEX pVertex,
  ULONG      nVertex,
  PVOID      pMesh,
  ULONG      nCount,
  ULONG      ulMode
);

#endif
