;	Module:fred
%include "mccasm.inc"

	extern fopen
	extern fclose
	extern ftell
	extern fseek
	extern fread
	extern fwrite
	extern remove
	extern printf
	extern sprintf
	extern fprintf
	extern puts
	extern fgets
	extern fgetc
	extern fputc
	extern ungetc
	extern getchar
	extern feof
	extern malloc
	extern realloc
	extern free
	extern exit
	extern system
	extern tolower
	extern toupper
	extern isalpha
	extern memcpy
	extern memset
	extern memcmp
	extern strlen
	extern strcpy
	extern strcat
	extern strcmp
	extern strncmp
	extern strchr
	extern clock
	global m_imin
;	Proc:m_imin
	segment .text
m_imin:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; a 16  
	cmp D0,[Dframe+24]	; b 24  
	jg L158
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; a 16  
	jmp L157
; ------------------------------ jump
	jmp	L159
; ------------------------------ label
L158:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; b 24  
	jmp L157
; ------------------------------ label
L159:
; ------------------------------ label
L157:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global m_imax
;	Proc:m_imax
m_imax:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; a 16  
	cmp D0,[Dframe+24]	; b 24  
	jl L161
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; a 16  
	jmp L160
; ------------------------------ jump
	jmp	L162
; ------------------------------ label
L161:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; b 24  
	jmp L160
; ------------------------------ label
L162:
; ------------------------------ label
L160:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global m_min
;	Proc:m_min
m_min:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; a 16  
	cmp D0,[Dframe+24]	; b 24  
	ja L164
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; a 16  
	jmp L163
; ------------------------------ jump
	jmp	L165
; ------------------------------ label
L164:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; b 24  
	jmp L163
; ------------------------------ label
L165:
; ------------------------------ label
L163:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global m_max
;	Proc:m_max
m_max:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; a 16  
	cmp D0,[Dframe+24]	; b 24  
	jb L167
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; a 16  
	jmp L166
; ------------------------------ jump
	jmp	L168
; ------------------------------ label
L167:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; b 24  
	jmp L166
; ------------------------------ label
L168:
; ------------------------------ label
L166:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global start
;	Proc:start
start:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call starttiming
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call initdata
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call getinputoptions
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showcaption
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowoptions]
	mov dword[Dframe-40],A0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; T1  
	and A0,A0
	jz L170
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showoptions
	add Dstack, 32
; ------------------------------ label
L170:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fwriteheaders]
	mov dword[Dframe-48],A0	; T2  
; ------------------------------ jumpfalse
	mov A0,[Dframe-48]	; T2  
	and A0,A0
	jz L171
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call writeheaders
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ label
L171:
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[fverbose]
	and A0,A0
	jnz L172
; ------------------------------ jumptrue
	mov A0,[fquiet]
	and A0,A0
	jnz L172
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[inputfiles]
	mov D1,8
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [outfile]
	sub Dstack,32
	mov D10,KK1
	mov D11,KK2
	mov D12,[Dframe-56]	; T3  
	mov D13,KK3
	call printf
	add Dstack, 48
; ------------------------------ label
L172:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call initsearchdirs
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call initlogfile
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowpaths]
	mov dword[Dframe-64],A0	; T4  
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; T4  
	and A0,A0
	jz L173
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showsearchdirs
	add Dstack, 32
; ------------------------------ label
L173:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,1
	and A0,A1
	mov [Dframe-72],A0	; T5  
; ------------------------------ jumpfalse
	mov A0,[Dframe-72]	; T5  
	and A0,A0
	jz L174
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call do_loadmodules
	add Dstack, 32
; ------------------------------ label
L174:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,2
	and A0,A1
	mov [Dframe-80],A0	; T6  
; ------------------------------ jumpfalse
	mov A0,[Dframe-80]	; T6  
	and A0,A0
	jz L175
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call do_preprocess
	add Dstack, 32
; ------------------------------ label
L175:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,4
	and A0,A1
	mov [Dframe-88],A0	; T7  
; ------------------------------ jumpfalse
	mov A0,[Dframe-88]	; T7  
	and A0,A0
	jz L176
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call do_parsemodules
	add Dstack, 32
; ------------------------------ label
L176:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,8
	and A0,A1
	mov [Dframe-96],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-96]	; T8  
	and A0,A0
	jz L177
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call do_gen1
	add Dstack, 32
; ------------------------------ label
L177:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,16
	and A0,A1
	mov [Dframe-104],A0	; T9  
; ------------------------------ jumpfalse
	mov A0,[Dframe-104]	; T9  
	and A0,A0
	jz L178
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call do_gen2
	add Dstack, 32
; ------------------------------ label
L178:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,32
	and A0,A1
	mov [Dframe-112],A0	; T10  
; ------------------------------ jumpfalse
	mov A0,[Dframe-112]	; T10  
	and A0,A0
	jz L179
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call do_linkmodules
	add Dstack, 32
; ------------------------------ label
L179:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-128],D0	; T12  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-128]	; T12  
	mov A0,A0
	mov [Dframe-120],A0	; T11  
; ------------------------------ move
	mov A0,[Dframe-120]	; T11  
	mov [progend],A0
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,64
	and A0,A1
	mov [Dframe-136],A0	; T13  
; ------------------------------ jumpfalse
	mov A0,[Dframe-136]	; T13  
	and A0,A0
	jz L180
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call do_runprog
	add Dstack, 32
; ------------------------------ label
L180:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showoutput
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowlog]
	mov dword[Dframe-144],A0	; T14  
; ------------------------------ jumpfalse
	mov A0,[Dframe-144]	; T14  
	and A0,A0
	jz L181
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call closelogfile
	add Dstack, 32
; ------------------------------ label
L181:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[fverbose]
	and A0,A0
	jz L182
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK4
	mov D11,KK5
	call printf
	add Dstack, 32
; ------------------------------ label
L182:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-12],A0	; stopcode -12  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-12]	; stopcode -12  
	call exit
	add Dstack, 32
; ------------------------------ label
L169:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

	global main
;	Proc:main
main:
	sub	Dstack,152
	sub	Dstack,8
	lea	D0,[Dstack+8]
	push	D0
	sub	Dstack,32
	lea	D0,[Dstack+196]
	mov	[Dstack],D0
	lea	D0,[Dstack+184]
	mov	[Dstack+8],D0
	lea	D0,[Dstack+176]
	mov	[Dstack+16],D0
	mov	A0,0
	mov	[Dstack+24],A0
	mov	D10,[Dstack]
	mov	D11,[Dstack+8]
	mov	D12,[Dstack+16]
	mov	D13,[Dstack+24]
	extern __getmainargs
	call	__getmainargs
	add	Dstack,48
	sub	Dstack,32
	mov	A0,[Dstack+180]
	mov	[Dstack],A0
	mov	D0,[Dstack+168]
	mov	[Dstack+8],D0
	mov	D10,[Dstack]
	mov	D11,[Dstack+8]
	call	.main

.main:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; params0 24  
	mov [Dframe-16],D0	; params -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+16]	; nparams 16  
	mov [nsysparams],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nsysparams]
	cmp A0,32
	jle L184
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK6
	mov D11,KK7
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ label
L184:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-8],A0	; i -8  
; ------------------------------ jump
	jmp	L187
; ------------------------------ label
L188:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-8]	; i -8  
	mov A1,1
	sub A0,A1
	mov [Dframe-48],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T4  
	mov qword[Dframe-40],D0	; T3  
; ------------------------------ indexlv
	lea D0,[sysparams]
	mov D1,[Dframe-40]	; T3  
	lea D0, [D0+D1*8]
	mov [Dframe-32],D0	; T2  
; ------------------------------ sub
	mov A0,[Dframe-8]	; i -8  
	mov A1,1
	sub A0,A1
	mov [Dframe-72],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T7  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-16]	; params -16  
	mov D1,[Dframe-64]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-56],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov D13,[Dframe-32]	; T2 *
	mov qword[D13],D0
; ------------------------------ label
L185:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-8]	; i -8  
; ------------------------------ label
L187:
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; i -8  
	cmp A0,[Dframe+16]	; nparams 16  
	jle L188
; ------------------------------ label
L186:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call clock
	mov [Dframe-88],A0	; T9  
	add Dstack, 32
; ------------------------------ softconv
	mov A0,[Dframe-88]	; T9  
	mov [Dframe-80],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-80]	; T8  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call start
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call clock
	mov [Dframe-96],A0	; T10  
	add Dstack, 32
; ------------------------------ softconv
	mov A0,[Dframe-4]	; t -4  
	mov [Dframe-104],A0	; T11  
; ------------------------------ sub
	mov A0,[Dframe-96]	; T10  
	mov A1,[Dframe-104]	; T11  
	sub A0,A1
	mov [Dframe-112],A0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK8
	mov D11,KK9
	mov A12,[Dframe-112]	; T12  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L183
; ------------------------------ label
L183:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	extern exit
	sub Dstack,40
	mov D10,D0
	call exit
;	End

	global m_dotslice
;	Proc:m_dotslice
m_dotslice:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; i 24  
	cmp A0,[Dframe+32]	; j 32  
	jl L190
; ------------------------------ stmt
; ------------------------------ shr
	mov D0,[Dframe+16]	; a 16  
	mov B10,[Dframe+32]	; j 32  
	shr D0, cl
	mov [Dframe-8],D0	; T1  
; ------------------------------ sub
	mov A0,[Dframe+24]	; i 24  
	mov A1,[Dframe+32]	; j 32  
	sub A0,A1
	mov [Dframe-16],A0	; T2  
; ------------------------------ add
	mov A0,[Dframe-16]	; T2  
	mov A1,1
	add A0,A1
	mov [Dframe-24],A0	; T3  
; ------------------------------ shl
	mov D0,-1
	mov B10,[Dframe-24]	; T3  
	shl D0, cl
	mov [Dframe-32],D0	; T4  
; ------------------------------ inot
	mov D0,[Dframe-32]	; T4  
	not D0
	mov [Dframe-40],D0	; T5  
; ------------------------------ iand
	mov D0,[Dframe-8]	; T1  
	mov D1,[Dframe-40]	; T5  
	and D0,D1
	mov [Dframe-48],D0	; T6  
; ------------------------------ returnx
	mov D0,[Dframe-48]	; T6  
	jmp L189
; ------------------------------ jump
	jmp	L191
; ------------------------------ label
L190:
; ------------------------------ stmt
; ------------------------------ shr
	mov D0,[Dframe+16]	; a 16  
	mov B10,[Dframe+24]	; i 24  
	shr D0, cl
	mov [Dframe-56],D0	; T7  
; ------------------------------ sub
	mov A0,[Dframe+32]	; j 32  
	mov A1,[Dframe+24]	; i 24  
	sub A0,A1
	mov [Dframe-64],A0	; T8  
; ------------------------------ add
	mov A0,[Dframe-64]	; T8  
	mov A1,1
	add A0,A1
	mov [Dframe-72],A0	; T9  
; ------------------------------ shl
	mov D0,-1
	mov B10,[Dframe-72]	; T9  
	shl D0, cl
	mov [Dframe-80],D0	; T10  
; ------------------------------ inot
	mov D0,[Dframe-80]	; T10  
	not D0
	mov [Dframe-88],D0	; T11  
; ------------------------------ iand
	mov D0,[Dframe-56]	; T7  
	mov D1,[Dframe-88]	; T11  
	and D0,D1
	mov [Dframe-96],D0	; T12  
; ------------------------------ returnx
	mov D0,[Dframe-96]	; T12  
	jmp L189
; ------------------------------ label
L191:
; ------------------------------ label
L189:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global m_anddotslice
;	Proc:m_anddotslice
m_anddotslice:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; i 24  
	cmp A0,[Dframe+32]	; j 32  
	jl L193
; ------------------------------ stmt
; ------------------------------ shr
	mov D0,[Dframe+16]	; a 16  
	mov B10,[Dframe+32]	; j 32  
	shr D0, cl
	mov [Dframe-8],D0	; T1  
; ------------------------------ sub
	mov A0,[Dframe+24]	; i 24  
	mov A1,[Dframe+32]	; j 32  
	sub A0,A1
	mov [Dframe-16],A0	; T2  
; ------------------------------ add
	mov A0,[Dframe-16]	; T2  
	mov A1,1
	add A0,A1
	mov [Dframe-24],A0	; T3  
; ------------------------------ shl
	mov D0,-1
	mov B10,[Dframe-24]	; T3  
	shl D0, cl
	mov [Dframe-32],D0	; T4  
; ------------------------------ inot
	mov D0,[Dframe-32]	; T4  
	not D0
	mov [Dframe-40],D0	; T5  
; ------------------------------ iand
	mov D0,[Dframe-8]	; T1  
	mov D1,[Dframe-40]	; T5  
	and D0,D1
	mov [Dframe-48],D0	; T6  
; ------------------------------ shl
	mov D0,[Dframe-48]	; T6  
	mov B10,[Dframe+32]	; j 32  
	shl D0, cl
	mov [Dframe-56],D0	; T7  
; ------------------------------ returnx
	mov D0,[Dframe-56]	; T7  
	jmp L192
; ------------------------------ jump
	jmp	L194
; ------------------------------ label
L193:
; ------------------------------ stmt
; ------------------------------ shr
	mov D0,[Dframe+16]	; a 16  
	mov B10,[Dframe+24]	; i 24  
	shr D0, cl
	mov [Dframe-64],D0	; T8  
; ------------------------------ sub
	mov A0,[Dframe+32]	; j 32  
	mov A1,[Dframe+24]	; i 24  
	sub A0,A1
	mov [Dframe-72],A0	; T9  
; ------------------------------ add
	mov A0,[Dframe-72]	; T9  
	mov A1,1
	add A0,A1
	mov [Dframe-80],A0	; T10  
; ------------------------------ shl
	mov D0,-1
	mov B10,[Dframe-80]	; T10  
	shl D0, cl
	mov [Dframe-88],D0	; T11  
; ------------------------------ inot
	mov D0,[Dframe-88]	; T11  
	not D0
	mov [Dframe-96],D0	; T12  
; ------------------------------ iand
	mov D0,[Dframe-64]	; T8  
	mov D1,[Dframe-96]	; T12  
	and D0,D1
	mov [Dframe-104],D0	; T13  
; ------------------------------ shl
	mov D0,[Dframe-104]	; T13  
	mov B10,[Dframe+24]	; i 24  
	shl D0, cl
	mov [Dframe-112],D0	; T14  
; ------------------------------ returnx
	mov D0,[Dframe-112]	; T14  
	jmp L192
; ------------------------------ label
L194:
; ------------------------------ label
L192:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global pcm_alloc
;	Proc:pcm_alloc
pcm_alloc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 208

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; n 16  
	cmp A0,2048
	jle L196
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; n 16  
	call pcm_getac
	mov [Dframe-24],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [alloccode],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[alloccode]
	mov qword[Dframe-48],D0	; T4  
; ------------------------------ index
	lea D0,[allocupper]
	mov D1,[Dframe-48]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; T3  
; ------------------------------ softconv
	mov A0,[Dframe-40]	; T3  
	mov [Dframe-32],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-32]	; T2  
	mov [allocbytes],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[allocbytes]
	call allocmem
	mov [Dframe-56],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; p -8  
	and D0,D0
	jnz L197
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK10
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L197:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L195
; ------------------------------ label
L196:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ index
	lea D0,[sizeindextable]
	mov D1,[Dframe-72]	; T7  
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T6  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-80]	; T8  
	mov [alloccode],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[alloccode]
	cmp A0,0
	jnz L198
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [alloccode],A0
; ------------------------------ label
L198:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[alloccode]
	mov qword[Dframe-104],D0	; T11  
; ------------------------------ index
	lea D0,[allocupper]
	mov D1,[Dframe-104]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-96],A0	; T10  
; ------------------------------ softconv
	mov A0,[Dframe-96]	; T10  
	mov [Dframe-88],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-88]	; T9  
	mov [allocbytes],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[alloccode]
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ index
	lea D0,[freelist]
	mov D1,[Dframe-128]	; T14  
	mov D0, [D0+D1*8]
	mov [Dframe-120],D0	; T13  
; ------------------------------ move
	mov D0,[Dframe-120]	; T13  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; p -8  
	and D0,D0
	jz L199
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[alloccode]
	mov qword[Dframe-144],D0	; T16  
; ------------------------------ indexlv
	lea D0,[freelist]
	mov D1,[Dframe-144]	; T16  
	lea D0, [D0+D1*8]
	mov [Dframe-136],D0	; T15  
; ------------------------------ widen
	movsx D0,dword[alloccode]
	mov qword[Dframe-176],D0	; T20  
; ------------------------------ index
	lea D0,[freelist]
	mov D1,[Dframe-176]	; T20  
	mov D0, [D0+D1*8]
	mov [Dframe-168],D0	; T19  
; ------------------------------ getptr
	mov D0,[Dframe-168]	; T19  
	mov D0, [D0]
	mov [Dframe-160],D0	; T18  
; ------------------------------ move
	mov D0,[Dframe-160]	; T18  
	mov D13,[Dframe-136]	; T15 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L195
; ------------------------------ label
L199:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[pcheapptr]
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[allocbytes]
	mov qword[Dframe-184],D0	; T21  
; ------------------------------ addto
	mov D0,[pcheapptr]
	mov D1,[Dframe-184]	; T21  
	add D0,D1
	mov [pcheapptr],D0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[pcheapptr]
	cmp D0,[pcheapend]
	jb L200
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[allocbytes]
	call pcm_newblock
	mov [Dframe-200],D0	; T23  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-200]	; T23  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L195
; ------------------------------ label
L200:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L195
; ------------------------------ label
L195:
; ------------------------------ hardret
	add Dstack, 208
	pop Dframe
	ret
;	End

	global pcm_free
;	Proc:pcm_free
pcm_free:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; n 24  
	cmp A0,2048
	jle L202
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call free
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L201
; ------------------------------ label
L202:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+16]	; p 16  
	and D0,D0
	jz L203
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; n 24  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[sizeindextable]
	mov D1,[Dframe-24]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-32]	; T3  
	mov [Dframe-4],A0	; acode -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; acode -4  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[allocupper]
	mov D1,[Dframe-56]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T5  
; ------------------------------ widen
	mov A0,dword[Dframe-48]	; T5  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ subto
	mov D0,[smallmemtotal]
	mov D1,[Dframe-40]	; T4  
	sub D0,D1
	mov [smallmemtotal],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; acode -4  
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ index
	lea D0,[freelist]
	mov D1,[Dframe-80]	; T9  
	mov D0, [D0+D1*8]
	mov [Dframe-72],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-72]	; T8  
	mov D13,[Dframe+16]	; p 16 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; acode -4  
	mov qword[Dframe-96],D0	; T11  
; ------------------------------ indexlv
	lea D0,[freelist]
	mov D1,[Dframe-96]	; T11  
	lea D0, [D0+D1*8]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov D13,[Dframe-88]	; T10 *
	mov qword[D13],D0
; ------------------------------ label
L203:
; ------------------------------ label
L201:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global pcm_freeac
;	Proc:pcm_freeac
pcm_freeac:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; alloc 24  
	mov qword[Dframe-24],D0	; T3  
; ------------------------------ index
	lea D0,[allocupper]
	mov D1,[Dframe-24]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; T2  
; ------------------------------ softconv
	mov A0,[Dframe-16]	; T2  
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,[Dframe-8]	; T1  
	call pcm_free
	add Dstack, 32
; ------------------------------ label
L204:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global pcm_copymem4
;	Proc:pcm_copymem4
pcm_copymem4:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; n 32  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe+24]	; q 24  
	mov D12,[Dframe-8]	; T1  
	call memcpy
	add Dstack, 32
; ------------------------------ label
L205:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global pcm_clearmem
;	Proc:pcm_clearmem
pcm_clearmem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; n 24  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,0
	mov D12,[Dframe-8]	; T1  
	call memset
	add Dstack, 32
; ------------------------------ label
L206:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global pcm_init
;	Proc:pcm_init
	segment .data
	align 8
pcm_init.limit:
	dq 2147483648
	align 4
pcm_init.finit:
	dd 0
	segment .text
pcm_init:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[pcm_init.finit]
	and A0,A0
	jz L208
; ------------------------------ stmt
; ------------------------------ return
	jmp L207
; ------------------------------ label
L208:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call pcm_newblock
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L211
; ------------------------------ label
L212:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-8],A0	; j -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,16
	mov [Dframe-12],A0	; k -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L213
; ------------------------------ label
L215:
; ------------------------------ stmt
; ------------------------------ shl
	mov A0,[Dframe-12]	; k -12  
	mov B10,1
	shl A0, cl
	mov [Dframe-12],A0	; k -12  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-8]	; j -8  
; ------------------------------ label
L213:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[Dframe-12]	; k -12  
	jg L215
; ------------------------------ label
L214:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-48],D0	; T2  
; ------------------------------ indexlv
	lea D0,[sizeindextable]
	mov D1,[Dframe-48]	; T2  
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T1  
; ------------------------------ move
	mov A0,[Dframe-8]	; j -8  
	mov D13,[Dframe-40]	; T1 *
	mov byte [D13],B0
; ------------------------------ label
L209:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L211:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,2048
	jle L212
; ------------------------------ label
L210:
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[allocupper]
	mov D1,4
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T3  
; ------------------------------ move
	mov A0,16
	mov D13,[Dframe-56]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,16
	mov [Dframe-32],D0	; size -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L218
; ------------------------------ label
L219:
; ------------------------------ stmt
; ------------------------------ multo
	mov D0,[Dframe-32]	; size -32  
	mov D1,2
	mul D1
	mov [Dframe-32],D0	; size -32  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-72],D0	; T5  
; ------------------------------ indexlv
	lea D0,[allocupper]
	mov D1,[Dframe-72]	; T5  
	lea D0, [D0+D1*4]
	mov [Dframe-64],D0	; T4  
; ------------------------------ truncate
	mov D0,[Dframe-32]	; size -32  
	mov A0,A0
	mov [Dframe-80],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-80]	; T6  
	mov D13,[Dframe-64]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; size -32  
	cmp D0,33554432
	jl L220
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4]	; i -4  
	mov [Dframe-12],A0	; k -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1
; ------------------------------ label
L220:
; ------------------------------ label
L216:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L218:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,27
	jle L219
; ------------------------------ label
L217:
; ------------------------------ stmt
; ------------------------------ label
L1: ;<L11>
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-12]	; k -12  
	mov A1,1
	add A0,A1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L223
; ------------------------------ label
L224:
; ------------------------------ stmt
; ------------------------------ addto
	mov D0,[Dframe-32]	; size -32  
	mov D1,33554432
	add D0,D1
	mov [Dframe-32],D0	; size -32  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; size -32  
	cmp D0,[pcm_init.limit]
	jge L225
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-96],D0	; T8  
; ------------------------------ indexlv
	lea D0,[allocupper]
	mov D1,[Dframe-96]	; T8  
	lea D0, [D0+D1*4]
	mov [Dframe-88],D0	; T7  
; ------------------------------ truncate
	mov D0,[Dframe-32]	; size -32  
	mov A0,A0
	mov [Dframe-104],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-104]	; T9  
	mov D13,[Dframe-88]	; T7 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ truncate
	mov D0,[Dframe-32]	; size -32  
	mov A0,A0
	mov [Dframe-112],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-112]	; T10  
	mov [maxmemory],A0
; ------------------------------ jump
	jmp	L226
; ------------------------------ label
L225:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [maxalloccode],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2
; ------------------------------ label
L226:
; ------------------------------ label
L221:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L223:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,255
	jle L224
; ------------------------------ label
L222:
; ------------------------------ stmt
; ------------------------------ label
L2: ;<L15>
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [pcm_init.finit],A0
; ------------------------------ label
L207:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global pcm_getac
;	Proc:pcm_getac
pcm_getac:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; size 16  
	cmp A0,2048
	jg L228
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; size 16  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[sizeindextable]
	mov D1,[Dframe-16]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ returnx
	mov A0,[Dframe-24]	; T3  
	jmp L227
; ------------------------------ label
L228:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe+16]	; size 16  
	mov A1,255
	add A0,A1
	mov [Dframe-32],A0	; T4  
; ------------------------------ shr
	mov A0,[Dframe-32]	; T4  
	mov B10,8
	sar A0, cl
	mov [Dframe+16],A0	; size 16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; size 16  
	cmp A0,2048
	jg L229
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; size 16  
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ index
	lea D0,[sizeindextable]
	mov D1,[Dframe-48]	; T6  
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T5  
	mov dword[Dframe-56],A0	; T7  
; ------------------------------ add
	mov A0,[Dframe-56]	; T7  
	mov A1,8
	add A0,A1
	mov [Dframe-64],A0	; T8  
; ------------------------------ returnx
	mov A0,[Dframe-64]	; T8  
	jmp L227
; ------------------------------ label
L229:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe+16]	; size 16  
	mov A1,63
	add A0,A1
	mov [Dframe-72],A0	; T9  
; ------------------------------ shr
	mov A0,[Dframe-72]	; T9  
	mov B10,6
	sar A0, cl
	mov [Dframe+16],A0	; size 16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; size 16  
	cmp A0,2048
	jg L230
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; size 16  
	mov qword[Dframe-88],D0	; T11  
; ------------------------------ index
	lea D0,[sizeindextable]
	mov D1,[Dframe-88]	; T11  
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T10  
	mov dword[Dframe-96],A0	; T12  
; ------------------------------ add
	mov A0,[Dframe-96]	; T12  
	mov A1,14
	add A0,A1
	mov [Dframe-104],A0	; T13  
; ------------------------------ returnx
	mov A0,[Dframe-104]	; T13  
	jmp L227
; ------------------------------ label
L230:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+16]	; size 16  
	mov A1,2048
	sub A0,A1
	mov [Dframe-112],A0	; T14  
; ------------------------------ add
	mov A0,[Dframe-112]	; T14  
	mov A1,2047
	add A0,A1
	mov [Dframe-120],A0	; T15  
; ------------------------------ div
	mov A0,[Dframe-120]	; T15  
	mov A1,2048
	cdq 
	idiv A1
	mov [Dframe-128],A0	; T16  
; ------------------------------ add
	mov A0,[Dframe-128]	; T16  
	mov A1,22
	add A0,A1
	mov [Dframe+16],A0	; size 16  
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; size 16  
	jmp L227
; ------------------------------ label
L227:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

	global pcm_newblock
;	Proc:pcm_newblock
	segment .bss
	align 4,resb 1
pcm_newblock.totalheapsize:	resb 4
	segment .text
pcm_newblock:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[pcm_newblock.totalheapsize]
	mov A1,2097152
	add A0,A1
	mov [pcm_newblock.totalheapsize],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,2097152
	call allocmem
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; p -8  
	cmp D0,0
	jnz L232
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK11
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L232:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [pcheapptr],D0
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe-8]	; p -8  
	mov D1,2097152
	lea D0, [D0+D1]
	mov [pcheapend],D0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[pcheapstart]
	cmp D0,0
	jnz L233
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [pcheapstart],D0
; ------------------------------ label
L233:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; itemsize 16  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ addto
	mov D0,[pcheapptr]
	mov D1,[Dframe-24]	; T2  
	add D0,D1
	mov [pcheapptr],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L231
; ------------------------------ label
L231:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global pcm_round
;	Proc:pcm_round
	segment .data
	align 4
pcm_round.allocbytes:
	dd 0
	dd 16
	dd 32
	dd 64
	dd 128
	dd 256
	dd 512
	dd 1024
	dd 2048
	segment .text
pcm_round:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; n 16  
	cmp A0,2048
	jle L235
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; n 16  
	jmp L234
; ------------------------------ jump
	jmp	L236
; ------------------------------ label
L235:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ index
	lea D0,[sizeindextable]
	mov D1,[Dframe-32]	; T4  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-40],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T5  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[pcm_round.allocbytes]
	mov D1,[Dframe-16]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-8],A0	; T1  
; ------------------------------ returnx
	mov A0,[Dframe-8]	; T1  
	jmp L234
; ------------------------------ label
L236:
; ------------------------------ label
L234:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global pcm_array
;	Proc:pcm_array
pcm_array:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; n 16  
	cmp A0,2048
	jg L238
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; n 16  
	call pcm_round
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-16]	; T1  
	jmp L237
; ------------------------------ jump
	jmp	L239
; ------------------------------ label
L238:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2048
	mov [Dframe-4],A0	; m -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L240
; ------------------------------ label
L242:
; ------------------------------ stmt
; ------------------------------ shlto
	mov A0,[Dframe-4]	; m -4  
	mov A10,1
	shl A0, cl
	mov [Dframe-4],A0	; m -4  
; ------------------------------ label
L240:
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; n 16  
	cmp A0,[Dframe-4]	; m -4  
	jg L242
; ------------------------------ label
L241:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; m -4  
	jmp L237
; ------------------------------ label
L239:
; ------------------------------ label
L237:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global pcm_printfreelist
;	Proc:pcm_printfreelist
pcm_printfreelist:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK12
	mov D11,KK13
	mov A12,[Dframe+16]	; size 16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L244
; ------------------------------ label
L246:
; ------------------------------ stmt
; ------------------------------ truncate
	mov D0,[Dframe+24]	; p 24  
	mov A0,A0
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK14
	mov A11,[Dframe-8]	; T1  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; p 24  
	mov A0, [D0]
	mov [Dframe-40],A0	; T5  
; ------------------------------ widen
	mov A0,dword[Dframe-40]	; T5  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-32]	; T4  
	mov [Dframe+24],D0	; p 24  
; ------------------------------ label
L244:
; ------------------------------ jumptrue
	mov D0,[Dframe+24]	; p 24  
	and D0,D0
	jnz L246
; ------------------------------ label
L245:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK15
	call puts
	add Dstack, 32
; ------------------------------ label
L243:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global pcm_diags
;	Proc:pcm_diags
pcm_diags:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK16
	mov D11,KK17
	mov D12,[Dframe+16]	; caption 16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,16
	mov [Dframe-8],A0	; m -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L250
; ------------------------------ label
L251:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-32],D0	; T3  
; ------------------------------ index
	lea D0,[freelist]
	mov D1,[Dframe-32]	; T3  
	mov D0, [D0+D1*8]
	mov [Dframe-24],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; m -8  
	mov D11,[Dframe-24]	; T2  
	call pcm_printfreelist
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ shlto
	mov A0,[Dframe-8]	; m -8  
	mov A10,1
	shl A0, cl
	mov [Dframe-8],A0	; m -8  
; ------------------------------ label
L248:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L250:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,8
	jle L251
; ------------------------------ label
L249:
; ------------------------------ label
L247:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global pcm_allocz
;	Proc:pcm_allocz
pcm_allocz:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; n 16  
	call pcm_alloc
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov A11,0
	mov D12,[Dframe-24]	; T2  
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L252
; ------------------------------ label
L252:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global pcm_copyheapstring
;	Proc:pcm_copyheapstring
pcm_copyheapstring:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	call strlen
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ add
	mov D0,[Dframe-32]	; T2  
	mov D1,1
	add D0,D1
	mov [Dframe-40],D0	; T3  
; ------------------------------ truncate
	mov D0,[Dframe-40]	; T3  
	mov A0,A0
	mov [Dframe-24],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [Dframe-12],A0	; n -12  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-12]	; n -12  
	call pcm_alloc
	mov [Dframe-48],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T4  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; n -12  
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; q -8  
	mov D11,[Dframe+16]	; s 16  
	mov D12,[Dframe-72]	; T7  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L253
; ------------------------------ label
L253:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:addtomemalloc
addtomemalloc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK18
	mov D11,KK19
	mov D12,[Dframe+16]	; ptr 16  
	mov A13,[Dframe+24]	; size 24  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L257
; ------------------------------ label
L258:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T3  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[memalloctable]
	mov D1,[Dframe-24]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; T1  
	cmp D0,[Dframe+16]	; ptr 16  
	jnz L259
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK20
	mov D11,KK21
	mov D12,[Dframe+16]	; ptr 16  
	mov D13,KK22
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L259:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-56],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T6  
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ index
	lea D0,[memalloctable]
	mov D1,[Dframe-48]	; T5  
	mov D0, [D0+D1*8]
	mov [Dframe-40],D0	; T4  
; ------------------------------ jumpcc
	mov D0,[Dframe-40]	; T4  
	cmp D0,0
	jnz L260
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-80],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T9  
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ indexlv
	lea D0,[memalloctable]
	mov D1,[Dframe-72]	; T8  
	lea D0, [D0+D1*8]
	mov [Dframe-64],D0	; T7  
; ------------------------------ move
	mov D0,[Dframe+16]	; ptr 16  
	mov D13,[Dframe-64]	; T7 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-104],A0	; T12  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T12  
	mov qword[Dframe-96],D0	; T11  
; ------------------------------ indexlv
	lea D0,[memallocsize]
	mov D1,[Dframe-96]	; T11  
	lea D0, [D0+D1*4]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov A0,[Dframe+24]	; size 24  
	mov D13,[Dframe-88]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ return
	jmp L254
; ------------------------------ label
L260:
; ------------------------------ label
L255:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L257:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,100000
	jle L258
; ------------------------------ label
L256:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L254:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:removefrommemalloc
removefrommemalloc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK23
	mov D11,KK24
	mov D12,[Dframe+16]	; ptr 16  
	mov A13,[Dframe+24]	; size 24  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L264
; ------------------------------ label
L265:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T3  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[memalloctable]
	mov D1,[Dframe-24]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; T1  
	cmp D0,[Dframe+16]	; ptr 16  
	jnz L266
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-56],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T6  
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ index
	lea D0,[memallocsize]
	mov D1,[Dframe-48]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,[Dframe+24]	; size 24  
	jz L267
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-80],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T9  
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ index
	lea D0,[memallocsize]
	mov D1,[Dframe-72]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-64],A0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe-64]	; T7  
	push D13
	push qword KK25
	mov A13,[Dframe+24]	; size 24  
	push D13
	sub Dstack,32
	mov D10,KK26
	mov D11,KK27
	mov D12,[Dframe+16]	; ptr 16  
	mov D13,KK28
	call printf
	add Dstack, 64
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK29
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L267:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-104],A0	; T12  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T12  
	mov qword[Dframe-96],D0	; T11  
; ------------------------------ indexlv
	lea D0,[memalloctable]
	mov D1,[Dframe-96]	; T11  
	lea D0, [D0+D1*8]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-88]	; T10 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ return
	jmp L261
; ------------------------------ label
L266:
; ------------------------------ label
L262:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L264:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,100000
	jle L265
; ------------------------------ label
L263:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe+24]	; size 24  
	push D13
	sub Dstack,32
	mov D10,KK30
	mov D11,KK31
	mov D12,[Dframe+16]	; ptr 16  
	mov D13,KK32
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK33
	call abortprogram
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L261:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global allocmem
;	Proc:allocmem
allocmem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; T1  
	call malloc
	mov [Dframe-24],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T2  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; p -8  
	and D0,D0
	jz L269
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L268
; ------------------------------ label
L269:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK34
	mov A11,[Dframe+16]	; n 16  
	mov A12,[memtotal]
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK35
	call abortprogram
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L268
; ------------------------------ label
L268:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global reallocmem
;	Proc:reallocmem
reallocmem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; n 24  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe-8]	; T1  
	call realloc
	mov [Dframe-16],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T2  
	mov [Dframe+16],D0	; p 16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+16]	; p 16  
	and D0,D0
	jz L271
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L270
; ------------------------------ label
L271:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK36
	mov A11,[Dframe+24]	; n 24  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK37
	call abortprogram
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L270
; ------------------------------ label
L270:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global abortprogram
;	Proc:abortprogram
abortprogram:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK38
	mov D11,[Dframe+16]	; s 16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK39
	mov D11,KK40
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L272:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global getfilesize
;	Proc:getfilesize
getfilesize:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; handlex 16  
	call ftell
	mov [Dframe-24],A0	; T2  
	add Dstack, 32
; ------------------------------ softconv
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-16],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; p -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; handlex 16  
	mov A11,0
	mov A12,2
	call fseek
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; handlex 16  
	call ftell
	mov [Dframe-40],A0	; T4  
	add Dstack, 32
; ------------------------------ softconv
	mov A0,[Dframe-40]	; T4  
	mov [Dframe-32],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-32]	; T3  
	mov [Dframe-8],A0	; size -8  
; ------------------------------ stmt
; ------------------------------ softconv
	mov A0,[Dframe-4]	; p -4  
	mov [Dframe-48],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; handlex 16  
	mov A11,[Dframe-48]	; T5  
	mov A12,0
	call fseek
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ softconv
	mov A0,[Dframe-8]	; size -8  
	mov [Dframe-56],A0	; T6  
; ------------------------------ returnx
	mov A0,[Dframe-56]	; T6  
	jmp L273
; ------------------------------ label
L273:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global readrandom
;	Proc:readrandom
readrandom:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; handlex 16  
	mov A11,[Dframe+32]	; offset 32  
	mov A12,0
	call fseek
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; size 40  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; mem 24  
	mov D11,1
	mov D12,[Dframe-16]	; T2  
	mov D13,[Dframe+16]	; handlex 16  
	call fread
	add Dstack, 32
; ------------------------------ label
L274:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global writerandom
;	Proc:writerandom
writerandom:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; handlex 16  
	mov A11,[Dframe+32]	; offset 32  
	mov A12,0
	call fseek
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; size 40  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; mem 24  
	mov D11,1
	mov D12,[Dframe-16]	; T2  
	mov D13,[Dframe+16]	; handlex 16  
	call fwrite
	add Dstack, 32
; ------------------------------ label
L275:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global readfile
;	Proc:readfile
readfile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; filename 16  
	mov D11,KK41
	call fopen
	mov [Dframe-40],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T1  
	mov [Dframe-8],D0	; f -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; f -8  
	cmp D0,0
	jnz L277
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L276
; ------------------------------ label
L277:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	call getfilesize
	mov [Dframe-48],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T2  
	mov [Dframe-12],A0	; size -12  
; ------------------------------ move
	mov A0,[Dframe-12]	; size -12  
	mov [rfsize],A0
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-12]	; size -12  
	mov A1,4
	add A0,A1
	mov [Dframe-64],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T4  
	mov qword[Dframe-56],D0	; T3  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-56]	; T3  
	call malloc
	mov [Dframe-72],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-72]	; T5  
	mov [Dframe-24],D0	; m -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-24]	; m -24  
	cmp D0,0
	jnz L278
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L276
; ------------------------------ label
L278:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	mov D11,[Dframe-24]	; m -24  
	mov A12,0
	mov A13,[Dframe-12]	; size -12  
	call readrandom
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; size -12  
	mov qword[Dframe-80],D0	; T6  
; ------------------------------ indexref
	mov D0,[Dframe-24]	; m -24  
	mov D1,[Dframe-80]	; T6  
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; p -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,26
	mov D13,[Dframe-32]	; p -32 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; p -32  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T7  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-88]	; T7 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	call fclose
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; m -24  
	jmp L276
; ------------------------------ label
L276:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global writefile
;	Proc:writefile
writefile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; filename 16  
	mov D11,KK42
	call fopen
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; f -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; f -8  
	cmp D0,0
	jnz L280
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L279
; ------------------------------ label
L280:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	mov D11,[Dframe+24]	; data 24  
	mov A12,0
	mov A13,[Dframe+32]	; size 32  
	call writerandom
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	call fclose
	mov [Dframe-24],A0	; T2  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-24]	; T2  
	jmp L279
; ------------------------------ label
L279:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global checkfile
;	Proc:checkfile
checkfile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; file 16  
	mov D11,KK43
	call fopen
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; f -8  
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; f -8  
	and D0,D0
	jz L282
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	call fclose
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L281
; ------------------------------ label
L282:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L281
; ------------------------------ label
L281:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global readlinen
;	Proc:readlinen
readlinen:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 336

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; handlex 16  
	cmp D0,0
	jnz L284
; ------------------------------ stmt
; ------------------------------ label
L284:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe+24]	; buffer 24 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+32]	; size 32  
	mov A1,2
	sub A0,A1
	mov [Dframe-128],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; buffer 24  
	mov A11,[Dframe-128]	; T1  
	mov D12,[Dframe+16]	; handlex 16  
	call fgets
	mov [Dframe-136],D0	; T2  
	add Dstack, 32
; ------------------------------ jumpcc
	mov D0,[Dframe-136]	; T2  
	cmp D0,0
	jnz L285
; ------------------------------ stmt
; ------------------------------ return
	jmp L283
; ------------------------------ label
L285:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; buffer 24  
	call strlen
	mov [Dframe-152],D0	; T4  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-152]	; T4  
	mov A0,A0
	mov [Dframe-144],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-144]	; T3  
	mov [Dframe-12],A0	; n -12  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; n -12  
	cmp A0,0
	jnz L286
; ------------------------------ stmt
; ------------------------------ return
	jmp L283
; ------------------------------ label
L286:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; n -12  
	mov qword[Dframe-168],D0	; T6  
; ------------------------------ indexref
	mov D0,[Dframe+24]	; buffer 24  
	mov D1,[Dframe-168]	; T6  
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T5  
; ------------------------------ sub
	mov D0,[Dframe-160]	; T5  
	mov D1,1
	sub D0,D1
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-113],B0	; crseen -113  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L287
; ------------------------------ label
L289:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-192],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T9  
	mov dword[Dframe-200],A0	; T10  
; ------------------------------ truncate
	mov A0,[Dframe-200]	; T10  
	and D0,255
	mov [Dframe-184],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T8  
	mov dword[Dframe-176],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T7  
	cmp A0,13
	jz L291
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-224],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-224]	; T13  
	mov dword[Dframe-232],A0	; T14  
; ------------------------------ truncate
	mov A0,[Dframe-232]	; T14  
	and D0,255
	mov [Dframe-216],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T12  
	mov dword[Dframe-208],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T11  
	cmp A0,10
	jnz L290
; ------------------------------ label
L291:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-113],B0	; crseen -113  
; ------------------------------ label
L290:
; ------------------------------ stmt
; ------------------------------ postdecrx
	mov D0,[Dframe-8]	; p -8  
	dec qword[Dframe-8]	; p -8  
	mov qword[Dframe-248],D0	; T16  
; ------------------------------ move
	mov D0,[Dframe-248]	; T16  
	mov [Dframe-240],D0	; T15  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-240]	; T15 *
	mov byte [D13],B0
; ------------------------------ label
L287:
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; p -8  
	cmp D0,[Dframe+24]	; buffer 24  
	jb L292
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-272],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-272]	; T19  
	mov dword[Dframe-280],A0	; T20  
; ------------------------------ truncate
	mov A0,[Dframe-280]	; T20  
	and D0,255
	mov [Dframe-264],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-264]	; T18  
	mov dword[Dframe-256],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T17  
	cmp A0,13
	jz L289
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-304],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-304]	; T23  
	mov dword[Dframe-312],A0	; T24  
; ------------------------------ truncate
	mov A0,[Dframe-312]	; T24  
	and D0,255
	mov [Dframe-296],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-296]	; T22  
	mov dword[Dframe-288],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T21  
	cmp A0,10
	jz L289
; ------------------------------ label
L292:
; ------------------------------ label
L288:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-113]	; crseen -113  
	mov dword[Dframe-320],A0	; T25  
; ------------------------------ jumptrue
	mov A0,[Dframe-320]	; T25  
	and A0,A0
	jnz L293
; ------------------------------ add
	mov A0,[Dframe-12]	; n -12  
	mov A1,4
	add A0,A1
	mov [Dframe-328],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T26  
	cmp A0,[Dframe+32]	; size 32  
	jle L293
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK44
	mov A11,[Dframe+32]	; size 32  
	mov A12,[Dframe-12]	; n -12  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK45
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L293:
; ------------------------------ label
L283:
; ------------------------------ hardret
	add Dstack, 336
	pop Dframe
	ret
;	End

	global iconvlcn
;	Proc:iconvlcn
iconvlcn:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+24]	; n 24  
	mov [Dframe-4],A0	; av_1 -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L295
; ------------------------------ label
L297:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ truncate
	mov A0,[Dframe-40]	; T4  
	and D0,255
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-16],A0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16]	; T1  
	call tolower
	mov [Dframe-48],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T5  
	mov D13,[Dframe+16]	; s 16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe+16]	; s 16  
; ------------------------------ label
L295:
; ------------------------------ postdecrx
	mov A0,[Dframe-4]	; av_1 -4  
	dec dword[Dframe-4]	; av_1 -4  
	mov dword[Dframe-56],A0	; T6  
; ------------------------------ jumptrue
	mov A0,[Dframe-56]	; T6  
	and A0,A0
	jnz L297
; ------------------------------ label
L296:
; ------------------------------ label
L294:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global iconvucn
;	Proc:iconvucn
iconvucn:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+24]	; n 24  
	mov [Dframe-4],A0	; av_2 -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L299
; ------------------------------ label
L301:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ truncate
	mov A0,[Dframe-40]	; T4  
	and D0,255
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-16],A0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16]	; T1  
	call toupper
	mov [Dframe-48],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T5  
	mov D13,[Dframe+16]	; s 16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe+16]	; s 16  
; ------------------------------ label
L299:
; ------------------------------ postdecrx
	mov A0,[Dframe-4]	; av_2 -4  
	dec dword[Dframe-4]	; av_2 -4  
	mov dword[Dframe-56],A0	; T6  
; ------------------------------ jumptrue
	mov A0,[Dframe-56]	; T6  
	and A0,A0
	jnz L301
; ------------------------------ label
L300:
; ------------------------------ label
L298:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global convlcstring
;	Proc:convlcstring
convlcstring:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L303
; ------------------------------ label
L305:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ truncate
	mov A0,[Dframe-32]	; T4  
	and D0,255
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-8]	; T1  
	call tolower
	mov [Dframe-40],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-40]	; T5  
	mov D13,[Dframe+16]	; s 16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe+16]	; s 16  
; ------------------------------ label
L303:
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-56],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T7  
	mov dword[Dframe-64],A0	; T8  
; ------------------------------ truncate
	mov A0,[Dframe-64]	; T8  
	and D0,255
	mov [Dframe-48],B0	; T6  
; ------------------------------ jumptrue
	mov B0,[Dframe-48]	; T6  
	and B0,B0
	jnz L305
; ------------------------------ label
L304:
; ------------------------------ label
L302:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global convucstring
;	Proc:convucstring
convucstring:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L307
; ------------------------------ label
L309:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ truncate
	mov A0,[Dframe-32]	; T4  
	and D0,255
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-8]	; T1  
	call toupper
	mov [Dframe-40],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-40]	; T5  
	mov D13,[Dframe+16]	; s 16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe+16]	; s 16  
; ------------------------------ label
L307:
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-56],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T7  
	mov dword[Dframe-64],A0	; T8  
; ------------------------------ truncate
	mov A0,[Dframe-64]	; T8  
	and D0,255
	mov [Dframe-48],B0	; T6  
; ------------------------------ jumptrue
	mov B0,[Dframe-48]	; T6  
	and B0,B0
	jnz L309
; ------------------------------ label
L308:
; ------------------------------ label
L306:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global changeext
;	Proc:changeext
	segment .bss
changeext.newfile:	resb 260
	segment .text
changeext:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 336

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[changeext.newfile]
	mov [Dframe-56],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-56]	; T1  
	mov D11,[Dframe+16]	; s 16  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; newext 24  
	mov B0, [D0]
	mov [Dframe-80],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T4  
	mov dword[Dframe-88],A0	; T5  
; ------------------------------ truncate
	mov A0,[Dframe-88]	; T5  
	and D0,255
	mov [Dframe-72],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T3  
	mov dword[Dframe-64],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T2  
	cmp A0,0
	jnz L311
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[Dframe-32]	; newext2 -32  
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T6  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-96]	; T6 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[Dframe-32]	; newext2 -32  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T7  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-104]	; T7 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L312
; ------------------------------ label
L311:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; newext 24  
	mov B0, [D0]
	mov [Dframe-128],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T10  
	mov dword[Dframe-136],A0	; T11  
; ------------------------------ truncate
	mov A0,[Dframe-136]	; T11  
	and D0,255
	mov [Dframe-120],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T9  
	mov dword[Dframe-112],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T8  
	cmp A0,46
	jnz L313
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; newext2 -32  
	mov [Dframe-144],D0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-144]	; T12  
	mov D11,[Dframe+24]	; newext 24  
	call strcpy
	add Dstack, 32
; ------------------------------ jump
	jmp	L314
; ------------------------------ label
L313:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; newext2 -32  
	mov [Dframe-152],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-152]	; T13  
	mov D11,KK46
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; newext2 -32  
	mov [Dframe-160],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-160]	; T14  
	mov D11,[Dframe+24]	; newext 24  
	call strcat
	add Dstack, 32
; ------------------------------ label
L314:
; ------------------------------ label
L312:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	mov A11,1
	call extractext
	mov [Dframe-168],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-168]	; T15  
	mov [Dframe-40],D0	; sext -40  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-40]	; sext -40  
	mov B0, [D0]
	mov [Dframe-192],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T18  
	mov dword[Dframe-200],A0	; T19  
; ------------------------------ truncate
	mov A0,[Dframe-200]	; T19  
	and D0,255
	mov [Dframe-184],B0	; T17  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T17  
	mov dword[Dframe-176],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T16  
	cmp A0,0
	jnz L315
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[changeext.newfile]
	mov [Dframe-208],D0	; T20  
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; newext2 -32  
	mov [Dframe-216],D0	; T21  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-208]	; T20  
	mov D11,[Dframe-216]	; T21  
	call strcat
	add Dstack, 32
; ------------------------------ jump
	jmp	L316
; ------------------------------ label
L315:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-40]	; sext -40  
	mov B0, [D0]
	mov [Dframe-240],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-240]	; T24  
	mov dword[Dframe-248],A0	; T25  
; ------------------------------ truncate
	mov A0,[Dframe-248]	; T25  
	and D0,255
	mov [Dframe-232],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T23  
	mov dword[Dframe-224],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T22  
	cmp A0,46
	jnz L317
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[changeext.newfile]
	mov [Dframe-256],D0	; T26  
; ------------------------------ indexref
	lea D0,[Dframe-32]	; newext2 -32  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-264],D0	; T27  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-256]	; T26  
	mov D11,[Dframe-264]	; T27  
	call strcat
	add Dstack, 32
; ------------------------------ jump
	jmp	L318
; ------------------------------ label
L317:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[Dframe-40]	; sext -40  
	mov D1,[Dframe+16]	; s 16  
	sub D0,D1
	mov [Dframe-280],D0	; T29  
; ------------------------------ sub
	mov D0,[Dframe-280]	; T29  
	mov D1,2
	sub D0,D1
	mov [Dframe-288],D0	; T30  
; ------------------------------ truncate
	mov D0,[Dframe-288]	; T30  
	mov A0,A0
	mov [Dframe-272],A0	; T28  
; ------------------------------ move
	mov A0,[Dframe-272]	; T28  
	mov [Dframe-44],A0	; n -44  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-44]	; n -44  
	mov qword[Dframe-312],D0	; T33  
; ------------------------------ indexref
	lea D0,[changeext.newfile]
	mov D1,[Dframe-312]	; T33  
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T32  
; ------------------------------ indexref
	mov D0,[Dframe-304]	; T32  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T31  
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; newext2 -32  
	mov [Dframe-320],D0	; T34  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-296]	; T31  
	mov D11,[Dframe-320]	; T34  
	call strcpy
	add Dstack, 32
; ------------------------------ label
L318:
; ------------------------------ label
L316:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[changeext.newfile]
	mov [Dframe-328],D0	; T35  
; ------------------------------ returnx
	mov D0,[Dframe-328]	; T35  
	jmp L310
; ------------------------------ label
L310:
; ------------------------------ hardret
	add Dstack, 336
	pop Dframe
	ret
;	End

	global extractext
;	Proc:extractext
extractext:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	call extractfile
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; t -8  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; t -8  
	mov B0, [D0]
	mov [Dframe-48],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T4  
	mov dword[Dframe-56],A0	; T5  
; ------------------------------ truncate
	mov A0,[Dframe-56]	; T5  
	and D0,255
	mov [Dframe-40],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T3  
	mov dword[Dframe-32],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T2  
	cmp A0,0
	jnz L320
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK47
	jmp L319
; ------------------------------ label
L320:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; t -8  
	call strlen
	mov [Dframe-80],D0	; T8  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-80]	; T8  
	mov [Dframe-72],D0	; T7  
; ------------------------------ indexref
	mov D0,[Dframe-8]	; t -8  
	mov D1,[Dframe-72]	; T7  
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ sub
	mov D0,[Dframe-64]	; T6  
	mov D1,1
	sub D0,D1
	mov [Dframe-16],D0	; u -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L321
; ------------------------------ label
L323:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; u -16  
	mov B0, [D0]
	mov [Dframe-104],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T11  
	mov dword[Dframe-112],A0	; T12  
; ------------------------------ truncate
	mov A0,[Dframe-112]	; T12  
	and D0,255
	mov [Dframe-96],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T10  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T9  
	cmp A0,46
	jnz L324
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; u -16  
	mov D1,1
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T15  
	mov dword[Dframe-144],A0	; T16  
; ------------------------------ truncate
	mov A0,[Dframe-144]	; T16  
	and D0,255
	mov [Dframe-128],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T14  
	mov dword[Dframe-120],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T13  
	cmp A0,0
	jnz L325
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; period 24  
	and A0,A0
	jz L326
; ------------------------------ move
	mov D0,KK48
	mov [Dframe-152],D0	; T17  
; ------------------------------ jump
	jmp	L327
; ------------------------------ label
L326:
; ------------------------------ move
	mov D0,KK49
	mov [Dframe-152],D0	; T17  
; ------------------------------ label
L327:
; ------------------------------ returnx
	mov D0,[Dframe-152]	; T17  
	jmp L319
; ------------------------------ label
L325:
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe-16]	; u -16  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T18  
; ------------------------------ returnx
	mov D0,[Dframe-160]	; T18  
	jmp L319
; ------------------------------ label
L324:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[Dframe-16]	; u -16  
; ------------------------------ label
L321:
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; u -16  
	cmp D0,[Dframe-8]	; t -8  
	jae L323
; ------------------------------ label
L322:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK50
	jmp L319
; ------------------------------ label
L319:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

	global extractpath
;	Proc:extractpath
	segment .bss
extractpath.str:	resb 260
	segment .text
extractpath:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	call strlen
	mov [Dframe-40],D0	; T3  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-40]	; T3  
	mov [Dframe-32],D0	; T2  
; ------------------------------ indexref
	mov D0,[Dframe+16]	; s 16  
	mov D1,[Dframe-32]	; T2  
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T1  
; ------------------------------ sub
	mov D0,[Dframe-24]	; T1  
	mov D1,1
	sub D0,D1
	mov [Dframe-8],D0	; t -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L329
; ------------------------------ label
L331:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; t -8  
	mov B0, [D0]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ truncate
	mov A0,[Dframe-64]	; T6  
	and D0,255
	mov [Dframe-48],B0	; T4  
; ------------------------------ switch
	mov B0,[Dframe-48]	; T4  
	sub A0, 47
	cmp A0, 46
	jae L332
	jmp [A0*8+L337]
	align 8
; ------------------------------ label
L337:
; ------------------------------ jumplabel
	dq L335	; 1
; ------------------------------ jumplabel
	dq L332	; 2
; ------------------------------ jumplabel
	dq L332	; 3
; ------------------------------ jumplabel
	dq L332	; 4
; ------------------------------ jumplabel
	dq L332	; 5
; ------------------------------ jumplabel
	dq L332	; 6
; ------------------------------ jumplabel
	dq L332	; 7
; ------------------------------ jumplabel
	dq L332	; 8
; ------------------------------ jumplabel
	dq L332	; 9
; ------------------------------ jumplabel
	dq L332	; 10
; ------------------------------ jumplabel
	dq L332	; 11
; ------------------------------ jumplabel
	dq L336	; 12
; ------------------------------ jumplabel
	dq L332	; 13
; ------------------------------ jumplabel
	dq L332	; 14
; ------------------------------ jumplabel
	dq L332	; 15
; ------------------------------ jumplabel
	dq L332	; 16
; ------------------------------ jumplabel
	dq L332	; 17
; ------------------------------ jumplabel
	dq L332	; 18
; ------------------------------ jumplabel
	dq L332	; 19
; ------------------------------ jumplabel
	dq L332	; 20
; ------------------------------ jumplabel
	dq L332	; 21
; ------------------------------ jumplabel
	dq L332	; 22
; ------------------------------ jumplabel
	dq L332	; 23
; ------------------------------ jumplabel
	dq L332	; 24
; ------------------------------ jumplabel
	dq L332	; 25
; ------------------------------ jumplabel
	dq L332	; 26
; ------------------------------ jumplabel
	dq L332	; 27
; ------------------------------ jumplabel
	dq L332	; 28
; ------------------------------ jumplabel
	dq L332	; 29
; ------------------------------ jumplabel
	dq L332	; 30
; ------------------------------ jumplabel
	dq L332	; 31
; ------------------------------ jumplabel
	dq L332	; 32
; ------------------------------ jumplabel
	dq L332	; 33
; ------------------------------ jumplabel
	dq L332	; 34
; ------------------------------ jumplabel
	dq L332	; 35
; ------------------------------ jumplabel
	dq L332	; 36
; ------------------------------ jumplabel
	dq L332	; 37
; ------------------------------ jumplabel
	dq L332	; 38
; ------------------------------ jumplabel
	dq L332	; 39
; ------------------------------ jumplabel
	dq L332	; 40
; ------------------------------ jumplabel
	dq L332	; 41
; ------------------------------ jumplabel
	dq L332	; 42
; ------------------------------ jumplabel
	dq L332	; 43
; ------------------------------ jumplabel
	dq L332	; 44
; ------------------------------ jumplabel
	dq L332	; 45
; ------------------------------ jumplabel
	dq L334	; 46
; ------------------------------ stmt
; ------------------------------ comment
;case 92:
; ------------------------------ label
L334:
; ------------------------------ stmt
; ------------------------------ comment
;case 47:
; ------------------------------ label
L335:
; ------------------------------ stmt
; ------------------------------ comment
;case 58:
; ------------------------------ label
L336:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[Dframe-8]	; t -8  
	mov D1,[Dframe+16]	; s 16  
	sub D0,D1
	mov [Dframe-80],D0	; T8  
; ------------------------------ add
	mov D0,[Dframe-80]	; T8  
	mov D1,1
	add D0,D1
	mov [Dframe-88],D0	; T9  
; ------------------------------ truncate
	mov D0,[Dframe-88]	; T9  
	mov A0,A0
	mov [Dframe-72],A0	; T7  
; ------------------------------ move
	mov A0,[Dframe-72]	; T7  
	mov [Dframe-12],A0	; n -12  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[extractpath.str]
	mov [Dframe-96],D0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; n -12  
	mov qword[Dframe-112],D0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-96]	; T10  
	mov D11,[Dframe+16]	; s 16  
	mov D12,[Dframe-112]	; T12  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; n -12  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ indexlv
	lea D0,[extractpath.str]
	mov D1,[Dframe-128]	; T14  
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T13  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-120]	; T13 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[extractpath.str]
	mov [Dframe-136],D0	; T15  
; ------------------------------ returnx
	mov D0,[Dframe-136]	; T15  
	jmp L328
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L333
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L332:
; ------------------------------ label
L333:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[Dframe-8]	; t -8  
; ------------------------------ label
L329:
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; t -8  
	cmp D0,[Dframe+16]	; s 16  
	jae L331
; ------------------------------ label
L330:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK51
	jmp L328
; ------------------------------ label
L328:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

	global extractfile
;	Proc:extractfile
extractfile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	call extractpath
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; t -8  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; t -8  
	mov B0, [D0]
	mov [Dframe-40],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T4  
	mov dword[Dframe-48],A0	; T5  
; ------------------------------ truncate
	mov A0,[Dframe-48]	; T5  
	and D0,255
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,0
	jnz L339
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; s 16  
	jmp L338
; ------------------------------ label
L339:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; t -8  
	call strlen
	mov [Dframe-72],D0	; T8  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-72]	; T8  
	mov [Dframe-64],D0	; T7  
; ------------------------------ indexref
	mov D0,[Dframe+16]	; s 16  
	mov D1,[Dframe-64]	; T7  
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ returnx
	mov D0,[Dframe-56]	; T6  
	jmp L338
; ------------------------------ label
L338:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global extractbasefile
;	Proc:extractbasefile
	segment .bss
extractbasefile.str:	resb 100
	segment .text
extractbasefile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 304

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	call extractfile
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; f -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	call strlen
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-48]	; T3  
	mov A0,A0
	mov [Dframe-40],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-40]	; T2  
	mov [Dframe-24],A0	; flen -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; flen -24  
	cmp A0,0
	jnz L341
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK52
	jmp L340
; ------------------------------ label
L341:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	mov A11,0
	call extractext
	mov [Dframe-56],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; e -16  
	mov B0, [D0]
	mov [Dframe-72],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T6  
	mov dword[Dframe-80],A0	; T7  
; ------------------------------ truncate
	mov A0,[Dframe-80]	; T7  
	and D0,255
	mov [Dframe-64],B0	; T5  
; ------------------------------ jumpfalse
	mov B0,[Dframe-64]	; T5  
	and B0,B0
	jz L342
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; flen -24  
	mov qword[Dframe-96],D0	; T9  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; e -16  
	call strlen
	mov [Dframe-112],D0	; T11  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-112]	; T11  
	mov [Dframe-104],D0	; T10  
; ------------------------------ sub
	mov D0,[Dframe-96]	; T9  
	mov D1,[Dframe-104]	; T10  
	sub D0,D1
	mov [Dframe-120],D0	; T12  
; ------------------------------ sub
	mov D0,[Dframe-120]	; T12  
	mov D1,1
	sub D0,D1
	mov [Dframe-128],D0	; T13  
; ------------------------------ truncate
	mov D0,[Dframe-128]	; T13  
	mov A0,A0
	mov [Dframe-88],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-88]	; T8  
	mov [Dframe-20],A0	; n -20  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[extractbasefile.str]
	mov [Dframe-136],D0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; n -20  
	mov qword[Dframe-152],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-136]	; T14  
	mov D11,[Dframe-8]	; f -8  
	mov D12,[Dframe-152]	; T16  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; n -20  
	mov qword[Dframe-168],D0	; T18  
; ------------------------------ indexlv
	lea D0,[extractbasefile.str]
	mov D1,[Dframe-168]	; T18  
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T17  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-160]	; T17 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[extractbasefile.str]
	mov [Dframe-176],D0	; T19  
; ------------------------------ returnx
	mov D0,[Dframe-176]	; T19  
	jmp L340
; ------------------------------ label
L342:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; flen -24  
	mov qword[Dframe-216],D0	; T24  
; ------------------------------ indexref
	mov D0,[Dframe-8]	; f -8  
	mov D1,[Dframe-216]	; T24  
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T23  
; ------------------------------ sub
	mov D0,[Dframe-208]	; T23  
	mov D1,1
	sub D0,D1
	mov [Dframe-224],D0	; T25  
; ------------------------------ getptr
	mov D0,[Dframe-224]	; T25  
	mov B0, [D0]
	mov [Dframe-200],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T22  
	mov dword[Dframe-232],A0	; T26  
; ------------------------------ truncate
	mov A0,[Dframe-232]	; T26  
	and D0,255
	mov [Dframe-192],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T21  
	mov dword[Dframe-184],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T20  
	cmp A0,46
	jnz L343
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[extractbasefile.str]
	mov [Dframe-240],D0	; T27  
; ------------------------------ sub
	mov A0,[Dframe-24]	; flen -24  
	mov A1,1
	sub A0,A1
	mov [Dframe-264],A0	; T30  
; ------------------------------ widen
	movsx D0,dword[Dframe-264]	; T30  
	mov qword[Dframe-256],D0	; T29  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-240]	; T27  
	mov D11,[Dframe-8]	; f -8  
	mov D12,[Dframe-256]	; T29  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-24]	; flen -24  
	mov A1,1
	sub A0,A1
	mov [Dframe-288],A0	; T33  
; ------------------------------ widen
	movsx D0,dword[Dframe-288]	; T33  
	mov qword[Dframe-280],D0	; T32  
; ------------------------------ indexlv
	lea D0,[extractbasefile.str]
	mov D1,[Dframe-280]	; T32  
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T31  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-272]	; T31 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[extractbasefile.str]
	mov [Dframe-296],D0	; T34  
; ------------------------------ returnx
	mov D0,[Dframe-296]	; T34  
	jmp L340
; ------------------------------ label
L343:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; f -8  
	jmp L340
; ------------------------------ label
L340:
; ------------------------------ hardret
	add Dstack, 304
	pop Dframe
	ret
;	End

	global addext
;	Proc:addext
addext:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	mov A11,1
	call extractext
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; sext -8  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; sext -8  
	mov B0, [D0]
	mov [Dframe-40],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T4  
	mov dword[Dframe-48],A0	; T5  
; ------------------------------ truncate
	mov A0,[Dframe-48]	; T5  
	and D0,255
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,0
	jnz L345
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	mov D11,[Dframe+24]	; newext 24  
	call changeext
	mov [Dframe-56],D0	; T6  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-56]	; T6  
	jmp L344
; ------------------------------ label
L345:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; s 16  
	jmp L344
; ------------------------------ label
L344:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global alloctable
;	Proc:alloctable
alloctable:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe+16]	; n 16  
	mov A1,1
	add A0,A1
	mov [Dframe-24],A0	; T2  
; ------------------------------ mul
	mov A0,[Dframe-24]	; T2  
	mov A1,[Dframe+24]	; size 24  
	mul A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T3  
	mov qword[Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; T1  
	call malloc
	mov [Dframe-40],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T4  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; p -8  
	and D0,D0
	jnz L347
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK53
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L347:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L346
; ------------------------------ label
L346:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global zalloctable
;	Proc:zalloctable
zalloctable:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; n 16  
	mov A11,[Dframe+24]	; size 24  
	call alloctable
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe+16]	; n 16  
	mov A1,1
	add A0,A1
	mov [Dframe-24],A0	; T2  
; ------------------------------ mul
	mov A0,[Dframe-24]	; T2  
	mov A1,[Dframe+24]	; size 24  
	mul A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov A11,[Dframe-32]	; T3  
	call pcm_clearmem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L348
; ------------------------------ label
L348:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global checkfreelists
;	Proc:checkfreelists
checkfreelists:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L352
; ------------------------------ label
L353:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-40],D0	; T1  
; ------------------------------ index
	lea D0,[freelist]
	mov D1,[Dframe-40]	; T1  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L354
; ------------------------------ label
L356:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; p -16  
	mov [Dframe-32],D0	; aa -32  
; ------------------------------ stmt
; ------------------------------ truncate
	mov D0,[Dframe-32]	; aa -32  
	mov [Dframe-56],D0	; T3  
; ------------------------------ iand
	mov D0,[Dframe-56]	; T3  
	mov D1,-268435456
	and D0,D1
	mov [Dframe-64],D0	; T4  
; ------------------------------ jumpcc
	mov D0,[Dframe-64]	; T4  
	cmp D0,0
	jnz L358
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; aa -32  
	cmp D0,1048576
	jge L357
; ------------------------------ label
L358:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	push qword [Dframe-24]	; q -24  
	push qword [Dframe-16]	; p -16  
	sub Dstack,32
	mov D10,KK54
	mov D11,[Dframe+16]	; s 16  
	mov D12,KK55
	mov A13,[Dframe-4]	; i -4  
	call printf
	add Dstack, 48
; ------------------------------ label
L357:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; p -16  
	mov [Dframe-24],D0	; q -24  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; p -16  
	mov D0, [D0]
	mov [Dframe-80],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-80]	; T6  
	mov [Dframe-16],D0	; p -16  
; ------------------------------ label
L354:
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; p -16  
	and D0,D0
	jnz L356
; ------------------------------ label
L355:
; ------------------------------ label
L350:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L352:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,2
	jle L353
; ------------------------------ label
L351:
; ------------------------------ label
L349:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global pcm_alloc32
;	Proc:pcm_alloc32
pcm_alloc32:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ move
	mov A0,32
	mov [allocbytes],A0
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[freelist]
	mov D1,16
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; p -8  
	and D0,D0
	jz L360
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[freelist]
	mov D1,16
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ index
	lea D0,[freelist]
	mov D1,16
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ getptr
	mov D0,[Dframe-64]	; T6  
	mov D0, [D0]
	mov [Dframe-56],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov D13,[Dframe-40]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L359
; ------------------------------ label
L360:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,32
	call pcm_alloc
	mov [Dframe-72],D0	; T7  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-72]	; T7  
	jmp L359
; ------------------------------ label
L359:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global pcm_free32
;	Proc:pcm_free32
pcm_free32:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[freelist]
	mov D1,16
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe-24]	; T2  
	mov D13,[Dframe+16]	; p 16 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[freelist]
	mov D1,16
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ label
L361:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global outbyte
;	Proc:outbyte
outbyte:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe+24]	; x 24  
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	mov D11,1
	mov D12,1
	mov D13,[Dframe+16]	; f 16  
	call fwrite
	add Dstack, 32
; ------------------------------ label
L362:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global outword16
;	Proc:outword16
outword16:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe+24]	; x 24  
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	mov D11,2
	mov D12,1
	mov D13,[Dframe+16]	; f 16  
	call fwrite
	add Dstack, 32
; ------------------------------ label
L363:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global outword
;	Proc:outword
outword:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe+24]	; x 24  
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	mov D11,4
	mov D12,1
	mov D13,[Dframe+16]	; f 16  
	call fwrite
	add Dstack, 32
; ------------------------------ label
L364:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global outdword
;	Proc:outdword
outdword:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe+24]	; x 24  
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	mov D11,8
	mov D12,1
	mov D13,[Dframe+16]	; f 16  
	call fwrite
	add Dstack, 32
; ------------------------------ label
L365:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global myeof
;	Proc:myeof
myeof:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	call fgetc
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; c -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; c -4  
	cmp A0,-1
	jnz L367
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L366
; ------------------------------ label
L367:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; c -4  
	mov D11,[Dframe+16]	; f 16  
	call ungetc
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L366
; ------------------------------ label
L366:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global pcm_smallallocz
;	Proc:pcm_smallallocz
pcm_smallallocz:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[sizeindextable]
	mov D1,[Dframe-32]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [alloccode],A0
; ------------------------------ jumpcc
	mov A0,[alloccode]
	cmp A0,0
	jnz L369
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [alloccode],A0
; ------------------------------ label
L369:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[alloccode]
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ index
	lea D0,[allocupper]
	mov D1,[Dframe-64]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T5  
; ------------------------------ softconv
	mov A0,[Dframe-56]	; T5  
	mov [Dframe-48],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-48]	; T4  
	mov [allocbytes],A0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[pcheapptr]
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[allocbytes]
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ addto
	mov D0,[pcheapptr]
	mov D1,[Dframe-72]	; T7  
	add D0,D1
	mov [pcheapptr],D0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[pcheapptr]
	cmp D0,[pcheapend]
	jb L370
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[allocbytes]
	call pcm_newblock
	mov [Dframe-88],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-88]	; T9  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-104],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov A11,0
	mov D12,[Dframe-104]	; T11  
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L368
; ------------------------------ label
L370:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-120],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov A11,0
	mov D12,[Dframe-120]	; T13  
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L368
; ------------------------------ label
L368:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

	global pcm_fastalloc
;	Proc:pcm_fastalloc
pcm_fastalloc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[sizeindextable]
	mov D1,[Dframe-32]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [alloccode],A0
; ------------------------------ jumpcc
	mov A0,[alloccode]
	cmp A0,0
	jnz L372
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [alloccode],A0
; ------------------------------ label
L372:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[alloccode]
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ index
	lea D0,[allocupper]
	mov D1,[Dframe-64]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T5  
; ------------------------------ softconv
	mov A0,[Dframe-56]	; T5  
	mov [Dframe-48],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-48]	; T4  
	mov [allocbytes],A0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[pcheapptr]
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[allocbytes]
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ addto
	mov D0,[pcheapptr]
	mov D1,[Dframe-72]	; T7  
	add D0,D1
	mov [pcheapptr],D0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[pcheapptr]
	cmp D0,[pcheapend]
	jb L373
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[allocbytes]
	call pcm_newblock
	mov [Dframe-88],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-88]	; T9  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L371
; ------------------------------ label
L373:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L371
; ------------------------------ label
L371:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global os_init
;	Proc:os_init
os_init:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [init_flag],A0
; ------------------------------ label
L374:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_execwait
;	Proc:os_execwait
os_execwait:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; cmdline 16  
	call system
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L375
; ------------------------------ label
L375:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global os_execcmd
;	Proc:os_execcmd
os_execcmd:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK56
	call abortprogram
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L376
; ------------------------------ label
L376:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global os_getch
;	Proc:os_getch
os_getch:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L377
; ------------------------------ label
L377:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_kbhit
;	Proc:os_kbhit
os_kbhit:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK57
	call abortprogram
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L378
; ------------------------------ label
L378:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_flushkeys
;	Proc:os_flushkeys
os_flushkeys:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK58
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L379:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_getconsolein
;	Proc:os_getconsolein
os_getconsolein:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L380
; ------------------------------ label
L380:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_getconsoleout
;	Proc:os_getconsoleout
os_getconsoleout:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L381
; ------------------------------ label
L381:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_proginstance
;	Proc:os_proginstance
os_proginstance:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK59
	call abortprogram
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L382
; ------------------------------ label
L382:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_getdllinst
;	Proc:os_getdllinst
os_getdllinst:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L383
; ------------------------------ label
L383:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global os_getdllprocaddr
;	Proc:os_getdllprocaddr
	segment .data
	align 8
os_getdllprocaddr.table:
	dq KK60
	dq malloc
	dq KK61
	dq realloc
	dq KK62
	dq free
	dq KK63
	dq printf
	dq KK64
	dq puts
	dq KK65
	dq fgetc
	dq KK66
	dq fputc
	dq KK67
	dq getchar
	dq KK68
	dq fopen
	dq KK69
	dq fclose
	dq KK70
	dq fseek
	dq KK71
	dq ftell
	dq KK72
	dq fread
	dq KK73
	dq fwrite
	dq KK74
	dq clock
	dq KK75
	dq isalpha
	dq KK76
	dq tolower
	dq KK77
	dq feof
	dq KK78
	dq memset
	dq KK79
	dq memcpy
	dq KK80
	dq ungetc
	dq KK81
	dq remove
	dq KK82
	dq system
	segment .text
os_getdllprocaddr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L387
; ------------------------------ label
L388:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T3  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[os_getdllprocaddr.table]
	mov D1,[Dframe-24]	; T2  
	imul D1,16
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; T1  
	mov D11,[Dframe+24]	; name 24  
	call strcmp
	mov [Dframe-40],A0	; T4  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,0
	jnz L389
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-64],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T7  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[os_getdllprocaddr.table]
	mov D1,[Dframe-56]	; T6  
	imul D1,16
	mov D0, [D0+D1+8]
	mov [Dframe-48],D0	; T5  
; ------------------------------ returnx
	mov D0,[Dframe-48]	; T5  
	jmp L384
; ------------------------------ label
L389:
; ------------------------------ label
L385:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L387:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,23
	jle L388
; ------------------------------ label
L386:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L384
; ------------------------------ label
L384:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global os_initwindows
;	Proc:os_initwindows
os_initwindows:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ label
L390:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_getchx
;	Proc:os_getchx
os_getchx:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK83
	call abortprogram
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L391
; ------------------------------ label
L391:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_getos
;	Proc:os_getos
os_getos:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK84
	jmp L392
; ------------------------------ label
L392:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_getoscode
;	Proc:os_getoscode
os_getoscode:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,78
	jmp L393
; ------------------------------ label
L393:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_iswindows
;	Proc:os_iswindows
	segment .data
	align 4
os_iswindows.iswindows:
	dd -1
	segment .text
os_iswindows:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[os_iswindows.iswindows]
	cmp A0,-1
	jnz L395
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,KK85
	mov D11,KK86
	call fopen
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; f -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; f -8  
	and D0,D0
	jz L396
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	call fclose
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [os_iswindows.iswindows],A0
; ------------------------------ jump
	jmp	L397
; ------------------------------ label
L396:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [os_iswindows.iswindows],A0
; ------------------------------ label
L397:
; ------------------------------ label
L395:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[os_iswindows.iswindows]
	jmp L394
; ------------------------------ label
L394:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global os_shellexec
;	Proc:os_shellexec
os_shellexec:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK87
	call abortprogram
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L398
; ------------------------------ label
L398:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global os_sleep
;	Proc:os_sleep
os_sleep:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK88
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L399:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global os_getstdin
;	Proc:os_getstdin
os_getstdin:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,KK89
	mov D11,KK90
	call fopen
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L400
; ------------------------------ label
L400:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global os_getstdout
;	Proc:os_getstdout
os_getstdout:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,KK91
	mov D11,KK92
	call fopen
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L401
; ------------------------------ label
L401:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global os_gethostname
;	Proc:os_gethostname
os_gethostname:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK93
	jmp L402
; ------------------------------ label
L402:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_gethostsize
;	Proc:os_gethostsize
os_gethostsize:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,64
	jmp L403
; ------------------------------ label
L403:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_getmpath
;	Proc:os_getmpath
os_getmpath:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK94
	jmp L404
; ------------------------------ label
L404:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global os_exitprocess
;	Proc:os_exitprocess
os_exitprocess:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ label
L405:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global os_gettimestamp
;	Proc:os_gettimestamp
os_gettimestamp:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call clock
	mov [Dframe-16],A0	; T2  
	add Dstack, 32
; ------------------------------ widen
	mov A0,dword[Dframe-16]	; T2  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L406
; ------------------------------ label
L406:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global os_gettickcount
;	Proc:os_gettickcount
os_gettickcount:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call clock
	mov [Dframe-16],A0	; T2  
	add Dstack, 32
; ------------------------------ widen
	mov A0,dword[Dframe-16]	; T2  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L407
; ------------------------------ label
L407:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global os_clock
;	Proc:os_clock
os_clock:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_iswindows
	mov [Dframe-8],A0	; T1  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-8]	; T1  
	and A0,A0
	jz L409
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call clock
	mov [Dframe-24],A0	; T3  
	add Dstack, 32
; ------------------------------ widen
	mov A0,dword[Dframe-24]	; T3  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ returnx
	mov D0,[Dframe-16]	; T2  
	jmp L408
; ------------------------------ jump
	jmp	L410
; ------------------------------ label
L409:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call clock
	mov [Dframe-40],A0	; T5  
	add Dstack, 32
; ------------------------------ div
	mov A0,[Dframe-40]	; T5  
	mov A1,1000
	xor D11,D11
	div A1
	mov [Dframe-48],A0	; T6  
; ------------------------------ widen
	mov A0,dword[Dframe-48]	; T6  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ returnx
	mov D0,[Dframe-32]	; T4  
	jmp L408
; ------------------------------ label
L410:
; ------------------------------ label
L408:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global os_getclockspersec
;	Proc:os_getclockspersec
os_getclockspersec:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_iswindows
	mov [Dframe-24],A0	; T3  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-24]	; T3  
	and A0,A0
	jz L412
; ------------------------------ move
	mov A0,1000
	mov [Dframe-16],A0	; T2  
; ------------------------------ jump
	jmp	L413
; ------------------------------ label
L412:
; ------------------------------ move
	mov A0,1000000
	mov [Dframe-16],A0	; T2  
; ------------------------------ label
L413:
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; T2  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L411
; ------------------------------ label
L411:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global os_setmesshandler
;	Proc:os_setmesshandler
os_setmesshandler:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK95
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L414:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global os_filelastwritetime
;	Proc:os_filelastwritetime
os_filelastwritetime:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L415
; ------------------------------ label
L415:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global mcerror
;	Proc:mcerror
mcerror:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK96
	mov D11,KK97
	mov D12,[Dframe+16]	; mess 16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call os_getch
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L416:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global serror
;	Proc:serror
serror:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; mess 16  
	call serror_gen
	add Dstack, 32
; ------------------------------ label
L417:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global serror_gen
;	Proc:serror_gen
serror_gen:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[currproc]
	and D0,D0
	jz L419
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK98
	mov D11,KK99
	mov D12,[Dframe-8]	; T1  
	mov D13,KK100
	call printf
	add Dstack, 32
; ------------------------------ label
L419:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-24],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-24]	; T3  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T2  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-56]	; T7  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T6  
	mov dword[Dframe-64],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T8  
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ index
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-40]	; T5  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; T4  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-96],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-96]	; T12  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T11  
	mov dword[Dframe-104],A0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T13  
	mov qword[Dframe-80],D0	; T10  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-80]	; T10  
	mov D0, [D0+D1*8]
	mov [Dframe-72],D0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	push qword [Dframe-72]	; T9  
	push qword [Dframe-32]	; T4  
	sub Dstack,32
	mov D10,KK101
	mov D11,KK102
	mov A12,[Dframe-16]	; T2  
	mov D13,KK103
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showmacrolineno
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK104
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK105
	mov D11,KK106
	mov D12,[Dframe+16]	; mess 16  
	mov D13,KK107
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK108
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK109
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK110
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK111
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK112
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK113
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK114
	mov D11,KK115
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L418:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global serror_ss
;	Proc:serror_ss
serror_ss:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-264],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T1  
	mov D11,[Dframe+16]	; mess 16  
	mov D12,[Dframe+24]	; a 24  
	mov D13,[Dframe+32]	; b 32  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-272],D0	; T2  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-272]	; T2  
	call serror_gen
	add Dstack, 32
; ------------------------------ label
L420:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

	global serror_s
;	Proc:serror_s
serror_s:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-264],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T1  
	mov D11,[Dframe+16]	; mess 16  
	mov D12,[Dframe+24]	; a 24  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-272],D0	; T2  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-272]	; T2  
	call serror_gen
	add Dstack, 32
; ------------------------------ label
L421:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

	global terror_gen
;	Proc:terror_gen
terror_gen:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[currproc]
	and D0,D0
	jz L423
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK116
	mov D11,KK117
	mov D12,[Dframe-8]	; T1  
	call printf
	add Dstack, 32
; ------------------------------ label
L423:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-24],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-24]	; T3  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T2  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-56]	; T7  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T6  
	mov dword[Dframe-64],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T8  
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ index
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-40]	; T5  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	push qword [Dframe-32]	; T4  
	mov A13,[Dframe-16]	; T2  
	push D13
	sub Dstack,32
	mov D10,KK118
	mov D11,KK119
	mov D12,[Dframe+16]	; mess 16  
	mov D13,KK120
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showmacrolineno
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK121
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK122
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK123
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L422:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global terror
;	Proc:terror
terror:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; mess 16  
	call terror_gen
	add Dstack, 32
; ------------------------------ label
L424:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global terror_s
;	Proc:terror_s
terror_s:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-264],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T1  
	mov D11,[Dframe+16]	; mess 16  
	mov D12,[Dframe+24]	; a 24  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-272],D0	; T2  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-272]	; T2  
	call terror_gen
	add Dstack, 32
; ------------------------------ label
L425:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

	global terror_ss
;	Proc:terror_ss
terror_ss:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-264],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T1  
	mov D11,[Dframe+16]	; mess 16  
	mov D12,[Dframe+24]	; a 24  
	mov D13,[Dframe+32]	; b 32  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-272],D0	; T2  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-272]	; T2  
	call terror_gen
	add Dstack, 32
; ------------------------------ label
L426:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

	global gerror_gen
;	Proc:gerror_gen
gerror_gen:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+24]	; p 24  
	and D0,D0
	jz L428
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; lineno -4  
; ------------------------------ jump
	jmp	L429
; ------------------------------ label
L428:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[clineno]
	mov [Dframe-4],A0	; lineno -4  
; ------------------------------ label
L429:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[currproc]
	and D0,D0
	jz L430
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK124
	mov D11,KK125
	mov D12,[Dframe-16]	; T1  
	mov D13,KK126
	call printf
	add Dstack, 32
; ------------------------------ label
L430:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[Dframe-4]	; lineno -4  
	mov A1,16777215
	and A0,A1
	mov [Dframe-24],A0	; T2  
; ------------------------------ shr
	mov A0,[Dframe-4]	; lineno -4  
	mov B10,24
	sar A0, cl
	mov [Dframe-48],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T5  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ index
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-40]	; T4  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe-32]	; T3  
	sub Dstack,32
	mov D10,KK127
	mov D11,KK128
	mov A12,[Dframe-24]	; T2  
	mov D13,KK129
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK130
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK131
	mov D11,KK132
	mov D12,[Dframe+16]	; mess 16  
	mov D13,KK133
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK134
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK135
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK136
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L427:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global gerror
;	Proc:gerror
gerror:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; mess 16  
	mov D11,[Dframe+24]	; p 24  
	call gerror_gen
	add Dstack, 32
; ------------------------------ label
L431:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global gerror_s
;	Proc:gerror_s
gerror_s:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-264],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T1  
	mov D11,[Dframe+16]	; mess 16  
	mov D12,[Dframe+24]	; s 24  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-272],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-272]	; T2  
	mov D11,[Dframe+32]	; p 32  
	call gerror_gen
	add Dstack, 32
; ------------------------------ label
L432:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

	global nxerror
;	Proc:nxerror
nxerror:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+24]	; p 24  
	and D0,D0
	jz L434
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; lineno -4  
; ------------------------------ jump
	jmp	L435
; ------------------------------ label
L434:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; lineno -4  
; ------------------------------ label
L435:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[stmodule]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	push qword [Dframe-16]	; T1  
	mov A13,[Dframe-4]	; lineno -4  
	push D13
	sub Dstack,32
	mov D10,KK137
	mov D11,KK138
	mov D12,[Dframe+16]	; mess 16  
	mov D13,KK139
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call os_getch
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L433:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global testelem
;	Proc:testelem
testelem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ shr
	mov A0,[Dframe+24]	; n 24  
	mov B10,3
	sar A0, cl
	mov [Dframe-32],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T4  
	mov qword[Dframe-24],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov D1,[Dframe-24]	; T3  
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-40],A0	; T5  
; ------------------------------ iand
	mov A0,[Dframe+24]	; n 24  
	mov A1,7
	and A0,A1
	mov [Dframe-64],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T8  
	mov qword[Dframe-56],D0	; T7  
; ------------------------------ index
	lea D0,[bytemasks]
	mov D1,[Dframe-56]	; T7  
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T6  
	mov dword[Dframe-72],A0	; T9  
; ------------------------------ iand
	mov A0,[Dframe-40]	; T5  
	mov A1,[Dframe-72]	; T9  
	and A0,A1
	mov [Dframe-80],A0	; T10  
; ------------------------------ jumpfalse
	mov A0,[Dframe-80]	; T10  
	and A0,A0
	jz L437
; ------------------------------ move
	mov A0,1
	mov [Dframe-8],A0	; T1  
; ------------------------------ jump
	jmp	L438
; ------------------------------ label
L437:
; ------------------------------ move
	mov A0,0
	mov [Dframe-8],A0	; T1  
; ------------------------------ label
L438:
; ------------------------------ returnx
	mov A0,[Dframe-8]	; T1  
	jmp L436
; ------------------------------ label
L436:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global setelem
;	Proc:setelem
setelem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[Dframe+24]	; n 24  
	mov A1,7
	and A0,A1
	mov [Dframe-24],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; T3  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[bytemasks]
	mov D1,[Dframe-16]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ shr
	mov A0,[Dframe+24]	; n 24  
	mov B10,3
	sar A0, cl
	mov [Dframe-56],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T7  
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov D1,[Dframe-48]	; T6  
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T5  
; ------------------------------ iorto
	mov D13,[Dframe-40]	; T5 *
	mov B0,byte [D13]
	mov A1,dword[Dframe-32]	; T4  
	or B0,B1
	mov D13,qword[Dframe-40]	; T5 *
	mov byte [D13],B0
; ------------------------------ label
L439:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global nextpoweroftwo
;	Proc:nextpoweroftwo
nextpoweroftwo:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; a -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; x 16  
	cmp A0,0
	jnz L441
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L440
; ------------------------------ label
L441:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L442
; ------------------------------ label
L444:
; ------------------------------ stmt
; ------------------------------ shlto
	mov A0,[Dframe-4]	; a -4  
	mov A10,1
	shl A0, cl
	mov [Dframe-4],A0	; a -4  
; ------------------------------ label
L442:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; a -4  
	cmp A0,[Dframe+16]	; x 16  
	jl L444
; ------------------------------ label
L443:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; a -4  
	jmp L440
; ------------------------------ label
L440:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global loaderror
;	Proc:loaderror
loaderror:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 528

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-512]	; str -512  
	mov [Dframe-520],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-520]	; T1  
	mov D11,[Dframe+16]	; mess 16  
	mov D12,[Dframe+24]	; mess2 24  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-512]	; str -512  
	mov [Dframe-528],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK140
	mov D11,KK141
	mov D12,[Dframe-528]	; T2  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK142
	mov D11,KK143
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L445:
; ------------------------------ hardret
	add Dstack, 528
	pop Dframe
	ret
;	End

	global loadsourcefile
;	Proc:loadsourcefile
loadsourcefile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nsourcefiles]
	cmp A0,600
	jle L447
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK144
	mov D11,KK145
	call loaderror
	add Dstack, 32
; ------------------------------ label
L447:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[nsourcefiles]
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nsourcefiles]
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ indexlv
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-24]	; T2  
	lea D0, [D0+D1*8]
	mov [Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; file 16  
	call pcm_copyheapstring
	mov [Dframe-32],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T3  
	mov D13,[Dframe-16]	; T1 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nsourcefiles]
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ indexlv
	lea D0,[sourcefilenames]
	mov D1,[Dframe-48]	; T5  
	lea D0, [D0+D1*8]
	mov [Dframe-40],D0	; T4  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; shortfile 24  
	call pcm_copyheapstring
	mov [Dframe-56],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T6  
	mov D13,[Dframe-40]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; file 16  
	call readfile
	mov [Dframe-64],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T7  
	mov [Dframe-8],D0	; s -8  
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; s -8  
	and D0,D0
	jnz L448
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK146
	mov D11,[Dframe+16]	; file 16  
	call loaderror
	add Dstack, 32
; ------------------------------ label
L448:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nsourcefiles]
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ indexlv
	lea D0,[sourcefiletext]
	mov D1,[Dframe-80]	; T9  
	lea D0, [D0+D1*8]
	mov [Dframe-72],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-8]	; s -8  
	mov D13,[Dframe-72]	; T8 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nsourcefiles]
	mov qword[Dframe-96],D0	; T11  
; ------------------------------ indexlv
	lea D0,[sourcefilesizes]
	mov D1,[Dframe-96]	; T11  
	lea D0, [D0+D1*4]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov A0,[rfsize]
	mov D13,[Dframe-88]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[rfsize]
	mov qword[Dframe-112],D0	; T13  
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; s -8  
	mov D1,[Dframe-112]	; T13  
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T12  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-104]	; T12 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[nsourcefiles]
	jmp L446
; ------------------------------ label
L446:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global loadbuiltin
;	Proc:loadbuiltin
loadbuiltin:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nsourcefiles]
	cmp A0,600
	jle L450
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK147
	mov D11,KK148
	call loaderror
	add Dstack, 32
; ------------------------------ label
L450:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[nsourcefiles]
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nsourcefiles]
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ indexlv
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-24]	; T2  
	lea D0, [D0+D1*8]
	mov [Dframe-16],D0	; T1  
; ------------------------------ move
	mov D0,KK149
	mov D13,[Dframe-16]	; T1 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nsourcefiles]
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ indexlv
	lea D0,[sourcefilenames]
	mov D1,[Dframe-40]	; T4  
	lea D0, [D0+D1*8]
	mov [Dframe-32],D0	; T3  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; shortfile 16  
	call pcm_copyheapstring
	mov [Dframe-48],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T5  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nsourcefiles]
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ indexlv
	lea D0,[sourcefiletext]
	mov D1,[Dframe-64]	; T7  
	lea D0, [D0+D1*8]
	mov [Dframe-56],D0	; T6  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; hdrtext 24  
	call pcm_copyheapstring
	mov [Dframe-72],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-72]	; T8  
	mov D13,[Dframe-56]	; T6 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nsourcefiles]
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ indexlv
	lea D0,[sourcefilesizes]
	mov D1,[Dframe-88]	; T10  
	lea D0, [D0+D1*4]
	mov [Dframe-80],D0	; T9  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; hdrtext 24  
	call strlen
	mov [Dframe-104],D0	; T12  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-104]	; T12  
	mov A0,A0
	mov [Dframe-96],A0	; T11  
; ------------------------------ move
	mov A0,[Dframe-96]	; T11  
	mov D13,[Dframe-80]	; T9 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[nsourcefiles]
	jmp L449
; ------------------------------ label
L449:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global gs_init
;	Proc:gs_init
gs_init:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov A11,16
	call pcm_clearmem
	add Dstack, 32
; ------------------------------ label
L451:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global gs_str
;	Proc:gs_str
gs_str:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe+24]	; s 24  
	mov A12,-1
	call strbuffer_add
	add Dstack, 32
; ------------------------------ label
L452:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global gs_strn
;	Proc:gs_strn
gs_strn:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe+24]	; s 24  
	mov A12,[Dframe+32]	; length 32  
	call strbuffer_add
	add Dstack, 32
; ------------------------------ label
L453:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global gs_strvar
;	Proc:gs_strvar
gs_strvar:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; s 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-8]	; T1  
	mov A12,-1
	call strbuffer_add
	add Dstack, 32
; ------------------------------ label
L454:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global gs_strint
;	Proc:gs_strint
gs_strint:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-264],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T1  
	mov D11,KK150
	mov D12,[Dframe+24]	; a 24  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-272],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-272]	; T2  
	mov A12,-1
	call strbuffer_add
	add Dstack, 32
; ------------------------------ label
L455:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

	global gs_strln
;	Proc:gs_strln
gs_strln:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe+24]	; s 24  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	call gs_line
	add Dstack, 32
; ------------------------------ label
L456:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global gs_strsp
;	Proc:gs_strsp
gs_strsp:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe+24]	; s 24  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK151
	call gs_str
	add Dstack, 32
; ------------------------------ label
L457:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global gs_line
;	Proc:gs_line
gs_line:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK152
	mov A12,-1
	call strbuffer_add
	add Dstack, 32
; ------------------------------ label
L458:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global gs_getcol
;	Proc:gs_getcol
gs_getcol:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ returnx
	mov A0,[Dframe-8]	; T1  
	jmp L459
; ------------------------------ label
L459:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global gs_leftstr
;	Proc:gs_leftstr
gs_leftstr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 384

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; col -4  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-272]	; str -272  
	mov [Dframe-280],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-280]	; T1  
	mov D11,[Dframe+24]	; s 24  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; s 24  
	call strlen
	mov [Dframe-296],D0	; T3  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-296]	; T3  
	mov A0,A0
	mov [Dframe-288],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-288]	; T2  
	mov [Dframe-16],A0	; slen -16  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+32]	; w 32  
	mov A1,[Dframe-16]	; slen -16  
	sub A0,A1
	mov [Dframe-12],A0	; n -12  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; n -12  
	cmp A0,0
	jle L461
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-8],A0	; i -8  
; ------------------------------ jump
	jmp	L464
; ------------------------------ label
L465:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-16]	; slen -16  
	mov A1,[Dframe-8]	; i -8  
	add A0,A1
	mov [Dframe-320],A0	; T6  
; ------------------------------ sub
	mov A0,[Dframe-320]	; T6  
	mov A1,1
	sub A0,A1
	mov [Dframe-328],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-328]	; T7  
	mov qword[Dframe-312],D0	; T5  
; ------------------------------ indexlv
	lea D0,[Dframe-272]	; str -272  
	mov D1,[Dframe-312]	; T5  
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T4  
; ------------------------------ move
	mov A0,[Dframe+40]	; padch 40  
	mov D13,[Dframe-304]	; T4 *
	mov byte [D13],B0
; ------------------------------ label
L462:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-8]	; i -8  
; ------------------------------ label
L464:
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; i -8  
	cmp A0,[Dframe-12]	; n -12  
	jle L465
; ------------------------------ label
L463:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-16]	; slen -16  
	mov A1,[Dframe-12]	; n -12  
	add A0,A1
	mov [Dframe-352],A0	; T10  
; ------------------------------ add
	mov A0,[Dframe-352]	; T10  
	mov A1,1
	add A0,A1
	mov [Dframe-360],A0	; T11  
; ------------------------------ sub
	mov A0,[Dframe-360]	; T11  
	mov A1,1
	sub A0,A1
	mov [Dframe-368],A0	; T12  
; ------------------------------ widen
	movsx D0,dword[Dframe-368]	; T12  
	mov qword[Dframe-344],D0	; T9  
; ------------------------------ indexlv
	lea D0,[Dframe-272]	; str -272  
	mov D1,[Dframe-344]	; T9  
	lea D0, [D0+D1]
	mov [Dframe-336],D0	; T8  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-336]	; T8 *
	mov byte [D13],B0
; ------------------------------ label
L461:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-272]	; str -272  
	mov [Dframe-376],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-376]	; T13  
	call gs_str
	add Dstack, 32
; ------------------------------ label
L460:
; ------------------------------ hardret
	add Dstack, 384
	pop Dframe
	ret
;	End

	global gs_leftint
;	Proc:gs_leftint
gs_leftint:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-264],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T1  
	mov D11,KK153
	mov A12,[Dframe+24]	; a 24  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-272],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-272]	; T2  
	mov A12,[Dframe+32]	; w 32  
	mov A13,[Dframe+40]	; padch 40  
	call gs_leftstr
	add Dstack, 32
; ------------------------------ label
L466:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

	global gs_padto
;	Proc:gs_padto
gs_padto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 336

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-272],A0	; T1  
; ------------------------------ sub
	mov A0,[Dframe+24]	; col 24  
	mov A1,[Dframe-272]	; T1  
	sub A0,A1
	mov [Dframe-8],A0	; n -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; n -8  
	cmp A0,0
	jg L468
; ------------------------------ stmt
; ------------------------------ return
	jmp L467
; ------------------------------ label
L468:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L471
; ------------------------------ label
L472:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-296],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-296]	; T4  
	mov qword[Dframe-288],D0	; T3  
; ------------------------------ indexlv
	lea D0,[Dframe-264]	; str -264  
	mov D1,[Dframe-288]	; T3  
	lea D0, [D0+D1]
	mov [Dframe-280],D0	; T2  
; ------------------------------ move
	mov A0,[Dframe+32]	; ch 32  
	mov D13,[Dframe-280]	; T2 *
	mov byte [D13],B0
; ------------------------------ label
L469:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L471:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[Dframe-8]	; n -8  
	jle L472
; ------------------------------ label
L470:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-8]	; n -8  
	mov A1,1
	add A0,A1
	mov [Dframe-320],A0	; T7  
; ------------------------------ sub
	mov A0,[Dframe-320]	; T7  
	mov A1,1
	sub A0,A1
	mov [Dframe-328],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-328]	; T8  
	mov qword[Dframe-312],D0	; T6  
; ------------------------------ indexlv
	lea D0,[Dframe-264]	; str -264  
	mov D1,[Dframe-312]	; T6  
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T5  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-304]	; T5 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-264]	; str -264  
	mov [Dframe-336],D0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-336]	; T9  
	call gs_str
	add Dstack, 32
; ------------------------------ label
L467:
; ------------------------------ hardret
	add Dstack, 336
	pop Dframe
	ret
;	End

	global gs_println
;	Proc:gs_println
gs_println:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+24]	; f 24  
	cmp D0,0
	jnz L474
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK154
	mov A11,[Dframe-8]	; T1  
	mov D12,[Dframe-16]	; T2  
	call printf
	add Dstack, 32
; ------------------------------ jump
	jmp	L475
; ------------------------------ label
L474:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; f 24  
	mov D11,KK155
	mov A12,[Dframe-24]	; T3  
	mov D13,[Dframe-32]	; T4  
	call fprintf
	add Dstack, 32
; ------------------------------ label
L475:
; ------------------------------ label
L473:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:gs_copytostr
gs_copytostr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; source 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe-8]	; T1  
	and A0,A0
	jz L477
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; source 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe+16]	; source 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T6  
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; s 24  
	mov D11,[Dframe-32]	; T4  
	mov D12,[Dframe-40]	; T5  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; source 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T9  
	mov qword[Dframe-64],D0	; T8  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; s 24  
	mov D1,[Dframe-64]	; T8  
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T7  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-56]	; T7 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L478
; ------------------------------ label
L477:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe+24]	; s 24 *
	mov byte [D13],B0
; ------------------------------ label
L478:
; ------------------------------ label
L476:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global gs_additem
;	Proc:gs_additem
gs_additem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe-24]	; T1  
	and A0,A0
	jz L480
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T7  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ indexref
	mov D0,[Dframe-8]	; d -8  
	mov D1,[Dframe-64]	; T6  
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ sub
	mov D0,[Dframe-56]	; T5  
	mov D1,1
	sub D0,D1
	mov [Dframe-80],D0	; T8  
; ------------------------------ getptr
	mov D0,[Dframe-80]	; T8  
	mov B0, [D0]
	mov [Dframe-48],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T4  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ truncate
	mov A0,[Dframe-88]	; T9  
	and D0,255
	mov [Dframe-40],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T3  
	mov dword[Dframe-32],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-32]	; T2  
	mov [Dframe-12],A0	; lastchar -12  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; s 24  
	mov B0, [D0]
	mov [Dframe-112],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T12  
	mov dword[Dframe-120],A0	; T13  
; ------------------------------ truncate
	mov A0,[Dframe-120]	; T13  
	and D0,255
	mov [Dframe-104],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T11  
	mov dword[Dframe-96],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-96]	; T10  
	mov [Dframe-16],A0	; nextchar -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-12]	; lastchar -12  
	call isalphanum
	mov [Dframe-128],A0	; T14  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-128]	; T14  
	and A0,A0
	jz L481
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16]	; nextchar -16  
	call isalphanum
	mov [Dframe-136],A0	; T15  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-136]	; T15  
	and A0,A0
	jz L481
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK156
	mov A12,-1
	call strbuffer_add
	add Dstack, 32
; ------------------------------ label
L481:
; ------------------------------ label
L480:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe+24]	; s 24  
	mov A12,-1
	call strbuffer_add
	add Dstack, 32
; ------------------------------ label
L479:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

	global strbuffer_add
;	Proc:strbuffer_add
strbuffer_add:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 304

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; n 32  
	cmp A0,-1
	jnz L483
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; s 24  
	call strlen
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-32]	; T2  
	mov A0,A0
	mov [Dframe-24],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [Dframe+32],A0	; n 32  
; ------------------------------ label
L483:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; oldlen -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; oldlen -8  
	cmp A0,0
	jnz L484
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ add
	mov A0,[Dframe+32]	; n 32  
	mov A1,1
	add A0,A1
	mov [Dframe-48],A0	; T4  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-48]	; T4  
	call pcm_alloc
	mov [Dframe-56],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov D13,[Dframe-40]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; dest 16  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ move
	mov A0,[allocbytes]
	mov D13,[Dframe-64]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T7  
; ------------------------------ move
	mov A0,[Dframe+32]	; n 32  
	mov D13,[Dframe-72]	; T7 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; n 32  
	mov qword[Dframe-104],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-88]	; T9  
	mov D11,[Dframe+24]	; s 24  
	mov D12,[Dframe-104]	; T11  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-120],D0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; n 32  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ indexlv
	mov D0,[Dframe-120]	; T13  
	mov D1,[Dframe-128]	; T14  
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T12  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-112]	; T12 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L482
; ------------------------------ label
L484:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-8]	; oldlen -8  
	mov A1,[Dframe+32]	; n 32  
	add A0,A1
	mov [Dframe-4],A0	; newlen -4  
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-4]	; newlen -4  
	mov A1,1
	add A0,A1
	mov [Dframe-136],A0	; T15  
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-144],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T15  
	cmp A0,[Dframe-144]	; T16  
	jle L485
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-4]	; newlen -4  
	mov A1,1
	add A0,A1
	mov [Dframe-152],A0	; T17  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-152]	; T17  
	call pcm_alloc
	mov [Dframe-160],D0	; T18  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-160]	; T18  
	mov [Dframe-16],D0	; newptr -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-184],D0	; T21  
; ------------------------------ add
	mov A0,[Dframe-4]	; newlen -4  
	mov A1,1
	add A0,A1
	mov [Dframe-200],A0	; T23  
; ------------------------------ widen
	movsx D0,dword[Dframe-200]	; T23  
	mov qword[Dframe-192],D0	; T22  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; newptr -16  
	mov D11,[Dframe-184]	; T21  
	mov D12,[Dframe-192]	; T22  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T24  
; ------------------------------ move
	mov D0,[Dframe-16]	; newptr -16  
	mov D13,[Dframe-208]	; T24 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; dest 16  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-216],D0	; T25  
; ------------------------------ move
	mov A0,[allocbytes]
	mov D13,[Dframe-216]	; T25 *
	mov dword[D13],A0
; ------------------------------ label
L485:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-240],D0	; T28  
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; oldlen -8  
	mov qword[Dframe-248],D0	; T29  
; ------------------------------ indexref
	mov D0,[Dframe-240]	; T28  
	mov D1,[Dframe-248]	; T29  
	lea D0, [D0+D1]
	mov [Dframe-232],D0	; T27  
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; n 32  
	mov qword[Dframe-264],D0	; T31  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-232]	; T27  
	mov D11,[Dframe+24]	; s 24  
	mov D12,[Dframe-264]	; T31  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; dest 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-280],D0	; T33  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newlen -4  
	mov qword[Dframe-288],D0	; T34  
; ------------------------------ indexlv
	mov D0,[Dframe-280]	; T33  
	mov D1,[Dframe-288]	; T34  
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T32  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-272]	; T32 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; dest 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T35  
; ------------------------------ move
	mov A0,[Dframe-4]	; newlen -4  
	mov D13,[Dframe-296]	; T35 *
	mov dword[D13],A0
; ------------------------------ label
L482:
; ------------------------------ hardret
	add Dstack, 304
	pop Dframe
	ret
;	End

;	Proc:isalphanum
isalphanum:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; c 16  
	cmp A0,65
	jl L489
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; c 16  
	cmp A0,90
	jle L488
; ------------------------------ label
L489:
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; c 16  
	cmp A0,97
	jl L490
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; c 16  
	cmp A0,122
	jle L488
; ------------------------------ label
L490:
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; c 16  
	cmp A0,48
	jl L487
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; c 16  
	cmp A0,57
	jg L487
; ------------------------------ label
L488:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L486
; ------------------------------ label
L487:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L486
; ------------------------------ label
L486:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:showmacrolineno
showmacrolineno:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[slineno]
	and A0,A0
	jz L492
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[sfileno]
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-16]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	push qword KK157
	push qword [Dframe-8]	; T1  
	sub Dstack,32
	mov D10,KK158
	mov D11,KK159
	mov A12,[slineno]
	mov D13,KK160
	call printf
	add Dstack, 48
; ------------------------------ label
L492:
; ------------------------------ label
L491:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global findheader
;	Proc:findheader
findheader:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L496
; ------------------------------ label
L497:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T3  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[stdhdrnames]
	mov D1,[Dframe-24]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; name 16  
	mov D11,[Dframe-16]	; T1  
	call strcmp
	mov [Dframe-40],A0	; T4  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,0
	jnz L498
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-72],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T8  
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ index
	lea D0,[stdhdrtext]
	mov D1,[Dframe-64]	; T7  
	mov D0, [D0+D1*8]
	mov [Dframe-56],D0	; T6  
; ------------------------------ getptr
	mov D0,[Dframe-56]	; T6  
	mov D0, [D0]
	mov [Dframe-48],D0	; T5  
; ------------------------------ returnx
	mov D0,[Dframe-48]	; T5  
	jmp L493
; ------------------------------ label
L498:
; ------------------------------ label
L494:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L496:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,37
	jle L497
; ------------------------------ label
L495:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L493
; ------------------------------ label
L493:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global writeheaders
;	Proc:writeheaders
writeheaders:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-20],A0	; i -20  
; ------------------------------ jump
	jmp	L502
; ------------------------------ label
L503:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-20]	; i -20  
	mov A1,1
	sub A0,A1
	mov [Dframe-48],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T3  
	mov qword[Dframe-40],D0	; T2  
; ------------------------------ index
	lea D0,[stdhdrnames]
	mov D1,[Dframe-40]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; T1  
	mov D11,KK161
	call changeext
	mov [Dframe-56],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-16],D0	; ifile -16  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-20]	; i -20  
	mov A1,1
	sub A0,A1
	mov [Dframe-80],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T7  
	mov qword[Dframe-72],D0	; T6  
; ------------------------------ index
	lea D0,[stdhdrnames]
	mov D1,[Dframe-72]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-64],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe-16]	; ifile -16  
	sub Dstack,32
	mov D10,KK162
	mov D11,KK163
	mov D12,[Dframe-64]	; T5  
	mov D13,KK164
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; ifile -16  
	mov D11,KK165
	call fopen
	mov [Dframe-88],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-88]	; T8  
	mov [Dframe-8],D0	; f -8  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-20]	; i -20  
	mov A1,1
	sub A0,A1
	mov [Dframe-128],A0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T13  
	mov qword[Dframe-120],D0	; T12  
; ------------------------------ index
	lea D0,[stdhdrtext]
	mov D1,[Dframe-120]	; T12  
	mov D0, [D0+D1*8]
	mov [Dframe-112],D0	; T11  
; ------------------------------ getptr
	mov D0,[Dframe-112]	; T11  
	mov D0, [D0]
	mov [Dframe-104],D0	; T10  
; ------------------------------ sub
	mov A0,[Dframe-20]	; i -20  
	mov A1,1
	sub A0,A1
	mov [Dframe-160],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-160]	; T17  
	mov qword[Dframe-152],D0	; T16  
; ------------------------------ index
	lea D0,[stdhdrtext]
	mov D1,[Dframe-152]	; T16  
	mov D0, [D0+D1*8]
	mov [Dframe-144],D0	; T15  
; ------------------------------ getptr
	mov D0,[Dframe-144]	; T15  
	mov D0, [D0]
	mov [Dframe-136],D0	; T14  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-136]	; T14  
	call strlen
	mov [Dframe-168],D0	; T18  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-104]	; T10  
	mov D11,1
	mov D12,[Dframe-168]	; T18  
	mov D13,[Dframe-8]	; f -8  
	call fwrite
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; f -8  
	call fclose
	add Dstack, 32
; ------------------------------ label
L500:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-20]	; i -20  
; ------------------------------ label
L502:
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; i -20  
	cmp A0,37
	jle L503
; ------------------------------ label
L501:
; ------------------------------ label
L499:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

	global lex_preprocess_only
;	Proc:lex_preprocess_only
	segment .bss
	align 8,resb 1
lex_preprocess_only.sbuffer:	resb 16
	segment .data
	align 8
lex_preprocess_only.dest:
	dq lex_preprocess_only.sbuffer
	segment .text
lex_preprocess_only:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 544

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [dowhitespace],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; infile 16  
	mov D11,[Dframe+16]	; infile 16  
	call loadsourcefile
	mov [Dframe-392],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-392]	; T1  
	mov [Dframe-20],A0	; fileno -20  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-380]	; outfile -380  
	mov [Dframe-400],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; infile 16  
	mov D11,KK166
	call changeext
	mov [Dframe-408],D0	; T3  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-400]	; T2  
	mov D11,[Dframe-408]	; T3  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; fileno -20  
	mov qword[Dframe-416],D0	; T4  
; ------------------------------ index
	lea D0,[sourcefiletext]
	mov D1,[Dframe-416]	; T4  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; psource -8  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; fileno -20  
	mov qword[Dframe-424],D0	; T5  
; ------------------------------ index
	lea D0,[sourcefilesizes]
	mov D1,[Dframe-424]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; size -24  
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[NALLCHARS]
	mov A1,[Dframe-24]	; size -24  
	add A0,A1
	mov [NALLCHARS],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-12],A0	; ntokens -12  
; ------------------------------ move
	mov A0,[Dframe-12]	; ntokens -12  
	mov [Dframe-16],A0	; nlines -16  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-64],D0	; symtot -64  
; ------------------------------ move
	mov D0,[Dframe-64]	; symtot -64  
	mov [Dframe-56],D0	; hashtot -56  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-432],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-432]	; T6  
	mov [Dframe-48],D0	; t -48  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lex_preprocess_only.dest]
	mov [destcopy],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[lex_preprocess_only.dest]
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [NALLLINES],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK167
	mov D11,KK168
	mov D12,[Dframe+16]	; infile 16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; psource -8  
	mov [lxsptr],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [lxstart],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-448],D0	; T8  
; ------------------------------ indexlv
	mov D0,[Dframe-448]	; T8  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-440],D0	; T7  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-440]	; T7 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-464],D0	; T10  
; ------------------------------ indexlv
	mov D0,[Dframe-464]	; T10  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-456],D0	; T9  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-456]	; T9 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [ifcondlevel],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-480],D0	; T12  
; ------------------------------ indexlv
	mov D0,[Dframe-480]	; T12  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-472],D0	; T11  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-472]	; T11 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ label
L507:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-12]	; ntokens -12  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; showtokens 24  
	and A0,A0
	jz L508
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-488],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-488]	; T13  
	mov D11,[lex_preprocess_only.dest]
	call emittoken
	add Dstack, 32
; ------------------------------ label
L508:
; ------------------------------ label
L505:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-504],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe-504]	; T15  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-496],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-496]	; T14  
	mov dword[Dframe-512],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-512]	; T16  
	cmp A0,55
	jnz L507
; ------------------------------ label
L506:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[ifcondlevel]
	and A0,A0
	jz L509
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK169
	call lxerror
	add Dstack, 32
; ------------------------------ label
L509:
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-16]	; nlines -16  
	mov A1,[NALLLINES]
	add A0,A1
	mov [Dframe-16],A0	; nlines -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK170
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK171
	mov D11,KK172
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; showtokens 24  
	and A0,A0
	jz L510
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-380]	; outfile -380  
	mov [Dframe-520],D0	; T17  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK173
	mov D11,KK174
	mov D12,[Dframe-520]	; T17  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-380]	; outfile -380  
	mov [Dframe-528],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-528]	; T18  
	mov D11,KK175
	call fopen
	mov [Dframe-536],D0	; T19  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-536]	; T19  
	mov [Dframe-80],D0	; f -80  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[lex_preprocess_only.dest]
	mov D11,[Dframe-80]	; f -80  
	call gs_println
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-80]	; f -80  
	call fclose
	add Dstack, 32
; ------------------------------ label
L510:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK176
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK177
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK178
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK179
	call printf
	add Dstack, 32
; ------------------------------ label
L504:
; ------------------------------ hardret
	add Dstack, 544
	pop Dframe
	ret
;	End

	global lexreadtoken
;	Proc:lexreadtoken
lexreadtoken:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 2768

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-56],D0	; T2  
; ------------------------------ indexlv
	mov D0,[Dframe-56]	; T2  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T1  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-48]	; T1 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ label
L3: ;<L4>
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-72],D0	; T4  
; ------------------------------ getptr
	mov D0,[Dframe-72]	; T4  
	mov B0, [D0]
	mov [Dframe-64],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T3  
	mov dword[Dframe-80],A0	; T5  
; ------------------------------ switch
	mov A0,[Dframe-80]	; T5  
	sub A0, 0
	cmp A0, 127
	jae L512
	jmp [A0*8+L613]
	align 8
; ------------------------------ label
L613:
; ------------------------------ jumplabel
	dq L515	; 1
; ------------------------------ jumplabel
	dq L512	; 2
; ------------------------------ jumplabel
	dq L512	; 3
; ------------------------------ jumplabel
	dq L512	; 4
; ------------------------------ jumplabel
	dq L512	; 5
; ------------------------------ jumplabel
	dq L512	; 6
; ------------------------------ jumplabel
	dq L512	; 7
; ------------------------------ jumplabel
	dq L512	; 8
; ------------------------------ jumplabel
	dq L512	; 9
; ------------------------------ jumplabel
	dq L521	; 10
; ------------------------------ jumplabel
	dq L518	; 11
; ------------------------------ jumplabel
	dq L512	; 12
; ------------------------------ jumplabel
	dq L514	; 13
; ------------------------------ jumplabel
	dq L519	; 14
; ------------------------------ jumplabel
	dq L512	; 15
; ------------------------------ jumplabel
	dq L512	; 16
; ------------------------------ jumplabel
	dq L512	; 17
; ------------------------------ jumplabel
	dq L512	; 18
; ------------------------------ jumplabel
	dq L512	; 19
; ------------------------------ jumplabel
	dq L512	; 20
; ------------------------------ jumplabel
	dq L512	; 21
; ------------------------------ jumplabel
	dq L512	; 22
; ------------------------------ jumplabel
	dq L512	; 23
; ------------------------------ jumplabel
	dq L512	; 24
; ------------------------------ jumplabel
	dq L512	; 25
; ------------------------------ jumplabel
	dq L512	; 26
; ------------------------------ jumplabel
	dq L512	; 27
; ------------------------------ jumplabel
	dq L512	; 28
; ------------------------------ jumplabel
	dq L512	; 29
; ------------------------------ jumplabel
	dq L512	; 30
; ------------------------------ jumplabel
	dq L512	; 31
; ------------------------------ jumplabel
	dq L512	; 32
; ------------------------------ jumplabel
	dq L520	; 33
; ------------------------------ jumplabel
	dq L517	; 34
; ------------------------------ jumplabel
	dq L522	; 35
; ------------------------------ jumplabel
	dq L548	; 36
; ------------------------------ jumplabel
	dq L611	; 37
; ------------------------------ jumplabel
	dq L528	; 38
; ------------------------------ jumplabel
	dq L524	; 39
; ------------------------------ jumplabel
	dq L523	; 40
; ------------------------------ jumplabel
	dq L540	; 41
; ------------------------------ jumplabel
	dq L539	; 42
; ------------------------------ jumplabel
	dq L530	; 43
; ------------------------------ jumplabel
	dq L532	; 44
; ------------------------------ jumplabel
	dq L543	; 45
; ------------------------------ jumplabel
	dq L531	; 46
; ------------------------------ jumplabel
	dq L544	; 47
; ------------------------------ jumplabel
	dq L529	; 48
; ------------------------------ jumplabel
	dq L549	; 49
; ------------------------------ jumplabel
	dq L550	; 50
; ------------------------------ jumplabel
	dq L551	; 51
; ------------------------------ jumplabel
	dq L552	; 52
; ------------------------------ jumplabel
	dq L553	; 53
; ------------------------------ jumplabel
	dq L554	; 54
; ------------------------------ jumplabel
	dq L555	; 55
; ------------------------------ jumplabel
	dq L556	; 56
; ------------------------------ jumplabel
	dq L557	; 57
; ------------------------------ jumplabel
	dq L558	; 58
; ------------------------------ jumplabel
	dq L541	; 59
; ------------------------------ jumplabel
	dq L542	; 60
; ------------------------------ jumplabel
	dq L526	; 61
; ------------------------------ jumplabel
	dq L527	; 62
; ------------------------------ jumplabel
	dq L525	; 63
; ------------------------------ jumplabel
	dq L534	; 64
; ------------------------------ jumplabel
	dq L516	; 65
; ------------------------------ jumplabel
	dq L559	; 66
; ------------------------------ jumplabel
	dq L560	; 67
; ------------------------------ jumplabel
	dq L561	; 68
; ------------------------------ jumplabel
	dq L562	; 69
; ------------------------------ jumplabel
	dq L563	; 70
; ------------------------------ jumplabel
	dq L564	; 71
; ------------------------------ jumplabel
	dq L565	; 72
; ------------------------------ jumplabel
	dq L566	; 73
; ------------------------------ jumplabel
	dq L567	; 74
; ------------------------------ jumplabel
	dq L568	; 75
; ------------------------------ jumplabel
	dq L569	; 76
; ------------------------------ jumplabel
	dq L570	; 77
; ------------------------------ jumplabel
	dq L571	; 78
; ------------------------------ jumplabel
	dq L572	; 79
; ------------------------------ jumplabel
	dq L573	; 80
; ------------------------------ jumplabel
	dq L574	; 81
; ------------------------------ jumplabel
	dq L575	; 82
; ------------------------------ jumplabel
	dq L576	; 83
; ------------------------------ jumplabel
	dq L577	; 84
; ------------------------------ jumplabel
	dq L578	; 85
; ------------------------------ jumplabel
	dq L579	; 86
; ------------------------------ jumplabel
	dq L580	; 87
; ------------------------------ jumplabel
	dq L581	; 88
; ------------------------------ jumplabel
	dq L582	; 89
; ------------------------------ jumplabel
	dq L583	; 90
; ------------------------------ jumplabel
	dq L584	; 91
; ------------------------------ jumplabel
	dq L538	; 92
; ------------------------------ jumplabel
	dq L547	; 93
; ------------------------------ jumplabel
	dq L537	; 94
; ------------------------------ jumplabel
	dq L535	; 95
; ------------------------------ jumplabel
	dq L612	; 96
; ------------------------------ jumplabel
	dq L512	; 97
; ------------------------------ jumplabel
	dq L585	; 98
; ------------------------------ jumplabel
	dq L586	; 99
; ------------------------------ jumplabel
	dq L587	; 100
; ------------------------------ jumplabel
	dq L588	; 101
; ------------------------------ jumplabel
	dq L589	; 102
; ------------------------------ jumplabel
	dq L590	; 103
; ------------------------------ jumplabel
	dq L591	; 104
; ------------------------------ jumplabel
	dq L592	; 105
; ------------------------------ jumplabel
	dq L593	; 106
; ------------------------------ jumplabel
	dq L594	; 107
; ------------------------------ jumplabel
	dq L595	; 108
; ------------------------------ jumplabel
	dq L596	; 109
; ------------------------------ jumplabel
	dq L597	; 110
; ------------------------------ jumplabel
	dq L598	; 111
; ------------------------------ jumplabel
	dq L599	; 112
; ------------------------------ jumplabel
	dq L600	; 113
; ------------------------------ jumplabel
	dq L601	; 114
; ------------------------------ jumplabel
	dq L602	; 115
; ------------------------------ jumplabel
	dq L603	; 116
; ------------------------------ jumplabel
	dq L604	; 117
; ------------------------------ jumplabel
	dq L605	; 118
; ------------------------------ jumplabel
	dq L606	; 119
; ------------------------------ jumplabel
	dq L607	; 120
; ------------------------------ jumplabel
	dq L608	; 121
; ------------------------------ jumplabel
	dq L609	; 122
; ------------------------------ jumplabel
	dq L610	; 123
; ------------------------------ jumplabel
	dq L546	; 124
; ------------------------------ jumplabel
	dq L536	; 125
; ------------------------------ jumplabel
	dq L545	; 126
; ------------------------------ jumplabel
	dq L533	; 127
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L559:
; ------------------------------ stmt
; ------------------------------ comment
;case 66:
; ------------------------------ label
L560:
; ------------------------------ stmt
; ------------------------------ comment
;case 67:
; ------------------------------ label
L561:
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L562:
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L563:
; ------------------------------ stmt
; ------------------------------ comment
;case 70:
; ------------------------------ label
L564:
; ------------------------------ stmt
; ------------------------------ comment
;case 71:
; ------------------------------ label
L565:
; ------------------------------ stmt
; ------------------------------ comment
;case 72:
; ------------------------------ label
L566:
; ------------------------------ stmt
; ------------------------------ comment
;case 73:
; ------------------------------ label
L567:
; ------------------------------ stmt
; ------------------------------ comment
;case 74:
; ------------------------------ label
L568:
; ------------------------------ stmt
; ------------------------------ comment
;case 75:
; ------------------------------ label
L569:
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L570:
; ------------------------------ stmt
; ------------------------------ comment
;case 77:
; ------------------------------ label
L571:
; ------------------------------ stmt
; ------------------------------ comment
;case 78:
; ------------------------------ label
L572:
; ------------------------------ stmt
; ------------------------------ comment
;case 79:
; ------------------------------ label
L573:
; ------------------------------ stmt
; ------------------------------ comment
;case 80:
; ------------------------------ label
L574:
; ------------------------------ stmt
; ------------------------------ comment
;case 81:
; ------------------------------ label
L575:
; ------------------------------ stmt
; ------------------------------ comment
;case 82:
; ------------------------------ label
L576:
; ------------------------------ stmt
; ------------------------------ comment
;case 83:
; ------------------------------ label
L577:
; ------------------------------ stmt
; ------------------------------ comment
;case 84:
; ------------------------------ label
L578:
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L579:
; ------------------------------ stmt
; ------------------------------ comment
;case 86:
; ------------------------------ label
L580:
; ------------------------------ stmt
; ------------------------------ comment
;case 87:
; ------------------------------ label
L581:
; ------------------------------ stmt
; ------------------------------ comment
;case 88:
; ------------------------------ label
L582:
; ------------------------------ stmt
; ------------------------------ comment
;case 89:
; ------------------------------ label
L583:
; ------------------------------ stmt
; ------------------------------ comment
;case 90:
; ------------------------------ label
L584:
; ------------------------------ stmt
; ------------------------------ comment
;case 97:
; ------------------------------ label
L585:
; ------------------------------ stmt
; ------------------------------ comment
;case 98:
; ------------------------------ label
L586:
; ------------------------------ stmt
; ------------------------------ comment
;case 99:
; ------------------------------ label
L587:
; ------------------------------ stmt
; ------------------------------ comment
;case 100:
; ------------------------------ label
L588:
; ------------------------------ stmt
; ------------------------------ comment
;case 101:
; ------------------------------ label
L589:
; ------------------------------ stmt
; ------------------------------ comment
;case 102:
; ------------------------------ label
L590:
; ------------------------------ stmt
; ------------------------------ comment
;case 103:
; ------------------------------ label
L591:
; ------------------------------ stmt
; ------------------------------ comment
;case 104:
; ------------------------------ label
L592:
; ------------------------------ stmt
; ------------------------------ comment
;case 105:
; ------------------------------ label
L593:
; ------------------------------ stmt
; ------------------------------ comment
;case 106:
; ------------------------------ label
L594:
; ------------------------------ stmt
; ------------------------------ comment
;case 107:
; ------------------------------ label
L595:
; ------------------------------ stmt
; ------------------------------ comment
;case 108:
; ------------------------------ label
L596:
; ------------------------------ stmt
; ------------------------------ comment
;case 109:
; ------------------------------ label
L597:
; ------------------------------ stmt
; ------------------------------ comment
;case 110:
; ------------------------------ label
L598:
; ------------------------------ stmt
; ------------------------------ comment
;case 111:
; ------------------------------ label
L599:
; ------------------------------ stmt
; ------------------------------ comment
;case 112:
; ------------------------------ label
L600:
; ------------------------------ stmt
; ------------------------------ comment
;case 113:
; ------------------------------ label
L601:
; ------------------------------ stmt
; ------------------------------ comment
;case 114:
; ------------------------------ label
L602:
; ------------------------------ stmt
; ------------------------------ comment
;case 115:
; ------------------------------ label
L603:
; ------------------------------ stmt
; ------------------------------ comment
;case 116:
; ------------------------------ label
L604:
; ------------------------------ stmt
; ------------------------------ comment
;case 117:
; ------------------------------ label
L605:
; ------------------------------ stmt
; ------------------------------ comment
;case 118:
; ------------------------------ label
L606:
; ------------------------------ stmt
; ------------------------------ comment
;case 119:
; ------------------------------ label
L607:
; ------------------------------ stmt
; ------------------------------ comment
;case 120:
; ------------------------------ label
L608:
; ------------------------------ stmt
; ------------------------------ comment
;case 121:
; ------------------------------ label
L609:
; ------------------------------ stmt
; ------------------------------ comment
;case 122:
; ------------------------------ label
L610:
; ------------------------------ stmt
; ------------------------------ comment
;case 36:
; ------------------------------ label
L611:
; ------------------------------ stmt
; ------------------------------ comment
;case 95:
; ------------------------------ label
L612:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [lxsvalue],D0
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsvalue]
	mov B0, [D0]
	mov [Dframe-88],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T6  
	mov dword[Dframe-96],A0	; T7  
; ------------------------------ move
	mov A0,[Dframe-96]	; T7  
	mov [Dframe-8],A0	; csum -8  
; ------------------------------ move
	mov A0,[Dframe-8]	; csum -8  
	mov [Dframe-12],A0	; hsum -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L614
; ------------------------------ label
L616:
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-8]	; csum -8  
	mov A1,[Dframe-4]	; c -4  
	add A0,A1
	mov [Dframe-8],A0	; csum -8  
; ------------------------------ stmt
; ------------------------------ shl
	mov A0,[Dframe-12]	; hsum -12  
	mov B10,3
	shl A0, cl
	mov [Dframe-104],A0	; T8  
; ------------------------------ add
	mov A0,[Dframe-104]	; T8  
	mov A1,[Dframe-8]	; csum -8  
	add A0,A1
	mov [Dframe-12],A0	; hsum -12  
; ------------------------------ label
L614:
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-144],D0	; T13  
; ------------------------------ getptr
	mov D0,[Dframe-144]	; T13  
	mov B0, [D0]
	mov [Dframe-136],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T12  
	mov dword[Dframe-152],A0	; T14  
; ------------------------------ move
	mov A0,[Dframe-152]	; T14  
	mov [Dframe-4],A0	; c -4  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; c -4  
	mov qword[Dframe-128],D0	; T11  
; ------------------------------ index
	lea D0,[alphamap]
	mov D1,[Dframe-128]	; T11  
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T10  
	mov dword[Dframe-160],A0	; T15  
; ------------------------------ truncate
	mov A0,[Dframe-160]	; T15  
	and D0,255
	mov [Dframe-112],B0	; T9  
; ------------------------------ jumptrue
	mov B0,[Dframe-112]	; T9  
	and B0,B0
	jnz L616
; ------------------------------ label
L615:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-176],D0	; T17  
; ------------------------------ indexlv
	mov D0,[Dframe-176]	; T17  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T16  
; ------------------------------ move
	mov A0,65
	mov D13,[Dframe-168]	; T16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-192],D0	; T19  
; ------------------------------ indexlv
	mov D0,[Dframe-192]	; T19  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T18  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[lxsvalue]
	sub D0,D1
	mov [Dframe-208],D0	; T21  
; ------------------------------ truncate
	mov D0,[Dframe-208]	; T21  
	mov A0,A0
	mov [Dframe-200],A0	; T20  
; ------------------------------ move
	mov A0,[Dframe-200]	; T20  
	mov D13,[Dframe-184]	; T18 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; c -4  
	cmp A0,39
	jz L618
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; c -4  
	cmp A0,34
	jnz L617
; ------------------------------ label
L618:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-224],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-224]	; T23  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T22  
	cmp A0,1
	jnz L619
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsvalue]
	mov B0, [D0]
	mov [Dframe-232],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T24  
	mov dword[Dframe-240],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T25  
	cmp A0,108
	jz L621
; ------------------------------ getptr
	mov D0,[lxsvalue]
	mov B0, [D0]
	mov [Dframe-248],B0	; T26  
; ------------------------------ widen
	movzx A0,byte [Dframe-248]	; T26  
	mov dword[Dframe-256],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T27  
	cmp A0,76
	jz L621
; ------------------------------ getptr
	mov D0,[lxsvalue]
	mov B0, [D0]
	mov [Dframe-264],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-264]	; T28  
	mov dword[Dframe-272],A0	; T29  
; ------------------------------ jumpcc
	mov A0,[Dframe-272]	; T29  
	cmp A0,117
	jz L621
; ------------------------------ getptr
	mov D0,[lxsvalue]
	mov B0, [D0]
	mov [Dframe-280],B0	; T30  
; ------------------------------ widen
	movzx A0,byte [Dframe-280]	; T30  
	mov dword[Dframe-288],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T31  
	cmp A0,85
	jnz L620
; ------------------------------ label
L621:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; c -4  
	mov A11,1
	call lxreadstring
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ label
L620:
; ------------------------------ label
L619:
; ------------------------------ label
L617:
; ------------------------------ stmt
; ------------------------------ shl
	mov A0,[Dframe-12]	; hsum -12  
	mov B10,5
	shl A0, cl
	mov [Dframe-296],A0	; T32  
; ------------------------------ ixor
	mov A0,[Dframe-296]	; T32  
	mov A1,[Dframe-8]	; csum -8  
	xor A0,A1
	mov [lxhashvalue],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-312],D0	; T34  
; ------------------------------ index
	mov D0,[Dframe-312]	; T34  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-304],A0	; T33  
; ------------------------------ add
	mov A0,[Dframe-304]	; T33  
	mov A1,1
	add A0,A1
	mov [Dframe-320],A0	; T35  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-320]	; T35  
	call pcm_alloc
	mov [Dframe-328],D0	; T36  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-328]	; T36  
	mov [Dframe-32],D0	; ss -32  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-368],D0	; T41  
; ------------------------------ index
	mov D0,[Dframe-368]	; T41  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-360],A0	; T40  
; ------------------------------ widen
	movsx D0,dword[Dframe-360]	; T40  
	mov qword[Dframe-352],D0	; T39  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; ss -32  
	mov D11,[lxsvalue]
	mov D12,[Dframe-352]	; T39  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-400],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe-400]	; T45  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-392],A0	; T44  
; ------------------------------ widen
	movsx D0,dword[Dframe-392]	; T44  
	mov qword[Dframe-384],D0	; T43  
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; ss -32  
	mov D1,[Dframe-384]	; T43  
	lea D0, [D0+D1]
	mov [Dframe-376],D0	; T42  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-376]	; T42 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-32]	; ss -32  
	mov [lxsvalue],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-416],D0	; T47  
; ------------------------------ indexlv
	mov D0,[Dframe-416]	; T47  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-408],D0	; T46  
; ------------------------------ iand
	mov A0,[lxhashvalue]
	mov A1,65535
	and A0,A1
	mov [Dframe-440],A0	; T50  
; ------------------------------ widen
	movsx D0,dword[Dframe-440]	; T50  
	mov qword[Dframe-432],D0	; T49  
; ------------------------------ indexref
	lea D0,[hashtable]
	mov D1,[Dframe-432]	; T49  
	imul D1,128
	lea D0, [D0+D1]
	mov [Dframe-424],D0	; T48  
; ------------------------------ move
	mov D0,[Dframe-424]	; T48  
	mov D13,[Dframe-408]	; T46 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-464],D0	; T53  
; ------------------------------ index
	mov D0,[Dframe-464]	; T53  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-456],D0	; T52  
; ------------------------------ index
	mov D0,[Dframe-456]	; T52  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-448],B0	; T51  
; ------------------------------ widen
	movzx A0,byte [Dframe-448]	; T51  
	mov dword[Dframe-472],A0	; T54  
; ------------------------------ jumpcc
	mov A0,[Dframe-472]	; T54  
	cmp A0,0
	jnz L622
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-496],D0	; T57  
; ------------------------------ index
	mov D0,[Dframe-496]	; T57  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-488],D0	; T56  
; ------------------------------ indexlv
	mov D0,[Dframe-488]	; T56  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-480],D0	; T55  
; ------------------------------ move
	mov D0,[lxsvalue]
	mov D13,[Dframe-480]	; T55 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-520],D0	; T60  
; ------------------------------ index
	mov D0,[Dframe-520]	; T60  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-512],D0	; T59  
; ------------------------------ indexlv
	mov D0,[Dframe-512]	; T59  
	mov A1,112
	lea D0, [D0+D1]
	mov [Dframe-504],D0	; T58  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-536],D0	; T62  
; ------------------------------ index
	mov D0,[Dframe-536]	; T62  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-528],A0	; T61  
; ------------------------------ move
	mov A0,[Dframe-528]	; T61  
	mov D13,[Dframe-504]	; T58 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-560],D0	; T65  
; ------------------------------ index
	mov D0,[Dframe-560]	; T65  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-552],D0	; T64  
; ------------------------------ indexlv
	mov D0,[Dframe-552]	; T64  
	mov A1,113
	lea D0, [D0+D1]
	mov [Dframe-544],D0	; T63  
; ------------------------------ move
	mov A0,65
	mov D13,[Dframe-544]	; T63 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ jump
	jmp	L623
; ------------------------------ label
L622:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-584],D0	; T68  
; ------------------------------ index
	mov D0,[Dframe-584]	; T68  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-576],D0	; T67  
; ------------------------------ index
	mov D0,[Dframe-576]	; T67  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-568],B0	; T66  
; ------------------------------ widen
	movzx A0,byte [Dframe-568]	; T66  
	mov dword[Dframe-592],A0	; T69  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-608],D0	; T71  
; ------------------------------ index
	mov D0,[Dframe-608]	; T71  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-600],A0	; T70  
; ------------------------------ jumpcc
	mov A0,[Dframe-592]	; T69  
	cmp A0,[Dframe-600]	; T70  
	jnz L624
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-632],D0	; T74  
; ------------------------------ index
	mov D0,[Dframe-632]	; T74  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-624],D0	; T73  
; ------------------------------ index
	mov D0,[Dframe-624]	; T73  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-616],D0	; T72  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-656],D0	; T77  
; ------------------------------ index
	mov D0,[Dframe-656]	; T77  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-648],A0	; T76  
; ------------------------------ widen
	movsx D0,dword[Dframe-648]	; T76  
	mov qword[Dframe-640],D0	; T75  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-616]	; T72  
	mov D11,[lxsvalue]
	mov D12,[Dframe-640]	; T75  
	call memcmp
	mov [Dframe-664],A0	; T78  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-664]	; T78  
	cmp A0,0
	jnz L625
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ label
L625:
; ------------------------------ label
L624:
; ------------------------------ label
L623:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lookup
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L550:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L551:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L552:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L553:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L554:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L555:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L556:
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L557:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L558:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-672],B0	; T79  
; ------------------------------ widen
	movzx A0,byte [Dframe-672]	; T79  
	mov dword[Dframe-680],A0	; T80  
; ------------------------------ jumpcc
	mov A0,[Dframe-680]	; T80  
	cmp A0,32
	jz L627
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-688],B0	; T81  
; ------------------------------ widen
	movzx A0,byte [Dframe-688]	; T81  
	mov dword[Dframe-696],A0	; T82  
; ------------------------------ jumpcc
	mov A0,[Dframe-696]	; T82  
	cmp A0,41
	jz L627
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-704],B0	; T83  
; ------------------------------ widen
	movzx A0,byte [Dframe-704]	; T83  
	mov dword[Dframe-712],A0	; T84  
; ------------------------------ jumpcc
	mov A0,[Dframe-712]	; T84  
	cmp A0,13
	jz L627
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-720],B0	; T85  
; ------------------------------ widen
	movzx A0,byte [Dframe-720]	; T85  
	mov dword[Dframe-728],A0	; T86  
; ------------------------------ jumpcc
	mov A0,[Dframe-728]	; T86  
	cmp A0,44
	jz L627
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-736],B0	; T87  
; ------------------------------ widen
	movzx A0,byte [Dframe-736]	; T87  
	mov dword[Dframe-744],A0	; T88  
; ------------------------------ jumpcc
	mov A0,[Dframe-744]	; T88  
	cmp A0,59
	jnz L626
; ------------------------------ label
L627:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-760],D0	; T90  
; ------------------------------ indexlv
	mov D0,[Dframe-760]	; T90  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-752],D0	; T89  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-752]	; T89 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-776],D0	; T92  
; ------------------------------ indexlv
	mov D0,[Dframe-776]	; T92  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-768],D0	; T91  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-768]	; T91 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-792],D0	; T94  
; ------------------------------ indexlv
	mov D0,[Dframe-792]	; T94  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-784],D0	; T93  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-816],D0	; T97  
; ------------------------------ getptr
	mov D0,[Dframe-816]	; T97  
	mov B0, [D0]
	mov [Dframe-808],B0	; T96  
; ------------------------------ widen
	movzx A0,byte [Dframe-808]	; T96  
	mov dword[Dframe-824],A0	; T98  
; ------------------------------ sub
	mov A0,[Dframe-824]	; T98  
	mov A1,48
	sub A0,A1
	mov [Dframe-832],A0	; T99  
; ------------------------------ widen
	movsx D0,dword[Dframe-832]	; T99  
	mov qword[Dframe-800],D0	; T95  
; ------------------------------ move
	mov D0,[Dframe-800]	; T95  
	mov D13,[Dframe-784]	; T93 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-848],D0	; T101  
; ------------------------------ indexlv
	mov D0,[Dframe-848]	; T101  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-840],D0	; T100  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-840]	; T100 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-864],D0	; T103  
; ------------------------------ indexlv
	mov D0,[Dframe-864]	; T103  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-856],D0	; T102  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-880],D0	; T105  
; ------------------------------ sub
	mov D0,[Dframe-880]	; T105  
	mov D1,[lxstart]
	sub D0,D1
	mov [Dframe-888],D0	; T106  
; ------------------------------ truncate
	mov D0,[Dframe-888]	; T106  
	mov A0,A0
	mov [Dframe-872],A0	; T104  
; ------------------------------ move
	mov A0,[Dframe-872]	; T104  
	mov D13,[Dframe-856]	; T102 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L628
; ------------------------------ label
L626:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-896],D0	; T107  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-896]	; T107  
	call readdecimal
	add Dstack, 32
; ------------------------------ label
L628:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L549:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-904],B0	; T108  
; ------------------------------ widen
	movzx A0,byte [Dframe-904]	; T108  
	mov dword[Dframe-912],A0	; T109  
; ------------------------------ switch
	mov A0,[Dframe-912]	; T109  
	sub A0, 41
	cmp A0, 85
	jae L629
	jmp [A0*8+L646]
	align 8
; ------------------------------ label
L646:
; ------------------------------ jumplabel
	dq L632	; 1
; ------------------------------ jumplabel
	dq L629	; 2
; ------------------------------ jumplabel
	dq L629	; 3
; ------------------------------ jumplabel
	dq L631	; 4
; ------------------------------ jumplabel
	dq L629	; 5
; ------------------------------ jumplabel
	dq L641	; 6
; ------------------------------ jumplabel
	dq L629	; 7
; ------------------------------ jumplabel
	dq L629	; 8
; ------------------------------ jumplabel
	dq L629	; 9
; ------------------------------ jumplabel
	dq L629	; 10
; ------------------------------ jumplabel
	dq L629	; 11
; ------------------------------ jumplabel
	dq L629	; 12
; ------------------------------ jumplabel
	dq L629	; 13
; ------------------------------ jumplabel
	dq L629	; 14
; ------------------------------ jumplabel
	dq L629	; 15
; ------------------------------ jumplabel
	dq L629	; 16
; ------------------------------ jumplabel
	dq L629	; 17
; ------------------------------ jumplabel
	dq L636	; 18
; ------------------------------ jumplabel
	dq L635	; 19
; ------------------------------ jumplabel
	dq L629	; 20
; ------------------------------ jumplabel
	dq L629	; 21
; ------------------------------ jumplabel
	dq L629	; 22
; ------------------------------ jumplabel
	dq L629	; 23
; ------------------------------ jumplabel
	dq L629	; 24
; ------------------------------ jumplabel
	dq L629	; 25
; ------------------------------ jumplabel
	dq L643	; 26
; ------------------------------ jumplabel
	dq L629	; 27
; ------------------------------ jumplabel
	dq L629	; 28
; ------------------------------ jumplabel
	dq L629	; 29
; ------------------------------ jumplabel
	dq L629	; 30
; ------------------------------ jumplabel
	dq L629	; 31
; ------------------------------ jumplabel
	dq L629	; 32
; ------------------------------ jumplabel
	dq L629	; 33
; ------------------------------ jumplabel
	dq L629	; 34
; ------------------------------ jumplabel
	dq L629	; 35
; ------------------------------ jumplabel
	dq L640	; 36
; ------------------------------ jumplabel
	dq L629	; 37
; ------------------------------ jumplabel
	dq L629	; 38
; ------------------------------ jumplabel
	dq L629	; 39
; ------------------------------ jumplabel
	dq L629	; 40
; ------------------------------ jumplabel
	dq L629	; 41
; ------------------------------ jumplabel
	dq L629	; 42
; ------------------------------ jumplabel
	dq L629	; 43
; ------------------------------ jumplabel
	dq L629	; 44
; ------------------------------ jumplabel
	dq L638	; 45
; ------------------------------ jumplabel
	dq L629	; 46
; ------------------------------ jumplabel
	dq L629	; 47
; ------------------------------ jumplabel
	dq L645	; 48
; ------------------------------ jumplabel
	dq L629	; 49
; ------------------------------ jumplabel
	dq L629	; 50
; ------------------------------ jumplabel
	dq L629	; 51
; ------------------------------ jumplabel
	dq L629	; 52
; ------------------------------ jumplabel
	dq L633	; 53
; ------------------------------ jumplabel
	dq L629	; 54
; ------------------------------ jumplabel
	dq L629	; 55
; ------------------------------ jumplabel
	dq L629	; 56
; ------------------------------ jumplabel
	dq L629	; 57
; ------------------------------ jumplabel
	dq L642	; 58
; ------------------------------ jumplabel
	dq L629	; 59
; ------------------------------ jumplabel
	dq L629	; 60
; ------------------------------ jumplabel
	dq L629	; 61
; ------------------------------ jumplabel
	dq L629	; 62
; ------------------------------ jumplabel
	dq L629	; 63
; ------------------------------ jumplabel
	dq L629	; 64
; ------------------------------ jumplabel
	dq L629	; 65
; ------------------------------ jumplabel
	dq L629	; 66
; ------------------------------ jumplabel
	dq L629	; 67
; ------------------------------ jumplabel
	dq L639	; 68
; ------------------------------ jumplabel
	dq L629	; 69
; ------------------------------ jumplabel
	dq L629	; 70
; ------------------------------ jumplabel
	dq L629	; 71
; ------------------------------ jumplabel
	dq L629	; 72
; ------------------------------ jumplabel
	dq L629	; 73
; ------------------------------ jumplabel
	dq L629	; 74
; ------------------------------ jumplabel
	dq L629	; 75
; ------------------------------ jumplabel
	dq L629	; 76
; ------------------------------ jumplabel
	dq L637	; 77
; ------------------------------ jumplabel
	dq L629	; 78
; ------------------------------ jumplabel
	dq L629	; 79
; ------------------------------ jumplabel
	dq L644	; 80
; ------------------------------ jumplabel
	dq L629	; 81
; ------------------------------ jumplabel
	dq L629	; 82
; ------------------------------ jumplabel
	dq L629	; 83
; ------------------------------ jumplabel
	dq L629	; 84
; ------------------------------ jumplabel
	dq L634	; 85
; ------------------------------ stmt
; ------------------------------ comment
;case 120:
; ------------------------------ label
L644:
; ------------------------------ stmt
; ------------------------------ comment
;case 88:
; ------------------------------ label
L645:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,2
	sub D0,D1
	mov [Dframe-920],D0	; T110  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-920]	; T110  
	call readhex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L630
; ------------------------------ stmt
; ------------------------------ comment
;case 98:
; ------------------------------ label
L642:
; ------------------------------ stmt
; ------------------------------ comment
;case 66:
; ------------------------------ label
L643:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,2
	sub D0,D1
	mov [Dframe-928],D0	; T111  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-928]	; T111  
	call readbinary
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L630
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L641:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-936],D0	; T112  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-944],D0	; T113  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-936]	; T112  
	mov D11,[Dframe-944]	; T113  
	mov A12,1
	mov A13,10
	call readrealnumber
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L630
; ------------------------------ stmt
; ------------------------------ comment
;case 117:
; ------------------------------ label
L637:
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L638:
; ------------------------------ stmt
; ------------------------------ comment
;case 108:
; ------------------------------ label
L639:
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L640:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-952],D0	; T114  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-952]	; T114  
	call readdecimal
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L630
; ------------------------------ stmt
; ------------------------------ comment
;case 44:
; ------------------------------ label
L631:
; ------------------------------ stmt
; ------------------------------ comment
;case 41:
; ------------------------------ label
L632:
; ------------------------------ stmt
; ------------------------------ comment
;case 93:
; ------------------------------ label
L633:
; ------------------------------ stmt
; ------------------------------ comment
;case 125:
; ------------------------------ label
L634:
; ------------------------------ stmt
; ------------------------------ comment
;case 59:
; ------------------------------ label
L635:
; ------------------------------ stmt
; ------------------------------ comment
;case 58:
; ------------------------------ label
L636:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-968],D0	; T116  
; ------------------------------ indexlv
	mov D0,[Dframe-968]	; T116  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-960],D0	; T115  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-960]	; T115 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-984],D0	; T118  
; ------------------------------ indexlv
	mov D0,[Dframe-984]	; T118  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-976],D0	; T117  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-976]	; T117 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1000],D0	; T120  
; ------------------------------ indexlv
	mov D0,[Dframe-1000]	; T120  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-992],D0	; T119  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-992]	; T119 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1016],D0	; T122  
; ------------------------------ indexlv
	mov D0,[Dframe-1016]	; T122  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-1008],D0	; T121  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-1008]	; T121 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1032],D0	; T124  
; ------------------------------ indexlv
	mov D0,[Dframe-1032]	; T124  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-1024],D0	; T123  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-1048],D0	; T126  
; ------------------------------ sub
	mov D0,[Dframe-1048]	; T126  
	mov D1,[lxstart]
	sub D0,D1
	mov [Dframe-1056],D0	; T127  
; ------------------------------ truncate
	mov D0,[Dframe-1056]	; T127  
	mov A0,A0
	mov [Dframe-1040],A0	; T125  
; ------------------------------ move
	mov A0,[Dframe-1040]	; T125  
	mov D13,[Dframe-1024]	; T123 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L630
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L629:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-1064],D0	; T128  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1064]	; T128  
	call readoctal
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ label
L630:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 35:
; ------------------------------ label
L548:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1080],D0	; T130  
; ------------------------------ index
	mov D0,[Dframe-1080]	; T130  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1072],B0	; T129  
; ------------------------------ widen
	movzx A0,byte [Dframe-1072]	; T129  
	mov dword[Dframe-1088],A0	; T131  
; ------------------------------ jumpcc
	mov A0,[Dframe-1088]	; T131  
	cmp A0,54
	jnz L647
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1104],D0	; T133  
; ------------------------------ indexlv
	mov D0,[Dframe-1104]	; T133  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1096],D0	; T132  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-1096]	; T132 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ jump
	jmp	L648
; ------------------------------ label
L647:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1112],B0	; T134  
; ------------------------------ widen
	movzx A0,byte [Dframe-1112]	; T134  
	mov dword[Dframe-1120],A0	; T135  
; ------------------------------ jumpcc
	mov A0,[Dframe-1120]	; T135  
	cmp A0,35
	jnz L649
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1136],D0	; T137  
; ------------------------------ indexlv
	mov D0,[Dframe-1136]	; T137  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1128],D0	; T136  
; ------------------------------ move
	mov A0,7
	mov D13,[Dframe-1128]	; T136 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ jump
	jmp	L650
; ------------------------------ label
L649:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1152],D0	; T139  
; ------------------------------ indexlv
	mov D0,[Dframe-1152]	; T139  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1144],D0	; T138  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-1144]	; T138 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ label
L650:
; ------------------------------ label
L648:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 92:
; ------------------------------ label
L547:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-1168],D0	; T141  
; ------------------------------ move
	mov D0,[Dframe-1168]	; T141  
	mov [Dframe-1160],D0	; T140  
; ------------------------------ move
	mov A0,32
	mov D13,[Dframe-1160]	; T140 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1184],D0	; T143  
; ------------------------------ indexlv
	mov D0,[Dframe-1184]	; T143  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-1176],D0	; T142  
; ------------------------------ incrto
	mov D13,[Dframe-1176]	; T142 *
	inc dword[D13]
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1192],B0	; T144  
; ------------------------------ widen
	movzx A0,byte [Dframe-1192]	; T144  
	mov dword[Dframe-1200],A0	; T145  
; ------------------------------ jumpcc
	mov A0,[Dframe-1200]	; T145  
	cmp A0,13
	jnz L651
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-1216],D0	; T147  
; ------------------------------ move
	mov D0,[Dframe-1216]	; T147  
	mov [Dframe-1208],D0	; T146  
; ------------------------------ move
	mov A0,32
	mov D13,[Dframe-1208]	; T146 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L652
; ------------------------------ label
L651:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1224],B0	; T148  
; ------------------------------ widen
	movzx A0,byte [Dframe-1224]	; T148  
	mov dword[Dframe-1232],A0	; T149  
; ------------------------------ jumpcc
	mov A0,[Dframe-1232]	; T149  
	cmp A0,10
	jnz L653
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-1248],D0	; T151  
; ------------------------------ move
	mov D0,[Dframe-1248]	; T151  
	mov [Dframe-1240],D0	; T150  
; ------------------------------ move
	mov A0,32
	mov D13,[Dframe-1240]	; T150 *
	mov byte [D13],B0
; ------------------------------ label
L653:
; ------------------------------ label
L652:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 123:
; ------------------------------ label
L546:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1264],D0	; T153  
; ------------------------------ indexlv
	mov D0,[Dframe-1264]	; T153  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1256],D0	; T152  
; ------------------------------ move
	mov A0,16
	mov D13,[Dframe-1256]	; T152 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 125:
; ------------------------------ label
L545:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1280],D0	; T155  
; ------------------------------ indexlv
	mov D0,[Dframe-1280]	; T155  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1272],D0	; T154  
; ------------------------------ move
	mov A0,17
	mov D13,[Dframe-1272]	; T154 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L544:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1288],B0	; T156  
; ------------------------------ widen
	movzx A0,byte [Dframe-1288]	; T156  
	mov dword[Dframe-1296],A0	; T157  
; ------------------------------ switch
	mov A0,[Dframe-1296]	; T157  
	sub A0, 46
	cmp A0, 12
	jae L654
	jmp [A0*8+L667]
	align 8
; ------------------------------ label
L667:
; ------------------------------ jumplabel
	dq L666	; 1
; ------------------------------ jumplabel
	dq L654	; 2
; ------------------------------ jumplabel
	dq L656	; 3
; ------------------------------ jumplabel
	dq L657	; 4
; ------------------------------ jumplabel
	dq L658	; 5
; ------------------------------ jumplabel
	dq L659	; 6
; ------------------------------ jumplabel
	dq L660	; 7
; ------------------------------ jumplabel
	dq L661	; 8
; ------------------------------ jumplabel
	dq L662	; 9
; ------------------------------ jumplabel
	dq L663	; 10
; ------------------------------ jumplabel
	dq L664	; 11
; ------------------------------ jumplabel
	dq L665	; 12
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L666:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1304],B0	; T158  
; ------------------------------ widen
	movzx A0,byte [Dframe-1304]	; T158  
	mov dword[Dframe-1312],A0	; T159  
; ------------------------------ jumpcc
	mov A0,[Dframe-1312]	; T159  
	cmp A0,46
	jnz L668
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1328],D0	; T161  
; ------------------------------ indexlv
	mov D0,[Dframe-1328]	; T161  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1320],D0	; T160  
; ------------------------------ move
	mov A0,20
	mov D13,[Dframe-1320]	; T160 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L669
; ------------------------------ label
L668:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1344],D0	; T163  
; ------------------------------ indexlv
	mov D0,[Dframe-1344]	; T163  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1336],D0	; T162  
; ------------------------------ move
	mov A0,2
	mov D13,[Dframe-1336]	; T162 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ label
L669:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L655
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L656:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L657:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L658:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L659:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L660:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L661:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L662:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L663:
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L664:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L665:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[lxsptr]
	mov D11,[lxsptr]
	mov A12,0
	mov A13,10
	call readrealnumber
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L655
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L654:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1360],D0	; T165  
; ------------------------------ indexlv
	mov D0,[Dframe-1360]	; T165  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1352],D0	; T164  
; ------------------------------ move
	mov A0,2
	mov D13,[Dframe-1352]	; T164 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ label
L655:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 44:
; ------------------------------ label
L543:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1376],D0	; T167  
; ------------------------------ indexlv
	mov D0,[Dframe-1376]	; T167  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1368],D0	; T166  
; ------------------------------ move
	mov A0,8
	mov D13,[Dframe-1368]	; T166 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 59:
; ------------------------------ label
L542:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1392],D0	; T169  
; ------------------------------ indexlv
	mov D0,[Dframe-1392]	; T169  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1384],D0	; T168  
; ------------------------------ move
	mov A0,9
	mov D13,[Dframe-1384]	; T168 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 58:
; ------------------------------ label
L541:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1408],D0	; T171  
; ------------------------------ indexlv
	mov D0,[Dframe-1408]	; T171  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1400],D0	; T170  
; ------------------------------ move
	mov A0,10
	mov D13,[Dframe-1400]	; T170 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 40:
; ------------------------------ label
L540:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1424],D0	; T173  
; ------------------------------ indexlv
	mov D0,[Dframe-1424]	; T173  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1416],D0	; T172  
; ------------------------------ move
	mov A0,12
	mov D13,[Dframe-1416]	; T172 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 41:
; ------------------------------ label
L539:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1440],D0	; T175  
; ------------------------------ indexlv
	mov D0,[Dframe-1440]	; T175  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1432],D0	; T174  
; ------------------------------ move
	mov A0,13
	mov D13,[Dframe-1432]	; T174 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 91:
; ------------------------------ label
L538:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1456],D0	; T177  
; ------------------------------ indexlv
	mov D0,[Dframe-1456]	; T177  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1448],D0	; T176  
; ------------------------------ move
	mov A0,14
	mov D13,[Dframe-1448]	; T176 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 93:
; ------------------------------ label
L537:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1472],D0	; T179  
; ------------------------------ indexlv
	mov D0,[Dframe-1472]	; T179  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1464],D0	; T178  
; ------------------------------ move
	mov A0,15
	mov D13,[Dframe-1464]	; T178 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 124:
; ------------------------------ label
L536:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1480],B0	; T180  
; ------------------------------ widen
	movzx A0,byte [Dframe-1480]	; T180  
	mov dword[Dframe-1488],A0	; T181  
; ------------------------------ jumpcc
	mov A0,[Dframe-1488]	; T181  
	cmp A0,124
	jnz L670
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1504],D0	; T183  
; ------------------------------ indexlv
	mov D0,[Dframe-1504]	; T183  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1496],D0	; T182  
; ------------------------------ move
	mov A0,29
	mov D13,[Dframe-1496]	; T182 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L671
; ------------------------------ label
L670:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1512],B0	; T184  
; ------------------------------ widen
	movzx A0,byte [Dframe-1512]	; T184  
	mov dword[Dframe-1520],A0	; T185  
; ------------------------------ jumpcc
	mov A0,[Dframe-1520]	; T185  
	cmp A0,61
	jnz L672
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1536],D0	; T187  
; ------------------------------ indexlv
	mov D0,[Dframe-1536]	; T187  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1528],D0	; T186  
; ------------------------------ move
	mov A0,49
	mov D13,[Dframe-1528]	; T186 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L673
; ------------------------------ label
L672:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1552],D0	; T189  
; ------------------------------ indexlv
	mov D0,[Dframe-1552]	; T189  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1544],D0	; T188  
; ------------------------------ move
	mov A0,26
	mov D13,[Dframe-1544]	; T188 *
	mov byte [D13],B0
; ------------------------------ label
L673:
; ------------------------------ label
L671:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 94:
; ------------------------------ label
L535:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1560],B0	; T190  
; ------------------------------ widen
	movzx A0,byte [Dframe-1560]	; T190  
	mov dword[Dframe-1568],A0	; T191  
; ------------------------------ jumpcc
	mov A0,[Dframe-1568]	; T191  
	cmp A0,61
	jnz L674
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1584],D0	; T193  
; ------------------------------ indexlv
	mov D0,[Dframe-1584]	; T193  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1576],D0	; T192  
; ------------------------------ move
	mov A0,51
	mov D13,[Dframe-1576]	; T192 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L675
; ------------------------------ label
L674:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1600],D0	; T195  
; ------------------------------ indexlv
	mov D0,[Dframe-1600]	; T195  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1592],D0	; T194  
; ------------------------------ move
	mov A0,28
	mov D13,[Dframe-1592]	; T194 *
	mov byte [D13],B0
; ------------------------------ label
L675:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 63:
; ------------------------------ label
L534:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1616],D0	; T197  
; ------------------------------ indexlv
	mov D0,[Dframe-1616]	; T197  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1608],D0	; T196  
; ------------------------------ move
	mov A0,18
	mov D13,[Dframe-1608]	; T196 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 126:
; ------------------------------ label
L533:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1632],D0	; T199  
; ------------------------------ indexlv
	mov D0,[Dframe-1632]	; T199  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1624],D0	; T198  
; ------------------------------ move
	mov A0,33
	mov D13,[Dframe-1624]	; T198 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 43:
; ------------------------------ label
L532:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1640],B0	; T200  
; ------------------------------ widen
	movzx A0,byte [Dframe-1640]	; T200  
	mov dword[Dframe-1648],A0	; T201  
; ------------------------------ jumpcc
	mov A0,[Dframe-1648]	; T201  
	cmp A0,43
	jnz L676
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1664],D0	; T203  
; ------------------------------ indexlv
	mov D0,[Dframe-1664]	; T203  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1656],D0	; T202  
; ------------------------------ move
	mov A0,35
	mov D13,[Dframe-1656]	; T202 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L677
; ------------------------------ label
L676:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1672],B0	; T204  
; ------------------------------ widen
	movzx A0,byte [Dframe-1672]	; T204  
	mov dword[Dframe-1680],A0	; T205  
; ------------------------------ jumpcc
	mov A0,[Dframe-1680]	; T205  
	cmp A0,61
	jnz L678
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1696],D0	; T207  
; ------------------------------ indexlv
	mov D0,[Dframe-1696]	; T207  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1688],D0	; T206  
; ------------------------------ move
	mov A0,44
	mov D13,[Dframe-1688]	; T206 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L679
; ------------------------------ label
L678:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1712],D0	; T209  
; ------------------------------ indexlv
	mov D0,[Dframe-1712]	; T209  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1704],D0	; T208  
; ------------------------------ move
	mov A0,21
	mov D13,[Dframe-1704]	; T208 *
	mov byte [D13],B0
; ------------------------------ label
L679:
; ------------------------------ label
L677:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 45:
; ------------------------------ label
L531:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1720],B0	; T210  
; ------------------------------ widen
	movzx A0,byte [Dframe-1720]	; T210  
	mov dword[Dframe-1728],A0	; T211  
; ------------------------------ jumpcc
	mov A0,[Dframe-1728]	; T211  
	cmp A0,45
	jnz L680
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1744],D0	; T213  
; ------------------------------ indexlv
	mov D0,[Dframe-1744]	; T213  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1736],D0	; T212  
; ------------------------------ move
	mov A0,36
	mov D13,[Dframe-1736]	; T212 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L681
; ------------------------------ label
L680:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1752],B0	; T214  
; ------------------------------ widen
	movzx A0,byte [Dframe-1752]	; T214  
	mov dword[Dframe-1760],A0	; T215  
; ------------------------------ jumpcc
	mov A0,[Dframe-1760]	; T215  
	cmp A0,62
	jnz L682
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1776],D0	; T217  
; ------------------------------ indexlv
	mov D0,[Dframe-1776]	; T217  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1768],D0	; T216  
; ------------------------------ move
	mov A0,3
	mov D13,[Dframe-1768]	; T216 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L683
; ------------------------------ label
L682:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1784],B0	; T218  
; ------------------------------ widen
	movzx A0,byte [Dframe-1784]	; T218  
	mov dword[Dframe-1792],A0	; T219  
; ------------------------------ jumpcc
	mov A0,[Dframe-1792]	; T219  
	cmp A0,61
	jnz L684
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1808],D0	; T221  
; ------------------------------ indexlv
	mov D0,[Dframe-1808]	; T221  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1800],D0	; T220  
; ------------------------------ move
	mov A0,45
	mov D13,[Dframe-1800]	; T220 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L685
; ------------------------------ label
L684:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1824],D0	; T223  
; ------------------------------ indexlv
	mov D0,[Dframe-1824]	; T223  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1816],D0	; T222  
; ------------------------------ move
	mov A0,22
	mov D13,[Dframe-1816]	; T222 *
	mov byte [D13],B0
; ------------------------------ label
L685:
; ------------------------------ label
L683:
; ------------------------------ label
L681:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 42:
; ------------------------------ label
L530:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1832],B0	; T224  
; ------------------------------ widen
	movzx A0,byte [Dframe-1832]	; T224  
	mov dword[Dframe-1840],A0	; T225  
; ------------------------------ jumpcc
	mov A0,[Dframe-1840]	; T225  
	cmp A0,61
	jnz L686
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1856],D0	; T227  
; ------------------------------ indexlv
	mov D0,[Dframe-1856]	; T227  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1848],D0	; T226  
; ------------------------------ move
	mov A0,46
	mov D13,[Dframe-1848]	; T226 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L687
; ------------------------------ label
L686:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1872],D0	; T229  
; ------------------------------ indexlv
	mov D0,[Dframe-1872]	; T229  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1864],D0	; T228  
; ------------------------------ move
	mov A0,23
	mov D13,[Dframe-1864]	; T228 *
	mov byte [D13],B0
; ------------------------------ label
L687:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 47:
; ------------------------------ label
L529:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1880],B0	; T230  
; ------------------------------ widen
	movzx A0,byte [Dframe-1880]	; T230  
	mov dword[Dframe-1888],A0	; T231  
; ------------------------------ jumpcc
	mov A0,[Dframe-1888]	; T231  
	cmp A0,47
	jnz L688
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call readlinecomment
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1904],D0	; T233  
; ------------------------------ indexlv
	mov D0,[Dframe-1904]	; T233  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1896],D0	; T232  
; ------------------------------ move
	mov A0,54
	mov D13,[Dframe-1896]	; T232 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1920],D0	; T235  
; ------------------------------ indexlv
	mov D0,[Dframe-1920]	; T235  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-1912],D0	; T234  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-1912]	; T234 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ jump
	jmp	L689
; ------------------------------ label
L688:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1928],B0	; T236  
; ------------------------------ widen
	movzx A0,byte [Dframe-1928]	; T236  
	mov dword[Dframe-1936],A0	; T237  
; ------------------------------ jumpcc
	mov A0,[Dframe-1936]	; T237  
	cmp A0,42
	jnz L690
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call readblockcomment
	add Dstack, 32
; ------------------------------ jump
	jmp	L691
; ------------------------------ label
L690:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1944],B0	; T238  
; ------------------------------ widen
	movzx A0,byte [Dframe-1944]	; T238  
	mov dword[Dframe-1952],A0	; T239  
; ------------------------------ jumpcc
	mov A0,[Dframe-1952]	; T239  
	cmp A0,61
	jnz L692
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1968],D0	; T241  
; ------------------------------ indexlv
	mov D0,[Dframe-1968]	; T241  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1960],D0	; T240  
; ------------------------------ move
	mov A0,47
	mov D13,[Dframe-1960]	; T240 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ jump
	jmp	L693
; ------------------------------ label
L692:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1984],D0	; T243  
; ------------------------------ indexlv
	mov D0,[Dframe-1984]	; T243  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1976],D0	; T242  
; ------------------------------ move
	mov A0,24
	mov D13,[Dframe-1976]	; T242 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ label
L693:
; ------------------------------ label
L691:
; ------------------------------ label
L689:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 37:
; ------------------------------ label
L528:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1992],B0	; T244  
; ------------------------------ widen
	movzx A0,byte [Dframe-1992]	; T244  
	mov dword[Dframe-2000],A0	; T245  
; ------------------------------ jumpcc
	mov A0,[Dframe-2000]	; T245  
	cmp A0,61
	jnz L694
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2016],D0	; T247  
; ------------------------------ indexlv
	mov D0,[Dframe-2016]	; T247  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2008],D0	; T246  
; ------------------------------ move
	mov A0,48
	mov D13,[Dframe-2008]	; T246 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L695
; ------------------------------ label
L694:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2032],D0	; T249  
; ------------------------------ indexlv
	mov D0,[Dframe-2032]	; T249  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2024],D0	; T248  
; ------------------------------ move
	mov A0,25
	mov D13,[Dframe-2024]	; T248 *
	mov byte [D13],B0
; ------------------------------ label
L695:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 61:
; ------------------------------ label
L527:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-2040],B0	; T250  
; ------------------------------ widen
	movzx A0,byte [Dframe-2040]	; T250  
	mov dword[Dframe-2048],A0	; T251  
; ------------------------------ jumpcc
	mov A0,[Dframe-2048]	; T251  
	cmp A0,61
	jnz L696
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2064],D0	; T253  
; ------------------------------ indexlv
	mov D0,[Dframe-2064]	; T253  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2056],D0	; T252  
; ------------------------------ move
	mov A0,38
	mov D13,[Dframe-2056]	; T252 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ jump
	jmp	L697
; ------------------------------ label
L696:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2080],D0	; T255  
; ------------------------------ indexlv
	mov D0,[Dframe-2080]	; T255  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2072],D0	; T254  
; ------------------------------ move
	mov A0,11
	mov D13,[Dframe-2072]	; T254 *
	mov byte [D13],B0
; ------------------------------ label
L697:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 60:
; ------------------------------ label
L526:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-2088],B0	; T256  
; ------------------------------ widen
	movzx A0,byte [Dframe-2088]	; T256  
	mov dword[Dframe-2096],A0	; T257  
; ------------------------------ switch
	mov A0,[Dframe-2096]	; T257  
	sub A0, 60
	cmp A0, 2
	jae L698
	jmp [A0*8+L702]
	align 8
; ------------------------------ label
L702:
; ------------------------------ jumplabel
	dq L700	; 1
; ------------------------------ jumplabel
	dq L701	; 2
; ------------------------------ stmt
; ------------------------------ comment
;case 61:
; ------------------------------ label
L701:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2112],D0	; T259  
; ------------------------------ indexlv
	mov D0,[Dframe-2112]	; T259  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2104],D0	; T258  
; ------------------------------ move
	mov A0,41
	mov D13,[Dframe-2104]	; T258 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L699
; ------------------------------ stmt
; ------------------------------ comment
;case 60:
; ------------------------------ label
L700:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc qword[lxsptr]
	mov D0,qword[lxsptr]
	mov qword[Dframe-2128],D0	; T261  
; ------------------------------ getptr
	mov D0,[Dframe-2128]	; T261  
	mov B0, [D0]
	mov [Dframe-2120],B0	; T260  
; ------------------------------ widen
	movzx A0,byte [Dframe-2120]	; T260  
	mov dword[Dframe-2136],A0	; T262  
; ------------------------------ jumpcc
	mov A0,[Dframe-2136]	; T262  
	cmp A0,61
	jnz L703
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2152],D0	; T264  
; ------------------------------ indexlv
	mov D0,[Dframe-2152]	; T264  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2144],D0	; T263  
; ------------------------------ move
	mov A0,52
	mov D13,[Dframe-2144]	; T263 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L704
; ------------------------------ label
L703:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2168],D0	; T266  
; ------------------------------ indexlv
	mov D0,[Dframe-2168]	; T266  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2160],D0	; T265  
; ------------------------------ move
	mov A0,31
	mov D13,[Dframe-2160]	; T265 *
	mov byte [D13],B0
; ------------------------------ label
L704:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L699
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L698:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2184],D0	; T268  
; ------------------------------ indexlv
	mov D0,[Dframe-2184]	; T268  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2176],D0	; T267  
; ------------------------------ move
	mov A0,40
	mov D13,[Dframe-2176]	; T267 *
	mov byte [D13],B0
; ------------------------------ label
L699:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 62:
; ------------------------------ label
L525:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-2192],B0	; T269  
; ------------------------------ widen
	movzx A0,byte [Dframe-2192]	; T269  
	mov dword[Dframe-2200],A0	; T270  
; ------------------------------ switch
	mov A0,[Dframe-2200]	; T270  
	sub A0, 61
	cmp A0, 2
	jae L705
	jmp [A0*8+L709]
	align 8
; ------------------------------ label
L709:
; ------------------------------ jumplabel
	dq L708	; 1
; ------------------------------ jumplabel
	dq L707	; 2
; ------------------------------ stmt
; ------------------------------ comment
;case 61:
; ------------------------------ label
L708:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2216],D0	; T272  
; ------------------------------ indexlv
	mov D0,[Dframe-2216]	; T272  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2208],D0	; T271  
; ------------------------------ move
	mov A0,42
	mov D13,[Dframe-2208]	; T271 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L706
; ------------------------------ stmt
; ------------------------------ comment
;case 62:
; ------------------------------ label
L707:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc qword[lxsptr]
	mov D0,qword[lxsptr]
	mov qword[Dframe-2232],D0	; T274  
; ------------------------------ getptr
	mov D0,[Dframe-2232]	; T274  
	mov B0, [D0]
	mov [Dframe-2224],B0	; T273  
; ------------------------------ widen
	movzx A0,byte [Dframe-2224]	; T273  
	mov dword[Dframe-2240],A0	; T275  
; ------------------------------ jumpcc
	mov A0,[Dframe-2240]	; T275  
	cmp A0,61
	jnz L710
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2256],D0	; T277  
; ------------------------------ indexlv
	mov D0,[Dframe-2256]	; T277  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2248],D0	; T276  
; ------------------------------ move
	mov A0,53
	mov D13,[Dframe-2248]	; T276 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L711
; ------------------------------ label
L710:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2272],D0	; T279  
; ------------------------------ indexlv
	mov D0,[Dframe-2272]	; T279  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2264],D0	; T278  
; ------------------------------ move
	mov A0,32
	mov D13,[Dframe-2264]	; T278 *
	mov byte [D13],B0
; ------------------------------ label
L711:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L706
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L705:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2288],D0	; T281  
; ------------------------------ indexlv
	mov D0,[Dframe-2288]	; T281  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2280],D0	; T280  
; ------------------------------ move
	mov A0,43
	mov D13,[Dframe-2280]	; T280 *
	mov byte [D13],B0
; ------------------------------ label
L706:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 38:
; ------------------------------ label
L524:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-2296],B0	; T282  
; ------------------------------ widen
	movzx A0,byte [Dframe-2296]	; T282  
	mov dword[Dframe-2304],A0	; T283  
; ------------------------------ jumpcc
	mov A0,[Dframe-2304]	; T283  
	cmp A0,38
	jnz L712
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2320],D0	; T285  
; ------------------------------ indexlv
	mov D0,[Dframe-2320]	; T285  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2312],D0	; T284  
; ------------------------------ move
	mov A0,30
	mov D13,[Dframe-2312]	; T284 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L713
; ------------------------------ label
L712:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-2328],B0	; T286  
; ------------------------------ widen
	movzx A0,byte [Dframe-2328]	; T286  
	mov dword[Dframe-2336],A0	; T287  
; ------------------------------ jumpcc
	mov A0,[Dframe-2336]	; T287  
	cmp A0,61
	jnz L714
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2352],D0	; T289  
; ------------------------------ indexlv
	mov D0,[Dframe-2352]	; T289  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2344],D0	; T288  
; ------------------------------ move
	mov A0,50
	mov D13,[Dframe-2344]	; T288 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L715
; ------------------------------ label
L714:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2368],D0	; T291  
; ------------------------------ indexlv
	mov D0,[Dframe-2368]	; T291  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2360],D0	; T290  
; ------------------------------ move
	mov A0,27
	mov D13,[Dframe-2360]	; T290 *
	mov byte [D13],B0
; ------------------------------ label
L715:
; ------------------------------ label
L713:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L523:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,39
	mov A11,0
	call lxreadstring
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 34:
; ------------------------------ label
L522:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,34
	mov A11,0
	call lxreadstring
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 32:
; ------------------------------ label
L520:
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L521:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 13:
; ------------------------------ label
L519:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2384],D0	; T293  
; ------------------------------ indexlv
	mov D0,[Dframe-2384]	; T293  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-2376],D0	; T292  
; ------------------------------ incrto
	mov D13,[Dframe-2376]	; T292 *
	inc dword[D13]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2400],D0	; T295  
; ------------------------------ indexlv
	mov D0,[Dframe-2400]	; T295  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2392],D0	; T294  
; ------------------------------ move
	mov A0,54
	mov D13,[Dframe-2392]	; T294 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2416],D0	; T297  
; ------------------------------ indexlv
	mov D0,[Dframe-2416]	; T297  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-2408],D0	; T296  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-2408]	; T296 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[dowhitespace]
	and A0,A0
	jz L716
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2432],D0	; T299  
; ------------------------------ indexlv
	mov D0,[Dframe-2432]	; T299  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-2424],D0	; T298  
; ------------------------------ indexref
	mov D0,[lxsptr]
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-2440],D0	; T300  
; ------------------------------ move
	mov D0,[Dframe-2440]	; T300  
	mov D13,[Dframe-2424]	; T298 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ label
L4: ;<L35>
; ------------------------------ stmt
; ------------------------------ preincrx
	inc qword[lxsptr]
	mov D0,qword[lxsptr]
	mov qword[Dframe-2456],D0	; T302  
; ------------------------------ getptr
	mov D0,[Dframe-2456]	; T302  
	mov B0, [D0]
	mov [Dframe-2448],B0	; T301  
; ------------------------------ widen
	movzx A0,byte [Dframe-2448]	; T301  
	mov dword[Dframe-2464],A0	; T303  
; ------------------------------ switch
	mov A0,[Dframe-2464]	; T303  
	sub A0, 9
	cmp A0, 24
	jae L717
	jmp [A0*8+L721]
	align 8
; ------------------------------ label
L721:
; ------------------------------ jumplabel
	dq L720	; 1
; ------------------------------ jumplabel
	dq L717	; 2
; ------------------------------ jumplabel
	dq L717	; 3
; ------------------------------ jumplabel
	dq L717	; 4
; ------------------------------ jumplabel
	dq L717	; 5
; ------------------------------ jumplabel
	dq L717	; 6
; ------------------------------ jumplabel
	dq L717	; 7
; ------------------------------ jumplabel
	dq L717	; 8
; ------------------------------ jumplabel
	dq L717	; 9
; ------------------------------ jumplabel
	dq L717	; 10
; ------------------------------ jumplabel
	dq L717	; 11
; ------------------------------ jumplabel
	dq L717	; 12
; ------------------------------ jumplabel
	dq L717	; 13
; ------------------------------ jumplabel
	dq L717	; 14
; ------------------------------ jumplabel
	dq L717	; 15
; ------------------------------ jumplabel
	dq L717	; 16
; ------------------------------ jumplabel
	dq L717	; 17
; ------------------------------ jumplabel
	dq L717	; 18
; ------------------------------ jumplabel
	dq L717	; 19
; ------------------------------ jumplabel
	dq L717	; 20
; ------------------------------ jumplabel
	dq L717	; 21
; ------------------------------ jumplabel
	dq L717	; 22
; ------------------------------ jumplabel
	dq L717	; 23
; ------------------------------ jumplabel
	dq L719	; 24
; ------------------------------ stmt
; ------------------------------ comment
;case 32:
; ------------------------------ label
L719:
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L720:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L718
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L717:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L5
; ------------------------------ label
L718:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4
; ------------------------------ stmt
; ------------------------------ label
L5: ;<L36>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2480],D0	; T305  
; ------------------------------ indexlv
	mov D0,[Dframe-2480]	; T305  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-2472],D0	; T304  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2504],D0	; T308  
; ------------------------------ index
	mov D0,[Dframe-2504]	; T308  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-2496],D0	; T307  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe-2496]	; T307  
	sub D0,D1
	mov [Dframe-2512],D0	; T309  
; ------------------------------ truncate
	mov D0,[Dframe-2512]	; T309  
	mov A0,A0
	mov [Dframe-2488],A0	; T306  
; ------------------------------ move
	mov A0,[Dframe-2488]	; T306  
	mov D13,[Dframe-2472]	; T304 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L722
; ------------------------------ label
L716:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ label
L722:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L518:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2528],D0	; T311  
; ------------------------------ indexlv
	mov D0,[Dframe-2528]	; T311  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-2520],D0	; T310  
; ------------------------------ incrto
	mov D13,[Dframe-2520]	; T310 *
	inc dword[D13]
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2544],D0	; T313  
; ------------------------------ indexlv
	mov D0,[Dframe-2544]	; T313  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2536],D0	; T312  
; ------------------------------ move
	mov A0,54
	mov D13,[Dframe-2536]	; T312 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2560],D0	; T315  
; ------------------------------ indexlv
	mov D0,[Dframe-2560]	; T315  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-2552],D0	; T314  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-2552]	; T314 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 33:
; ------------------------------ label
L517:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-2568],B0	; T316  
; ------------------------------ widen
	movzx A0,byte [Dframe-2568]	; T316  
	mov dword[Dframe-2576],A0	; T317  
; ------------------------------ jumpcc
	mov A0,[Dframe-2576]	; T317  
	cmp A0,61
	jnz L723
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2592],D0	; T319  
; ------------------------------ indexlv
	mov D0,[Dframe-2592]	; T319  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2584],D0	; T318  
; ------------------------------ move
	mov A0,39
	mov D13,[Dframe-2584]	; T318 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ jump
	jmp	L724
; ------------------------------ label
L723:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2608],D0	; T321  
; ------------------------------ indexlv
	mov D0,[Dframe-2608]	; T321  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2600],D0	; T320  
; ------------------------------ move
	mov A0,34
	mov D13,[Dframe-2600]	; T320 *
	mov byte [D13],B0
; ------------------------------ label
L724:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 64:
; ------------------------------ label
L516:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2624],D0	; T323  
; ------------------------------ index
	mov D0,[Dframe-2624]	; T323  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-2616],A0	; T322  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2656],D0	; T327  
; ------------------------------ index
	mov D0,[Dframe-2656]	; T327  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-2648],B0	; T326  
; ------------------------------ widen
	movzx A0,byte [Dframe-2648]	; T326  
	mov dword[Dframe-2664],A0	; T328  
; ------------------------------ widen
	movsx D0,dword[Dframe-2664]	; T328  
	mov qword[Dframe-2640],D0	; T325  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-2640]	; T325  
	mov D0, [D0+D1*8]
	mov [Dframe-2632],D0	; T324  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[lx_stackindex]
	push D13
	sub Dstack,32
	mov D10,KK180
	mov D11,KK181
	mov A12,[Dframe-2616]	; T322  
	mov D13,[Dframe-2632]	; T324  
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 0:
; ------------------------------ label
L515:
; ------------------------------ stmt
; ------------------------------ label
L6: ;<doeof>
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[lx_stackindex]
	and A0,A0
	jz L725
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call unstacksourcefile
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2680],D0	; T330  
; ------------------------------ indexlv
	mov D0,[Dframe-2680]	; T330  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2672],D0	; T329  
; ------------------------------ move
	mov A0,54
	mov D13,[Dframe-2672]	; T329 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L726
; ------------------------------ label
L725:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2696],D0	; T332  
; ------------------------------ indexlv
	mov D0,[Dframe-2696]	; T332  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2688],D0	; T331  
; ------------------------------ move
	mov A0,55
	mov D13,[Dframe-2688]	; T331 *
	mov byte [D13],B0
; ------------------------------ label
L726:
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;case 12:
; ------------------------------ label
L514:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L513
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L512:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,1
	sub D0,D1
	mov [Dframe-2712],D0	; T334  
; ------------------------------ getptr
	mov D0,[Dframe-2712]	; T334  
	mov B0, [D0]
	mov [Dframe-2704],B0	; T333  
; ------------------------------ widen
	movzx A0,byte [Dframe-2704]	; T333  
	mov dword[Dframe-2720],A0	; T335  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK182
	mov D11,KK183
	mov A12,[Dframe-2720]	; T335  
	mov A13,[lx_stackindex]
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK184
	call lxerror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2736],D0	; T337  
; ------------------------------ indexlv
	mov D0,[Dframe-2736]	; T337  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-2728],D0	; T336  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-2728]	; T336 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-2752],D0	; T339  
; ------------------------------ indexlv
	mov D0,[Dframe-2752]	; T339  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-2744],D0	; T338  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; c -4  
	mov qword[Dframe-2760],D0	; T340  
; ------------------------------ move
	mov D0,[Dframe-2760]	; T340  
	mov D13,[Dframe-2744]	; T338 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ return
	jmp L511
; ------------------------------ label
L513:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3
; ------------------------------ label
L511:
; ------------------------------ hardret
	add Dstack, 2768
	pop Dframe
	ret
;	End

;	Proc:readrealnumber
readrealnumber:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1168

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-8],D0	; fractstart -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-12],A0	; fractlen -12  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; expon -16  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-576],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-576]	; T1  
	mov dword[Dframe-584],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-584]	; T2  
	cmp A0,46
	jnz L728
; ------------------------------ stmt
; ------------------------------ preincrx
	inc qword[lxsptr]
	mov D0,qword[lxsptr]
	mov qword[Dframe-592],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe-592]	; T3  
	mov [Dframe-8],D0	; fractstart -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+40]	; base 40  
	call scannumber
	mov [Dframe-608],D0	; T5  
	add Dstack, 32
; ------------------------------ sub
	mov D0,[Dframe-608]	; T5  
	mov D1,[Dframe-8]	; fractstart -8  
	sub D0,D1
	mov [Dframe-616],D0	; T6  
; ------------------------------ truncate
	mov D0,[Dframe-616]	; T6  
	mov A0,A0
	mov [Dframe-600],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-600]	; T4  
	mov [Dframe-12],A0	; fractlen -12  
; ------------------------------ label
L728:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-28],A0	; badexpon -28  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-624],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-624]	; T7  
	mov dword[Dframe-632],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-632]	; T8  
	cmp A0,101
	jz L730
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-640],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-640]	; T9  
	mov dword[Dframe-648],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-648]	; T10  
	cmp A0,69
	jnz L729
; ------------------------------ label
L730:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; base 40  
	cmp A0,16
	jz L731
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-28]	; badexpon -28  
	mov [Dframe-656],D0	; T11  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-656]	; T11  
	call readexponent
	mov [Dframe-664],A0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-664]	; T12  
	mov [Dframe-16],A0	; expon -16  
; ------------------------------ label
L731:
; ------------------------------ jump
	jmp	L732
; ------------------------------ label
L729:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-672],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-672]	; T13  
	mov dword[Dframe-680],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-680]	; T14  
	cmp A0,112
	jz L734
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-688],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-688]	; T15  
	mov dword[Dframe-696],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-696]	; T16  
	cmp A0,80
	jnz L733
; ------------------------------ label
L734:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; base 40  
	cmp A0,16
	jnz L735
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-28]	; badexpon -28  
	mov [Dframe-704],D0	; T17  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-704]	; T17  
	call readexponent
	mov [Dframe-712],A0	; T18  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-712]	; T18  
	mov [Dframe-16],A0	; expon -16  
; ------------------------------ label
L735:
; ------------------------------ label
L733:
; ------------------------------ label
L732:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-28]	; badexpon -28  
	and A0,A0
	jz L736
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pstart 16  
	call readalphanumeric
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L727
; ------------------------------ label
L736:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-720],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-720]	; T19  
	mov dword[Dframe-728],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-728]	; T20  
	cmp A0,102
	jz L738
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-736],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-736]	; T21  
	mov dword[Dframe-744],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-744]	; T22  
	cmp A0,70
	jnz L737
; ------------------------------ label
L738:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ jump
	jmp	L739
; ------------------------------ label
L737:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-776],B0	; T26  
; ------------------------------ widen
	movzx A0,byte [Dframe-776]	; T26  
	mov dword[Dframe-784],A0	; T27  
; ------------------------------ widen
	movsx D0,dword[Dframe-784]	; T27  
	mov qword[Dframe-768],D0	; T25  
; ------------------------------ index
	lea D0,[alphamap]
	mov D1,[Dframe-768]	; T25  
	mov B0, [D0+D1]
	mov [Dframe-760],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-760]	; T24  
	mov dword[Dframe-792],A0	; T28  
; ------------------------------ truncate
	mov A0,[Dframe-792]	; T28  
	and D0,255
	mov [Dframe-752],B0	; T23  
; ------------------------------ jumpfalse
	mov B0,[Dframe-752]	; T23  
	and B0,B0
	jz L740
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pstart 16  
	call readalphanumeric
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L727
; ------------------------------ label
L740:
; ------------------------------ label
L739:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe+32]	; intlen 32  
	mov A1,[Dframe-12]	; fractlen -12  
	add A0,A1
	mov [Dframe-800],A0	; T29  
; ------------------------------ jumpcc
	mov A0,[Dframe-800]	; T29  
	cmp A0,500
	jle L741
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK185
	call lxerror
	add Dstack, 32
; ------------------------------ label
L741:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+32]	; intlen 32  
	and A0,A0
	jz L742
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-556]	; realstr -556  
	mov [Dframe-808],D0	; T30  
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; intlen 32  
	mov qword[Dframe-824],D0	; T32  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-808]	; T30  
	mov D11,[Dframe+24]	; intstart 24  
	mov D12,[Dframe-824]	; T32  
	call memcpy
	add Dstack, 32
; ------------------------------ label
L742:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-12]	; fractlen -12  
	and A0,A0
	jz L743
; ------------------------------ stmt
; ------------------------------ indexref
	lea D0,[Dframe-556]	; realstr -556  
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-848],D0	; T35  
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; intlen 32  
	mov qword[Dframe-856],D0	; T36  
; ------------------------------ indexref
	mov D0,[Dframe-848]	; T35  
	mov D1,[Dframe-856]	; T36  
	lea D0, [D0+D1]
	mov [Dframe-840],D0	; T34  
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; fractlen -12  
	mov qword[Dframe-872],D0	; T38  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-840]	; T34  
	mov D11,[Dframe-8]	; fractstart -8  
	mov D12,[Dframe-872]	; T38  
	call memcpy
	add Dstack, 32
; ------------------------------ label
L743:
; ------------------------------ stmt
; ------------------------------ float
	cvtsi2sd XMM0,dword[Dframe+40]	; base 40  
	movq [Dframe-880],XMM0	; T39  
; ------------------------------ move
	mov D0,[Dframe-880]	; T39  
	mov [Dframe-40],D0	; basex -40  
; ------------------------------ move
	mov D0,[Dframe-40]	; basex -40  
	mov [Dframe-56],D0	; expbase -56  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; base 40  
	cmp A0,10
	jnz L744
; ------------------------------ stmt
; ------------------------------ subto
	mov A0,[Dframe-16]	; expon -16  
	mov A1,[Dframe-12]	; fractlen -12  
	sub A0,A1
	mov [Dframe-16],A0	; expon -16  
; ------------------------------ jump
	jmp	L745
; ------------------------------ label
L744:
; ------------------------------ stmt
; ------------------------------ mul
	mov A0,[Dframe-12]	; fractlen -12  
	mov A1,4
	mul A1
	mov [Dframe-888],A0	; T40  
; ------------------------------ subto
	mov A0,[Dframe-16]	; expon -16  
	mov A1,[Dframe-888]	; T40  
	sub A0,A1
	mov [Dframe-16],A0	; expon -16  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[RR1]
	mov [Dframe-56],D0	; expbase -56  
; ------------------------------ label
L745:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[RR2]
	mov [Dframe-48],D0	; x -48  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-20],A0	; i -20  
; ------------------------------ jump
	jmp	L748
; ------------------------------ label
L749:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-20]	; i -20  
	mov A1,1
	sub A0,A1
	mov [Dframe-928],A0	; T45  
; ------------------------------ widen
	movsx D0,dword[Dframe-928]	; T45  
	mov qword[Dframe-920],D0	; T44  
; ------------------------------ index
	lea D0,[Dframe-556]	; realstr -556  
	mov D1,[Dframe-920]	; T44  
	mov B0, [D0+D1]
	mov [Dframe-912],B0	; T43  
; ------------------------------ widen
	movzx A0,byte [Dframe-912]	; T43  
	mov dword[Dframe-936],A0	; T46  
; ------------------------------ truncate
	mov A0,[Dframe-936]	; T46  
	and D0,255
	mov [Dframe-904],B0	; T42  
; ------------------------------ widen
	movzx A0,byte [Dframe-904]	; T42  
	mov dword[Dframe-896],A0	; T41  
; ------------------------------ move
	mov A0,[Dframe-896]	; T41  
	mov [Dframe-24],A0	; c -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; c -24  
	cmp A0,48
	jl L750
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; c -24  
	cmp A0,57
	jg L750
; ------------------------------ stmt
; ------------------------------ mul
	movq XMM0,[Dframe-48]	; x -48  
	movq XMM1,[Dframe-40]	; basex -40  
	mulsd XMM0,XMM1
	movq [Dframe-944],XMM0	; T47  
; ------------------------------ float
	cvtsi2sd XMM0,dword[Dframe-24]	; c -24  
	movq [Dframe-952],XMM0	; T48  
; ------------------------------ add
	movq XMM0,[Dframe-944]	; T47  
	movq XMM1,[Dframe-952]	; T48  
	addsd XMM0,XMM1
	movq [Dframe-960],XMM0	; T49  
; ------------------------------ sub
	movq XMM0,[Dframe-960]	; T49  
	movq XMM1,[RR3]
	subsd XMM0,XMM1
	movq [Dframe-48],XMM0	; x -48  
; ------------------------------ jump
	jmp	L751
; ------------------------------ label
L750:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; c -24  
	cmp A0,97
	jle L752
; ------------------------------ stmt
; ------------------------------ mul
	movq XMM0,[Dframe-48]	; x -48  
	movq XMM1,[Dframe-40]	; basex -40  
	mulsd XMM0,XMM1
	movq [Dframe-968],XMM0	; T50  
; ------------------------------ float
	cvtsi2sd XMM0,dword[Dframe-24]	; c -24  
	movq [Dframe-976],XMM0	; T51  
; ------------------------------ add
	movq XMM0,[Dframe-968]	; T50  
	movq XMM1,[Dframe-976]	; T51  
	addsd XMM0,XMM1
	movq [Dframe-984],XMM0	; T52  
; ------------------------------ sub
	movq XMM0,[Dframe-984]	; T52  
	movq XMM1,[RR4]
	subsd XMM0,XMM1
	movq [Dframe-992],XMM0	; T53  
; ------------------------------ add
	movq XMM0,[Dframe-992]	; T53  
	movq XMM1,[RR5]
	addsd XMM0,XMM1
	movq [Dframe-48],XMM0	; x -48  
; ------------------------------ jump
	jmp	L753
; ------------------------------ label
L752:
; ------------------------------ stmt
; ------------------------------ mul
	movq XMM0,[Dframe-48]	; x -48  
	movq XMM1,[Dframe-40]	; basex -40  
	mulsd XMM0,XMM1
	movq [Dframe-1000],XMM0	; T54  
; ------------------------------ float
	cvtsi2sd XMM0,dword[Dframe-24]	; c -24  
	movq [Dframe-1008],XMM0	; T55  
; ------------------------------ add
	movq XMM0,[Dframe-1000]	; T54  
	movq XMM1,[Dframe-1008]	; T55  
	addsd XMM0,XMM1
	movq [Dframe-1016],XMM0	; T56  
; ------------------------------ sub
	movq XMM0,[Dframe-1016]	; T56  
	movq XMM1,[RR6]
	subsd XMM0,XMM1
	movq [Dframe-1024],XMM0	; T57  
; ------------------------------ add
	movq XMM0,[Dframe-1024]	; T57  
	movq XMM1,[RR7]
	addsd XMM0,XMM1
	movq [Dframe-48],XMM0	; x -48  
; ------------------------------ label
L753:
; ------------------------------ label
L751:
; ------------------------------ label
L746:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-20]	; i -20  
; ------------------------------ label
L748:
; ------------------------------ add
	mov A0,[Dframe+32]	; intlen 32  
	mov A1,[Dframe-12]	; fractlen -12  
	add A0,A1
	mov [Dframe-1032],A0	; T58  
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; i -20  
	cmp A0,[Dframe-1032]	; T58  
	jle L749
; ------------------------------ label
L747:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; expon -16  
	cmp A0,0
	jl L754
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-16]	; expon -16  
	mov [Dframe-564],A0	; av_2 -564  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L755
; ------------------------------ label
L757:
; ------------------------------ stmt
; ------------------------------ multo
	movq XMM0,[Dframe-48]	; x -48  
	movq XMM1,[Dframe-56]	; expbase -56  
	mulsd XMM0,XMM1
	movq [Dframe-48],XMM0	; x -48  
; ------------------------------ label
L755:
; ------------------------------ postdecrx
	mov A0,[Dframe-564]	; av_2 -564  
	dec dword[Dframe-564]	; av_2 -564  
	mov dword[Dframe-1040],A0	; T59  
; ------------------------------ jumptrue
	mov A0,[Dframe-1040]	; T59  
	and A0,A0
	jnz L757
; ------------------------------ label
L756:
; ------------------------------ jump
	jmp	L758
; ------------------------------ label
L754:
; ------------------------------ stmt
; ------------------------------ neg
	mov A0,[Dframe-16]	; expon -16  
	neg A0
	mov [Dframe-1048],A0	; T60  
; ------------------------------ move
	mov A0,[Dframe-1048]	; T60  
	mov [Dframe-568],A0	; av_3 -568  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L759
; ------------------------------ label
L761:
; ------------------------------ stmt
; ------------------------------ divto
	movq XMM0,[Dframe-48]	; x -48  
	movq XMM1,[Dframe-56]	; expbase -56  
	divsd XMM0,XMM1
	movq [Dframe-48],XMM0	; x -48  
; ------------------------------ label
L759:
; ------------------------------ postdecrx
	mov A0,[Dframe-568]	; av_3 -568  
	dec dword[Dframe-568]	; av_3 -568  
	mov dword[Dframe-1056],A0	; T61  
; ------------------------------ jumptrue
	mov A0,[Dframe-1056]	; T61  
	and A0,A0
	jnz L761
; ------------------------------ label
L760:
; ------------------------------ label
L758:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1072],D0	; T63  
; ------------------------------ indexlv
	mov D0,[Dframe-1072]	; T63  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1064],D0	; T62  
; ------------------------------ move
	mov A0,58
	mov D13,[Dframe-1064]	; T62 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1088],D0	; T65  
; ------------------------------ indexlv
	mov D0,[Dframe-1088]	; T65  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-1080],D0	; T64  
; ------------------------------ move
	mov A0,12
	mov D13,[Dframe-1080]	; T64 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1104],D0	; T67  
; ------------------------------ indexlv
	mov D0,[Dframe-1104]	; T67  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-1096],D0	; T66  
; ------------------------------ move
	mov D0,[Dframe-48]	; x -48  
	mov D13,[Dframe-1096]	; T66 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1120],D0	; T69  
; ------------------------------ indexlv
	mov D0,[Dframe-1120]	; T69  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-1112],D0	; T68  
; ------------------------------ sub
	mov D0,[Dframe+24]	; intstart 24  
	mov D1,[lxstart]
	sub D0,D1
	mov [Dframe-1136],D0	; T71  
; ------------------------------ truncate
	mov D0,[Dframe-1136]	; T71  
	mov A0,A0
	mov [Dframe-1128],A0	; T70  
; ------------------------------ move
	mov A0,[Dframe-1128]	; T70  
	mov D13,[Dframe-1112]	; T68 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1152],D0	; T73  
; ------------------------------ indexlv
	mov D0,[Dframe-1152]	; T73  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-1144],D0	; T72  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe+24]	; intstart 24  
	sub D0,D1
	mov [Dframe-1168],D0	; T75  
; ------------------------------ truncate
	mov D0,[Dframe-1168]	; T75  
	mov A0,A0
	mov [Dframe-1160],A0	; T74  
; ------------------------------ move
	mov A0,[Dframe-1160]	; T74  
	mov D13,[Dframe-1144]	; T72 *
	mov dword[D13],A0
; ------------------------------ label
L727:
; ------------------------------ hardret
	add Dstack, 1168
	pop Dframe
	ret
;	End

;	Proc:readexponent
readexponent:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; neg -16  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-48],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T1  
	mov dword[Dframe-56],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T2  
	cmp A0,43
	jnz L763
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ jump
	jmp	L764
; ------------------------------ label
L763:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-64],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T3  
	mov dword[Dframe-72],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T4  
	cmp A0,45
	jnz L765
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-16],A0	; neg -16  
; ------------------------------ label
L765:
; ------------------------------ label
L764:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [Dframe-8],D0	; numstart -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,10
	call scannumber
	mov [Dframe-88],D0	; T6  
	add Dstack, 32
; ------------------------------ sub
	mov D0,[Dframe-88]	; T6  
	mov D1,[Dframe-8]	; numstart -8  
	sub D0,D1
	mov [Dframe-96],D0	; T7  
; ------------------------------ truncate
	mov D0,[Dframe-96]	; T7  
	mov A0,A0
	mov [Dframe-80],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-80]	; T5  
	mov [Dframe-12],A0	; length -12  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; length -12  
	cmp A0,0
	jnz L766
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe+16]	; badexpon 16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L762
; ------------------------------ label
L766:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-32],D0	; a -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-12]	; length -12  
	mov [Dframe-36],A0	; av_4 -36  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L767
; ------------------------------ label
L769:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe-8]	; numstart -8  
	inc qword[Dframe-8]	; numstart -8  
	mov qword[Dframe-112],D0	; T9  
; ------------------------------ getptr
	mov D0,[Dframe-112]	; T9  
	mov B0, [D0]
	mov [Dframe-104],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T8  
	mov dword[Dframe-120],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-120]	; T10  
	mov [Dframe-20],A0	; c -20  
; ------------------------------ stmt
; ------------------------------ mul
	mov D0,[Dframe-32]	; a -32  
	mov D1,10
	mul D1
	mov [Dframe-128],D0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; c -20  
	mov qword[Dframe-136],D0	; T12  
; ------------------------------ add
	mov D0,[Dframe-128]	; T11  
	mov D1,[Dframe-136]	; T12  
	add D0,D1
	mov [Dframe-144],D0	; T13  
; ------------------------------ sub
	mov D0,[Dframe-144]	; T13  
	mov D1,48
	sub D0,D1
	mov [Dframe-32],D0	; a -32  
; ------------------------------ label
L767:
; ------------------------------ postdecrx
	mov A0,[Dframe-36]	; av_4 -36  
	dec dword[Dframe-36]	; av_4 -36  
	mov dword[Dframe-152],A0	; T14  
; ------------------------------ jumptrue
	mov A0,[Dframe-152]	; T14  
	and A0,A0
	jnz L769
; ------------------------------ label
L768:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-16]	; neg -16  
	and A0,A0
	jz L770
; ------------------------------ neg
	mov D0,[Dframe-32]	; a -32  
	neg D0
	mov [Dframe-176],D0	; T17  
; ------------------------------ move
	mov D0,[Dframe-176]	; T17  
	mov [Dframe-168],D0	; T16  
; ------------------------------ jump
	jmp	L771
; ------------------------------ label
L770:
; ------------------------------ move
	mov D0,[Dframe-32]	; a -32  
	mov [Dframe-168],D0	; T16  
; ------------------------------ label
L771:
; ------------------------------ truncate
	mov D0,[Dframe-168]	; T16  
	mov A0,A0
	mov [Dframe-160],A0	; T15  
; ------------------------------ returnx
	mov A0,[Dframe-160]	; T15  
	jmp L762
; ------------------------------ label
L762:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:lxerror
lxerror:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-32],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-32]	; T4  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-40],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T5  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-16]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; T1  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-56],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-56]	; T7  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe-48]	; T6  
	push D13
	push qword KK186
	push qword [Dframe-8]	; T1  
	sub Dstack,32
	mov D10,KK187
	mov D11,KK188
	mov D12,[Dframe+16]	; mess 16  
	mov D13,KK189
	call printf
	add Dstack, 64
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK190
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK191
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK192
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call exit
	add Dstack, 32
; ------------------------------ label
L772:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global printsymbol
;	Proc:printsymbol
printsymbol:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 432

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getptr
	lea D10,[Dframe-64]	; T1  
	mov D11,[Dframe+16]	; lp 16  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	lea D10,[Dframe-32]	; l -32  
	lea D11,[Dframe-64]	; T1  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-96],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-96]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T4  
	mov dword[Dframe-104],A0	; T6  
; ------------------------------ sub
	mov A0,[Dframe-104]	; T6  
	mov A1,1
	sub A0,A1
	mov [Dframe-112],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-112]	; T7  
	mov qword[Dframe-80],D0	; T3  
; ------------------------------ index
	lea D0,[symbolnames]
	mov D1,[Dframe-80]	; T3  
	mov D0, [D0+D1*8]
	mov [Dframe-72],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK193
	mov D11,[Dframe-72]	; T2  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-128],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-128]	; T9  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T8  
	mov dword[Dframe-136],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T10  
	cmp A0,65
	jnz L774
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-160],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-160]	; T13  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-152]	; T12  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T11  
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-184],D0	; T16  
; ------------------------------ index
	mov D0,[Dframe-184]	; T16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-176],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe-176]	; T15  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T14  
	mov dword[Dframe-192],A0	; T17  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-144]	; T11  
	mov A11,[Dframe-192]	; T17  
	mov D12,0
	call printstrn
	add Dstack, 32
; ------------------------------ jump
	jmp	L775
; ------------------------------ label
L774:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-208],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe-208]	; T19  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-200],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T18  
	mov dword[Dframe-216],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T20  
	cmp A0,57
	jnz L776
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-232],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe-232]	; T22  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-224],D0	; T21  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK194
	mov D11,[Dframe-224]	; T21  
	mov D12,KK195
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; lp 16  
	mov D11,0
	call shownumberstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L777
; ------------------------------ label
L776:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-248],D0	; T24  
; ------------------------------ index
	mov D0,[Dframe-248]	; T24  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-240],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-240]	; T23  
	mov dword[Dframe-256],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T25  
	cmp A0,58
	jnz L778
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-272],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-272]	; T27  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; T26  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK196
	movq XMM1,[Dframe-264]	; T26  
	mov D11,[Dframe-264]	; T26  
	mov D12,KK197
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; lp 16  
	mov D11,0
	call shownumberstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L779
; ------------------------------ label
L778:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-288],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-288]	; T29  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-280],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-280]	; T28  
	mov dword[Dframe-296],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-296]	; T30  
	cmp A0,61
	jnz L780
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK198
	mov D11,KK199
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-312],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-312]	; T32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-304],D0	; T31  
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-328],D0	; T34  
; ------------------------------ index
	mov D0,[Dframe-328]	; T34  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-320],A0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-304]	; T31  
	mov A11,[Dframe-320]	; T33  
	mov D12,0
	call printstrn
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK200
	mov D11,KK201
	call printf
	add Dstack, 32
; ------------------------------ jump
	jmp	L781
; ------------------------------ label
L780:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-344],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-344]	; T36  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T35  
	mov dword[Dframe-352],A0	; T37  
; ------------------------------ jumpcc
	mov A0,[Dframe-352]	; T37  
	cmp A0,59
	jnz L782
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK202
	mov D11,KK203
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-368],D0	; T39  
; ------------------------------ index
	mov D0,[Dframe-368]	; T39  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-360],D0	; T38  
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-384],D0	; T41  
; ------------------------------ index
	mov D0,[Dframe-384]	; T41  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-376],A0	; T40  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-360]	; T38  
	mov A11,[Dframe-376]	; T40  
	mov D12,0
	call printstrn
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK204
	mov D11,KK205
	call printf
	add Dstack, 32
; ------------------------------ jump
	jmp	L783
; ------------------------------ label
L782:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-400],D0	; T43  
; ------------------------------ index
	mov D0,[Dframe-400]	; T43  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-392],B0	; T42  
; ------------------------------ widen
	movzx A0,byte [Dframe-392]	; T42  
	mov dword[Dframe-408],A0	; T44  
; ------------------------------ jumpfalse
	mov A0,[Dframe-408]	; T44  
	and A0,A0
	jz L784
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; l -32  
	mov [Dframe-424],D0	; T46  
; ------------------------------ index
	mov D0,[Dframe-424]	; T46  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-416],B0	; T45  
; ------------------------------ widen
	movzx A0,byte [Dframe-416]	; T45  
	mov dword[Dframe-432],A0	; T47  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK206
	mov D11,KK207
	mov A12,[Dframe-432]	; T47  
	call printf
	add Dstack, 32
; ------------------------------ label
L784:
; ------------------------------ label
L783:
; ------------------------------ label
L781:
; ------------------------------ label
L779:
; ------------------------------ label
L777:
; ------------------------------ label
L775:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK208
	call printf
	add Dstack, 32
; ------------------------------ label
L773:
; ------------------------------ hardret
	add Dstack, 432
	pop Dframe
	ret
;	End

	global lexsetup
;	Proc:lexsetup
	segment .bss
	align 4,resb 1
lexsetup.n:	resb 4
	segment .text
lexsetup:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call inithashtable
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [lexsetup.n],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L788
; ------------------------------ label
L789:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[hashtable]
	mov D1,[Dframe-24]	; T2  
	imul D1,128
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; T1  
	and D0,D0
	jz L790
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[lexsetup.n]
; ------------------------------ label
L790:
; ------------------------------ label
L786:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L788:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,65535
	jle L789
; ------------------------------ label
L787:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L793
; ------------------------------ label
L794:
; ------------------------------ stmt
; ------------------------------ switch
	mov A0,[Dframe-4]	; i -4  
	sub A0, 36
	cmp A0, 87
	jae L795
	jmp [A0*8+L861]
	align 8
; ------------------------------ label
L861:
; ------------------------------ jumplabel
	dq L849	; 1
; ------------------------------ jumplabel
	dq L795	; 2
; ------------------------------ jumplabel
	dq L795	; 3
; ------------------------------ jumplabel
	dq L795	; 4
; ------------------------------ jumplabel
	dq L795	; 5
; ------------------------------ jumplabel
	dq L795	; 6
; ------------------------------ jumplabel
	dq L795	; 7
; ------------------------------ jumplabel
	dq L795	; 8
; ------------------------------ jumplabel
	dq L795	; 9
; ------------------------------ jumplabel
	dq L795	; 10
; ------------------------------ jumplabel
	dq L795	; 11
; ------------------------------ jumplabel
	dq L795	; 12
; ------------------------------ jumplabel
	dq L851	; 13
; ------------------------------ jumplabel
	dq L852	; 14
; ------------------------------ jumplabel
	dq L853	; 15
; ------------------------------ jumplabel
	dq L854	; 16
; ------------------------------ jumplabel
	dq L855	; 17
; ------------------------------ jumplabel
	dq L856	; 18
; ------------------------------ jumplabel
	dq L857	; 19
; ------------------------------ jumplabel
	dq L858	; 20
; ------------------------------ jumplabel
	dq L859	; 21
; ------------------------------ jumplabel
	dq L860	; 22
; ------------------------------ jumplabel
	dq L795	; 23
; ------------------------------ jumplabel
	dq L795	; 24
; ------------------------------ jumplabel
	dq L795	; 25
; ------------------------------ jumplabel
	dq L795	; 26
; ------------------------------ jumplabel
	dq L795	; 27
; ------------------------------ jumplabel
	dq L795	; 28
; ------------------------------ jumplabel
	dq L795	; 29
; ------------------------------ jumplabel
	dq L797	; 30
; ------------------------------ jumplabel
	dq L798	; 31
; ------------------------------ jumplabel
	dq L799	; 32
; ------------------------------ jumplabel
	dq L800	; 33
; ------------------------------ jumplabel
	dq L801	; 34
; ------------------------------ jumplabel
	dq L802	; 35
; ------------------------------ jumplabel
	dq L803	; 36
; ------------------------------ jumplabel
	dq L804	; 37
; ------------------------------ jumplabel
	dq L805	; 38
; ------------------------------ jumplabel
	dq L806	; 39
; ------------------------------ jumplabel
	dq L807	; 40
; ------------------------------ jumplabel
	dq L808	; 41
; ------------------------------ jumplabel
	dq L809	; 42
; ------------------------------ jumplabel
	dq L810	; 43
; ------------------------------ jumplabel
	dq L811	; 44
; ------------------------------ jumplabel
	dq L812	; 45
; ------------------------------ jumplabel
	dq L813	; 46
; ------------------------------ jumplabel
	dq L814	; 47
; ------------------------------ jumplabel
	dq L815	; 48
; ------------------------------ jumplabel
	dq L816	; 49
; ------------------------------ jumplabel
	dq L817	; 50
; ------------------------------ jumplabel
	dq L818	; 51
; ------------------------------ jumplabel
	dq L819	; 52
; ------------------------------ jumplabel
	dq L820	; 53
; ------------------------------ jumplabel
	dq L821	; 54
; ------------------------------ jumplabel
	dq L822	; 55
; ------------------------------ jumplabel
	dq L795	; 56
; ------------------------------ jumplabel
	dq L795	; 57
; ------------------------------ jumplabel
	dq L795	; 58
; ------------------------------ jumplabel
	dq L795	; 59
; ------------------------------ jumplabel
	dq L850	; 60
; ------------------------------ jumplabel
	dq L795	; 61
; ------------------------------ jumplabel
	dq L823	; 62
; ------------------------------ jumplabel
	dq L824	; 63
; ------------------------------ jumplabel
	dq L825	; 64
; ------------------------------ jumplabel
	dq L826	; 65
; ------------------------------ jumplabel
	dq L827	; 66
; ------------------------------ jumplabel
	dq L828	; 67
; ------------------------------ jumplabel
	dq L829	; 68
; ------------------------------ jumplabel
	dq L830	; 69
; ------------------------------ jumplabel
	dq L831	; 70
; ------------------------------ jumplabel
	dq L832	; 71
; ------------------------------ jumplabel
	dq L833	; 72
; ------------------------------ jumplabel
	dq L834	; 73
; ------------------------------ jumplabel
	dq L835	; 74
; ------------------------------ jumplabel
	dq L836	; 75
; ------------------------------ jumplabel
	dq L837	; 76
; ------------------------------ jumplabel
	dq L838	; 77
; ------------------------------ jumplabel
	dq L839	; 78
; ------------------------------ jumplabel
	dq L840	; 79
; ------------------------------ jumplabel
	dq L841	; 80
; ------------------------------ jumplabel
	dq L842	; 81
; ------------------------------ jumplabel
	dq L843	; 82
; ------------------------------ jumplabel
	dq L844	; 83
; ------------------------------ jumplabel
	dq L845	; 84
; ------------------------------ jumplabel
	dq L846	; 85
; ------------------------------ jumplabel
	dq L847	; 86
; ------------------------------ jumplabel
	dq L848	; 87
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L797:
; ------------------------------ stmt
; ------------------------------ comment
;case 66:
; ------------------------------ label
L798:
; ------------------------------ stmt
; ------------------------------ comment
;case 67:
; ------------------------------ label
L799:
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L800:
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L801:
; ------------------------------ stmt
; ------------------------------ comment
;case 70:
; ------------------------------ label
L802:
; ------------------------------ stmt
; ------------------------------ comment
;case 71:
; ------------------------------ label
L803:
; ------------------------------ stmt
; ------------------------------ comment
;case 72:
; ------------------------------ label
L804:
; ------------------------------ stmt
; ------------------------------ comment
;case 73:
; ------------------------------ label
L805:
; ------------------------------ stmt
; ------------------------------ comment
;case 74:
; ------------------------------ label
L806:
; ------------------------------ stmt
; ------------------------------ comment
;case 75:
; ------------------------------ label
L807:
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L808:
; ------------------------------ stmt
; ------------------------------ comment
;case 77:
; ------------------------------ label
L809:
; ------------------------------ stmt
; ------------------------------ comment
;case 78:
; ------------------------------ label
L810:
; ------------------------------ stmt
; ------------------------------ comment
;case 79:
; ------------------------------ label
L811:
; ------------------------------ stmt
; ------------------------------ comment
;case 80:
; ------------------------------ label
L812:
; ------------------------------ stmt
; ------------------------------ comment
;case 81:
; ------------------------------ label
L813:
; ------------------------------ stmt
; ------------------------------ comment
;case 82:
; ------------------------------ label
L814:
; ------------------------------ stmt
; ------------------------------ comment
;case 83:
; ------------------------------ label
L815:
; ------------------------------ stmt
; ------------------------------ comment
;case 84:
; ------------------------------ label
L816:
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L817:
; ------------------------------ stmt
; ------------------------------ comment
;case 86:
; ------------------------------ label
L818:
; ------------------------------ stmt
; ------------------------------ comment
;case 87:
; ------------------------------ label
L819:
; ------------------------------ stmt
; ------------------------------ comment
;case 88:
; ------------------------------ label
L820:
; ------------------------------ stmt
; ------------------------------ comment
;case 89:
; ------------------------------ label
L821:
; ------------------------------ stmt
; ------------------------------ comment
;case 90:
; ------------------------------ label
L822:
; ------------------------------ stmt
; ------------------------------ comment
;case 97:
; ------------------------------ label
L823:
; ------------------------------ stmt
; ------------------------------ comment
;case 98:
; ------------------------------ label
L824:
; ------------------------------ stmt
; ------------------------------ comment
;case 99:
; ------------------------------ label
L825:
; ------------------------------ stmt
; ------------------------------ comment
;case 100:
; ------------------------------ label
L826:
; ------------------------------ stmt
; ------------------------------ comment
;case 101:
; ------------------------------ label
L827:
; ------------------------------ stmt
; ------------------------------ comment
;case 102:
; ------------------------------ label
L828:
; ------------------------------ stmt
; ------------------------------ comment
;case 103:
; ------------------------------ label
L829:
; ------------------------------ stmt
; ------------------------------ comment
;case 104:
; ------------------------------ label
L830:
; ------------------------------ stmt
; ------------------------------ comment
;case 105:
; ------------------------------ label
L831:
; ------------------------------ stmt
; ------------------------------ comment
;case 106:
; ------------------------------ label
L832:
; ------------------------------ stmt
; ------------------------------ comment
;case 107:
; ------------------------------ label
L833:
; ------------------------------ stmt
; ------------------------------ comment
;case 108:
; ------------------------------ label
L834:
; ------------------------------ stmt
; ------------------------------ comment
;case 109:
; ------------------------------ label
L835:
; ------------------------------ stmt
; ------------------------------ comment
;case 110:
; ------------------------------ label
L836:
; ------------------------------ stmt
; ------------------------------ comment
;case 111:
; ------------------------------ label
L837:
; ------------------------------ stmt
; ------------------------------ comment
;case 112:
; ------------------------------ label
L838:
; ------------------------------ stmt
; ------------------------------ comment
;case 113:
; ------------------------------ label
L839:
; ------------------------------ stmt
; ------------------------------ comment
;case 114:
; ------------------------------ label
L840:
; ------------------------------ stmt
; ------------------------------ comment
;case 115:
; ------------------------------ label
L841:
; ------------------------------ stmt
; ------------------------------ comment
;case 116:
; ------------------------------ label
L842:
; ------------------------------ stmt
; ------------------------------ comment
;case 117:
; ------------------------------ label
L843:
; ------------------------------ stmt
; ------------------------------ comment
;case 118:
; ------------------------------ label
L844:
; ------------------------------ stmt
; ------------------------------ comment
;case 119:
; ------------------------------ label
L845:
; ------------------------------ stmt
; ------------------------------ comment
;case 120:
; ------------------------------ label
L846:
; ------------------------------ stmt
; ------------------------------ comment
;case 121:
; ------------------------------ label
L847:
; ------------------------------ stmt
; ------------------------------ comment
;case 122:
; ------------------------------ label
L848:
; ------------------------------ stmt
; ------------------------------ comment
;case 36:
; ------------------------------ label
L849:
; ------------------------------ stmt
; ------------------------------ comment
;case 95:
; ------------------------------ label
L850:
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L851:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L852:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L853:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L854:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L855:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L856:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L857:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L858:
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L859:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L860:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ indexlv
	lea D0,[alphamap]
	mov D1,[Dframe-40]	; T4  
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-32]	; T3 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L796
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L795:
; ------------------------------ label
L796:
; ------------------------------ stmt
; ------------------------------ switch
	mov A0,[Dframe-4]	; i -4  
	sub A0, 48
	cmp A0, 10
	jae L862
	jmp [A0*8+L874]
	align 8
; ------------------------------ label
L874:
; ------------------------------ jumplabel
	dq L864	; 1
; ------------------------------ jumplabel
	dq L865	; 2
; ------------------------------ jumplabel
	dq L866	; 3
; ------------------------------ jumplabel
	dq L867	; 4
; ------------------------------ jumplabel
	dq L868	; 5
; ------------------------------ jumplabel
	dq L869	; 6
; ------------------------------ jumplabel
	dq L870	; 7
; ------------------------------ jumplabel
	dq L871	; 8
; ------------------------------ jumplabel
	dq L872	; 9
; ------------------------------ jumplabel
	dq L873	; 10
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L864:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L865:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L866:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L867:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L868:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L869:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L870:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L871:
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L872:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L873:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ indexlv
	lea D0,[digitmap]
	mov D1,[Dframe-56]	; T6  
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-48]	; T5 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L863
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L862:
; ------------------------------ label
L863:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ indexlv
	lea D0,[commentmap]
	mov D1,[Dframe-72]	; T8  
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-64]	; T7 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ indexlv
	lea D0,[linecommentmap]
	mov D1,[Dframe-88]	; T10  
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-80]	; T9 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-104],D0	; T12  
; ------------------------------ indexlv
	lea D0,[spacemap]
	mov D1,[Dframe-104]	; T12  
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-96]	; T11 *
	mov byte [D13],B0
; ------------------------------ label
L791:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L793:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,255
	jle L794
; ------------------------------ label
L792:
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[commentmap]
	mov D1,42
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T13  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-112]	; T13 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[commentmap]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T14  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-120]	; T14 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[commentmap]
	mov D1,10
	lea D0, [D0+D1]
	mov [Dframe-128],D0	; T15  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-128]	; T15 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[linecommentmap]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T16  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-136]	; T16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[linecommentmap]
	mov D1,92
	lea D0, [D0+D1]
	mov [Dframe-144],D0	; T17  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-144]	; T17 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[linecommentmap]
	mov D1,10
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T18  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-152]	; T18 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[spacemap]
	mov D1,32
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T19  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-160]	; T19 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[spacemap]
	mov D1,9
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T20  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-168]	; T20 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[normaltkx]
	mov [Dframe-184],D0	; T22  
; ------------------------------ indexlv
	mov D0,[Dframe-184]	; T22  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T21  
; ------------------------------ move
	mov A0,54
	mov D13,[Dframe-176]	; T21 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [npastedtokens],A0
; ------------------------------ label
L785:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

	global printstrn
;	Proc:printstrn
printstrn:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; length 24  
	and A0,A0
	jz L876
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+32]	; f 32  
	cmp D0,0
	jnz L877
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK209
	mov A11,[Dframe+24]	; length 24  
	mov D12,[Dframe+16]	; s 16  
	call printf
	add Dstack, 32
; ------------------------------ jump
	jmp	L878
; ------------------------------ label
L877:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; f 32  
	mov D11,KK210
	mov A12,[Dframe+24]	; length 24  
	mov D13,[Dframe+16]	; s 16  
	call fprintf
	add Dstack, 32
; ------------------------------ label
L878:
; ------------------------------ label
L876:
; ------------------------------ label
L875:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:scannumber
scannumber:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [Dframe-8],D0	; dest -8  
; ------------------------------ stmt
; ------------------------------ label
L7: ;<L76>
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ getptr
	mov D0,[Dframe-32]	; T2  
	mov B0, [D0]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [Dframe-12],A0	; c -12  
; ------------------------------ switch
	mov A0,[Dframe-12]	; c -12  
	sub A0, 39
	cmp A0, 64
	jae L880
	jmp [A0*8+L907]
	align 8
; ------------------------------ label
L907:
; ------------------------------ jumplabel
	dq L883	; 1
; ------------------------------ jumplabel
	dq L880	; 2
; ------------------------------ jumplabel
	dq L880	; 3
; ------------------------------ jumplabel
	dq L880	; 4
; ------------------------------ jumplabel
	dq L880	; 5
; ------------------------------ jumplabel
	dq L880	; 6
; ------------------------------ jumplabel
	dq L880	; 7
; ------------------------------ jumplabel
	dq L880	; 8
; ------------------------------ jumplabel
	dq L880	; 9
; ------------------------------ jumplabel
	dq L897	; 10
; ------------------------------ jumplabel
	dq L898	; 11
; ------------------------------ jumplabel
	dq L899	; 12
; ------------------------------ jumplabel
	dq L900	; 13
; ------------------------------ jumplabel
	dq L901	; 14
; ------------------------------ jumplabel
	dq L902	; 15
; ------------------------------ jumplabel
	dq L903	; 16
; ------------------------------ jumplabel
	dq L904	; 17
; ------------------------------ jumplabel
	dq L905	; 18
; ------------------------------ jumplabel
	dq L906	; 19
; ------------------------------ jumplabel
	dq L880	; 20
; ------------------------------ jumplabel
	dq L880	; 21
; ------------------------------ jumplabel
	dq L880	; 22
; ------------------------------ jumplabel
	dq L880	; 23
; ------------------------------ jumplabel
	dq L880	; 24
; ------------------------------ jumplabel
	dq L880	; 25
; ------------------------------ jumplabel
	dq L880	; 26
; ------------------------------ jumplabel
	dq L885	; 27
; ------------------------------ jumplabel
	dq L886	; 28
; ------------------------------ jumplabel
	dq L887	; 29
; ------------------------------ jumplabel
	dq L888	; 30
; ------------------------------ jumplabel
	dq L889	; 31
; ------------------------------ jumplabel
	dq L890	; 32
; ------------------------------ jumplabel
	dq L880	; 33
; ------------------------------ jumplabel
	dq L880	; 34
; ------------------------------ jumplabel
	dq L880	; 35
; ------------------------------ jumplabel
	dq L880	; 36
; ------------------------------ jumplabel
	dq L880	; 37
; ------------------------------ jumplabel
	dq L880	; 38
; ------------------------------ jumplabel
	dq L880	; 39
; ------------------------------ jumplabel
	dq L880	; 40
; ------------------------------ jumplabel
	dq L880	; 41
; ------------------------------ jumplabel
	dq L880	; 42
; ------------------------------ jumplabel
	dq L880	; 43
; ------------------------------ jumplabel
	dq L880	; 44
; ------------------------------ jumplabel
	dq L880	; 45
; ------------------------------ jumplabel
	dq L880	; 46
; ------------------------------ jumplabel
	dq L880	; 47
; ------------------------------ jumplabel
	dq L880	; 48
; ------------------------------ jumplabel
	dq L880	; 49
; ------------------------------ jumplabel
	dq L880	; 50
; ------------------------------ jumplabel
	dq L880	; 51
; ------------------------------ jumplabel
	dq L880	; 52
; ------------------------------ jumplabel
	dq L880	; 53
; ------------------------------ jumplabel
	dq L880	; 54
; ------------------------------ jumplabel
	dq L880	; 55
; ------------------------------ jumplabel
	dq L880	; 56
; ------------------------------ jumplabel
	dq L882	; 57
; ------------------------------ jumplabel
	dq L884	; 58
; ------------------------------ jumplabel
	dq L891	; 59
; ------------------------------ jumplabel
	dq L892	; 60
; ------------------------------ jumplabel
	dq L893	; 61
; ------------------------------ jumplabel
	dq L894	; 62
; ------------------------------ jumplabel
	dq L895	; 63
; ------------------------------ jumplabel
	dq L896	; 64
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L897:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L898:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L899:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L900:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L901:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L902:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L903:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L904:
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L905:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L906:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe-8]	; dest -8  
	inc qword[Dframe-8]	; dest -8  
	mov qword[Dframe-56],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov [Dframe-48],D0	; T4  
; ------------------------------ move
	mov A0,[Dframe-12]	; c -12  
	mov D13,[Dframe-48]	; T4 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ add
	mov A0,48
	mov A1,[Dframe+16]	; base 16  
	add A0,A1
	mov [Dframe-64],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; c -12  
	cmp A0,[Dframe-64]	; T6  
	jl L908
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK211
	call lxerror
	add Dstack, 32
; ------------------------------ label
L908:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L881
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L885:
; ------------------------------ stmt
; ------------------------------ comment
;case 66:
; ------------------------------ label
L886:
; ------------------------------ stmt
; ------------------------------ comment
;case 67:
; ------------------------------ label
L887:
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L888:
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L889:
; ------------------------------ stmt
; ------------------------------ comment
;case 70:
; ------------------------------ label
L890:
; ------------------------------ stmt
; ------------------------------ comment
;case 97:
; ------------------------------ label
L891:
; ------------------------------ stmt
; ------------------------------ comment
;case 98:
; ------------------------------ label
L892:
; ------------------------------ stmt
; ------------------------------ comment
;case 99:
; ------------------------------ label
L893:
; ------------------------------ stmt
; ------------------------------ comment
;case 100:
; ------------------------------ label
L894:
; ------------------------------ stmt
; ------------------------------ comment
;case 101:
; ------------------------------ label
L895:
; ------------------------------ stmt
; ------------------------------ comment
;case 102:
; ------------------------------ label
L896:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; base 16  
	cmp A0,16
	jnz L909
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe-8]	; dest -8  
	inc qword[Dframe-8]	; dest -8  
	mov qword[Dframe-80],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-80]	; T8  
	mov [Dframe-72],D0	; T7  
; ------------------------------ move
	mov A0,[Dframe-12]	; c -12  
	mov D13,[Dframe-72]	; T7 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L910
; ------------------------------ label
L909:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L8
; ------------------------------ label
L910:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L881
; ------------------------------ stmt
; ------------------------------ comment
;case 95:
; ------------------------------ label
L882:
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L883:
; ------------------------------ stmt
; ------------------------------ comment
;case 96:
; ------------------------------ label
L884:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L881
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L880:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L8
; ------------------------------ label
L881:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L7
; ------------------------------ stmt
; ------------------------------ label
L8: ;<L77>
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; dest -8  
	jmp L879
; ------------------------------ label
L879:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:lookup
lookup:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[lxhashvalue]
	mov A1,65535
	and A0,A1
	mov [Dframe-4],A0	; j -4  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-32],D0	; T2  
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; T2  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T1  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; j -4  
	mov qword[Dframe-48],D0	; T4  
; ------------------------------ indexref
	lea D0,[hashtable]
	mov D1,[Dframe-48]	; T4  
	imul D1,128
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe-40]	; T3  
	mov D13,[Dframe-24]	; T1 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-8],A0	; wrapped -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L912
; ------------------------------ label
L914:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-72],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-72]	; T7  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-64]	; T6  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-80]	; T8  
	mov [Dframe-12],A0	; length -12  
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[Dframe-12]	; length -12  
	and A0,A0
	jnz L915
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L9
; ------------------------------ label
L915:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-96]	; T10  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-88],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; length -12  
	cmp A0,[Dframe-88]	; T9  
	jnz L916
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-120],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-120]	; T13  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-112],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-112]	; T12  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-104],D0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; length -12  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-104]	; T11  
	mov D11,[lxsvalue]
	mov D12,[Dframe-128]	; T14  
	call memcmp
	mov [Dframe-136],A0	; T15  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T15  
	cmp A0,0
	jnz L917
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L911
; ------------------------------ label
L917:
; ------------------------------ label
L916:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-152],D0	; T17  
; ------------------------------ indexlv
	mov D0,[Dframe-152]	; T17  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-144],D0	; T16  
; ------------------------------ addto
	mov D13,[Dframe-144]	; T16 *
	mov D0,qword[D13]
	mov A1,128
	add D0,D1
	mov D13,qword[Dframe-144]	; T16 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[Dframe-4]	; j -4  
	mov A0,dword[Dframe-4]	; j -4  
	mov dword[Dframe-160],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T18  
	cmp A0,65536
	jl L918
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-8]	; wrapped -8  
	and A0,A0
	jz L919
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK212
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L919:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-8],A0	; wrapped -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-176],D0	; T20  
; ------------------------------ indexlv
	mov D0,[Dframe-176]	; T20  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T19  
; ------------------------------ indexref
	lea D0,[hashtable]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T21  
; ------------------------------ move
	mov D0,[Dframe-184]	; T21  
	mov D13,[Dframe-168]	; T19 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; j -4  
; ------------------------------ label
L918:
; ------------------------------ label
L912:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L914
; ------------------------------ label
L913:
; ------------------------------ stmt
; ------------------------------ label
L9: ;<L79>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-208],D0	; T24  
; ------------------------------ index
	mov D0,[Dframe-208]	; T24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T23  
; ------------------------------ indexlv
	mov D0,[Dframe-200]	; T23  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-192],D0	; T22  
; ------------------------------ move
	mov D0,[lxsvalue]
	mov D13,[Dframe-192]	; T22 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-232],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-232]	; T27  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-224],D0	; T26  
; ------------------------------ indexlv
	mov D0,[Dframe-224]	; T26  
	mov A1,112
	lea D0, [D0+D1]
	mov [Dframe-216],D0	; T25  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-248],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-248]	; T29  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-240],A0	; T28  
; ------------------------------ move
	mov A0,[Dframe-240]	; T28  
	mov D13,[Dframe-216]	; T25 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-272],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-272]	; T32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; T31  
; ------------------------------ indexlv
	mov D0,[Dframe-264]	; T31  
	mov A1,113
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T30  
; ------------------------------ move
	mov A0,65
	mov D13,[Dframe-256]	; T30 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L911
; ------------------------------ label
L911:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

;	Proc:gethashvalue
gethashvalue:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; length 24  
	cmp A0,-1
	jnz L921
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	call strlen
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-32]	; T2  
	mov A0,A0
	mov [Dframe-24],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [Dframe+24],A0	; length 24  
; ------------------------------ label
L921:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-8],A0	; csum -8  
; ------------------------------ move
	mov A0,[Dframe-8]	; csum -8  
	mov [Dframe-12],A0	; hsum -12  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+24]	; length 24  
	mov [Dframe-16],A0	; av_5 -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L922
; ------------------------------ label
L924:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+16]	; s 16  
	inc qword[Dframe+16]	; s 16  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ getptr
	mov D0,[Dframe-64]	; T6  
	mov B0, [D0]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-72],A0	; T7  
; ------------------------------ truncate
	mov A0,[Dframe-72]	; T7  
	and D0,255
	mov [Dframe-48],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T4  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [Dframe-4],A0	; c -4  
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-8]	; csum -8  
	mov A1,[Dframe-4]	; c -4  
	add A0,A1
	mov [Dframe-8],A0	; csum -8  
; ------------------------------ stmt
; ------------------------------ shl
	mov A0,[Dframe-12]	; hsum -12  
	mov B10,3
	shl A0, cl
	mov [Dframe-80],A0	; T8  
; ------------------------------ add
	mov A0,[Dframe-80]	; T8  
	mov A1,[Dframe-8]	; csum -8  
	add A0,A1
	mov [Dframe-12],A0	; hsum -12  
; ------------------------------ label
L922:
; ------------------------------ postdecrx
	mov A0,[Dframe-16]	; av_5 -16  
	dec dword[Dframe-16]	; av_5 -16  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ jumptrue
	mov A0,[Dframe-88]	; T9  
	and A0,A0
	jnz L924
; ------------------------------ label
L923:
; ------------------------------ stmt
; ------------------------------ shl
	mov A0,[Dframe-12]	; hsum -12  
	mov B10,5
	shl A0, cl
	mov [Dframe-96],A0	; T10  
; ------------------------------ ixor
	mov A0,[Dframe-96]	; T10  
	mov A1,[Dframe-8]	; csum -8  
	xor A0,A1
	mov [Dframe-104],A0	; T11  
; ------------------------------ returnx
	mov A0,[Dframe-104]	; T11  
	jmp L920
; ------------------------------ label
L920:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:inithashtable
inithashtable:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[hashtable]
	mov [Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T1  
	mov A11,0
	mov D12,8388608
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L928
; ------------------------------ label
L929:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T3  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[stnames]
	mov D1,[Dframe-24]	; T2  
	mov D0, [D0+D1*8]
	mov [lxsvalue],D0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-56],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T6  
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ index
	lea D0,[stsymbols]
	mov D1,[Dframe-48]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,66
	jnz L930
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[lxsvalue]
	call pcm_copyheapstring
	mov [Dframe-64],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T7  
	mov [lxsvalue],D0
; ------------------------------ label
L930:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-80],D0	; T9  
; ------------------------------ indexlv
	mov D0,[Dframe-80]	; T9  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[lxsvalue]
	call strlen
	mov [Dframe-96],D0	; T11  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-96]	; T11  
	mov A0,A0
	mov [Dframe-88],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-88]	; T10  
	mov D13,[Dframe-72]	; T8 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-112],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-112]	; T13  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-104],A0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[lxsvalue]
	mov A11,[Dframe-104]	; T12  
	call gethashvalue
	mov [Dframe-120],A0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-120]	; T14  
	mov [lxhashvalue],A0
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call lookup
	mov [Dframe-128],A0	; T15  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-128]	; T15  
	and A0,A0
	jz L931
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-152],A0	; T18  
; ------------------------------ widen
	movsx D0,dword[Dframe-152]	; T18  
	mov qword[Dframe-144],D0	; T17  
; ------------------------------ index
	lea D0,[stnames]
	mov D1,[Dframe-144]	; T17  
	mov D0, [D0+D1*8]
	mov [Dframe-136],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK213
	mov D11,[Dframe-136]	; T16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK214
	call abortprogram
	add Dstack, 32
; ------------------------------ label
L931:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-176],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe-176]	; T21  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-168],D0	; T20  
; ------------------------------ indexlv
	mov D0,[Dframe-168]	; T20  
	mov A1,113
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T19  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-200],A0	; T24  
; ------------------------------ widen
	movsx D0,dword[Dframe-200]	; T24  
	mov qword[Dframe-192],D0	; T23  
; ------------------------------ index
	lea D0,[stsymbols]
	mov D1,[Dframe-192]	; T23  
	mov A0, [D0+D1*4]
	mov [Dframe-184],A0	; T22  
; ------------------------------ move
	mov A0,[Dframe-184]	; T22  
	mov D13,[Dframe-160]	; T19 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-224],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-224]	; T27  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-216],D0	; T26  
; ------------------------------ indexlv
	mov D0,[Dframe-216]	; T26  
	mov A1,108
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T25  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-248],A0	; T30  
; ------------------------------ widen
	movsx D0,dword[Dframe-248]	; T30  
	mov qword[Dframe-240],D0	; T29  
; ------------------------------ index
	lea D0,[stsubcodes]
	mov D1,[Dframe-240]	; T29  
	mov A0, [D0+D1*4]
	mov [Dframe-232],A0	; T28  
; ------------------------------ move
	mov A0,[Dframe-232]	; T28  
	mov D13,[Dframe-208]	; T25 *
	mov word [D13],W0
; ------------------------------ label
L926:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L928:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,75
	jle L929
; ------------------------------ label
L927:
; ------------------------------ label
L925:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

;	Proc:dolexdirective
	segment .bss
	align 4,resb 1
dolexdirective.nincludes:	resb 4
	segment .text
dolexdirective:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1024

; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [Dframe-32],D0	; pstart -32  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getlexdirective
	mov [Dframe-360],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-360]	; T1  
	mov [Dframe-52],A0	; dir -52  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,0
	jnz L933
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe-32]	; pstart -32  
	sub D0,D1
	mov [Dframe-376],D0	; T3  
; ------------------------------ truncate
	mov D0,[Dframe-376]	; T3  
	mov A0,A0
	mov [Dframe-368],A0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; pstart -32  
	mov A11,[Dframe-368]	; T2  
	mov D12,0
	call printstrn
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK215
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK216
	call lxerror
	add Dstack, 32
; ------------------------------ label
L933:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,7
	jnz L934
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L935
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L18
; ------------------------------ label
L935:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-392],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-392]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-384],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-384]	; T4  
	mov dword[Dframe-400],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-400]	; T6  
	cmp A0,40
	jnz L936
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-48],A0	; syshdr -48  
; ------------------------------ stmt
; ------------------------------ indexref
	lea D0,[Dframe-352]	; filename -352  
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L937
; ------------------------------ label
L939:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-416],D0	; T8  
; ------------------------------ getptr
	mov D0,[Dframe-416]	; T8  
	mov B0, [D0]
	mov [Dframe-408],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-408]	; T7  
	mov dword[Dframe-424],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-424]	; T9  
	mov [Dframe-44],A0	; c -44  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-44]	; c -44  
	cmp A0,62
	jnz L940
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L10
; ------------------------------ jump
	jmp	L941
; ------------------------------ label
L940:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-44]	; c -44  
	cmp A0,10
	jz L943
; ------------------------------ jumpcc
	mov A0,[Dframe-44]	; c -44  
	cmp A0,0
	jnz L942
; ------------------------------ label
L943:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK217
	call lxerror
	add Dstack, 32
; ------------------------------ jump
	jmp	L944
; ------------------------------ label
L942:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe-24]	; p -24  
	inc qword[Dframe-24]	; p -24  
	mov qword[Dframe-440],D0	; T11  
; ------------------------------ move
	mov D0,[Dframe-440]	; T11  
	mov [Dframe-432],D0	; T10  
; ------------------------------ move
	mov A0,[Dframe-44]	; c -44  
	mov D13,[Dframe-432]	; T10 *
	mov byte [D13],B0
; ------------------------------ label
L944:
; ------------------------------ label
L941:
; ------------------------------ label
L937:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L939
; ------------------------------ label
L938:
; ------------------------------ stmt
; ------------------------------ label
L10: ;<L92>
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-24]	; p -24 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L945
; ------------------------------ label
L936:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-456],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-456]	; T13  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-448],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-448]	; T12  
	mov dword[Dframe-464],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-464]	; T14  
	cmp A0,61
	jnz L946
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-48],A0	; syshdr -48  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-352]	; filename -352  
	mov [Dframe-472],D0	; T15  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-488],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-488]	; T17  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-480],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-472]	; T15  
	mov D11,[Dframe-480]	; T16  
	call strcpy
	add Dstack, 32
; ------------------------------ jump
	jmp	L947
; ------------------------------ label
L946:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK218
	call lxerror
	add Dstack, 32
; ------------------------------ label
L947:
; ------------------------------ label
L945:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-352]	; filename -352  
	mov [Dframe-496],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-496]	; T18  
	mov A11,[Dframe-48]	; syshdr -48  
	call stacksourcefile
	add Dstack, 32
; ------------------------------ jump
	jmp	L948
; ------------------------------ label
L934:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,1
	jnz L949
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call dodefine
	add Dstack, 32
; ------------------------------ jump
	jmp	L950
; ------------------------------ label
L949:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,10
	jnz L951
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-512],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-512]	; T20  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-504],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-504]	; T19  
	mov dword[Dframe-520],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-520]	; T21  
	cmp A0,65
	jz L952
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK219
	call lxerror
	add Dstack, 32
; ------------------------------ label
L952:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-544],D0	; T24  
; ------------------------------ index
	mov D0,[Dframe-544]	; T24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-536],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-536]	; T23  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-528],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-528]	; T22  
	mov dword[Dframe-552],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-552]	; T25  
	cmp A0,1
	jz L953
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L954
; ------------------------------ label
L953:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-576],D0	; T28  
; ------------------------------ index
	mov D0,[Dframe-576]	; T28  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-568],D0	; T27  
; ------------------------------ indexlv
	mov D0,[Dframe-568]	; T27  
	mov A1,114
	lea D0, [D0+D1]
	mov [Dframe-560],D0	; T26  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-560]	; T26 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-600],D0	; T31  
; ------------------------------ index
	mov D0,[Dframe-600]	; T31  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-592],D0	; T30  
; ------------------------------ indexlv
	mov D0,[Dframe-592]	; T30  
	mov A1,113
	lea D0, [D0+D1]
	mov [Dframe-584],D0	; T29  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-624],D0	; T34  
; ------------------------------ index
	mov D0,[Dframe-624]	; T34  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-616],D0	; T33  
; ------------------------------ index
	mov D0,[Dframe-616]	; T33  
	mov A1,88
	mov B0, [D0+D1]
	mov [Dframe-608],B0	; T32  
; ------------------------------ move
	mov B0,[Dframe-608]	; T32  
	mov D13,[Dframe-584]	; T29 *
	mov byte [D13],B0
; ------------------------------ label
L954:
; ------------------------------ jump
	jmp	L955
; ------------------------------ label
L951:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,8
	jnz L956
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NIFDEFS]
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getifdef
	mov [Dframe-632],A0	; T35  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-632]	; T35  
	mov [Dframe-40],A0	; cond -40  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L12
; ------------------------------ jump
	jmp	L957
; ------------------------------ label
L956:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,9
	jnz L958
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NIFDEFS]
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getifdef
	mov [Dframe-640],A0	; T36  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-640]	; T36  
	and A0,A0
	jnz L959
; ------------------------------ move
	mov A0,1
	mov [Dframe-648],A0	; T37  
; ------------------------------ jump
	jmp	L960
; ------------------------------ label
L959:
; ------------------------------ move
	mov A0,0
	mov [Dframe-648],A0	; T37  
; ------------------------------ label
L960:
; ------------------------------ move
	mov A0,[Dframe-648]	; T37  
	mov [Dframe-40],A0	; cond -40  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L12
; ------------------------------ jump
	jmp	L961
; ------------------------------ label
L958:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,3
	jnz L962
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NIFS]
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getifexpr
	mov [Dframe-656],A0	; T38  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-656]	; T38  
	mov [Dframe-40],A0	; cond -40  
; ------------------------------ stmt
; ------------------------------ label
L11: ;<doif>
; ------------------------------ stmt
; ------------------------------ label
L12: ;<L100>
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[ifcondlevel]
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; cond -40  
	and A0,A0
	jz L963
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L932
; ------------------------------ jump
	jmp	L964
; ------------------------------ label
L963:
; ------------------------------ stmt
; ------------------------------ label
L13: ;<doskipcode>
; ------------------------------ stmt
; ------------------------------ label
L14: ;<L103>
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call skipcode
	mov [Dframe-664],A0	; T39  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-664]	; T39  
	mov [Dframe-52],A0	; dir -52  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,4
	jnz L965
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getifexpr
	mov [Dframe-672],A0	; T40  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-672]	; T40  
	mov [Dframe-40],A0	; cond -40  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; cond -40  
	and A0,A0
	jz L966
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L932
; ------------------------------ label
L966:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L14
; ------------------------------ jump
	jmp	L967
; ------------------------------ label
L965:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,5
	jnz L968
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L969
; ------------------------------ label
L968:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,6
	jnz L970
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[ifcondlevel]
; ------------------------------ label
L970:
; ------------------------------ label
L969:
; ------------------------------ label
L967:
; ------------------------------ label
L964:
; ------------------------------ jump
	jmp	L971
; ------------------------------ label
L962:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,4
	jz L973
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,5
	jnz L972
; ------------------------------ label
L973:
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[ifcondlevel]
	and A0,A0
	jnz L974
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK220
	call lxerror
	add Dstack, 32
; ------------------------------ label
L974:
; ------------------------------ stmt
; ------------------------------ label
L977:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call skipcode
	mov [Dframe-680],A0	; T41  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-680]	; T41  
	mov [Dframe-52],A0	; dir -52  
; ------------------------------ label
L975:
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,6
	jnz L977
; ------------------------------ label
L976:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[ifcondlevel]
; ------------------------------ jump
	jmp	L978
; ------------------------------ label
L972:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,6
	jnz L979
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[ifcondlevel]
	and A0,A0
	jnz L980
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK221
	call lxerror
	add Dstack, 32
; ------------------------------ label
L980:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[ifcondlevel]
; ------------------------------ jump
	jmp	L981
; ------------------------------ label
L979:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,18
	jnz L982
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L983
; ------------------------------ label
L982:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,19
	jnz L984
; ------------------------------ stmt
; ------------------------------ label
L987:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ label
L985:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-696],D0	; T43  
; ------------------------------ index
	mov D0,[Dframe-696]	; T43  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-688],B0	; T42  
; ------------------------------ widen
	movzx A0,byte [Dframe-688]	; T42  
	mov dword[Dframe-704],A0	; T44  
; ------------------------------ jumpcc
	mov A0,[Dframe-704]	; T44  
	cmp A0,54
	jnz L987
; ------------------------------ label
L986:
; ------------------------------ jump
	jmp	L988
; ------------------------------ label
L984:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,11
	jnz L989
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK222
	mov D11,KK223
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-712],D0	; T45  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-712]	; T45  
	call showtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK224
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L16
; ------------------------------ jump
	jmp	L990
; ------------------------------ label
L989:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,13
	jnz L991
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK225
	mov D11,KK226
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-728],D0	; T47  
; ------------------------------ index
	mov D0,[Dframe-728]	; T47  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-720],B0	; T46  
; ------------------------------ widen
	movzx A0,byte [Dframe-720]	; T46  
	mov dword[Dframe-736],A0	; T48  
; ------------------------------ jumpcc
	mov A0,[Dframe-736]	; T48  
	cmp A0,54
	jnz L992
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-752],D0	; T50  
; ------------------------------ index
	mov D0,[Dframe-752]	; T50  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-744],A0	; T49  
; ------------------------------ add
	mov A0,[Dframe-744]	; T49  
	mov A1,1
	add A0,A1
	mov [Dframe-760],A0	; T51  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-792],D0	; T55  
; ------------------------------ index
	mov D0,[Dframe-792]	; T55  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-784],B0	; T54  
; ------------------------------ widen
	movzx A0,byte [Dframe-784]	; T54  
	mov dword[Dframe-800],A0	; T56  
; ------------------------------ widen
	movsx D0,dword[Dframe-800]	; T56  
	mov qword[Dframe-776],D0	; T53  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-776]	; T53  
	mov D0, [D0+D1*8]
	mov [Dframe-768],D0	; T52  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK227
	mov D11,KK228
	mov A12,[Dframe-760]	; T51  
	mov D13,[Dframe-768]	; T52  
	call printf
	add Dstack, 32
; ------------------------------ jump
	jmp	L993
; ------------------------------ label
L992:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-808],D0	; T57  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-808]	; T57  
	call showtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK229
	call printf
	add Dstack, 32
; ------------------------------ label
L993:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L16
; ------------------------------ jump
	jmp	L994
; ------------------------------ label
L991:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,12
	jz L996
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,14
	jnz L995
; ------------------------------ label
L996:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK230
	mov D11,KK231
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-816],D0	; T58  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-816]	; T58  
	call showtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK232
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ label
L15: ;<dowarning2>
; ------------------------------ stmt
; ------------------------------ label
L16: ;<L119>
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L997
; ------------------------------ label
L999:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ label
L997:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-832],D0	; T60  
; ------------------------------ index
	mov D0,[Dframe-832]	; T60  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-824],B0	; T59  
; ------------------------------ widen
	movzx A0,byte [Dframe-824]	; T59  
	mov dword[Dframe-840],A0	; T61  
; ------------------------------ jumpcc
	mov A0,[Dframe-840]	; T61  
	cmp A0,54
	jz L1000
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-856],D0	; T63  
; ------------------------------ index
	mov D0,[Dframe-856]	; T63  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-848],B0	; T62  
; ------------------------------ widen
	movzx A0,byte [Dframe-848]	; T62  
	mov dword[Dframe-864],A0	; T64  
; ------------------------------ jumpcc
	mov A0,[Dframe-864]	; T64  
	cmp A0,55
	jnz L999
; ------------------------------ label
L1000:
; ------------------------------ label
L998:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,14
	jnz L1001
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK233
	mov D11,KK234
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call os_getch
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK235
	call printf
	add Dstack, 32
; ------------------------------ label
L1001:
; ------------------------------ jump
	jmp	L1002
; ------------------------------ label
L995:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,20
	jnz L1003
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call dopragmadir
	add Dstack, 32
; ------------------------------ jump
	jmp	L1004
; ------------------------------ label
L1003:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,15
	jnz L1005
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [debug],A0
; ------------------------------ jump
	jmp	L1006
; ------------------------------ label
L1005:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,16
	jnz L1007
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [debug],A0
; ------------------------------ jump
	jmp	L1008
; ------------------------------ label
L1007:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-52]	; dir -52  
	cmp A0,17
	jnz L1009
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-880],D0	; T66  
; ------------------------------ index
	mov D0,[Dframe-880]	; T66  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-872],B0	; T65  
; ------------------------------ widen
	movzx A0,byte [Dframe-872]	; T65  
	mov dword[Dframe-888],A0	; T67  
; ------------------------------ jumpcc
	mov A0,[Dframe-888]	; T67  
	cmp A0,65
	jnz L1010
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-896],D0	; T68  
; ------------------------------ index
	mov D0,[Dframe-896]	; T68  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-912],D0	; T70  
; ------------------------------ index
	mov D0,[Dframe-912]	; T70  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-904],A0	; T69  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-944],D0	; T74  
; ------------------------------ index
	mov D0,[Dframe-944]	; T74  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-936],B0	; T73  
; ------------------------------ widen
	movzx A0,byte [Dframe-936]	; T73  
	mov dword[Dframe-952],A0	; T75  
; ------------------------------ widen
	movsx D0,dword[Dframe-952]	; T75  
	mov qword[Dframe-928],D0	; T72  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-928]	; T72  
	mov D0, [D0+D1*8]
	mov [Dframe-920],D0	; T71  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK236
	mov A11,[Dframe-904]	; T69  
	mov D12,[Dframe-920]	; T71  
	mov D13,KK237
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; d -16  
	call getstname
	mov [Dframe-960],D0	; T76  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK238
	mov D11,KK239
	mov D12,[Dframe-960]	; T76  
	mov D13,KK240
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-968],B0	; T77  
; ------------------------------ widen
	movzx A0,byte [Dframe-968]	; T77  
	mov dword[Dframe-976],A0	; T78  
; ------------------------------ jumpcc
	mov A0,[Dframe-976]	; T78  
	cmp A0,1
	jnz L1011
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-984],D0	; T79  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK241
	mov D11,[Dframe-984]	; T79  
	call showtokens
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK242
	call printf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1012
; ------------------------------ label
L1011:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK243
	mov D11,KK244
	call printf
	add Dstack, 32
; ------------------------------ label
L1012:
; ------------------------------ jump
	jmp	L1013
; ------------------------------ label
L1010:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK245
	mov D11,KK246
	call printf
	add Dstack, 32
; ------------------------------ label
L1013:
; ------------------------------ jump
	jmp	L1014
; ------------------------------ label
L1009:
; ------------------------------ stmt
; ------------------------------ label
L17: ;<skip>
; ------------------------------ stmt
; ------------------------------ label
L18: ;<L88>
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-52]	; dir -52  
	mov A1,1
	sub A0,A1
	mov [Dframe-1008],A0	; T82  
; ------------------------------ widen
	movsx D0,dword[Dframe-1008]	; T82  
	mov qword[Dframe-1000],D0	; T81  
; ------------------------------ index
	lea D0,[sourcedirnames]
	mov D1,[Dframe-1000]	; T81  
	mov D0, [D0+D1*8]
	mov [Dframe-992],D0	; T80  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK247
	mov D11,KK248
	mov D12,[Dframe-992]	; T80  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-32]	; pstart -32  
	mov [lxsptr],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1024],D0	; T84  
; ------------------------------ indexlv
	mov D0,[Dframe-1024]	; T84  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1016],D0	; T83  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-1016]	; T83 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L932
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK249
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1014:
; ------------------------------ label
L1008:
; ------------------------------ label
L1006:
; ------------------------------ label
L1004:
; ------------------------------ label
L1002:
; ------------------------------ label
L994:
; ------------------------------ label
L990:
; ------------------------------ label
L988:
; ------------------------------ label
L983:
; ------------------------------ label
L981:
; ------------------------------ label
L978:
; ------------------------------ label
L971:
; ------------------------------ label
L961:
; ------------------------------ label
L957:
; ------------------------------ label
L955:
; ------------------------------ label
L950:
; ------------------------------ label
L948:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L932
; ------------------------------ label
L932:
; ------------------------------ hardret
	add Dstack, 1024
	pop Dframe
	ret
;	End

;	Proc:getlexdirective
getlexdirective:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 352

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-24],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-24]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T3  
	cmp A0,65
	jnz L1016
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1017
; ------------------------------ label
L1016:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-48],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-48]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T4  
	mov dword[Dframe-56],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T6  
	cmp A0,54
	jnz L1018
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,18
	jmp L1015
; ------------------------------ jump
	jmp	L1019
; ------------------------------ label
L1018:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-72],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-72]	; T8  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T7  
	mov dword[Dframe-80],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T9  
	cmp A0,57
	jnz L1020
; ------------------------------ stmt
; ------------------------------ label
L1023:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ label
L1021:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-96]	; T11  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T10  
	mov dword[Dframe-104],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T12  
	cmp A0,54
	jz L1024
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-120],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-120]	; T14  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T13  
	mov dword[Dframe-128],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T15  
	cmp A0,55
	jnz L1023
; ------------------------------ label
L1024:
; ------------------------------ label
L1022:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,18
	jmp L1015
; ------------------------------ jump
	jmp	L1025
; ------------------------------ label
L1020:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1015
; ------------------------------ label
L1025:
; ------------------------------ label
L1019:
; ------------------------------ label
L1017:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-152],D0	; T18  
; ------------------------------ index
	mov D0,[Dframe-152]	; T18  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-144]	; T17  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T16  
	mov dword[Dframe-160],A0	; T19  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T19  
	cmp A0,66
	jnz L1026
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-184],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe-184]	; T22  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-176],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe-176]	; T21  
	mov A1,108
	mov W0, [D0+D1]
	mov [Dframe-168],W0	; T20  
; ------------------------------ widen
	movsx A0,word [Dframe-168]	; T20  
	mov dword[Dframe-192],A0	; T23  
; ------------------------------ returnx
	mov A0,[Dframe-192]	; T23  
	jmp L1015
; ------------------------------ jump
	jmp	L1027
; ------------------------------ label
L1026:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-216],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe-216]	; T26  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-208],D0	; T25  
; ------------------------------ index
	mov D0,[Dframe-208]	; T25  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-200],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T24  
	mov dword[Dframe-224],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T27  
	cmp A0,69
	jnz L1028
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,3
	jmp L1015
; ------------------------------ jump
	jmp	L1029
; ------------------------------ label
L1028:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-248],D0	; T30  
; ------------------------------ index
	mov D0,[Dframe-248]	; T30  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-240],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-240]	; T29  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-232],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T28  
	mov dword[Dframe-256],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T31  
	cmp A0,70
	jnz L1030
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,5
	jmp L1015
; ------------------------------ jump
	jmp	L1031
; ------------------------------ label
L1030:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-280],D0	; T34  
; ------------------------------ index
	mov D0,[Dframe-280]	; T34  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-272],D0	; T33  
; ------------------------------ index
	mov D0,[Dframe-272]	; T33  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-264],B0	; T32  
; ------------------------------ widen
	movzx A0,byte [Dframe-264]	; T32  
	mov dword[Dframe-288],A0	; T35  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T35  
	cmp A0,54
	jnz L1032
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,18
	jmp L1015
; ------------------------------ label
L1032:
; ------------------------------ label
L1031:
; ------------------------------ label
L1029:
; ------------------------------ label
L1027:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-296],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-296]	; T36  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-304],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-304]	; T37  
	mov dword[Dframe-312],A0	; T38  
; ------------------------------ jumpcc
	mov A0,[Dframe-312]	; T38  
	cmp A0,1
	jnz L1033
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,88
	mov B0, [D0+D1]
	mov [Dframe-320],B0	; T39  
; ------------------------------ widen
	movzx A0,byte [Dframe-320]	; T39  
	mov dword[Dframe-328],A0	; T40  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T40  
	cmp A0,66
	jnz L1034
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,108
	mov W0, [D0+D1]
	mov [Dframe-336],W0	; T41  
; ------------------------------ widen
	movsx A0,word [Dframe-336]	; T41  
	mov dword[Dframe-344],A0	; T42  
; ------------------------------ returnx
	mov A0,[Dframe-344]	; T42  
	jmp L1015
; ------------------------------ label
L1034:
; ------------------------------ label
L1033:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1015
; ------------------------------ label
L1015:
; ------------------------------ hardret
	add Dstack, 352
	pop Dframe
	ret
;	End

	global startlex
;	Proc:startlex
startlex:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [ifcondlevel],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [lx_stackindex],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; fileno 24  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ index
	lea D0,[sourcefiletext]
	mov D1,[Dframe-8]	; T1  
	mov D0, [D0+D1*8]
	mov [lxsptr],D0
; ------------------------------ move
	mov D0,[lxsptr]
	mov [lxstart],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-24],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; T3  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ move
	mov A0,[Dframe+24]	; fileno 24  
	mov D13,[Dframe-16]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-40],D0	; T5  
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; T5  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-32]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-56],D0	; T7  
; ------------------------------ indexlv
	mov D0,[Dframe-56]	; T7  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T6  
; ------------------------------ move
	mov A0,54
	mov D13,[Dframe-48]	; T6 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-72],D0	; T9  
; ------------------------------ indexlv
	mov D0,[Dframe-72]	; T9  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T8  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-64]	; T8 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ label
L1035:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global endlex
;	Proc:endlex
endlex:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[ifcondlevel]
	and A0,A0
	jz L1037
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK250
	mov A11,[ifcondlevel]
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK251
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1037:
; ------------------------------ label
L1036:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global PS
;	Proc:PS
PS:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK252
	mov D11,[Dframe+16]	; caption 16  
	mov D12,KK253
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call printsymbol
	add Dstack, 32
; ------------------------------ label
L1038:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global PSNEXT
;	Proc:PSNEXT
PSNEXT:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK254
	mov D11,[Dframe+16]	; caption 16  
	mov D12,KK255
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call printsymbol
	add Dstack, 32
; ------------------------------ label
L1039:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global showhashtablesize
;	Proc:showhashtablesize
showhashtablesize:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-8],A0	; n -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L1043
; ------------------------------ label
L1044:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[hashtable]
	mov D1,[Dframe-24]	; T2  
	imul D1,128
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; T1  
	and D0,D0
	jz L1045
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ indexref
	lea D0,[hashtable]
	mov D1,[Dframe-40]	; T4  
	imul D1,128
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; T3  
	call getstname
	mov [Dframe-48],D0	; T5  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK256
	mov D11,[Dframe-48]	; T5  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-8]	; n -8  
; ------------------------------ label
L1045:
; ------------------------------ label
L1041:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L1043:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,65535
	jle L1044
; ------------------------------ label
L1042:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK257
	mov D11,KK258
	mov A12,[Dframe-8]	; n -8  
	mov A13,65536
	call printf
	add Dstack, 32
; ------------------------------ label
L1040:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:readlinecomment
readlinecomment:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1047
; ------------------------------ label
L1049:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1050
; ------------------------------ label
L1052:
; ------------------------------ stmt
; ------------------------------ label
L1050:
; ------------------------------ preincrx
	inc qword[lxsptr]
	mov D0,qword[lxsptr]
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ getptr
	mov D0,[Dframe-40]	; T5  
	mov B0, [D0]
	mov [Dframe-32],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T4  
	mov dword[Dframe-48],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T6  
	mov qword[Dframe-24],D0	; T3  
; ------------------------------ index
	lea D0,[linecommentmap]
	mov D1,[Dframe-24]	; T3  
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-56],A0	; T7  
; ------------------------------ truncate
	mov A0,[Dframe-56]	; T7  
	and D0,255
	mov [Dframe-8],B0	; T1  
; ------------------------------ jumptrue
	mov B0,[Dframe-8]	; T1  
	and B0,B0
	jnz L1052
; ------------------------------ label
L1051:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-64],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T8  
	mov dword[Dframe-72],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T9  
	cmp A0,10
	jnz L1053
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L19
; ------------------------------ jump
	jmp	L1054
; ------------------------------ label
L1053:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-80],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T10  
	mov dword[Dframe-88],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T11  
	cmp A0,0
	jnz L1055
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L19
; ------------------------------ jump
	jmp	L1056
; ------------------------------ label
L1055:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-96],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T12  
	mov dword[Dframe-104],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T13  
	cmp A0,92
	jnz L1057
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-112],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T14  
	mov dword[Dframe-120],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T15  
	cmp A0,13
	jnz L1058
; ------------------------------ stmt
; ------------------------------ addto
	mov D0,[lxsptr]
	mov D1,2
	add D0,D1
	mov [lxsptr],D0
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-136],D0	; T17  
; ------------------------------ indexlv
	mov D0,[Dframe-136]	; T17  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-128],D0	; T16  
; ------------------------------ incrto
	mov D13,[Dframe-128]	; T16 *
	inc dword[D13]
; ------------------------------ jump
	jmp	L1059
; ------------------------------ label
L1058:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-144],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-144]	; T18  
	mov dword[Dframe-152],A0	; T19  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T19  
	cmp A0,10
	jnz L1060
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-168],D0	; T21  
; ------------------------------ indexlv
	mov D0,[Dframe-168]	; T21  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T20  
; ------------------------------ incrto
	mov D13,[Dframe-160]	; T20 *
	inc dword[D13]
; ------------------------------ label
L1060:
; ------------------------------ label
L1059:
; ------------------------------ label
L1057:
; ------------------------------ label
L1056:
; ------------------------------ label
L1054:
; ------------------------------ label
L1047:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L1049
; ------------------------------ label
L1048:
; ------------------------------ stmt
; ------------------------------ label
L19: ;<L145>
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-184],D0	; T23  
; ------------------------------ indexlv
	mov D0,[Dframe-184]	; T23  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T22  
; ------------------------------ incrto
	mov D13,[Dframe-176]	; T22 *
	inc dword[D13]
; ------------------------------ label
L1046:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

;	Proc:readblockcomment
readblockcomment:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1062
; ------------------------------ label
L1064:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1065
; ------------------------------ label
L1067:
; ------------------------------ stmt
; ------------------------------ label
L1065:
; ------------------------------ preincrx
	inc qword[lxsptr]
	mov D0,qword[lxsptr]
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ getptr
	mov D0,[Dframe-40]	; T5  
	mov B0, [D0]
	mov [Dframe-32],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T4  
	mov dword[Dframe-48],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T6  
	mov qword[Dframe-24],D0	; T3  
; ------------------------------ index
	lea D0,[commentmap]
	mov D1,[Dframe-24]	; T3  
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-56],A0	; T7  
; ------------------------------ truncate
	mov A0,[Dframe-56]	; T7  
	and D0,255
	mov [Dframe-8],B0	; T1  
; ------------------------------ jumptrue
	mov B0,[Dframe-8]	; T1  
	and B0,B0
	jnz L1067
; ------------------------------ label
L1066:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-64],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T8  
	mov dword[Dframe-72],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T9  
	cmp A0,10
	jnz L1068
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-88],D0	; T11  
; ------------------------------ indexlv
	mov D0,[Dframe-88]	; T11  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T10  
; ------------------------------ incrto
	mov D13,[Dframe-80]	; T10 *
	inc dword[D13]
; ------------------------------ jump
	jmp	L1069
; ------------------------------ label
L1068:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-96],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T12  
	mov dword[Dframe-104],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T13  
	cmp A0,0
	jnz L1070
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK259
	call lxerror
	add Dstack, 32
; ------------------------------ jump
	jmp	L1071
; ------------------------------ label
L1070:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-112],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T14  
	mov dword[Dframe-120],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T15  
	cmp A0,42
	jnz L1072
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[lxsptr]
	mov D1,1
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T16  
	mov dword[Dframe-136],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T17  
	cmp A0,47
	jnz L1073
; ------------------------------ stmt
; ------------------------------ addto
	mov D0,[lxsptr]
	mov D1,2
	add D0,D1
	mov [lxsptr],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L20
; ------------------------------ label
L1073:
; ------------------------------ label
L1072:
; ------------------------------ label
L1071:
; ------------------------------ label
L1069:
; ------------------------------ label
L1062:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L1064
; ------------------------------ label
L1063:
; ------------------------------ stmt
; ------------------------------ label
L20: ;<L155>
; ------------------------------ label
L1061:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

;	Proc:readhex
readhex:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 336

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [Dframe-40],D0	; p -40  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-20],A0	; leading -20  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-28],A0	; usigned -28  
; ------------------------------ move
	mov A0,[Dframe-28]	; usigned -28  
	mov [Dframe-24],A0	; ll -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; length -16  
; ------------------------------ stmt
; ------------------------------ label
L21: ;<L162>
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-56],D0	; T2  
; ------------------------------ getptr
	mov D0,[Dframe-56]	; T2  
	mov B0, [D0]
	mov [Dframe-48],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T1  
	mov dword[Dframe-64],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-64]	; T3  
	mov [Dframe-12],A0	; c -12  
; ------------------------------ switch
	mov A0,[Dframe-12]	; c -12  
	sub A0, 46
	cmp A0, 72
	jae L1075
	jmp [A0*8+L1106]
	align 8
; ------------------------------ label
L1106:
; ------------------------------ jumplabel
	dq L1081	; 1
; ------------------------------ jumplabel
	dq L1075	; 2
; ------------------------------ jumplabel
	dq L1096	; 3
; ------------------------------ jumplabel
	dq L1097	; 4
; ------------------------------ jumplabel
	dq L1098	; 5
; ------------------------------ jumplabel
	dq L1099	; 6
; ------------------------------ jumplabel
	dq L1100	; 7
; ------------------------------ jumplabel
	dq L1101	; 8
; ------------------------------ jumplabel
	dq L1102	; 9
; ------------------------------ jumplabel
	dq L1103	; 10
; ------------------------------ jumplabel
	dq L1104	; 11
; ------------------------------ jumplabel
	dq L1105	; 12
; ------------------------------ jumplabel
	dq L1075	; 13
; ------------------------------ jumplabel
	dq L1075	; 14
; ------------------------------ jumplabel
	dq L1075	; 15
; ------------------------------ jumplabel
	dq L1075	; 16
; ------------------------------ jumplabel
	dq L1075	; 17
; ------------------------------ jumplabel
	dq L1075	; 18
; ------------------------------ jumplabel
	dq L1075	; 19
; ------------------------------ jumplabel
	dq L1090	; 20
; ------------------------------ jumplabel
	dq L1091	; 21
; ------------------------------ jumplabel
	dq L1092	; 22
; ------------------------------ jumplabel
	dq L1093	; 23
; ------------------------------ jumplabel
	dq L1094	; 24
; ------------------------------ jumplabel
	dq L1095	; 25
; ------------------------------ jumplabel
	dq L1075	; 26
; ------------------------------ jumplabel
	dq L1075	; 27
; ------------------------------ jumplabel
	dq L1075	; 28
; ------------------------------ jumplabel
	dq L1075	; 29
; ------------------------------ jumplabel
	dq L1075	; 30
; ------------------------------ jumplabel
	dq L1079	; 31
; ------------------------------ jumplabel
	dq L1075	; 32
; ------------------------------ jumplabel
	dq L1075	; 33
; ------------------------------ jumplabel
	dq L1075	; 34
; ------------------------------ jumplabel
	dq L1082	; 35
; ------------------------------ jumplabel
	dq L1075	; 36
; ------------------------------ jumplabel
	dq L1075	; 37
; ------------------------------ jumplabel
	dq L1075	; 38
; ------------------------------ jumplabel
	dq L1075	; 39
; ------------------------------ jumplabel
	dq L1077	; 40
; ------------------------------ jumplabel
	dq L1075	; 41
; ------------------------------ jumplabel
	dq L1075	; 42
; ------------------------------ jumplabel
	dq L1075	; 43
; ------------------------------ jumplabel
	dq L1075	; 44
; ------------------------------ jumplabel
	dq L1075	; 45
; ------------------------------ jumplabel
	dq L1075	; 46
; ------------------------------ jumplabel
	dq L1075	; 47
; ------------------------------ jumplabel
	dq L1075	; 48
; ------------------------------ jumplabel
	dq L1075	; 49
; ------------------------------ jumplabel
	dq L1075	; 50
; ------------------------------ jumplabel
	dq L1075	; 51
; ------------------------------ jumplabel
	dq L1084	; 52
; ------------------------------ jumplabel
	dq L1085	; 53
; ------------------------------ jumplabel
	dq L1086	; 54
; ------------------------------ jumplabel
	dq L1087	; 55
; ------------------------------ jumplabel
	dq L1088	; 56
; ------------------------------ jumplabel
	dq L1089	; 57
; ------------------------------ jumplabel
	dq L1075	; 58
; ------------------------------ jumplabel
	dq L1075	; 59
; ------------------------------ jumplabel
	dq L1075	; 60
; ------------------------------ jumplabel
	dq L1075	; 61
; ------------------------------ jumplabel
	dq L1075	; 62
; ------------------------------ jumplabel
	dq L1080	; 63
; ------------------------------ jumplabel
	dq L1075	; 64
; ------------------------------ jumplabel
	dq L1075	; 65
; ------------------------------ jumplabel
	dq L1075	; 66
; ------------------------------ jumplabel
	dq L1083	; 67
; ------------------------------ jumplabel
	dq L1075	; 68
; ------------------------------ jumplabel
	dq L1075	; 69
; ------------------------------ jumplabel
	dq L1075	; 70
; ------------------------------ jumplabel
	dq L1075	; 71
; ------------------------------ jumplabel
	dq L1078	; 72
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L1097:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L1098:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L1099:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L1100:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L1101:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L1102:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L1103:
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L1104:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L1105:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-20],A0	; leading -20  
; ------------------------------ stmt
; ------------------------------ mul
	mov D0,[Dframe-8]	; aa -8  
	mov D1,16
	mul D1
	mov [Dframe-72],D0	; T4  
; ------------------------------ sub
	mov A0,[Dframe-12]	; c -12  
	mov A1,48
	sub A0,A1
	mov [Dframe-88],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T6  
	mov qword[Dframe-80],D0	; T5  
; ------------------------------ add
	mov D0,[Dframe-72]	; T4  
	mov D1,[Dframe-80]	; T5  
	add D0,D1
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-16]	; length -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1076
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L1096:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; leading -20  
	and A0,A0
	jz L1107
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-40]	; p -40  
; ------------------------------ jump
	jmp	L1108
; ------------------------------ label
L1107:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-16]	; length -16  
; ------------------------------ stmt
; ------------------------------ mul
	mov D0,[Dframe-8]	; aa -8  
	mov D1,16
	mul D1
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ label
L1108:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1076
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L1090:
; ------------------------------ stmt
; ------------------------------ comment
;case 66:
; ------------------------------ label
L1091:
; ------------------------------ stmt
; ------------------------------ comment
;case 67:
; ------------------------------ label
L1092:
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L1093:
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L1094:
; ------------------------------ stmt
; ------------------------------ comment
;case 70:
; ------------------------------ label
L1095:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-20],A0	; leading -20  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-16]	; length -16  
; ------------------------------ stmt
; ------------------------------ mul
	mov D0,[Dframe-8]	; aa -8  
	mov D1,16
	mul D1
	mov [Dframe-96],D0	; T7  
; ------------------------------ sub
	mov A0,[Dframe-12]	; c -12  
	mov A1,65
	sub A0,A1
	mov [Dframe-112],A0	; T9  
; ------------------------------ add
	mov A0,[Dframe-112]	; T9  
	mov A1,10
	add A0,A1
	mov [Dframe-120],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T10  
	mov qword[Dframe-104],D0	; T8  
; ------------------------------ add
	mov D0,[Dframe-96]	; T7  
	mov D1,[Dframe-104]	; T8  
	add D0,D1
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1076
; ------------------------------ stmt
; ------------------------------ comment
;case 97:
; ------------------------------ label
L1084:
; ------------------------------ stmt
; ------------------------------ comment
;case 98:
; ------------------------------ label
L1085:
; ------------------------------ stmt
; ------------------------------ comment
;case 99:
; ------------------------------ label
L1086:
; ------------------------------ stmt
; ------------------------------ comment
;case 100:
; ------------------------------ label
L1087:
; ------------------------------ stmt
; ------------------------------ comment
;case 101:
; ------------------------------ label
L1088:
; ------------------------------ stmt
; ------------------------------ comment
;case 102:
; ------------------------------ label
L1089:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-20],A0	; leading -20  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-16]	; length -16  
; ------------------------------ stmt
; ------------------------------ mul
	mov D0,[Dframe-8]	; aa -8  
	mov D1,16
	mul D1
	mov [Dframe-128],D0	; T11  
; ------------------------------ sub
	mov A0,[Dframe-12]	; c -12  
	mov A1,97
	sub A0,A1
	mov [Dframe-144],A0	; T13  
; ------------------------------ add
	mov A0,[Dframe-144]	; T13  
	mov A1,10
	add A0,A1
	mov [Dframe-152],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-152]	; T14  
	mov qword[Dframe-136],D0	; T12  
; ------------------------------ add
	mov D0,[Dframe-128]	; T11  
	mov D1,[Dframe-136]	; T12  
	add D0,D1
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1076
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L1081:
; ------------------------------ stmt
; ------------------------------ comment
;case 80:
; ------------------------------ label
L1082:
; ------------------------------ stmt
; ------------------------------ comment
;case 112:
; ------------------------------ label
L1083:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe-40]	; p -40  
	sub D0,D1
	mov [Dframe-168],D0	; T16  
; ------------------------------ truncate
	mov D0,[Dframe-168]	; T16  
	mov A0,A0
	mov [Dframe-160],A0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pstart 16  
	mov D11,[Dframe-40]	; p -40  
	mov A12,[Dframe-160]	; T15  
	mov A13,16
	call readrealnumber
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L1074
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1076
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L1079:
; ------------------------------ stmt
; ------------------------------ comment
;case 108:
; ------------------------------ label
L1080:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-24]	; ll -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; ll -24  
	cmp A0,2
	jle L1109
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK260
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1109:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1076
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L1077:
; ------------------------------ stmt
; ------------------------------ comment
;case 117:
; ------------------------------ label
L1078:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-28]	; usigned -28  
	and A0,A0
	jz L1110
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK261
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1110:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-28],A0	; usigned -28  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1076
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1075:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L22
; ------------------------------ label
L1076:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L21
; ------------------------------ stmt
; ------------------------------ label
L22: ;<L163>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-184],D0	; T18  
; ------------------------------ indexlv
	mov D0,[Dframe-184]	; T18  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T17  
; ------------------------------ sub
	mov D0,[Dframe+16]	; pstart 16  
	mov D1,[lxstart]
	sub D0,D1
	mov [Dframe-200],D0	; T20  
; ------------------------------ truncate
	mov D0,[Dframe-200]	; T20  
	mov A0,A0
	mov [Dframe-192],A0	; T19  
; ------------------------------ move
	mov A0,[Dframe-192]	; T19  
	mov D13,[Dframe-176]	; T17 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-216],D0	; T22  
; ------------------------------ indexlv
	mov D0,[Dframe-216]	; T22  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T21  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe+16]	; pstart 16  
	sub D0,D1
	mov [Dframe-232],D0	; T24  
; ------------------------------ truncate
	mov D0,[Dframe-232]	; T24  
	mov A0,A0
	mov [Dframe-224],A0	; T23  
; ------------------------------ move
	mov A0,[Dframe-224]	; T23  
	mov D13,[Dframe-208]	; T21 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; length -16  
	cmp A0,16
	jle L1111
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK262
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1111:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-248],D0	; T26  
; ------------------------------ indexlv
	mov D0,[Dframe-248]	; T26  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-240],D0	; T25  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-240]	; T25 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; aa -8  
	cmp D0,[RR8]
	jb L1112
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-264],D0	; T28  
; ------------------------------ indexlv
	mov D0,[Dframe-264]	; T28  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T27  
; ------------------------------ move
	mov A0,10
	mov D13,[Dframe-256]	; T27 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1113
; ------------------------------ label
L1112:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; aa -8  
	cmp D0,[RR9]
	jb L1114
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-280],D0	; T30  
; ------------------------------ indexlv
	mov D0,[Dframe-280]	; T30  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T29  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-272]	; T29 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1115
; ------------------------------ label
L1114:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; aa -8  
	cmp D0,[RR10]
	jb L1116
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-296],D0	; T32  
; ------------------------------ indexlv
	mov D0,[Dframe-296]	; T32  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-288],D0	; T31  
; ------------------------------ move
	mov A0,9
	mov D13,[Dframe-288]	; T31 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1117
; ------------------------------ label
L1116:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-312],D0	; T34  
; ------------------------------ indexlv
	mov D0,[Dframe-312]	; T34  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T33  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-304]	; T33 *
	mov byte [D13],B0
; ------------------------------ label
L1117:
; ------------------------------ label
L1115:
; ------------------------------ label
L1113:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-328],D0	; T36  
; ------------------------------ indexlv
	mov D0,[Dframe-328]	; T36  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-320],D0	; T35  
; ------------------------------ softconv
	mov D0,[Dframe-8]	; aa -8  
	mov [Dframe-336],D0	; T37  
; ------------------------------ move
	mov D0,[Dframe-336]	; T37  
	mov D13,[Dframe-320]	; T35 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call checknumbersuffix
	add Dstack, 32
; ------------------------------ label
L1074:
; ------------------------------ hardret
	add Dstack, 336
	pop Dframe
	ret
;	End

;	Proc:readbinary
readbinary:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [Dframe-32],D0	; p -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-24],A0	; leading -24  
; ------------------------------ stmt
; ------------------------------ label
L23: ;<L168>
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-56],D0	; T2  
; ------------------------------ getptr
	mov D0,[Dframe-56]	; T2  
	mov B0, [D0]
	mov [Dframe-48],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T1  
	mov dword[Dframe-64],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-64]	; T3  
	mov [Dframe-12],A0	; c -12  
; ------------------------------ switch
	mov A0,[Dframe-12]	; c -12  
	sub A0, 46
	cmp A0, 12
	jae L1119
	jmp [A0*8+L1132]
	align 8
; ------------------------------ label
L1132:
; ------------------------------ jumplabel
	dq L1121	; 1
; ------------------------------ jumplabel
	dq L1119	; 2
; ------------------------------ jumplabel
	dq L1130	; 3
; ------------------------------ jumplabel
	dq L1131	; 4
; ------------------------------ jumplabel
	dq L1122	; 5
; ------------------------------ jumplabel
	dq L1123	; 6
; ------------------------------ jumplabel
	dq L1124	; 7
; ------------------------------ jumplabel
	dq L1125	; 8
; ------------------------------ jumplabel
	dq L1126	; 9
; ------------------------------ jumplabel
	dq L1127	; 10
; ------------------------------ jumplabel
	dq L1128	; 11
; ------------------------------ jumplabel
	dq L1129	; 12
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L1131:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-24],A0	; leading -24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1120
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L1130:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-24]	; leading -24  
	and A0,A0
	jz L1133
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-32]	; p -32  
; ------------------------------ label
L1133:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1120
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L1122:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L1123:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L1124:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L1125:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L1126:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L1127:
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L1128:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L1129:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK263
	call lxerror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1120
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L1121:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK264
	call lxerror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1120
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1119:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L24
; ------------------------------ label
L1120:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L23
; ------------------------------ stmt
; ------------------------------ label
L24: ;<L169>
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe-32]	; p -32  
	sub D0,D1
	mov [Dframe-80],D0	; T5  
; ------------------------------ truncate
	mov D0,[Dframe-80]	; T5  
	mov A0,A0
	mov [Dframe-72],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-72]	; T4  
	mov [Dframe-16],A0	; length -16  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T7  
; ------------------------------ indexlv
	mov D0,[Dframe-96]	; T7  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T6  
; ------------------------------ sub
	mov D0,[Dframe+16]	; pstart 16  
	mov D1,[lxstart]
	sub D0,D1
	mov [Dframe-112],D0	; T9  
; ------------------------------ truncate
	mov D0,[Dframe-112]	; T9  
	mov A0,A0
	mov [Dframe-104],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-104]	; T8  
	mov D13,[Dframe-88]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-128],D0	; T11  
; ------------------------------ indexlv
	mov D0,[Dframe-128]	; T11  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T10  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe+16]	; pstart 16  
	sub D0,D1
	mov [Dframe-144],D0	; T13  
; ------------------------------ truncate
	mov D0,[Dframe-144]	; T13  
	mov A0,A0
	mov [Dframe-136],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-136]	; T12  
	mov D13,[Dframe-120]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; length -16  
	cmp A0,64
	jle L1134
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK265
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1134:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-16]	; length -16  
	mov [Dframe-36],A0	; av_6 -36  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1135
; ------------------------------ label
L1137:
; ------------------------------ stmt
; ------------------------------ mul
	mov D0,[Dframe-8]	; aa -8  
	mov D1,2
	mul D1
	mov [Dframe-152],D0	; T14  
; ------------------------------ postincrx
	mov D0,[Dframe-32]	; p -32  
	inc qword[Dframe-32]	; p -32  
	mov qword[Dframe-176],D0	; T17  
; ------------------------------ getptr
	mov D0,[Dframe-176]	; T17  
	mov B0, [D0]
	mov [Dframe-168],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T16  
	mov dword[Dframe-184],A0	; T18  
; ------------------------------ widen
	movsx D0,dword[Dframe-184]	; T18  
	mov qword[Dframe-160],D0	; T15  
; ------------------------------ add
	mov D0,[Dframe-152]	; T14  
	mov D1,[Dframe-160]	; T15  
	add D0,D1
	mov [Dframe-192],D0	; T19  
; ------------------------------ sub
	mov D0,[Dframe-192]	; T19  
	mov D1,48
	sub D0,D1
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ label
L1135:
; ------------------------------ postdecrx
	mov A0,[Dframe-36]	; av_6 -36  
	dec dword[Dframe-36]	; av_6 -36  
	mov dword[Dframe-200],A0	; T20  
; ------------------------------ jumptrue
	mov A0,[Dframe-200]	; T20  
	and A0,A0
	jnz L1137
; ------------------------------ label
L1136:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-216],D0	; T22  
; ------------------------------ indexlv
	mov D0,[Dframe-216]	; T22  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T21  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-208]	; T21 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-232],D0	; T24  
; ------------------------------ indexlv
	mov D0,[Dframe-232]	; T24  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T23  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-224]	; T23 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; aa -8  
	cmp D0,[RR11]
	jb L1138
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-248],D0	; T26  
; ------------------------------ indexlv
	mov D0,[Dframe-248]	; T26  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-240],D0	; T25  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-240]	; T25 *
	mov byte [D13],B0
; ------------------------------ label
L1138:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-264],D0	; T28  
; ------------------------------ indexlv
	mov D0,[Dframe-264]	; T28  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T27  
; ------------------------------ softconv
	mov D0,[Dframe-8]	; aa -8  
	mov [Dframe-272],D0	; T29  
; ------------------------------ move
	mov D0,[Dframe-272]	; T29  
	mov D13,[Dframe-256]	; T27 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call checknumbersuffix
	add Dstack, 32
; ------------------------------ label
L1118:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

;	Proc:readoctal
readoctal:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 320

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [Dframe-40],D0	; p -40  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-24],A0	; leading -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-32],A0	; usigned -32  
; ------------------------------ move
	mov A0,[Dframe-32]	; usigned -32  
	mov [Dframe-28],A0	; ll -28  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; length -16  
; ------------------------------ stmt
; ------------------------------ label
L25: ;<L173>
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-64],D0	; T2  
; ------------------------------ getptr
	mov D0,[Dframe-64]	; T2  
	mov B0, [D0]
	mov [Dframe-56],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T1  
	mov dword[Dframe-72],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-72]	; T3  
	mov [Dframe-12],A0	; c -12  
; ------------------------------ switch
	mov A0,[Dframe-12]	; c -12  
	sub A0, 46
	cmp A0, 72
	jae L1140
	jmp [A0*8+L1155]
	align 8
; ------------------------------ label
L1155:
; ------------------------------ jumplabel
	dq L1146	; 1
; ------------------------------ jumplabel
	dq L1140	; 2
; ------------------------------ jumplabel
	dq L1147	; 3
; ------------------------------ jumplabel
	dq L1148	; 4
; ------------------------------ jumplabel
	dq L1149	; 5
; ------------------------------ jumplabel
	dq L1150	; 6
; ------------------------------ jumplabel
	dq L1151	; 7
; ------------------------------ jumplabel
	dq L1152	; 8
; ------------------------------ jumplabel
	dq L1153	; 9
; ------------------------------ jumplabel
	dq L1154	; 10
; ------------------------------ jumplabel
	dq L1140	; 11
; ------------------------------ jumplabel
	dq L1140	; 12
; ------------------------------ jumplabel
	dq L1140	; 13
; ------------------------------ jumplabel
	dq L1140	; 14
; ------------------------------ jumplabel
	dq L1140	; 15
; ------------------------------ jumplabel
	dq L1140	; 16
; ------------------------------ jumplabel
	dq L1140	; 17
; ------------------------------ jumplabel
	dq L1140	; 18
; ------------------------------ jumplabel
	dq L1140	; 19
; ------------------------------ jumplabel
	dq L1140	; 20
; ------------------------------ jumplabel
	dq L1140	; 21
; ------------------------------ jumplabel
	dq L1140	; 22
; ------------------------------ jumplabel
	dq L1140	; 23
; ------------------------------ jumplabel
	dq L1140	; 24
; ------------------------------ jumplabel
	dq L1140	; 25
; ------------------------------ jumplabel
	dq L1140	; 26
; ------------------------------ jumplabel
	dq L1140	; 27
; ------------------------------ jumplabel
	dq L1140	; 28
; ------------------------------ jumplabel
	dq L1140	; 29
; ------------------------------ jumplabel
	dq L1140	; 30
; ------------------------------ jumplabel
	dq L1144	; 31
; ------------------------------ jumplabel
	dq L1140	; 32
; ------------------------------ jumplabel
	dq L1140	; 33
; ------------------------------ jumplabel
	dq L1140	; 34
; ------------------------------ jumplabel
	dq L1140	; 35
; ------------------------------ jumplabel
	dq L1140	; 36
; ------------------------------ jumplabel
	dq L1140	; 37
; ------------------------------ jumplabel
	dq L1140	; 38
; ------------------------------ jumplabel
	dq L1140	; 39
; ------------------------------ jumplabel
	dq L1142	; 40
; ------------------------------ jumplabel
	dq L1140	; 41
; ------------------------------ jumplabel
	dq L1140	; 42
; ------------------------------ jumplabel
	dq L1140	; 43
; ------------------------------ jumplabel
	dq L1140	; 44
; ------------------------------ jumplabel
	dq L1140	; 45
; ------------------------------ jumplabel
	dq L1140	; 46
; ------------------------------ jumplabel
	dq L1140	; 47
; ------------------------------ jumplabel
	dq L1140	; 48
; ------------------------------ jumplabel
	dq L1140	; 49
; ------------------------------ jumplabel
	dq L1140	; 50
; ------------------------------ jumplabel
	dq L1140	; 51
; ------------------------------ jumplabel
	dq L1140	; 52
; ------------------------------ jumplabel
	dq L1140	; 53
; ------------------------------ jumplabel
	dq L1140	; 54
; ------------------------------ jumplabel
	dq L1140	; 55
; ------------------------------ jumplabel
	dq L1140	; 56
; ------------------------------ jumplabel
	dq L1140	; 57
; ------------------------------ jumplabel
	dq L1140	; 58
; ------------------------------ jumplabel
	dq L1140	; 59
; ------------------------------ jumplabel
	dq L1140	; 60
; ------------------------------ jumplabel
	dq L1140	; 61
; ------------------------------ jumplabel
	dq L1140	; 62
; ------------------------------ jumplabel
	dq L1145	; 63
; ------------------------------ jumplabel
	dq L1140	; 64
; ------------------------------ jumplabel
	dq L1140	; 65
; ------------------------------ jumplabel
	dq L1140	; 66
; ------------------------------ jumplabel
	dq L1140	; 67
; ------------------------------ jumplabel
	dq L1140	; 68
; ------------------------------ jumplabel
	dq L1140	; 69
; ------------------------------ jumplabel
	dq L1140	; 70
; ------------------------------ jumplabel
	dq L1140	; 71
; ------------------------------ jumplabel
	dq L1143	; 72
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L1148:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L1149:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L1150:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L1151:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L1152:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L1153:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L1154:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-24],A0	; leading -24  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-16]	; length -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1141
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L1147:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-24]	; leading -24  
	and A0,A0
	jz L1156
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-40]	; p -40  
; ------------------------------ jump
	jmp	L1157
; ------------------------------ label
L1156:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-16]	; length -16  
; ------------------------------ label
L1157:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1141
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L1146:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe-40]	; p -40  
	sub D0,D1
	mov [Dframe-88],D0	; T5  
; ------------------------------ truncate
	mov D0,[Dframe-88]	; T5  
	mov A0,A0
	mov [Dframe-80],A0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pstart 16  
	mov D11,[Dframe-40]	; p -40  
	mov A12,[Dframe-80]	; T4  
	mov A13,10
	call readrealnumber
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L1139
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1141
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L1144:
; ------------------------------ stmt
; ------------------------------ comment
;case 108:
; ------------------------------ label
L1145:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-28]	; ll -28  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; ll -28  
	cmp A0,2
	jle L1158
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK266
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1158:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1141
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L1142:
; ------------------------------ stmt
; ------------------------------ comment
;case 117:
; ------------------------------ label
L1143:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; usigned -32  
	and A0,A0
	jz L1159
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK267
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1159:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-32],A0	; usigned -32  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1141
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1140:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; c -12  
	mov qword[Dframe-112],D0	; T8  
; ------------------------------ index
	lea D0,[alphamap]
	mov D1,[Dframe-112]	; T8  
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T7  
	mov dword[Dframe-120],A0	; T9  
; ------------------------------ truncate
	mov A0,[Dframe-120]	; T9  
	and D0,255
	mov [Dframe-96],B0	; T6  
; ------------------------------ jumpfalse
	mov B0,[Dframe-96]	; T6  
	and B0,B0
	jz L1160
; ------------------------------ stmt
; ------------------------------ label
L26: ;<doalpha>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pstart 16  
	call readalphanumeric
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L1139
; ------------------------------ label
L1160:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L27
; ------------------------------ label
L1141:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L25
; ------------------------------ stmt
; ------------------------------ label
L27: ;<L174>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-136],D0	; T11  
; ------------------------------ indexlv
	mov D0,[Dframe-136]	; T11  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-128],D0	; T10  
; ------------------------------ sub
	mov D0,[Dframe+16]	; pstart 16  
	mov D1,[lxstart]
	sub D0,D1
	mov [Dframe-152],D0	; T13  
; ------------------------------ truncate
	mov D0,[Dframe-152]	; T13  
	mov A0,A0
	mov [Dframe-144],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-144]	; T12  
	mov D13,[Dframe-128]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-168],D0	; T15  
; ------------------------------ indexlv
	mov D0,[Dframe-168]	; T15  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T14  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe+16]	; pstart 16  
	sub D0,D1
	mov [Dframe-184],D0	; T17  
; ------------------------------ truncate
	mov D0,[Dframe-184]	; T17  
	mov A0,A0
	mov [Dframe-176],A0	; T16  
; ------------------------------ move
	mov A0,[Dframe-176]	; T16  
	mov D13,[Dframe-160]	; T14 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; length -16  
	cmp A0,22
	jg L1162
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; length -16  
	cmp A0,22
	jnz L1161
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; p -40  
	mov D11,KK268
	mov D12,22
	call strncmp
	mov [Dframe-192],A0	; T18  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-192]	; T18  
	mov [Dframe-20],A0	; res -20  
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; res -20  
	cmp A0,0
	jle L1161
; ------------------------------ label
L1162:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK269
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1161:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-16]	; length -16  
	mov [Dframe-44],A0	; av_7 -44  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1163
; ------------------------------ label
L1165:
; ------------------------------ stmt
; ------------------------------ mul
	mov D0,[Dframe-8]	; aa -8  
	mov D1,8
	mul D1
	mov [Dframe-200],D0	; T19  
; ------------------------------ postincrx
	mov D0,[Dframe-40]	; p -40  
	inc qword[Dframe-40]	; p -40  
	mov qword[Dframe-224],D0	; T22  
; ------------------------------ getptr
	mov D0,[Dframe-224]	; T22  
	mov B0, [D0]
	mov [Dframe-216],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T21  
	mov dword[Dframe-232],A0	; T23  
; ------------------------------ widen
	movsx D0,dword[Dframe-232]	; T23  
	mov qword[Dframe-208],D0	; T20  
; ------------------------------ add
	mov D0,[Dframe-200]	; T19  
	mov D1,[Dframe-208]	; T20  
	add D0,D1
	mov [Dframe-240],D0	; T24  
; ------------------------------ sub
	mov D0,[Dframe-240]	; T24  
	mov D1,48
	sub D0,D1
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ label
L1163:
; ------------------------------ postdecrx
	mov A0,[Dframe-44]	; av_7 -44  
	dec dword[Dframe-44]	; av_7 -44  
	mov dword[Dframe-248],A0	; T25  
; ------------------------------ jumptrue
	mov A0,[Dframe-248]	; T25  
	and A0,A0
	jnz L1165
; ------------------------------ label
L1164:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-264],D0	; T27  
; ------------------------------ indexlv
	mov D0,[Dframe-264]	; T27  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T26  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-256]	; T26 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-280],D0	; T29  
; ------------------------------ indexlv
	mov D0,[Dframe-280]	; T29  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T28  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-272]	; T28 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; aa -8  
	cmp D0,[RR12]
	jb L1166
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-296],D0	; T31  
; ------------------------------ indexlv
	mov D0,[Dframe-296]	; T31  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-288],D0	; T30  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-288]	; T30 *
	mov byte [D13],B0
; ------------------------------ label
L1166:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-312],D0	; T33  
; ------------------------------ indexlv
	mov D0,[Dframe-312]	; T33  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T32  
; ------------------------------ softconv
	mov D0,[Dframe-8]	; aa -8  
	mov [Dframe-320],D0	; T34  
; ------------------------------ move
	mov D0,[Dframe-320]	; T34  
	mov D13,[Dframe-304]	; T32 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call checknumbersuffix
	add Dstack, 32
; ------------------------------ label
L1139:
; ------------------------------ hardret
	add Dstack, 320
	pop Dframe
	ret
;	End

;	Proc:readdecimal
readdecimal:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 528

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-26],B0	; usigned -26  
; ------------------------------ move
	mov B0,[Dframe-26]	; usigned -26  
	mov [Dframe-25],B0	; ll -25  
; ------------------------------ stmt
; ------------------------------ predecrx
	dec qword[lxsptr]
	mov D0,qword[lxsptr]
	mov qword[Dframe-56],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe-56]	; T1  
	mov [Dframe-40],D0	; p -40  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1168
; ------------------------------ label
L1170:
; ------------------------------ stmt
; ------------------------------ label
L1168:
; ------------------------------ preincrx
	inc qword[lxsptr]
	mov D0,qword[lxsptr]
	mov qword[Dframe-96],D0	; T6  
; ------------------------------ getptr
	mov D0,[Dframe-96]	; T6  
	mov B0, [D0]
	mov [Dframe-88],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T5  
	mov dword[Dframe-104],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T7  
	mov qword[Dframe-80],D0	; T4  
; ------------------------------ index
	lea D0,[digitmap]
	mov D1,[Dframe-80]	; T4  
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T3  
	mov dword[Dframe-112],A0	; T8  
; ------------------------------ truncate
	mov A0,[Dframe-112]	; T8  
	and D0,255
	mov [Dframe-64],B0	; T2  
; ------------------------------ jumptrue
	mov B0,[Dframe-64]	; T2  
	and B0,B0
	jnz L1170
; ------------------------------ label
L1169:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1171
; ------------------------------ label
L1173:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-40]	; p -40  
; ------------------------------ label
L1171:
; ------------------------------ getptr
	mov D0,[Dframe-40]	; p -40  
	mov B0, [D0]
	mov [Dframe-120],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T9  
	mov dword[Dframe-128],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T10  
	cmp A0,48
	jz L1173
; ------------------------------ label
L1172:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe-40]	; p -40  
	sub D0,D1
	mov [Dframe-144],D0	; T12  
; ------------------------------ truncate
	mov D0,[Dframe-144]	; T12  
	mov A0,A0
	mov [Dframe-136],A0	; T11  
; ------------------------------ move
	mov A0,[Dframe-136]	; T11  
	mov [Dframe-16],A0	; length -16  
; ------------------------------ stmt
; ------------------------------ label
L28: ;<L185>
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-160],D0	; T14  
; ------------------------------ getptr
	mov D0,[Dframe-160]	; T14  
	mov B0, [D0]
	mov [Dframe-152],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-152]	; T13  
	mov dword[Dframe-168],A0	; T15  
; ------------------------------ move
	mov A0,[Dframe-168]	; T15  
	mov [Dframe-12],A0	; c -12  
; ------------------------------ switch
	mov A0,[Dframe-12]	; c -12  
	sub A0, 46
	cmp A0, 72
	jae L1174
	jmp [A0*8+L1183]
	align 8
; ------------------------------ label
L1183:
; ------------------------------ jumplabel
	dq L1180	; 1
; ------------------------------ jumplabel
	dq L1174	; 2
; ------------------------------ jumplabel
	dq L1174	; 3
; ------------------------------ jumplabel
	dq L1174	; 4
; ------------------------------ jumplabel
	dq L1174	; 5
; ------------------------------ jumplabel
	dq L1174	; 6
; ------------------------------ jumplabel
	dq L1174	; 7
; ------------------------------ jumplabel
	dq L1174	; 8
; ------------------------------ jumplabel
	dq L1174	; 9
; ------------------------------ jumplabel
	dq L1174	; 10
; ------------------------------ jumplabel
	dq L1174	; 11
; ------------------------------ jumplabel
	dq L1174	; 12
; ------------------------------ jumplabel
	dq L1174	; 13
; ------------------------------ jumplabel
	dq L1174	; 14
; ------------------------------ jumplabel
	dq L1174	; 15
; ------------------------------ jumplabel
	dq L1174	; 16
; ------------------------------ jumplabel
	dq L1174	; 17
; ------------------------------ jumplabel
	dq L1174	; 18
; ------------------------------ jumplabel
	dq L1174	; 19
; ------------------------------ jumplabel
	dq L1174	; 20
; ------------------------------ jumplabel
	dq L1174	; 21
; ------------------------------ jumplabel
	dq L1174	; 22
; ------------------------------ jumplabel
	dq L1174	; 23
; ------------------------------ jumplabel
	dq L1181	; 24
; ------------------------------ jumplabel
	dq L1174	; 25
; ------------------------------ jumplabel
	dq L1174	; 26
; ------------------------------ jumplabel
	dq L1174	; 27
; ------------------------------ jumplabel
	dq L1174	; 28
; ------------------------------ jumplabel
	dq L1174	; 29
; ------------------------------ jumplabel
	dq L1174	; 30
; ------------------------------ jumplabel
	dq L1178	; 31
; ------------------------------ jumplabel
	dq L1174	; 32
; ------------------------------ jumplabel
	dq L1174	; 33
; ------------------------------ jumplabel
	dq L1174	; 34
; ------------------------------ jumplabel
	dq L1174	; 35
; ------------------------------ jumplabel
	dq L1174	; 36
; ------------------------------ jumplabel
	dq L1174	; 37
; ------------------------------ jumplabel
	dq L1174	; 38
; ------------------------------ jumplabel
	dq L1174	; 39
; ------------------------------ jumplabel
	dq L1176	; 40
; ------------------------------ jumplabel
	dq L1174	; 41
; ------------------------------ jumplabel
	dq L1174	; 42
; ------------------------------ jumplabel
	dq L1174	; 43
; ------------------------------ jumplabel
	dq L1174	; 44
; ------------------------------ jumplabel
	dq L1174	; 45
; ------------------------------ jumplabel
	dq L1174	; 46
; ------------------------------ jumplabel
	dq L1174	; 47
; ------------------------------ jumplabel
	dq L1174	; 48
; ------------------------------ jumplabel
	dq L1174	; 49
; ------------------------------ jumplabel
	dq L1174	; 50
; ------------------------------ jumplabel
	dq L1174	; 51
; ------------------------------ jumplabel
	dq L1174	; 52
; ------------------------------ jumplabel
	dq L1174	; 53
; ------------------------------ jumplabel
	dq L1174	; 54
; ------------------------------ jumplabel
	dq L1174	; 55
; ------------------------------ jumplabel
	dq L1182	; 56
; ------------------------------ jumplabel
	dq L1174	; 57
; ------------------------------ jumplabel
	dq L1174	; 58
; ------------------------------ jumplabel
	dq L1174	; 59
; ------------------------------ jumplabel
	dq L1174	; 60
; ------------------------------ jumplabel
	dq L1174	; 61
; ------------------------------ jumplabel
	dq L1174	; 62
; ------------------------------ jumplabel
	dq L1179	; 63
; ------------------------------ jumplabel
	dq L1174	; 64
; ------------------------------ jumplabel
	dq L1174	; 65
; ------------------------------ jumplabel
	dq L1174	; 66
; ------------------------------ jumplabel
	dq L1174	; 67
; ------------------------------ jumplabel
	dq L1174	; 68
; ------------------------------ jumplabel
	dq L1174	; 69
; ------------------------------ jumplabel
	dq L1174	; 70
; ------------------------------ jumplabel
	dq L1174	; 71
; ------------------------------ jumplabel
	dq L1177	; 72
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L1180:
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L1181:
; ------------------------------ stmt
; ------------------------------ comment
;case 101:
; ------------------------------ label
L1182:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe-40]	; p -40  
	sub D0,D1
	mov [Dframe-184],D0	; T17  
; ------------------------------ truncate
	mov D0,[Dframe-184]	; T17  
	mov A0,A0
	mov [Dframe-176],A0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pstart 16  
	mov D11,[Dframe-40]	; p -40  
	mov A12,[Dframe-176]	; T16  
	mov A13,10
	call readrealnumber
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L1167
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1175
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L1178:
; ------------------------------ stmt
; ------------------------------ comment
;case 108:
; ------------------------------ label
L1179:
; ------------------------------ stmt
; ------------------------------ incrto
	inc byte [Dframe-25]	; ll -25  
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-25]	; ll -25  
	mov dword[Dframe-192],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T18  
	cmp A0,2
	jle L1184
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK270
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1184:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1175
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L1176:
; ------------------------------ stmt
; ------------------------------ comment
;case 117:
; ------------------------------ label
L1177:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-26]	; usigned -26  
	mov dword[Dframe-200],A0	; T19  
; ------------------------------ jumpfalse
	mov A0,[Dframe-200]	; T19  
	and A0,A0
	jz L1185
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK271
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1185:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-26],B0	; usigned -26  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1175
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1174:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; c -12  
	mov qword[Dframe-224],D0	; T22  
; ------------------------------ index
	lea D0,[alphamap]
	mov D1,[Dframe-224]	; T22  
	mov B0, [D0+D1]
	mov [Dframe-216],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T21  
	mov dword[Dframe-232],A0	; T23  
; ------------------------------ truncate
	mov A0,[Dframe-232]	; T23  
	and D0,255
	mov [Dframe-208],B0	; T20  
; ------------------------------ jumpfalse
	mov B0,[Dframe-208]	; T20  
	and B0,B0
	jz L1186
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pstart 16  
	call readalphanumeric
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L1167
; ------------------------------ label
L1186:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L29
; ------------------------------ label
L1175:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L28
; ------------------------------ stmt
; ------------------------------ label
L29: ;<L186>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-248],D0	; T25  
; ------------------------------ indexlv
	mov D0,[Dframe-248]	; T25  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-240],D0	; T24  
; ------------------------------ sub
	mov D0,[Dframe+16]	; pstart 16  
	mov D1,[lxstart]
	sub D0,D1
	mov [Dframe-264],D0	; T27  
; ------------------------------ truncate
	mov D0,[Dframe-264]	; T27  
	mov A0,A0
	mov [Dframe-256],A0	; T26  
; ------------------------------ move
	mov A0,[Dframe-256]	; T26  
	mov D13,[Dframe-240]	; T24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-280],D0	; T29  
; ------------------------------ indexlv
	mov D0,[Dframe-280]	; T29  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T28  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe+16]	; pstart 16  
	sub D0,D1
	mov [Dframe-296],D0	; T31  
; ------------------------------ truncate
	mov D0,[Dframe-296]	; T31  
	mov A0,A0
	mov [Dframe-288],A0	; T30  
; ------------------------------ move
	mov A0,[Dframe-288]	; T30  
	mov D13,[Dframe-272]	; T28 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; length -16  
	cmp A0,20
	jg L1188
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; length -16  
	cmp A0,20
	jnz L1187
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; p -40  
	mov D11,KK272
	mov D12,20
	call strncmp
	mov [Dframe-304],A0	; T32  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-304]	; T32  
	mov [Dframe-20],A0	; res -20  
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; res -20  
	cmp A0,0
	jle L1187
; ------------------------------ label
L1188:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK273
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1187:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-16]	; length -16  
	mov [Dframe-44],A0	; av_8 -44  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1189
; ------------------------------ label
L1191:
; ------------------------------ stmt
; ------------------------------ mul
	mov D0,[Dframe-8]	; aa -8  
	mov D1,10
	mul D1
	mov [Dframe-312],D0	; T33  
; ------------------------------ postincrx
	mov D0,[Dframe-40]	; p -40  
	inc qword[Dframe-40]	; p -40  
	mov qword[Dframe-336],D0	; T36  
; ------------------------------ getptr
	mov D0,[Dframe-336]	; T36  
	mov B0, [D0]
	mov [Dframe-328],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-328]	; T35  
	mov dword[Dframe-344],A0	; T37  
; ------------------------------ widen
	movsx D0,dword[Dframe-344]	; T37  
	mov qword[Dframe-320],D0	; T34  
; ------------------------------ add
	mov D0,[Dframe-312]	; T33  
	mov D1,[Dframe-320]	; T34  
	add D0,D1
	mov [Dframe-352],D0	; T38  
; ------------------------------ sub
	mov D0,[Dframe-352]	; T38  
	mov D1,48
	sub D0,D1
	mov [Dframe-8],D0	; aa -8  
; ------------------------------ label
L1189:
; ------------------------------ postdecrx
	mov A0,[Dframe-44]	; av_8 -44  
	dec dword[Dframe-44]	; av_8 -44  
	mov dword[Dframe-360],A0	; T39  
; ------------------------------ jumptrue
	mov A0,[Dframe-360]	; T39  
	and A0,A0
	jnz L1191
; ------------------------------ label
L1190:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-376],D0	; T41  
; ------------------------------ indexlv
	mov D0,[Dframe-376]	; T41  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-368],D0	; T40  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-368]	; T40 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-392],D0	; T43  
; ------------------------------ indexlv
	mov D0,[Dframe-392]	; T43  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-384],D0	; T42  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-384]	; T42 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-25]	; ll -25  
	mov dword[Dframe-400],A0	; T44  
; ------------------------------ jumpcc
	mov A0,[Dframe-400]	; T44  
	cmp A0,0
	jz L1193
; ------------------------------ widen
	movzx A0,byte [Dframe-25]	; ll -25  
	mov dword[Dframe-408],A0	; T45  
; ------------------------------ jumpcc
	mov A0,[Dframe-408]	; T45  
	cmp A0,1
	jnz L1192
; ------------------------------ label
L1193:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-26]	; usigned -26  
	mov dword[Dframe-416],A0	; T46  
; ------------------------------ jumpfalse
	mov A0,[Dframe-416]	; T46  
	and A0,A0
	jz L1194
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; aa -8  
	cmp D0,[RR13]
	jb L1195
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-432],D0	; T48  
; ------------------------------ indexlv
	mov D0,[Dframe-432]	; T48  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-424],D0	; T47  
; ------------------------------ move
	mov A0,10
	mov D13,[Dframe-424]	; T47 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1196
; ------------------------------ label
L1195:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-448],D0	; T50  
; ------------------------------ indexlv
	mov D0,[Dframe-448]	; T50  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-440],D0	; T49  
; ------------------------------ move
	mov A0,9
	mov D13,[Dframe-440]	; T49 *
	mov byte [D13],B0
; ------------------------------ label
L1196:
; ------------------------------ jump
	jmp	L1197
; ------------------------------ label
L1194:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; aa -8  
	cmp D0,[RR14]
	jb L1198
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-464],D0	; T52  
; ------------------------------ indexlv
	mov D0,[Dframe-464]	; T52  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-456],D0	; T51  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-456]	; T51 *
	mov byte [D13],B0
; ------------------------------ label
L1198:
; ------------------------------ label
L1197:
; ------------------------------ jump
	jmp	L1199
; ------------------------------ label
L1192:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-26]	; usigned -26  
	mov dword[Dframe-472],A0	; T53  
; ------------------------------ jumpfalse
	mov A0,[Dframe-472]	; T53  
	and A0,A0
	jz L1200
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-488],D0	; T55  
; ------------------------------ indexlv
	mov D0,[Dframe-488]	; T55  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-480],D0	; T54  
; ------------------------------ move
	mov A0,10
	mov D13,[Dframe-480]	; T54 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1201
; ------------------------------ label
L1200:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-504],D0	; T57  
; ------------------------------ indexlv
	mov D0,[Dframe-504]	; T57  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-496],D0	; T56  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-496]	; T56 *
	mov byte [D13],B0
; ------------------------------ label
L1201:
; ------------------------------ label
L1199:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-520],D0	; T59  
; ------------------------------ indexlv
	mov D0,[Dframe-520]	; T59  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-512],D0	; T58  
; ------------------------------ softconv
	mov D0,[Dframe-8]	; aa -8  
	mov [Dframe-528],D0	; T60  
; ------------------------------ move
	mov D0,[Dframe-528]	; T60  
	mov D13,[Dframe-512]	; T58 *
	mov qword[D13],D0
; ------------------------------ label
L1167:
; ------------------------------ hardret
	add Dstack, 528
	pop Dframe
	ret
;	End

;	Proc:checknumbersuffix
checknumbersuffix:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ label
L30: ;<L192>
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ getptr
	mov D0,[Dframe-24]	; T2  
	mov B0, [D0]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-32]	; T3  
	mov [Dframe-1],B0	; c -1  
; ------------------------------ switch
	mov B0,[Dframe-1]	; c -1  
	sub A0, 76
	cmp A0, 42
	jae L1203
	jmp [A0*8+L1209]
	align 8
; ------------------------------ label
L1209:
; ------------------------------ jumplabel
	dq L1205	; 1
; ------------------------------ jumplabel
	dq L1203	; 2
; ------------------------------ jumplabel
	dq L1203	; 3
; ------------------------------ jumplabel
	dq L1203	; 4
; ------------------------------ jumplabel
	dq L1203	; 5
; ------------------------------ jumplabel
	dq L1203	; 6
; ------------------------------ jumplabel
	dq L1203	; 7
; ------------------------------ jumplabel
	dq L1203	; 8
; ------------------------------ jumplabel
	dq L1203	; 9
; ------------------------------ jumplabel
	dq L1208	; 10
; ------------------------------ jumplabel
	dq L1203	; 11
; ------------------------------ jumplabel
	dq L1203	; 12
; ------------------------------ jumplabel
	dq L1203	; 13
; ------------------------------ jumplabel
	dq L1203	; 14
; ------------------------------ jumplabel
	dq L1203	; 15
; ------------------------------ jumplabel
	dq L1203	; 16
; ------------------------------ jumplabel
	dq L1203	; 17
; ------------------------------ jumplabel
	dq L1203	; 18
; ------------------------------ jumplabel
	dq L1203	; 19
; ------------------------------ jumplabel
	dq L1203	; 20
; ------------------------------ jumplabel
	dq L1203	; 21
; ------------------------------ jumplabel
	dq L1203	; 22
; ------------------------------ jumplabel
	dq L1203	; 23
; ------------------------------ jumplabel
	dq L1203	; 24
; ------------------------------ jumplabel
	dq L1203	; 25
; ------------------------------ jumplabel
	dq L1203	; 26
; ------------------------------ jumplabel
	dq L1203	; 27
; ------------------------------ jumplabel
	dq L1203	; 28
; ------------------------------ jumplabel
	dq L1203	; 29
; ------------------------------ jumplabel
	dq L1203	; 30
; ------------------------------ jumplabel
	dq L1203	; 31
; ------------------------------ jumplabel
	dq L1203	; 32
; ------------------------------ jumplabel
	dq L1206	; 33
; ------------------------------ jumplabel
	dq L1203	; 34
; ------------------------------ jumplabel
	dq L1203	; 35
; ------------------------------ jumplabel
	dq L1203	; 36
; ------------------------------ jumplabel
	dq L1203	; 37
; ------------------------------ jumplabel
	dq L1203	; 38
; ------------------------------ jumplabel
	dq L1203	; 39
; ------------------------------ jumplabel
	dq L1203	; 40
; ------------------------------ jumplabel
	dq L1203	; 41
; ------------------------------ jumplabel
	dq L1207	; 42
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L1205:
; ------------------------------ stmt
; ------------------------------ comment
;case 108:
; ------------------------------ label
L1206:
; ------------------------------ stmt
; ------------------------------ comment
;case 117:
; ------------------------------ label
L1207:
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L1208:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1204
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1203:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-1]	; c -1  
	mov dword[Dframe-72],A0	; T8  
; ------------------------------ truncate
	mov A0,[Dframe-72]	; T8  
	and D0,255
	mov [Dframe-64],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T7  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[alphamap]
	mov D1,[Dframe-56]	; T6  
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T5  
	mov dword[Dframe-80],A0	; T9  
; ------------------------------ truncate
	mov A0,[Dframe-80]	; T9  
	and D0,255
	mov [Dframe-40],B0	; T4  
; ------------------------------ jumpfalse
	mov B0,[Dframe-40]	; T4  
	and B0,B0
	jz L1210
; ------------------------------ stmt
; ------------------------------ label
L1210:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L31
; ------------------------------ label
L1204:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L30
; ------------------------------ stmt
; ------------------------------ label
L31: ;<L193>
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,4
	jmp L1202
; ------------------------------ label
L1202:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:stacksourcefile
stacksourcefile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 240

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; file 16  
	mov A11,[Dframe+24]	; syshdr 24  
	call getsourcefile
	mov [Dframe-48],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T1  
	mov [Dframe-12],A0	; fileno -12  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; fileno -12  
	cmp A0,0
	jnz L1212
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK274
	mov D11,[Dframe+16]	; file 16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK275
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1212:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; fileno -12  
	mov qword[Dframe-64],D0	; T3  
; ------------------------------ index
	lea D0,[sourcefilesizes]
	mov D1,[Dframe-64]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T2  
; ------------------------------ addto
	mov A0,[NALLCHARS]
	mov A1,[Dframe-56]	; T2  
	add A0,A1
	mov [NALLCHARS],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[lx_stackindex]
	cmp A0,20
	jle L1213
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK276
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1213:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[lx_stackindex]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; info -40  
	mov [Dframe-80],D0	; T5  
; ------------------------------ indexlv
	mov D0,[Dframe-80]	; T5  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T4  
; ------------------------------ move
	mov D0,[lxstart]
	mov D13,[Dframe-72]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; info -40  
	mov [Dframe-96],D0	; T7  
; ------------------------------ indexlv
	mov D0,[Dframe-96]	; T7  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T6  
; ------------------------------ move
	mov D0,[lxsptr]
	mov D13,[Dframe-88]	; T6 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; info -40  
	mov [Dframe-112],D0	; T9  
; ------------------------------ indexlv
	mov D0,[Dframe-112]	; T9  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T8  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-128],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-128]	; T11  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-120]	; T10  
	mov D13,[Dframe-104]	; T8 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; info -40  
	mov [Dframe-144],D0	; T13  
; ------------------------------ indexlv
	mov D0,[Dframe-144]	; T13  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T12  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-160],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe-160]	; T15  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-152],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-152]	; T14  
	mov dword[Dframe-168],A0	; T16  
; ------------------------------ move
	mov A0,[Dframe-168]	; T16  
	mov D13,[Dframe-136]	; T12 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[lx_stackindex]
	mov A1,1
	sub A0,A1
	mov [Dframe-192],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-192]	; T19  
	mov qword[Dframe-184],D0	; T18  
; ------------------------------ indexlv
	lea D0,[lx_stack]
	mov D1,[Dframe-184]	; T18  
	imul D1,24
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T17  
; ------------------------------ move
	mov D10,[Dframe-176]	; T17  
	lea D11,[Dframe-40]	; info -40  
	mov D12,24
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; fileno -12  
	mov qword[Dframe-200],D0	; T20  
; ------------------------------ index
	lea D0,[sourcefiletext]
	mov D1,[Dframe-200]	; T20  
	mov D0, [D0+D1*8]
	mov [lxsptr],D0
; ------------------------------ move
	mov D0,[lxsptr]
	mov [lxstart],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-216],D0	; T22  
; ------------------------------ indexlv
	mov D0,[Dframe-216]	; T22  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T21  
; ------------------------------ move
	mov A0,[Dframe-12]	; fileno -12  
	mov D13,[Dframe-208]	; T21 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-232],D0	; T24  
; ------------------------------ indexlv
	mov D0,[Dframe-232]	; T24  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T23  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-224]	; T23 *
	mov dword[D13],A0
; ------------------------------ label
L1211:
; ------------------------------ hardret
	add Dstack, 240
	pop Dframe
	ret
;	End

;	Proc:unstacksourcefile
unstacksourcefile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

; ------------------------------ stmt
; ------------------------------ postdecrx
	mov A0,[lx_stackindex]
	dec dword[lx_stackindex]
	mov dword[Dframe-40],A0	; T2  
; ------------------------------ sub
	mov A0,[Dframe-40]	; T2  
	mov A1,1
	sub A0,A1
	mov [Dframe-48],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T3  
	mov qword[Dframe-32],D0	; T1  
; ------------------------------ index
	lea D0,[lx_stack]
	mov D1,[Dframe-32]	; T1  
	imul D1,24
	lea D11, [D0+D1]
	lea D10,[Dframe-24]	; info -24  
	mov D12,24
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-24]	; info -24  
	mov [Dframe-56],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-56]	; T4  
	mov A1,0
	mov D0, [D0+D1]
	mov [lxstart],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-24]	; info -24  
	mov [Dframe-64],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-64]	; T5  
	mov A1,8
	mov D0, [D0+D1]
	mov [lxsptr],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-80],D0	; T7  
; ------------------------------ indexlv
	mov D0,[Dframe-80]	; T7  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ getaddr
	lea D0,[Dframe-24]	; info -24  
	mov [Dframe-96],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-96]	; T9  
	mov A1,16
	mov A0, [D0+D1]
	mov [Dframe-88],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-88]	; T8  
	mov D13,[Dframe-72]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-112],D0	; T11  
; ------------------------------ indexlv
	mov D0,[Dframe-112]	; T11  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T10  
; ------------------------------ getaddr
	lea D0,[Dframe-24]	; info -24  
	mov [Dframe-128],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-128]	; T13  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-120]	; T12  
	mov D13,[Dframe-104]	; T10 *
	mov byte [D13],B0
; ------------------------------ label
L1214:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:getsourcefile
	segment .bss
getsourcefile.filespec:	resb 300
	segment .text
getsourcefile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-12],A0	; i -12  
; ------------------------------ jump
	jmp	L1218
; ------------------------------ label
L1219:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; i -12  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-32]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-24],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; file 16  
	mov D11,[Dframe-24]	; T1  
	call strcmp
	mov [Dframe-40],A0	; T3  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,0
	jnz L1220
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-12]	; i -12  
	jmp L1215
; ------------------------------ label
L1220:
; ------------------------------ label
L1216:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-12]	; i -12  
; ------------------------------ label
L1218:
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; i -12  
	cmp A0,[nsourcefiles]
	jle L1219
; ------------------------------ label
L1217:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[dointheaders]
	and A0,A0
	jz L1221
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; file 16  
	call findheader
	mov [Dframe-48],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T4  
	mov [Dframe-8],D0	; hdrtext -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; hdrtext -8  
	and D0,D0
	jz L1222
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; file 16  
	mov D11,[Dframe-8]	; hdrtext -8  
	call loadbuiltin
	mov [Dframe-56],A0	; T5  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-56]	; T5  
	jmp L1215
; ------------------------------ label
L1222:
; ------------------------------ label
L1221:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-12],A0	; i -12  
; ------------------------------ jump
	jmp	L1225
; ------------------------------ label
L1226:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getsourcefile.filespec]
	mov [Dframe-64],D0	; T6  
; ------------------------------ sub
	mov A0,[Dframe-12]	; i -12  
	mov A1,1
	sub A0,A1
	mov [Dframe-88],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T9  
	mov qword[Dframe-80],D0	; T8  
; ------------------------------ index
	lea D0,[searchdirs]
	mov D1,[Dframe-80]	; T8  
	mov D0, [D0+D1*8]
	mov [Dframe-72],D0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-64]	; T6  
	mov D11,[Dframe-72]	; T7  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getsourcefile.filespec]
	mov [Dframe-96],D0	; T10  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-96]	; T10  
	mov D11,[Dframe+16]	; file 16  
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getsourcefile.filespec]
	mov [Dframe-104],D0	; T11  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-104]	; T11  
	call checkfile
	mov [Dframe-112],A0	; T12  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-112]	; T12  
	and A0,A0
	jz L1227
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getsourcefile.filespec]
	mov [Dframe-120],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-120]	; T13  
	mov D11,[Dframe+16]	; file 16  
	call loadsourcefile
	mov [Dframe-128],A0	; T14  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-128]	; T14  
	jmp L1215
; ------------------------------ label
L1227:
; ------------------------------ label
L1223:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-12]	; i -12  
; ------------------------------ label
L1225:
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; i -12  
	cmp A0,[nsearchdirs]
	jle L1226
; ------------------------------ label
L1224:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1215
; ------------------------------ label
L1215:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

	global lex
;	Proc:lex
lex:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

; ------------------------------ stmt
; ------------------------------ move
	lea D10,[lx]
	lea D11,[nextlx]
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-16],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-16]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,65
	jnz L1229
; ------------------------------ jumpcc
	mov A0,[lx_stackindex]
	cmp A0,0
	jnz L1229
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-56]	; T7  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-48]	; T6  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T5  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-80],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-80]	; T10  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T9  
	mov qword[Dframe-64],D0	; T8  
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; T5  
	mov D1,[Dframe-64]	; T8  
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-32]	; T4 *
	mov byte [D13],B0
; ------------------------------ label
L1229:
; ------------------------------ stmt
; ------------------------------ label
L32: ;<L202>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-96]	; T12  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T11  
	mov dword[Dframe-104],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T13  
	cmp A0,65
	jnz L1230
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-120],D0	; T15  
; ------------------------------ indexlv
	mov D0,[Dframe-120]	; T15  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T14  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-144],D0	; T18  
; ------------------------------ index
	mov D0,[Dframe-144]	; T18  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-136],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-136]	; T17  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T16  
; ------------------------------ move
	mov B0,[Dframe-128]	; T16  
	mov D13,[Dframe-112]	; T14 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-160],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-160]	; T20  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-152],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-152]	; T19  
	mov dword[Dframe-168],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T21  
	cmp A0,66
	jnz L1231
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-184],D0	; T23  
; ------------------------------ indexlv
	mov D0,[Dframe-184]	; T23  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T22  
; ------------------------------ move
	mov A0,65
	mov D13,[Dframe-176]	; T22 *
	mov byte [D13],B0
; ------------------------------ label
L1231:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-200],D0	; T25  
; ------------------------------ indexlv
	mov D0,[Dframe-200]	; T25  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-192],D0	; T24  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-224],D0	; T28  
; ------------------------------ index
	mov D0,[Dframe-224]	; T28  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-216],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-216]	; T27  
	mov A1,108
	mov W0, [D0+D1]
	mov [Dframe-208],W0	; T26  
; ------------------------------ move
	mov W0,[Dframe-208]	; T26  
	mov D13,[Dframe-192]	; T24 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L1228
; ------------------------------ jump
	jmp	L1232
; ------------------------------ label
L1230:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-240],D0	; T30  
; ------------------------------ index
	mov D0,[Dframe-240]	; T30  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-232],B0	; T29  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T29  
	mov dword[Dframe-248],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T31  
	cmp A0,54
	jnz L1233
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ jump
	jmp	L1234
; ------------------------------ label
L1233:
; ------------------------------ stmt
; ------------------------------ return
	jmp L1228
; ------------------------------ label
L1234:
; ------------------------------ label
L1232:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L32
; ------------------------------ label
L1228:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

;	Proc:shownumberstr
shownumberstr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; l 16  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-32],A0	; T2  
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; T2  
	and A0,A0
	jz L1236
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; l 16  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T6  
	mov qword[Dframe-48],D0	; T4  
; ------------------------------ index
	lea D0,[sourcefiletext]
	mov D1,[Dframe-48]	; T4  
	mov D0, [D0+D1*8]
	mov [Dframe-40],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; l 16  
	mov A1,28
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T8  
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ indexref
	mov D0,[Dframe-40]	; T3  
	mov D1,[Dframe-72]	; T7  
	lea D0, [D0+D1]
	mov [Dframe-8],D0	; s -8  
; ------------------------------ jump
	jmp	L1237
; ------------------------------ label
L1236:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; l 16  
	mov A1,28
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; T10  
; ------------------------------ sub
	mov A0,[Dframe-96]	; T10  
	mov A1,1
	sub A0,A1
	mov [Dframe-104],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T11  
	mov qword[Dframe-88],D0	; T9  
; ------------------------------ index
	lea D0,[pastedtokenlist]
	mov D1,[Dframe-88]	; T9  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; s -8  
; ------------------------------ label
L1237:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; l 16  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-112],A0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; s -8  
	mov A11,[Dframe-112]	; T12  
	mov D12,[Dframe+24]	; f 24  
	call printstrn
	add Dstack, 32
; ------------------------------ label
L1235:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global addnamestr
;	Proc:addnamestr
addnamestr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	lea D10,[Dframe-32]	; oldlx -32  
	lea D11,[nextlx]
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-56],D0	; T2  
; ------------------------------ indexlv
	mov D0,[Dframe-56]	; T2  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; name 16  
	call strlen
	mov [Dframe-72],D0	; T4  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-72]	; T4  
	mov A0,A0
	mov [Dframe-64],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-64]	; T3  
	mov D13,[Dframe-48]	; T1 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-88],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-88]	; T6  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; name 16  
	mov A11,[Dframe-80]	; T5  
	call gethashvalue
	mov [Dframe-96],A0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-96]	; T7  
	mov [lxhashvalue],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-112],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-112]	; T9  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-104],A0	; T8  
; ------------------------------ add
	mov A0,[Dframe-104]	; T8  
	mov A1,1
	add A0,A1
	mov [Dframe-120],A0	; T10  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-120]	; T10  
	call pcm_alloc
	mov [Dframe-128],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-128]	; T11  
	mov [lxsvalue],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-168],D0	; T16  
; ------------------------------ index
	mov D0,[Dframe-168]	; T16  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T15  
; ------------------------------ add
	mov A0,[Dframe-160]	; T15  
	mov A1,1
	add A0,A1
	mov [Dframe-176],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-176]	; T17  
	mov qword[Dframe-152],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[lxsvalue]
	mov D11,[Dframe+16]	; name 16  
	mov D12,[Dframe-152]	; T14  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lookup
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-184],D0	; T18  
; ------------------------------ index
	mov D0,[Dframe-184]	; T18  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; symptr -40  
; ------------------------------ stmt
; ------------------------------ move
	lea D10,[nextlx]
	lea D11,[Dframe-32]	; oldlx -32  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-40]	; symptr -40  
	jmp L1238
; ------------------------------ label
L1238:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

	global getstname
;	Proc:getstname
	segment .bss
getstname.name:	resb 256
	segment .text
getstname:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getstname.name]
	mov [Dframe-8],D0	; T1  
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T5  
	mov dword[Dframe-48],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T6  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	mov D11,[Dframe-24]	; T3  
	mov D12,[Dframe-32]	; T4  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T9  
	mov dword[Dframe-80],A0	; T10  
; ------------------------------ add
	mov A0,[Dframe-80]	; T10  
	mov A1,1
	add A0,A1
	mov [Dframe-88],A0	; T11  
; ------------------------------ sub
	mov A0,[Dframe-88]	; T11  
	mov A1,1
	sub A0,A1
	mov [Dframe-96],A0	; T12  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T12  
	mov qword[Dframe-64],D0	; T8  
; ------------------------------ indexlv
	lea D0,[getstname.name]
	mov D1,[Dframe-64]	; T8  
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T7  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-56]	; T7 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getstname.name]
	mov [Dframe-104],D0	; T13  
; ------------------------------ returnx
	mov D0,[Dframe-104]	; T13  
	jmp L1239
; ------------------------------ label
L1239:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:lxreadstring
lxreadstring:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1536

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; termchar 16  
	cmp A0,34
	jnz L1241
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1072],D0	; T2  
; ------------------------------ indexlv
	mov D0,[Dframe-1072]	; T2  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1064],D0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; fwide 24  
	and A0,A0
	jz L1242
; ------------------------------ move
	mov A0,62
	mov [Dframe-1080],A0	; T3  
; ------------------------------ jump
	jmp	L1243
; ------------------------------ label
L1242:
; ------------------------------ move
	mov A0,61
	mov [Dframe-1080],A0	; T3  
; ------------------------------ label
L1243:
; ------------------------------ move
	mov A0,[Dframe-1080]	; T3  
	mov D13,[Dframe-1064]	; T1 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1244
; ------------------------------ label
L1241:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1096],D0	; T5  
; ------------------------------ indexlv
	mov D0,[Dframe-1096]	; T5  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1088],D0	; T4  
; ------------------------------ move
	mov A0,59
	mov D13,[Dframe-1088]	; T4 *
	mov byte [D13],B0
; ------------------------------ label
L1244:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1112],D0	; T7  
; ------------------------------ indexlv
	mov D0,[Dframe-1112]	; T7  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-1104],D0	; T6  
; ------------------------------ move
	mov D0,[lxsptr]
	mov D13,[Dframe-1104]	; T6 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[lx_stackindex]
	cmp A0,0
	jnz L1245
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [Dframe-1032],D0	; dest -1032  
; ------------------------------ jump
	jmp	L1246
; ------------------------------ label
L1245:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-1024]	; str -1024  
	mov [Dframe-1032],D0	; dest -1032  
; ------------------------------ label
L1246:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-1044],A0	; length -1044  
; ------------------------------ stmt
; ------------------------------ label
L33: ;<L206>
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1247
; ------------------------------ label
L1249:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-1128],D0	; T9  
; ------------------------------ getptr
	mov D0,[Dframe-1128]	; T9  
	mov B0, [D0]
	mov [Dframe-1120],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-1120]	; T8  
	mov dword[Dframe-1136],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-1136]	; T10  
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ switch
	mov A0,[Dframe-1036]	; c -1036  
	sub A0, 0
	cmp A0, 93
	jae L1250
	jmp [A0*8+L1257]
	align 8
; ------------------------------ label
L1257:
; ------------------------------ jumplabel
	dq L1253	; 1
; ------------------------------ jumplabel
	dq L1250	; 2
; ------------------------------ jumplabel
	dq L1250	; 3
; ------------------------------ jumplabel
	dq L1250	; 4
; ------------------------------ jumplabel
	dq L1250	; 5
; ------------------------------ jumplabel
	dq L1250	; 6
; ------------------------------ jumplabel
	dq L1250	; 7
; ------------------------------ jumplabel
	dq L1250	; 8
; ------------------------------ jumplabel
	dq L1250	; 9
; ------------------------------ jumplabel
	dq L1250	; 10
; ------------------------------ jumplabel
	dq L1252	; 11
; ------------------------------ jumplabel
	dq L1250	; 12
; ------------------------------ jumplabel
	dq L1250	; 13
; ------------------------------ jumplabel
	dq L1250	; 14
; ------------------------------ jumplabel
	dq L1250	; 15
; ------------------------------ jumplabel
	dq L1250	; 16
; ------------------------------ jumplabel
	dq L1250	; 17
; ------------------------------ jumplabel
	dq L1250	; 18
; ------------------------------ jumplabel
	dq L1250	; 19
; ------------------------------ jumplabel
	dq L1250	; 20
; ------------------------------ jumplabel
	dq L1250	; 21
; ------------------------------ jumplabel
	dq L1250	; 22
; ------------------------------ jumplabel
	dq L1250	; 23
; ------------------------------ jumplabel
	dq L1250	; 24
; ------------------------------ jumplabel
	dq L1250	; 25
; ------------------------------ jumplabel
	dq L1250	; 26
; ------------------------------ jumplabel
	dq L1250	; 27
; ------------------------------ jumplabel
	dq L1250	; 28
; ------------------------------ jumplabel
	dq L1250	; 29
; ------------------------------ jumplabel
	dq L1250	; 30
; ------------------------------ jumplabel
	dq L1250	; 31
; ------------------------------ jumplabel
	dq L1250	; 32
; ------------------------------ jumplabel
	dq L1250	; 33
; ------------------------------ jumplabel
	dq L1250	; 34
; ------------------------------ jumplabel
	dq L1254	; 35
; ------------------------------ jumplabel
	dq L1250	; 36
; ------------------------------ jumplabel
	dq L1250	; 37
; ------------------------------ jumplabel
	dq L1250	; 38
; ------------------------------ jumplabel
	dq L1250	; 39
; ------------------------------ jumplabel
	dq L1255	; 40
; ------------------------------ jumplabel
	dq L1250	; 41
; ------------------------------ jumplabel
	dq L1250	; 42
; ------------------------------ jumplabel
	dq L1250	; 43
; ------------------------------ jumplabel
	dq L1250	; 44
; ------------------------------ jumplabel
	dq L1250	; 45
; ------------------------------ jumplabel
	dq L1250	; 46
; ------------------------------ jumplabel
	dq L1250	; 47
; ------------------------------ jumplabel
	dq L1250	; 48
; ------------------------------ jumplabel
	dq L1250	; 49
; ------------------------------ jumplabel
	dq L1250	; 50
; ------------------------------ jumplabel
	dq L1250	; 51
; ------------------------------ jumplabel
	dq L1250	; 52
; ------------------------------ jumplabel
	dq L1250	; 53
; ------------------------------ jumplabel
	dq L1250	; 54
; ------------------------------ jumplabel
	dq L1250	; 55
; ------------------------------ jumplabel
	dq L1250	; 56
; ------------------------------ jumplabel
	dq L1250	; 57
; ------------------------------ jumplabel
	dq L1250	; 58
; ------------------------------ jumplabel
	dq L1250	; 59
; ------------------------------ jumplabel
	dq L1250	; 60
; ------------------------------ jumplabel
	dq L1250	; 61
; ------------------------------ jumplabel
	dq L1250	; 62
; ------------------------------ jumplabel
	dq L1250	; 63
; ------------------------------ jumplabel
	dq L1250	; 64
; ------------------------------ jumplabel
	dq L1250	; 65
; ------------------------------ jumplabel
	dq L1250	; 66
; ------------------------------ jumplabel
	dq L1250	; 67
; ------------------------------ jumplabel
	dq L1250	; 68
; ------------------------------ jumplabel
	dq L1250	; 69
; ------------------------------ jumplabel
	dq L1250	; 70
; ------------------------------ jumplabel
	dq L1250	; 71
; ------------------------------ jumplabel
	dq L1250	; 72
; ------------------------------ jumplabel
	dq L1250	; 73
; ------------------------------ jumplabel
	dq L1250	; 74
; ------------------------------ jumplabel
	dq L1250	; 75
; ------------------------------ jumplabel
	dq L1250	; 76
; ------------------------------ jumplabel
	dq L1250	; 77
; ------------------------------ jumplabel
	dq L1250	; 78
; ------------------------------ jumplabel
	dq L1250	; 79
; ------------------------------ jumplabel
	dq L1250	; 80
; ------------------------------ jumplabel
	dq L1250	; 81
; ------------------------------ jumplabel
	dq L1250	; 82
; ------------------------------ jumplabel
	dq L1250	; 83
; ------------------------------ jumplabel
	dq L1250	; 84
; ------------------------------ jumplabel
	dq L1250	; 85
; ------------------------------ jumplabel
	dq L1250	; 86
; ------------------------------ jumplabel
	dq L1250	; 87
; ------------------------------ jumplabel
	dq L1250	; 88
; ------------------------------ jumplabel
	dq L1250	; 89
; ------------------------------ jumplabel
	dq L1250	; 90
; ------------------------------ jumplabel
	dq L1250	; 91
; ------------------------------ jumplabel
	dq L1250	; 92
; ------------------------------ jumplabel
	dq L1256	; 93
; ------------------------------ stmt
; ------------------------------ comment
;case 92:
; ------------------------------ label
L1256:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-1152],D0	; T12  
; ------------------------------ getptr
	mov D0,[Dframe-1152]	; T12  
	mov B0, [D0]
	mov [Dframe-1144],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-1144]	; T11  
	mov dword[Dframe-1160],A0	; T13  
; ------------------------------ move
	mov A0,[Dframe-1160]	; T13  
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ switch
	mov A0,[Dframe-1036]	; c -1036  
	sub A0, 10
	cmp A0, 111
	jae L1258
	jmp [A0*8+L1281]
	align 8
; ------------------------------ label
L1281:
; ------------------------------ jumplabel
	dq L1260	; 1
; ------------------------------ jumplabel
	dq L1258	; 2
; ------------------------------ jumplabel
	dq L1258	; 3
; ------------------------------ jumplabel
	dq L1261	; 4
; ------------------------------ jumplabel
	dq L1258	; 5
; ------------------------------ jumplabel
	dq L1258	; 6
; ------------------------------ jumplabel
	dq L1258	; 7
; ------------------------------ jumplabel
	dq L1258	; 8
; ------------------------------ jumplabel
	dq L1258	; 9
; ------------------------------ jumplabel
	dq L1258	; 10
; ------------------------------ jumplabel
	dq L1258	; 11
; ------------------------------ jumplabel
	dq L1258	; 12
; ------------------------------ jumplabel
	dq L1258	; 13
; ------------------------------ jumplabel
	dq L1258	; 14
; ------------------------------ jumplabel
	dq L1258	; 15
; ------------------------------ jumplabel
	dq L1258	; 16
; ------------------------------ jumplabel
	dq L1258	; 17
; ------------------------------ jumplabel
	dq L1258	; 18
; ------------------------------ jumplabel
	dq L1258	; 19
; ------------------------------ jumplabel
	dq L1258	; 20
; ------------------------------ jumplabel
	dq L1258	; 21
; ------------------------------ jumplabel
	dq L1258	; 22
; ------------------------------ jumplabel
	dq L1258	; 23
; ------------------------------ jumplabel
	dq L1258	; 24
; ------------------------------ jumplabel
	dq L1264	; 25
; ------------------------------ jumplabel
	dq L1258	; 26
; ------------------------------ jumplabel
	dq L1258	; 27
; ------------------------------ jumplabel
	dq L1258	; 28
; ------------------------------ jumplabel
	dq L1258	; 29
; ------------------------------ jumplabel
	dq L1262	; 30
; ------------------------------ jumplabel
	dq L1258	; 31
; ------------------------------ jumplabel
	dq L1258	; 32
; ------------------------------ jumplabel
	dq L1258	; 33
; ------------------------------ jumplabel
	dq L1258	; 34
; ------------------------------ jumplabel
	dq L1258	; 35
; ------------------------------ jumplabel
	dq L1258	; 36
; ------------------------------ jumplabel
	dq L1258	; 37
; ------------------------------ jumplabel
	dq L1258	; 38
; ------------------------------ jumplabel
	dq L1265	; 39
; ------------------------------ jumplabel
	dq L1266	; 40
; ------------------------------ jumplabel
	dq L1267	; 41
; ------------------------------ jumplabel
	dq L1268	; 42
; ------------------------------ jumplabel
	dq L1269	; 43
; ------------------------------ jumplabel
	dq L1270	; 44
; ------------------------------ jumplabel
	dq L1271	; 45
; ------------------------------ jumplabel
	dq L1272	; 46
; ------------------------------ jumplabel
	dq L1258	; 47
; ------------------------------ jumplabel
	dq L1258	; 48
; ------------------------------ jumplabel
	dq L1258	; 49
; ------------------------------ jumplabel
	dq L1258	; 50
; ------------------------------ jumplabel
	dq L1258	; 51
; ------------------------------ jumplabel
	dq L1258	; 52
; ------------------------------ jumplabel
	dq L1258	; 53
; ------------------------------ jumplabel
	dq L1258	; 54
; ------------------------------ jumplabel
	dq L1258	; 55
; ------------------------------ jumplabel
	dq L1258	; 56
; ------------------------------ jumplabel
	dq L1258	; 57
; ------------------------------ jumplabel
	dq L1258	; 58
; ------------------------------ jumplabel
	dq L1258	; 59
; ------------------------------ jumplabel
	dq L1258	; 60
; ------------------------------ jumplabel
	dq L1258	; 61
; ------------------------------ jumplabel
	dq L1258	; 62
; ------------------------------ jumplabel
	dq L1258	; 63
; ------------------------------ jumplabel
	dq L1258	; 64
; ------------------------------ jumplabel
	dq L1258	; 65
; ------------------------------ jumplabel
	dq L1258	; 66
; ------------------------------ jumplabel
	dq L1258	; 67
; ------------------------------ jumplabel
	dq L1258	; 68
; ------------------------------ jumplabel
	dq L1258	; 69
; ------------------------------ jumplabel
	dq L1258	; 70
; ------------------------------ jumplabel
	dq L1258	; 71
; ------------------------------ jumplabel
	dq L1258	; 72
; ------------------------------ jumplabel
	dq L1258	; 73
; ------------------------------ jumplabel
	dq L1258	; 74
; ------------------------------ jumplabel
	dq L1258	; 75
; ------------------------------ jumplabel
	dq L1258	; 76
; ------------------------------ jumplabel
	dq L1258	; 77
; ------------------------------ jumplabel
	dq L1258	; 78
; ------------------------------ jumplabel
	dq L1258	; 79
; ------------------------------ jumplabel
	dq L1258	; 80
; ------------------------------ jumplabel
	dq L1258	; 81
; ------------------------------ jumplabel
	dq L1258	; 82
; ------------------------------ jumplabel
	dq L1263	; 83
; ------------------------------ jumplabel
	dq L1258	; 84
; ------------------------------ jumplabel
	dq L1258	; 85
; ------------------------------ jumplabel
	dq L1258	; 86
; ------------------------------ jumplabel
	dq L1258	; 87
; ------------------------------ jumplabel
	dq L1280	; 88
; ------------------------------ jumplabel
	dq L1279	; 89
; ------------------------------ jumplabel
	dq L1258	; 90
; ------------------------------ jumplabel
	dq L1258	; 91
; ------------------------------ jumplabel
	dq L1258	; 92
; ------------------------------ jumplabel
	dq L1278	; 93
; ------------------------------ jumplabel
	dq L1258	; 94
; ------------------------------ jumplabel
	dq L1258	; 95
; ------------------------------ jumplabel
	dq L1258	; 96
; ------------------------------ jumplabel
	dq L1258	; 97
; ------------------------------ jumplabel
	dq L1258	; 98
; ------------------------------ jumplabel
	dq L1258	; 99
; ------------------------------ jumplabel
	dq L1258	; 100
; ------------------------------ jumplabel
	dq L1277	; 101
; ------------------------------ jumplabel
	dq L1258	; 102
; ------------------------------ jumplabel
	dq L1258	; 103
; ------------------------------ jumplabel
	dq L1258	; 104
; ------------------------------ jumplabel
	dq L1276	; 105
; ------------------------------ jumplabel
	dq L1258	; 106
; ------------------------------ jumplabel
	dq L1275	; 107
; ------------------------------ jumplabel
	dq L1258	; 108
; ------------------------------ jumplabel
	dq L1274	; 109
; ------------------------------ jumplabel
	dq L1258	; 110
; ------------------------------ jumplabel
	dq L1273	; 111
; ------------------------------ stmt
; ------------------------------ comment
;case 97:
; ------------------------------ label
L1280:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,7
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 98:
; ------------------------------ label
L1279:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,8
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 102:
; ------------------------------ label
L1278:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,12
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 110:
; ------------------------------ label
L1277:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,10
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 114:
; ------------------------------ label
L1276:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,13
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 116:
; ------------------------------ label
L1275:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,9
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 118:
; ------------------------------ label
L1274:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,11
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 120:
; ------------------------------ label
L1273:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-1048],A0	; av_9 -1048  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1282
; ------------------------------ label
L1284:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-1176],D0	; T15  
; ------------------------------ getptr
	mov D0,[Dframe-1176]	; T15  
	mov B0, [D0]
	mov [Dframe-1168],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-1168]	; T14  
	mov dword[Dframe-1184],A0	; T16  
; ------------------------------ move
	mov A0,[Dframe-1184]	; T16  
	mov [Dframe-1040],A0	; d -1040  
; ------------------------------ switch
	mov A0,[Dframe-1040]	; d -1040  
	sub A0, 48
	cmp A0, 55
	jae L1285
	jmp [A0*8+L1309]
	align 8
; ------------------------------ label
L1309:
; ------------------------------ jumplabel
	dq L1287	; 1
; ------------------------------ jumplabel
	dq L1288	; 2
; ------------------------------ jumplabel
	dq L1289	; 3
; ------------------------------ jumplabel
	dq L1290	; 4
; ------------------------------ jumplabel
	dq L1291	; 5
; ------------------------------ jumplabel
	dq L1292	; 6
; ------------------------------ jumplabel
	dq L1293	; 7
; ------------------------------ jumplabel
	dq L1294	; 8
; ------------------------------ jumplabel
	dq L1295	; 9
; ------------------------------ jumplabel
	dq L1296	; 10
; ------------------------------ jumplabel
	dq L1285	; 11
; ------------------------------ jumplabel
	dq L1285	; 12
; ------------------------------ jumplabel
	dq L1285	; 13
; ------------------------------ jumplabel
	dq L1285	; 14
; ------------------------------ jumplabel
	dq L1285	; 15
; ------------------------------ jumplabel
	dq L1285	; 16
; ------------------------------ jumplabel
	dq L1285	; 17
; ------------------------------ jumplabel
	dq L1303	; 18
; ------------------------------ jumplabel
	dq L1304	; 19
; ------------------------------ jumplabel
	dq L1305	; 20
; ------------------------------ jumplabel
	dq L1306	; 21
; ------------------------------ jumplabel
	dq L1307	; 22
; ------------------------------ jumplabel
	dq L1308	; 23
; ------------------------------ jumplabel
	dq L1285	; 24
; ------------------------------ jumplabel
	dq L1285	; 25
; ------------------------------ jumplabel
	dq L1285	; 26
; ------------------------------ jumplabel
	dq L1285	; 27
; ------------------------------ jumplabel
	dq L1285	; 28
; ------------------------------ jumplabel
	dq L1285	; 29
; ------------------------------ jumplabel
	dq L1285	; 30
; ------------------------------ jumplabel
	dq L1285	; 31
; ------------------------------ jumplabel
	dq L1285	; 32
; ------------------------------ jumplabel
	dq L1285	; 33
; ------------------------------ jumplabel
	dq L1285	; 34
; ------------------------------ jumplabel
	dq L1285	; 35
; ------------------------------ jumplabel
	dq L1285	; 36
; ------------------------------ jumplabel
	dq L1285	; 37
; ------------------------------ jumplabel
	dq L1285	; 38
; ------------------------------ jumplabel
	dq L1285	; 39
; ------------------------------ jumplabel
	dq L1285	; 40
; ------------------------------ jumplabel
	dq L1285	; 41
; ------------------------------ jumplabel
	dq L1285	; 42
; ------------------------------ jumplabel
	dq L1285	; 43
; ------------------------------ jumplabel
	dq L1285	; 44
; ------------------------------ jumplabel
	dq L1285	; 45
; ------------------------------ jumplabel
	dq L1285	; 46
; ------------------------------ jumplabel
	dq L1285	; 47
; ------------------------------ jumplabel
	dq L1285	; 48
; ------------------------------ jumplabel
	dq L1285	; 49
; ------------------------------ jumplabel
	dq L1297	; 50
; ------------------------------ jumplabel
	dq L1298	; 51
; ------------------------------ jumplabel
	dq L1299	; 52
; ------------------------------ jumplabel
	dq L1300	; 53
; ------------------------------ jumplabel
	dq L1301	; 54
; ------------------------------ jumplabel
	dq L1302	; 55
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L1303:
; ------------------------------ stmt
; ------------------------------ comment
;case 66:
; ------------------------------ label
L1304:
; ------------------------------ stmt
; ------------------------------ comment
;case 67:
; ------------------------------ label
L1305:
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L1306:
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L1307:
; ------------------------------ stmt
; ------------------------------ comment
;case 70:
; ------------------------------ label
L1308:
; ------------------------------ stmt
; ------------------------------ mul
	mov A0,[Dframe-1036]	; c -1036  
	mov A1,16
	mul A1
	mov [Dframe-1192],A0	; T17  
; ------------------------------ add
	mov A0,[Dframe-1192]	; T17  
	mov A1,[Dframe-1040]	; d -1040  
	add A0,A1
	mov [Dframe-1200],A0	; T18  
; ------------------------------ sub
	mov A0,[Dframe-1200]	; T18  
	mov A1,65
	sub A0,A1
	mov [Dframe-1208],A0	; T19  
; ------------------------------ add
	mov A0,[Dframe-1208]	; T19  
	mov A1,10
	add A0,A1
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1286
; ------------------------------ stmt
; ------------------------------ comment
;case 97:
; ------------------------------ label
L1297:
; ------------------------------ stmt
; ------------------------------ comment
;case 98:
; ------------------------------ label
L1298:
; ------------------------------ stmt
; ------------------------------ comment
;case 99:
; ------------------------------ label
L1299:
; ------------------------------ stmt
; ------------------------------ comment
;case 100:
; ------------------------------ label
L1300:
; ------------------------------ stmt
; ------------------------------ comment
;case 101:
; ------------------------------ label
L1301:
; ------------------------------ stmt
; ------------------------------ comment
;case 102:
; ------------------------------ label
L1302:
; ------------------------------ stmt
; ------------------------------ mul
	mov A0,[Dframe-1036]	; c -1036  
	mov A1,16
	mul A1
	mov [Dframe-1216],A0	; T20  
; ------------------------------ add
	mov A0,[Dframe-1216]	; T20  
	mov A1,[Dframe-1040]	; d -1040  
	add A0,A1
	mov [Dframe-1224],A0	; T21  
; ------------------------------ sub
	mov A0,[Dframe-1224]	; T21  
	mov A1,97
	sub A0,A1
	mov [Dframe-1232],A0	; T22  
; ------------------------------ add
	mov A0,[Dframe-1232]	; T22  
	mov A1,10
	add A0,A1
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1286
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L1287:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L1288:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L1289:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L1290:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L1291:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L1292:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L1293:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L1294:
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L1295:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L1296:
; ------------------------------ stmt
; ------------------------------ mul
	mov A0,[Dframe-1036]	; c -1036  
	mov A1,16
	mul A1
	mov [Dframe-1240],A0	; T23  
; ------------------------------ add
	mov A0,[Dframe-1240]	; T23  
	mov A1,[Dframe-1040]	; d -1040  
	add A0,A1
	mov [Dframe-1248],A0	; T24  
; ------------------------------ sub
	mov A0,[Dframe-1248]	; T24  
	mov A1,48
	sub A0,A1
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1286
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1285:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK277
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1286:
; ------------------------------ label
L1282:
; ------------------------------ postdecrx
	mov A0,[Dframe-1048]	; av_9 -1048  
	dec dword[Dframe-1048]	; av_9 -1048  
	mov dword[Dframe-1256],A0	; T25  
; ------------------------------ jumptrue
	mov A0,[Dframe-1256]	; T25  
	and A0,A0
	jnz L1284
; ------------------------------ label
L1283:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L1265:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L1266:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L1267:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L1268:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L1269:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L1270:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L1271:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L1272:
; ------------------------------ stmt
; ------------------------------ subto
	mov A0,[Dframe-1036]	; c -1036  
	mov A1,48
	sub A0,A1
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-1052],A0	; av_10 -1052  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1310
; ------------------------------ label
L1312:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-1272],D0	; T27  
; ------------------------------ getptr
	mov D0,[Dframe-1272]	; T27  
	mov B0, [D0]
	mov [Dframe-1264],B0	; T26  
; ------------------------------ widen
	movzx A0,byte [Dframe-1264]	; T26  
	mov dword[Dframe-1280],A0	; T28  
; ------------------------------ move
	mov A0,[Dframe-1280]	; T28  
	mov [Dframe-1040],A0	; d -1040  
; ------------------------------ switch
	mov A0,[Dframe-1040]	; d -1040  
	sub A0, 48
	cmp A0, 8
	jae L1313
	jmp [A0*8+L1323]
	align 8
; ------------------------------ label
L1323:
; ------------------------------ jumplabel
	dq L1315	; 1
; ------------------------------ jumplabel
	dq L1316	; 2
; ------------------------------ jumplabel
	dq L1317	; 3
; ------------------------------ jumplabel
	dq L1318	; 4
; ------------------------------ jumplabel
	dq L1319	; 5
; ------------------------------ jumplabel
	dq L1320	; 6
; ------------------------------ jumplabel
	dq L1321	; 7
; ------------------------------ jumplabel
	dq L1322	; 8
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L1315:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L1316:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L1317:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L1318:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L1319:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L1320:
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L1321:
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L1322:
; ------------------------------ stmt
; ------------------------------ mul
	mov A0,[Dframe-1036]	; c -1036  
	mov A1,8
	mul A1
	mov [Dframe-1288],A0	; T29  
; ------------------------------ add
	mov A0,[Dframe-1288]	; T29  
	mov A1,[Dframe-1040]	; d -1040  
	add A0,A1
	mov [Dframe-1296],A0	; T30  
; ------------------------------ sub
	mov A0,[Dframe-1296]	; T30  
	mov A1,48
	sub A0,A1
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1314
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1313:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L34
; ------------------------------ label
L1314:
; ------------------------------ label
L1310:
; ------------------------------ postdecrx
	mov A0,[Dframe-1052]	; av_10 -1052  
	dec dword[Dframe-1052]	; av_10 -1052  
	mov dword[Dframe-1304],A0	; T31  
; ------------------------------ jumptrue
	mov A0,[Dframe-1304]	; T31  
	and A0,A0
	jnz L1312
; ------------------------------ label
L1311:
; ------------------------------ stmt
; ------------------------------ label
L34: ;<L213>
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 34:
; ------------------------------ label
L1264:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,34
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 92:
; ------------------------------ label
L1263:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,92
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L1262:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,39
	mov [Dframe-1036],A0	; c -1036  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 13:
; ------------------------------ label
L1261:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1320],D0	; T33  
; ------------------------------ indexlv
	mov D0,[Dframe-1320]	; T33  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-1312],D0	; T32  
; ------------------------------ incrto
	mov D13,[Dframe-1312]	; T32 *
	inc dword[D13]
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-1328],B0	; T34  
; ------------------------------ widen
	movzx A0,byte [Dframe-1328]	; T34  
	mov dword[Dframe-1336],A0	; T35  
; ------------------------------ jumpcc
	mov A0,[Dframe-1336]	; T35  
	cmp A0,10
	jnz L1324
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ label
L1324:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L33
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L1260:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L33
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1259
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1258:
; ------------------------------ label
L1259:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1251
; ------------------------------ stmt
; ------------------------------ comment
;case 34:
; ------------------------------ label
L1254:
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L1255:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-1036]	; c -1036  
	cmp A0,[Dframe+16]	; termchar 16  
	jnz L1325
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L35
; ------------------------------ label
L1325:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1251
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L1252:
; ------------------------------ stmt
; ------------------------------ comment
;case 0:
; ------------------------------ label
L1253:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1352],D0	; T37  
; ------------------------------ index
	mov D0,[Dframe-1352]	; T37  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-1344],A0	; T36  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK278
	mov D11,KK279
	mov A12,[Dframe-1344]	; T36  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK280
	call lxerror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1251
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1250:
; ------------------------------ label
L1251:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[lx_stackindex]
	cmp A0,0
	jnz L1326
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe-1032]	; dest -1032  
	inc qword[Dframe-1032]	; dest -1032  
	mov qword[Dframe-1368],D0	; T39  
; ------------------------------ move
	mov D0,[Dframe-1368]	; T39  
	mov [Dframe-1360],D0	; T38  
; ------------------------------ move
	mov A0,[Dframe-1036]	; c -1036  
	mov D13,[Dframe-1360]	; T38 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1327
; ------------------------------ label
L1326:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[Dframe-1044]	; length -1044  
	mov A0,dword[Dframe-1044]	; length -1044  
	mov dword[Dframe-1376],A0	; T40  
; ------------------------------ jumpcc
	mov A0,[Dframe-1376]	; T40  
	cmp A0,1024
	jge L1328
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe-1032]	; dest -1032  
	inc qword[Dframe-1032]	; dest -1032  
	mov qword[Dframe-1392],D0	; T42  
; ------------------------------ move
	mov D0,[Dframe-1392]	; T42  
	mov [Dframe-1384],D0	; T41  
; ------------------------------ move
	mov A0,[Dframe-1036]	; c -1036  
	mov D13,[Dframe-1384]	; T41 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1329
; ------------------------------ label
L1328:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK281
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1329:
; ------------------------------ label
L1327:
; ------------------------------ label
L1247:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L1249
; ------------------------------ label
L1248:
; ------------------------------ stmt
; ------------------------------ label
L35: ;<L207>
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-1032]	; dest -1032 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[lx_stackindex]
	cmp A0,0
	jnz L1330
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1408],D0	; T44  
; ------------------------------ indexlv
	mov D0,[Dframe-1408]	; T44  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-1400],D0	; T43  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1432],D0	; T47  
; ------------------------------ index
	mov D0,[Dframe-1432]	; T47  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1424],D0	; T46  
; ------------------------------ sub
	mov D0,[Dframe-1032]	; dest -1032  
	mov D1,[Dframe-1424]	; T46  
	sub D0,D1
	mov [Dframe-1440],D0	; T48  
; ------------------------------ truncate
	mov D0,[Dframe-1440]	; T48  
	mov A0,A0
	mov [Dframe-1416],A0	; T45  
; ------------------------------ move
	mov A0,[Dframe-1416]	; T45  
	mov D13,[Dframe-1400]	; T43 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L1331
; ------------------------------ label
L1330:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1456],D0	; T50  
; ------------------------------ indexlv
	mov D0,[Dframe-1456]	; T50  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-1448],D0	; T49  
; ------------------------------ move
	mov A0,[Dframe-1044]	; length -1044  
	mov D13,[Dframe-1448]	; T49 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1472],D0	; T52  
; ------------------------------ indexlv
	mov D0,[Dframe-1472]	; T52  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-1464],D0	; T51  
; ------------------------------ add
	mov A0,[Dframe-1044]	; length -1044  
	mov A1,1
	add A0,A1
	mov [Dframe-1480],A0	; T53  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-1480]	; T53  
	call pcm_alloc
	mov [Dframe-1488],D0	; T54  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1488]	; T54  
	mov D13,[Dframe-1464]	; T51 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-1512],D0	; T57  
; ------------------------------ index
	mov D0,[Dframe-1512]	; T57  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1504],D0	; T56  
; ------------------------------ getaddr
	lea D0,[Dframe-1024]	; str -1024  
	mov [Dframe-1520],D0	; T58  
; ------------------------------ add
	mov A0,[Dframe-1044]	; length -1044  
	mov A1,1
	add A0,A1
	mov [Dframe-1536],A0	; T60  
; ------------------------------ widen
	movsx D0,dword[Dframe-1536]	; T60  
	mov qword[Dframe-1528],D0	; T59  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1504]	; T56  
	mov D11,[Dframe-1520]	; T58  
	mov D12,[Dframe-1528]	; T59  
	call memcpy
	add Dstack, 32
; ------------------------------ label
L1331:
; ------------------------------ label
L1240:
; ------------------------------ hardret
	add Dstack, 1536
	pop Dframe
	ret
;	End

;	Proc:addlisttoken
addlisttoken:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; ulist 16  
	mov D0, [D0]
	mov [Dframe-8],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; T1  
	cmp D0,0
	jnz L1333
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe+24]	; ulistx 24 *
	mov D0,qword[D13]
	mov D13,qword[Dframe+16]	; ulist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1334
; ------------------------------ label
L1333:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; ulistx 24  
	mov D0, [D0]
	mov [Dframe-24],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; T3  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe-16]	; T2 *
	mov qword[D13],D0
; ------------------------------ label
L1334:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; p 32  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-32]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ label
L1332:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:addlisttoken_copy
addlisttoken_copy:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call alloctoken
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ getptr
	lea D10,[Dframe-48]	; T2  
	mov D11,[Dframe+32]	; q 32  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-8]	; p -8  
	lea D11,[Dframe-48]	; T2  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T3  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-56]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; ulist 16  
	mov D0, [D0]
	mov [Dframe-64],D0	; T4  
; ------------------------------ jumpcc
	mov D0,[Dframe-64]	; T4  
	cmp D0,0
	jnz L1336
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe+24]	; ulistx 24 *
	mov D0,qword[D13]
	mov D13,qword[Dframe+16]	; ulist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1337
; ------------------------------ label
L1336:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; ulistx 24  
	mov D0, [D0]
	mov [Dframe-80],D0	; T6  
; ------------------------------ indexlv
	mov D0,[Dframe-80]	; T6  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-72]	; T5 *
	mov qword[D13],D0
; ------------------------------ label
L1337:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T7  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-88]	; T7 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ label
L1335:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:addlist_nextlx
addlist_nextlx:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call alloctoken
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ move
	mov D10,[Dframe-8]	; p -8  
	lea D11,[nextlx]
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; ulist 16  
	mov D0, [D0]
	mov [Dframe-32],D0	; T3  
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; T3  
	cmp D0,0
	jnz L1339
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe+24]	; ulistx 24 *
	mov D0,qword[D13]
	mov D13,qword[Dframe+16]	; ulist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1340
; ------------------------------ label
L1339:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; ulistx 24  
	mov D0, [D0]
	mov [Dframe-48],D0	; T5  
; ------------------------------ indexlv
	mov D0,[Dframe-48]	; T5  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-40]	; T4 *
	mov qword[D13],D0
; ------------------------------ label
L1340:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-56]	; T6 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ label
L1338:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:addlisttoken_seq
addlisttoken_seq:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1342
; ------------------------------ label
L1344:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call alloctoken
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; tk -8  
; ------------------------------ stmt
; ------------------------------ getptr
	lea D10,[Dframe-48]	; T2  
	mov D11,[Dframe+32]	; seq 32  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-8]	; tk -8  
	lea D11,[Dframe-48]	; T2  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; ulist 16  
	mov D0, [D0]
	mov [Dframe-56],D0	; T3  
; ------------------------------ jumpcc
	mov D0,[Dframe-56]	; T3  
	cmp D0,0
	jnz L1345
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; tk -8  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe+24]	; ulistx 24 *
	mov D0,qword[D13]
	mov D13,qword[Dframe+16]	; ulist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1346
; ------------------------------ label
L1345:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; ulistx 24  
	mov D0, [D0]
	mov [Dframe-72],D0	; T5  
; ------------------------------ indexlv
	mov D0,[Dframe-72]	; T5  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-8]	; tk -8  
	mov D13,[Dframe-64]	; T4 *
	mov qword[D13],D0
; ------------------------------ label
L1346:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; tk -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T6  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-80]	; T6 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; tk -8  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; seq 32  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+32],D0	; seq 32  
; ------------------------------ label
L1342:
; ------------------------------ jumptrue
	mov D0,[Dframe+32]	; seq 32  
	and D0,D0
	jnz L1344
; ------------------------------ label
L1343:
; ------------------------------ label
L1341:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:addlistmparam
addlistmparam:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; ulist 16  
	mov D0, [D0]
	mov [Dframe-8],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; T1  
	cmp D0,0
	jnz L1348
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe+24]	; ulistx 24 *
	mov D0,qword[D13]
	mov D13,qword[Dframe+16]	; ulist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1349
; ------------------------------ label
L1348:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; ulistx 24  
	mov D0, [D0]
	mov [Dframe-24],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; T3  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe-16]	; T2 *
	mov qword[D13],D0
; ------------------------------ label
L1349:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ label
L1347:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dodefine
dodefine:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 688

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-104],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-104]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T1  
	mov dword[Dframe-112],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T3  
	cmp A0,65
	jz L1351
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK282
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1351:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-120],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-120]	; T4  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; stname -40  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-144],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-144]	; T7  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-136],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-136]	; T6  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T5  
	mov dword[Dframe-152],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T8  
	cmp A0,1
	jnz L1352
; ------------------------------ stmt
; ------------------------------ label
L1352:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; stname -40  
	mov A1,88
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-40]	; stname -40  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T10  
; ------------------------------ move
	mov B0,[Dframe-168]	; T10  
	mov D13,[Dframe-160]	; T9 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; stname -40  
	mov A1,113
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T11  
; ------------------------------ move
	mov A0,65
	mov D13,[Dframe-176]	; T11 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; stname -40  
	mov A1,114
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T12  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-184]	; T12 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-76],A0	; nparams -76  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-192],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T13  
	mov dword[Dframe-200],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-200]	; T14  
	cmp A0,40
	jnz L1353
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-16],D0	; stlistx -16  
; ------------------------------ move
	mov D0,[Dframe-16]	; stlistx -16  
	mov [Dframe-8],D0	; stlist -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; stname -40  
	mov A1,127
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T15  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-208]	; T15 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1354
; ------------------------------ label
L1356:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-224],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-224]	; T17  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-216],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T16  
	mov dword[Dframe-232],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-232]	; T18  
	cmp A0,65
	jnz L1357
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-240],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe-240]	; T19  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; d -48  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; stlist -8  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1358
; ------------------------------ label
L1360:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-248],D0	; T20  
; ------------------------------ jumpcc
	mov D0,[Dframe-248]	; T20  
	cmp D0,[Dframe-48]	; d -48  
	jnz L1361
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK283
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1361:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; p -24  
; ------------------------------ label
L1358:
; ------------------------------ jumptrue
	mov D0,[Dframe-24]	; p -24  
	and D0,D0
	jnz L1360
; ------------------------------ label
L1359:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call pcm_alloc
	mov [Dframe-256],D0	; T21  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-256]	; T21  
	mov [Dframe-32],D0	; q -32  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; q -32  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-264],D0	; T22  
; ------------------------------ move
	mov D0,[Dframe-48]	; d -48  
	mov D13,[Dframe-264]	; T22 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; q -32  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T23  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-272]	; T23 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; stlist -8  
	mov [Dframe-280],D0	; T24  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; stlistx -16  
	mov [Dframe-288],D0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-280]	; T24  
	mov D11,[Dframe-288]	; T25  
	mov D12,[Dframe-32]	; q -32  
	call addlistmparam
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-76]	; nparams -76  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-48]	; d -48  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-304],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-48]	; d -48  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-320],B0	; T29  
; ------------------------------ widen
	movzx A0,byte [Dframe-320]	; T29  
	mov dword[Dframe-328],A0	; T30  
; ------------------------------ widen
	movsx D0,dword[Dframe-328]	; T30  
	mov qword[Dframe-312],D0	; T28  
; ------------------------------ indexlv
	mov D0,[Dframe-304]	; T27  
	mov D1,[Dframe-312]	; T28  
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T26  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-296]	; T26 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-344],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-344]	; T32  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T31  
	mov dword[Dframe-352],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-352]	; T33  
	cmp A0,8
	jnz L1362
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ label
L1362:
; ------------------------------ jump
	jmp	L1363
; ------------------------------ label
L1357:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-368],D0	; T35  
; ------------------------------ index
	mov D0,[Dframe-368]	; T35  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-360],B0	; T34  
; ------------------------------ widen
	movzx A0,byte [Dframe-360]	; T34  
	mov dword[Dframe-376],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-376]	; T36  
	cmp A0,13
	jnz L1364
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L36
; ------------------------------ jump
	jmp	L1365
; ------------------------------ label
L1364:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-392],D0	; T38  
; ------------------------------ index
	mov D0,[Dframe-392]	; T38  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-384],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-384]	; T37  
	mov dword[Dframe-400],A0	; T39  
; ------------------------------ jumpcc
	mov A0,[Dframe-400]	; T39  
	cmp A0,20
	jnz L1366
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,KK284
	call addnamestr
	mov [Dframe-408],D0	; T40  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-408]	; T40  
	mov [Dframe-48],D0	; d -48  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; stname -40  
	mov A1,118
	lea D0, [D0+D1]
	mov [Dframe-416],D0	; T41  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-416]	; T41 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-432],D0	; T43  
; ------------------------------ index
	mov D0,[Dframe-432]	; T43  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-424],B0	; T42  
; ------------------------------ widen
	movzx A0,byte [Dframe-424]	; T42  
	mov dword[Dframe-440],A0	; T44  
; ------------------------------ jumpcc
	mov A0,[Dframe-440]	; T44  
	cmp A0,13
	jz L1367
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK285
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1367:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call pcm_alloc
	mov [Dframe-448],D0	; T45  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-448]	; T45  
	mov [Dframe-32],D0	; q -32  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; q -32  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-456],D0	; T46  
; ------------------------------ move
	mov D0,[Dframe-48]	; d -48  
	mov D13,[Dframe-456]	; T46 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; q -32  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-464],D0	; T47  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-464]	; T47 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; stlist -8  
	mov [Dframe-472],D0	; T48  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; stlistx -16  
	mov [Dframe-480],D0	; T49  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-472]	; T48  
	mov D11,[Dframe-480]	; T49  
	mov D12,[Dframe-32]	; q -32  
	call addlistmparam
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-76]	; nparams -76  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L36
; ------------------------------ jump
	jmp	L1368
; ------------------------------ label
L1366:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK286
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1368:
; ------------------------------ label
L1365:
; ------------------------------ label
L1363:
; ------------------------------ label
L1354:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L1356
; ------------------------------ label
L1355:
; ------------------------------ stmt
; ------------------------------ label
L36: ;<L221>
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; stname -40  
	mov A1,80
	lea D0, [D0+D1]
	mov [Dframe-488],D0	; T50  
; ------------------------------ move
	mov D0,[Dframe-8]	; stlist -8  
	mov D13,[Dframe-488]	; T50 *
	mov qword[D13],D0
; ------------------------------ label
L1353:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-64],D0	; tklistx -64  
; ------------------------------ move
	mov D0,[Dframe-64]	; tklistx -64  
	mov [Dframe-56],D0	; tklist -56  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-80],A0	; ntokens -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1369
; ------------------------------ label
L1371:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-504],D0	; T52  
; ------------------------------ index
	mov D0,[Dframe-504]	; T52  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-496],B0	; T51  
; ------------------------------ widen
	movzx A0,byte [Dframe-496]	; T51  
	mov dword[Dframe-512],A0	; T53  
; ------------------------------ jumpcc
	mov A0,[Dframe-512]	; T53  
	cmp A0,54
	jz L1373
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-528],D0	; T55  
; ------------------------------ index
	mov D0,[Dframe-528]	; T55  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-520],B0	; T54  
; ------------------------------ widen
	movzx A0,byte [Dframe-520]	; T54  
	mov dword[Dframe-536],A0	; T56  
; ------------------------------ jumpcc
	mov A0,[Dframe-536]	; T56  
	cmp A0,55
	jnz L1372
; ------------------------------ label
L1373:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L38
; ------------------------------ jump
	jmp	L1374
; ------------------------------ label
L1372:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-552],D0	; T58  
; ------------------------------ index
	mov D0,[Dframe-552]	; T58  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-544],B0	; T57  
; ------------------------------ widen
	movzx A0,byte [Dframe-544]	; T57  
	mov dword[Dframe-560],A0	; T59  
; ------------------------------ jumpcc
	mov A0,[Dframe-560]	; T59  
	cmp A0,65
	jnz L1375
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; stname -40  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-84],A0	; paramno -84  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1376
; ------------------------------ label
L1378:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-568],D0	; T60  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-584],D0	; T62  
; ------------------------------ index
	mov D0,[Dframe-584]	; T62  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-576],D0	; T61  
; ------------------------------ jumpcc
	mov D0,[Dframe-568]	; T60  
	cmp D0,[Dframe-576]	; T61  
	jnz L1379
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-600],D0	; T64  
; ------------------------------ indexlv
	mov D0,[Dframe-600]	; T64  
	mov A1,17
	lea D0, [D0+D1]
	mov [Dframe-592],D0	; T63  
; ------------------------------ iorto
	mov D13,[Dframe-592]	; T63 *
	mov B0,byte [D13]
	mov A1,2
	or B0,B1
	mov D13,qword[Dframe-592]	; T63 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-616],D0	; T66  
; ------------------------------ indexlv
	mov D0,[Dframe-616]	; T66  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-608],D0	; T65  
; ------------------------------ move
	mov A0,[Dframe-84]	; paramno -84  
	mov D13,[Dframe-608]	; T65 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L37
; ------------------------------ label
L1379:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-84]	; paramno -84  
; ------------------------------ label
L1376:
; ------------------------------ jumptrue
	mov D0,[Dframe-24]	; p -24  
	and D0,D0
	jnz L1378
; ------------------------------ label
L1377:
; ------------------------------ stmt
; ------------------------------ label
L37: ;<L235>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-632],D0	; T68  
; ------------------------------ index
	mov D0,[Dframe-632]	; T68  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-624],D0	; T67  
; ------------------------------ jumpcc
	mov D0,[Dframe-624]	; T67  
	cmp D0,[Dframe-40]	; stname -40  
	jnz L1380
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-648],D0	; T70  
; ------------------------------ indexlv
	mov D0,[Dframe-648]	; T70  
	mov A1,17
	lea D0, [D0+D1]
	mov [Dframe-640],D0	; T69  
; ------------------------------ iorto
	mov D13,[Dframe-640]	; T69 *
	mov B0,byte [D13]
	mov A1,1
	or B0,B1
	mov D13,qword[Dframe-640]	; T69 *
	mov byte [D13],B0
; ------------------------------ label
L1380:
; ------------------------------ label
L1375:
; ------------------------------ label
L1374:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-80]	; ntokens -80  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call alloctoken
	mov [Dframe-656],D0	; T71  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-656]	; T71  
	mov [Dframe-72],D0	; tk -72  
; ------------------------------ stmt
; ------------------------------ move
	mov D10,[Dframe-72]	; tk -72  
	lea D11,[nextlx]
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-56]	; tklist -56  
	mov [Dframe-664],D0	; T72  
; ------------------------------ getaddr
	lea D0,[Dframe-64]	; tklistx -64  
	mov [Dframe-672],D0	; T73  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-664]	; T72  
	mov D11,[Dframe-672]	; T73  
	mov D12,[Dframe-72]	; tk -72  
	call addlisttoken
	add Dstack, 32
; ------------------------------ label
L1369:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L1371
; ------------------------------ label
L1370:
; ------------------------------ stmt
; ------------------------------ label
L38: ;<L229>
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; stname -40  
	mov A1,72
	lea D0, [D0+D1]
	mov [Dframe-680],D0	; T74  
; ------------------------------ move
	mov D0,[Dframe-56]	; tklist -56  
	mov D13,[Dframe-680]	; T74 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; stname -40  
	mov A1,123
	lea D0, [D0+D1]
	mov [Dframe-688],D0	; T75  
; ------------------------------ move
	mov A0,[Dframe-76]	; nparams -76  
	mov D13,[Dframe-688]	; T75 *
	mov byte [D13],B0
; ------------------------------ label
L1350:
; ------------------------------ hardret
	add Dstack, 688
	pop Dframe
	ret
;	End

;	Proc:readalphanumeric
readalphanumeric:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1382
; ------------------------------ label
L1384:
; ------------------------------ stmt
; ------------------------------ label
L1382:
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ getptr
	mov D0,[Dframe-40]	; T5  
	mov B0, [D0]
	mov [Dframe-32],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T4  
	mov dword[Dframe-48],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T6  
	mov qword[Dframe-24],D0	; T3  
; ------------------------------ index
	lea D0,[alphamap]
	mov D1,[Dframe-24]	; T3  
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-56],A0	; T7  
; ------------------------------ truncate
	mov A0,[Dframe-56]	; T7  
	and D0,255
	mov [Dframe-8],B0	; T1  
; ------------------------------ jumptrue
	mov B0,[Dframe-8]	; T1  
	and B0,B0
	jnz L1384
; ------------------------------ label
L1383:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-72],D0	; T9  
; ------------------------------ indexlv
	mov D0,[Dframe-72]	; T9  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe+16]	; pstart 16  
	mov D13,[Dframe-64]	; T8 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-88],D0	; T11  
; ------------------------------ indexlv
	mov D0,[Dframe-88]	; T11  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T10  
; ------------------------------ move
	mov A0,56
	mov D13,[Dframe-80]	; T10 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-104],D0	; T13  
; ------------------------------ indexlv
	mov D0,[Dframe-104]	; T13  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T12  
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,[Dframe+16]	; pstart 16  
	sub D0,D1
	mov [Dframe-120],D0	; T15  
; ------------------------------ truncate
	mov D0,[Dframe-120]	; T15  
	mov A0,A0
	mov [Dframe-112],A0	; T14  
; ------------------------------ move
	mov A0,[Dframe-112]	; T14  
	mov D13,[Dframe-96]	; T12 *
	mov dword[D13],A0
; ------------------------------ label
L1381:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:inmacrostack
inmacrostack:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1386
; ------------------------------ label
L1388:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; macrostack 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; T1  
	cmp D0,[Dframe+16]	; d 16  
	jnz L1389
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L1385
; ------------------------------ label
L1389:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; macrostack 24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+24],D0	; macrostack 24  
; ------------------------------ label
L1386:
; ------------------------------ jumptrue
	mov D0,[Dframe+24]	; macrostack 24  
	and D0,D0
	jnz L1388
; ------------------------------ label
L1387:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1385
; ------------------------------ label
L1385:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:showtokens
showtokens:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK287
	mov D11,[Dframe+16]	; caption 16  
	mov D12,KK288
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1391
; ------------------------------ label
L1393:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; tk 24  
	call showtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; tk 24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+24],D0	; tk 24  
; ------------------------------ label
L1391:
; ------------------------------ jumptrue
	mov D0,[Dframe+24]	; tk 24  
	and D0,D0
	jnz L1393
; ------------------------------ label
L1392:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK289
	mov D11,KK290
	call printf
	add Dstack, 32
; ------------------------------ label
L1390:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:lexa
lexa:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; tk 16  
	mov D0, [D0]
	mov [Dframe-8],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; T1  
	cmp D0,[normaltk]
	jnz L1395
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L1394
; ------------------------------ label
L1395:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; tk 16  
	mov D0, [D0]
	mov [Dframe-16],D0	; T2  
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; T2  
	cmp D0,0
	jnz L1396
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-32],D0	; T4  
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; T4  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T3  
; ------------------------------ move
	mov A0,55
	mov D13,[Dframe-24]	; T3 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L1394
; ------------------------------ label
L1396:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; tk 16  
	mov D0, [D0]
	mov [Dframe-72],D0	; T6  
; ------------------------------ getptr
	lea D10,[Dframe-64]	; T5  
	mov D11,[Dframe-72]	; T6  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	lea D10,[nextlx]
	lea D11,[Dframe-64]	; T5  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; tk 16  
	mov D0, [D0]
	mov [Dframe-88],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-88]	; T8  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; T7  
; ------------------------------ move
	mov D0,[Dframe-80]	; T7  
	mov D13,[Dframe+16]	; tk 16 *
	mov qword[D13],D0
; ------------------------------ label
L1394:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:lexm
	segment .data
	align 4
lexm.doreset:
	dd 0
	segment .text
lexm:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 448

; ------------------------------ stmt
; ------------------------------ label
L39: ;<L245>
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1398
; ------------------------------ label
L1400:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[tkptr]
	and D0,D0
	jz L1401
; ------------------------------ stmt
; ------------------------------ getptr
	lea D10,[Dframe-48]	; T1  
	mov D11,[tkptr]
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	lea D10,[nextlx]
	lea D11,[Dframe-48]	; T1  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[tkptr]
	mov A1,8
	mov D0, [D0+D1]
	mov [tkptr],D0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[tkptr]
	cmp D0,0
	jnz L1402
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-64]	; T3  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T2  
	mov dword[Dframe-72],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T4  
	cmp A0,65
	jnz L1403
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-96]	; T7  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-88]	; T6  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T5  
	mov dword[Dframe-104],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T8  
	cmp A0,1
	jnz L1403
; ------------------------------ callfn
	sub Dstack,32
	call peeklb
	mov [Dframe-112],A0	; T9  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-112]	; T9  
	and A0,A0
	jz L1403
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-128],D0	; T11  
; ------------------------------ indexlv
	mov D0,[Dframe-128]	; T11  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T10  
; ------------------------------ move
	mov A0,[sfileno]
	mov D13,[Dframe-120]	; T10 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-144],D0	; T13  
; ------------------------------ indexlv
	mov D0,[Dframe-144]	; T13  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T12  
; ------------------------------ move
	mov A0,[slineno]
	mov D13,[Dframe-136]	; T12 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [lexm.doreset],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L41
; ------------------------------ label
L1403:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [lexm.doreset],A0
; ------------------------------ label
L1402:
; ------------------------------ stmt
; ------------------------------ return
	jmp L1397
; ------------------------------ label
L1401:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[lexm.doreset]
	and A0,A0
	jz L1404
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-160],D0	; T15  
; ------------------------------ indexlv
	mov D0,[Dframe-160]	; T15  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T14  
; ------------------------------ move
	mov A0,[sfileno]
	mov D13,[Dframe-152]	; T14 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-176],D0	; T17  
; ------------------------------ indexlv
	mov D0,[Dframe-176]	; T17  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T16  
; ------------------------------ move
	mov A0,[slineno]
	mov D13,[Dframe-168]	; T16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [lexm.doreset],A0
; ------------------------------ label
L1404:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ label
L40: ;<TEST1>
; ------------------------------ stmt
; ------------------------------ label
L41: ;<L247>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-192],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe-192]	; T19  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-184],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T18  
	mov dword[Dframe-200],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-200]	; T20  
	cmp A0,4
	jnz L1405
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call dolexdirective
	mov [Dframe-208],A0	; T21  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-208]	; T21  
	and A0,A0
	jz L1406
; ------------------------------ stmt
; ------------------------------ return
	jmp L1397
; ------------------------------ label
L1406:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L39
; ------------------------------ jump
	jmp	L1407
; ------------------------------ label
L1405:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-224],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-224]	; T23  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-216],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T22  
	mov dword[Dframe-232],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-232]	; T24  
	cmp A0,65
	jnz L1408
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-240],D0	; T25  
; ------------------------------ index
	mov D0,[Dframe-240]	; T25  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-248],B0	; T26  
; ------------------------------ widen
	movzx A0,byte [Dframe-248]	; T26  
	mov dword[Dframe-256],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T27  
	cmp A0,67
	jnz L1409
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-272],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-272]	; T29  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-264],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-264]	; T28  
	mov dword[Dframe-280],A0	; T30  
; ------------------------------ move
	mov A0,[Dframe-280]	; T30  
	mov [sfileno],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-288],D0	; T31  
; ------------------------------ index
	mov D0,[Dframe-288]	; T31  
	mov A1,20
	mov A0, [D0+D1]
	mov [slineno],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,108
	mov W0, [D0+D1]
	mov [Dframe-296],W0	; T32  
; ------------------------------ widen
	movsx A0,word [Dframe-296]	; T32  
	mov dword[Dframe-304],A0	; T33  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-312],D0	; T34  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-328],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-328]	; T36  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-320],A0	; T35  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-304]	; T33  
	mov D11,[Dframe-312]	; T34  
	mov A12,[Dframe-320]	; T35  
	call expandpredefmacro
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [lexm.doreset],A0
; ------------------------------ stmt
; ------------------------------ return
	jmp L1397
; ------------------------------ jump
	jmp	L1410
; ------------------------------ label
L1409:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T37  
	mov dword[Dframe-344],A0	; T38  
; ------------------------------ jumpcc
	mov A0,[Dframe-344]	; T38  
	cmp A0,1
	jnz L1412
; ------------------------------ jumpfalse
	mov A0,[noexpand]
	and A0,A0
	jz L1411
; ------------------------------ label
L1412:
; ------------------------------ stmt
; ------------------------------ return
	jmp L1397
; ------------------------------ label
L1411:
; ------------------------------ label
L1410:
; ------------------------------ jump
	jmp	L1413
; ------------------------------ label
L1408:
; ------------------------------ stmt
; ------------------------------ return
	jmp L1397
; ------------------------------ label
L1413:
; ------------------------------ label
L1407:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-360],D0	; T40  
; ------------------------------ index
	mov D0,[Dframe-360]	; T40  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-352],B0	; T39  
; ------------------------------ widen
	movzx A0,byte [Dframe-352]	; T39  
	mov dword[Dframe-368],A0	; T41  
; ------------------------------ move
	mov A0,[Dframe-368]	; T41  
	mov [sfileno],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-376],D0	; T42  
; ------------------------------ index
	mov D0,[Dframe-376]	; T42  
	mov A1,20
	mov A0, [D0+D1]
	mov [slineno],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,127
	mov B0, [D0+D1]
	mov [Dframe-384],B0	; T43  
; ------------------------------ widen
	movzx A0,byte [Dframe-384]	; T43  
	mov dword[Dframe-392],A0	; T44  
; ------------------------------ jumpfalse
	mov A0,[Dframe-392]	; T44  
	and A0,A0
	jz L1414
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call peeklb
	mov [Dframe-400],A0	; T45  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-400]	; T45  
	and A0,A0
	jnz L1415
; ------------------------------ stmt
; ------------------------------ return
	jmp L1397
; ------------------------------ label
L1415:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[normaltk]
	mov [Dframe-408],D0	; T46  
; ------------------------------ getaddr
	lea D0,[Dframe-12]	; newlineno -12  
	mov [Dframe-416],D0	; T47  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,8
	push qword [Dframe-416]	; T47  
	sub Dstack,32
	mov D10,[Dframe-8]	; d -8  
	mov D11,0
	mov D12,[Dframe-408]	; T46  
	mov A13,1
	call expandfnmacro
	mov [Dframe-424],D0	; T48  
	add Dstack, 48
; ------------------------------ move
	mov D0,[Dframe-424]	; T48  
	mov [tkptr],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-12]	; newlineno -12  
	mov [slineno],A0
; ------------------------------ jump
	jmp	L1416
; ------------------------------ label
L1414:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[normaltk]
	mov [Dframe-432],D0	; T49  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; d -8  
	mov D11,0
	mov D12,[Dframe-432]	; T49  
	mov A13,1
	call expandobjmacro
	mov [Dframe-440],D0	; T50  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-440]	; T50  
	mov [tkptr],D0
; ------------------------------ label
L1416:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[tkptr]
	cmp D0,0
	jnz L1417
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [lexm.doreset],A0
; ------------------------------ label
L1417:
; ------------------------------ label
L1398:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L1400
; ------------------------------ label
L1399:
; ------------------------------ label
L1397:
; ------------------------------ hardret
	add Dstack, 448
	pop Dframe
	ret
;	End

;	Proc:peeklb
peeklb:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,40
	jz L1420
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T4  
	cmp A0,32
	jnz L1419
; ------------------------------ index
	mov D0,[lxsptr]
	mov D1,1
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T5  
	mov dword[Dframe-48],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T6  
	cmp A0,40
	jnz L1419
; ------------------------------ label
L1420:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L1418
; ------------------------------ label
L1419:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1418
; ------------------------------ label
L1418:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:peektk
peektk:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; tk 16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; tk 16  
	cmp D0,0
	jnz L1422
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1421
; ------------------------------ label
L1422:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,12
	jnz L1423
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L1421
; ------------------------------ label
L1423:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1421
; ------------------------------ label
L1421:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:expandobjmacro
expandobjmacro:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 208

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; tk -8  
; ------------------------------ move
	mov D0,[Dframe-8]	; tk -8  
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-64],A0	; useshh -64  
; ------------------------------ move
	mov A0,[Dframe-64]	; useshh -64  
	mov [Dframe-60],A0	; complex -60  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1425
; ------------------------------ label
L1427:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T1  
	mov dword[Dframe-96],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T2  
	cmp A0,65
	jnz L1428
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; d -80  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T3  
	mov dword[Dframe-112],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T4  
	cmp A0,1
	jz L1430
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T5  
	mov dword[Dframe-128],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T6  
	cmp A0,67
	jnz L1429
; ------------------------------ label
L1430:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-60],A0	; complex -60  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L42
; ------------------------------ label
L1429:
; ------------------------------ jump
	jmp	L1431
; ------------------------------ label
L1428:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T7  
	mov dword[Dframe-144],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T8  
	cmp A0,7
	jnz L1432
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-64],A0	; useshh -64  
; ------------------------------ move
	mov A0,[Dframe-64]	; useshh -64  
	mov [Dframe-60],A0	; complex -60  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L42
; ------------------------------ label
L1432:
; ------------------------------ label
L1431:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; p -16  
; ------------------------------ label
L1425:
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; p -16  
	and D0,D0
	jnz L1427
; ------------------------------ label
L1426:
; ------------------------------ stmt
; ------------------------------ label
L42: ;<L253>
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[Dframe-60]	; complex -60  
	and A0,A0
	jnz L1433
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; tk -8  
	jmp L1424
; ------------------------------ label
L1433:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-56]	; newmacro -56  
	mov [Dframe-160],D0	; T10  
; ------------------------------ indexlv
	mov D0,[Dframe-160]	; T10  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T9  
; ------------------------------ move
	mov D0,[Dframe+16]	; m 16  
	mov D13,[Dframe-152]	; T9 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-56]	; newmacro -56  
	mov [Dframe-176],D0	; T12  
; ------------------------------ indexlv
	mov D0,[Dframe-176]	; T12  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T11  
; ------------------------------ move
	mov D0,[Dframe+24]	; macrostack 24  
	mov D13,[Dframe-168]	; T11 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; useshh -64  
	and A0,A0
	jz L1434
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,8
	push qword 0
	sub Dstack,32
	mov D10,[Dframe+16]	; m 16  
	mov D11,0
	mov D12,0
	mov A13,0
	call substituteargs
	mov [Dframe-184],D0	; T13  
	add Dstack, 48
; ------------------------------ move
	mov D0,[Dframe-184]	; T13  
	mov [Dframe-24],D0	; repl -24  
; ------------------------------ jump
	jmp	L1435
; ------------------------------ label
L1434:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; repl -24  
; ------------------------------ label
L1435:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-56]	; newmacro -56  
	mov [Dframe-192],D0	; T14  
; ------------------------------ getaddr
	lea D0,[Dframe-68]	; expanded -68  
	mov [Dframe-200],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; repl -24  
	mov D11,[Dframe-192]	; T14  
	mov D12,[Dframe-200]	; T15  
	call scantokenseq
	mov [Dframe-208],D0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-208]	; T16  
	mov [Dframe-8],D0	; tk -8  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; tk -8  
	jmp L1424
; ------------------------------ label
L1424:
; ------------------------------ hardret
	add Dstack, 208
	pop Dframe
	ret
;	End

;	Proc:expandfnmacro
expandfnmacro:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 528

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-160]	; args -160  
	mov [Dframe-392],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; m 16  
	mov D11,[Dframe-392]	; T1  
	mov D12,[Dframe+32]	; tksource 32  
	call readmacrocall
	mov [Dframe-400],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-400]	; T2  
	mov [Dframe-372],A0	; nargs -372  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; frombaselevel 40  
	and A0,A0
	jz L1437
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-416],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-416]	; T4  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-408],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-408]	; T3  
	mov D13,[Dframe+48]	; endlineno 48 *
	mov dword[D13],A0
; ------------------------------ label
L1437:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-376],A0	; i -376  
; ------------------------------ jump
	jmp	L1440
; ------------------------------ label
L1441:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-376]	; i -376  
	mov A1,1
	sub A0,A1
	mov [Dframe-440],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-440]	; T7  
	mov qword[Dframe-432],D0	; T6  
; ------------------------------ indexlv
	lea D0,[Dframe-320]	; expargs -320  
	mov D1,[Dframe-432]	; T6  
	lea D0, [D0+D1*8]
	mov [Dframe-424],D0	; T5  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-424]	; T5 *
	mov qword[D13],D0
; ------------------------------ label
L1438:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-376]	; i -376  
; ------------------------------ label
L1440:
; ------------------------------ jumpcc
	mov A0,[Dframe-376]	; i -376  
	cmp A0,[Dframe-372]	; nargs -372  
	jle L1441
; ------------------------------ label
L1439:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-160]	; args -160  
	mov [Dframe-448],D0	; T8  
; ------------------------------ getaddr
	lea D0,[Dframe-320]	; expargs -320  
	mov [Dframe-456],D0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,8
	push qword [Dframe+24]	; macrostack 24  
	sub Dstack,32
	mov D10,[Dframe+16]	; m 16  
	mov D11,[Dframe-448]	; T8  
	mov D12,[Dframe-456]	; T9  
	mov A13,[Dframe-372]	; nargs -372  
	call substituteargs
	mov [Dframe-464],D0	; T10  
	add Dstack, 48
; ------------------------------ move
	mov D0,[Dframe-464]	; T10  
	mov [Dframe-328],D0	; repl -328  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-368]	; newmacro -368  
	mov [Dframe-480],D0	; T12  
; ------------------------------ indexlv
	mov D0,[Dframe-480]	; T12  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-472],D0	; T11  
; ------------------------------ move
	mov D0,[Dframe+16]	; m 16  
	mov D13,[Dframe-472]	; T11 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-368]	; newmacro -368  
	mov [Dframe-496],D0	; T14  
; ------------------------------ indexlv
	mov D0,[Dframe-496]	; T14  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-488],D0	; T13  
; ------------------------------ move
	mov D0,[Dframe+24]	; macrostack 24  
	mov D13,[Dframe-488]	; T13 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-368]	; newmacro -368  
	mov [Dframe-504],D0	; T15  
; ------------------------------ getaddr
	lea D0,[Dframe-380]	; expanded -380  
	mov [Dframe-512],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-328]	; repl -328  
	mov D11,[Dframe-504]	; T15  
	mov D12,[Dframe-512]	; T16  
	call scantokenseq
	mov [Dframe-520],D0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-520]	; T17  
	mov [Dframe-328],D0	; repl -328  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-328]	; repl -328  
	jmp L1436
; ------------------------------ label
L1436:
; ------------------------------ hardret
	add Dstack, 528
	pop Dframe
	ret
;	End

;	Proc:scantokenseq
scantokenseq:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 464

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ label
L43: ;<reenter>
; ------------------------------ stmt
; ------------------------------ label
L44: ;<L261>
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe+32]	; expanded 32 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-16],D0	; newtkx -16  
; ------------------------------ move
	mov D0,[Dframe-16]	; newtkx -16  
	mov [Dframe-8],D0	; newtk -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-76],A0	; noexpandflag -76  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-80],A0	; simple -80  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; tk 16  
	mov [Dframe-32],D0	; oldtk -32  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1443
; ------------------------------ label
L1445:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T1  
	mov dword[Dframe-104],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T2  
	cmp A0,65
	jnz L1446
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-120],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-120]	; T4  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T3  
	mov dword[Dframe-128],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T5  
	cmp A0,1
	jz L1448
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-144]	; T7  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T6  
	mov dword[Dframe-152],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T8  
	cmp A0,67
	jnz L1447
; ------------------------------ label
L1448:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-80],A0	; simple -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L45
; ------------------------------ label
L1447:
; ------------------------------ label
L1446:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; tk 16  
	cmp D0,0
	jnz L1449
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L45
; ------------------------------ label
L1449:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; tk 16  
; ------------------------------ label
L1443:
; ------------------------------ jumptrue
	mov D0,[Dframe+16]	; tk 16  
	and D0,D0
	jnz L1445
; ------------------------------ label
L1444:
; ------------------------------ stmt
; ------------------------------ label
L45: ;<L264>
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-80]	; simple -80  
	and A0,A0
	jz L1450
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-32]	; oldtk -32  
	jmp L1442
; ------------------------------ label
L1450:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-32]	; oldtk -32  
	mov [Dframe+16],D0	; tk 16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1451
; ------------------------------ label
L1453:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-160],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T9  
	mov dword[Dframe-168],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T10  
	cmp A0,65
	jnz L1454
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; m -40  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; m -40  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-176],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-176]	; T11  
	mov dword[Dframe-184],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T12  
	cmp A0,1
	jnz L1455
; ------------------------------ jumptrue
	mov A0,[Dframe-76]	; noexpandflag -76  
	and A0,A0
	jnz L1455
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,17
	mov B0, [D0+D1]
	mov [Dframe-192],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T13  
	mov dword[Dframe-200],A0	; T14  
; ------------------------------ iand
	mov A0,[Dframe-200]	; T14  
	mov A1,4
	and A0,A1
	mov [Dframe-208],A0	; T15  
; ------------------------------ jumptrue
	mov A0,[Dframe-208]	; T15  
	and A0,A0
	jnz L1457
; ------------------------------ jumpfalse
	mov A0,[noexpand]
	and A0,A0
	jz L1456
; ------------------------------ label
L1457:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L47
; ------------------------------ label
L1456:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; m -40  
	mov D11,[Dframe+24]	; macrostack 24  
	call inmacrostack
	mov [Dframe-216],A0	; T16  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-216]	; T16  
	and A0,A0
	jz L1458
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; newtk -8  
	mov [Dframe-224],D0	; T17  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; newtkx -16  
	mov [Dframe-232],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-224]	; T17  
	mov D11,[Dframe-232]	; T18  
	mov D12,[Dframe+16]	; tk 16  
	call addlisttoken_copy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; newtkx -16  
	mov A1,17
	lea D0, [D0+D1]
	mov [Dframe-240],D0	; T19  
; ------------------------------ iorto
	mov D13,[Dframe-240]	; T19 *
	mov B0,byte [D13]
	mov A1,4
	or B0,B1
	mov D13,qword[Dframe-240]	; T19 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L49
; ------------------------------ label
L1458:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-80],A0	; simple -80  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; m -40  
	mov A1,127
	mov B0, [D0+D1]
	mov [Dframe-248],B0	; T20  
; ------------------------------ widen
	movzx A0,byte [Dframe-248]	; T20  
	mov dword[Dframe-256],A0	; T21  
; ------------------------------ jumpfalse
	mov A0,[Dframe-256]	; T21  
	and A0,A0
	jz L1459
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; tk 16  
	call peektk
	mov [Dframe-264],A0	; T22  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-264]	; T22  
	and A0,A0
	jnz L1460
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L47
; ------------------------------ label
L1460:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe+16]	; tk 16  
	mov [Dframe-272],D0	; T23  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-272]	; T23  
	call lexa
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe+16]	; tk 16  
	mov [Dframe-280],D0	; T24  
; ------------------------------ getaddr
	lea D0,[Dframe-84]	; dummy -84  
	mov [Dframe-288],D0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,8
	push qword [Dframe-288]	; T25  
	sub Dstack,32
	mov D10,[Dframe-40]	; m -40  
	mov D11,[Dframe+24]	; macrostack 24  
	mov D12,[Dframe-280]	; T24  
	mov A13,1
	call expandfnmacro
	mov [Dframe-296],D0	; T26  
	add Dstack, 48
; ------------------------------ move
	mov D0,[Dframe-296]	; T26  
	mov [Dframe-24],D0	; expandtk -24  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; newtk -8  
	mov [Dframe-304],D0	; T27  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; newtkx -16  
	mov [Dframe-312],D0	; T28  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-304]	; T27  
	mov D11,[Dframe-312]	; T28  
	mov D12,[Dframe-24]	; expandtk -24  
	call addlisttoken_seq
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe+32]	; expanded 32 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L52
; ------------------------------ jump
	jmp	L1461
; ------------------------------ label
L1459:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe+16]	; tk 16  
	mov [Dframe-320],D0	; T29  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; m -40  
	mov D11,[Dframe+24]	; macrostack 24  
	mov D12,[Dframe-320]	; T29  
	mov A13,0
	call expandobjmacro
	mov [Dframe-328],D0	; T30  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-328]	; T30  
	mov [Dframe-24],D0	; expandtk -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe+32]	; expanded 32 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; newtk -8  
	mov [Dframe-336],D0	; T31  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; newtkx -16  
	mov [Dframe-344],D0	; T32  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-336]	; T31  
	mov D11,[Dframe-344]	; T32  
	mov D12,[Dframe-24]	; expandtk -24  
	call addlisttoken_seq
	add Dstack, 32
; ------------------------------ label
L1461:
; ------------------------------ jump
	jmp	L1462
; ------------------------------ label
L1455:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; m -40  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-352],B0	; T33  
; ------------------------------ widen
	movzx A0,byte [Dframe-352]	; T33  
	mov dword[Dframe-360],A0	; T34  
; ------------------------------ jumpcc
	mov A0,[Dframe-360]	; T34  
	cmp A0,90
	jnz L1463
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-76],A0	; noexpandflag -76  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L47
; ------------------------------ jump
	jmp	L1464
; ------------------------------ label
L1463:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; m -40  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-368],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-368]	; T35  
	mov dword[Dframe-376],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-376]	; T36  
	cmp A0,67
	jnz L1465
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call alloctokenz
	mov [Dframe-384],D0	; T37  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-384]	; T37  
	mov [Dframe-24],D0	; expandtk -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; m -40  
	mov A1,108
	mov W0, [D0+D1]
	mov [Dframe-392],W0	; T38  
; ------------------------------ widen
	movsx A0,word [Dframe-392]	; T38  
	mov dword[Dframe-400],A0	; T39  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-416],D0	; T41  
; ------------------------------ index
	mov D0,[Dframe-416]	; T41  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-408],A0	; T40  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-400]	; T39  
	mov D11,[Dframe-24]	; expandtk -24  
	mov A12,[Dframe-408]	; T40  
	call expandpredefmacro
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; newtk -8  
	mov [Dframe-424],D0	; T42  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; newtkx -16  
	mov [Dframe-432],D0	; T43  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-424]	; T42  
	mov D11,[Dframe-432]	; T43  
	mov D12,[Dframe-24]	; expandtk -24  
	call addlisttoken_copy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L51
; ------------------------------ jump
	jmp	L1466
; ------------------------------ label
L1465:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-76],A0	; noexpandflag -76  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L47
; ------------------------------ label
L1466:
; ------------------------------ label
L1464:
; ------------------------------ label
L1462:
; ------------------------------ jump
	jmp	L1467
; ------------------------------ label
L1454:
; ------------------------------ stmt
; ------------------------------ label
L46: ;<simpletoken>
; ------------------------------ stmt
; ------------------------------ label
L47: ;<L272>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; newtk -8  
	mov [Dframe-440],D0	; T44  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; newtkx -16  
	mov [Dframe-448],D0	; T45  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-440]	; T44  
	mov D11,[Dframe-448]	; T45  
	mov D12,[Dframe+16]	; tk 16  
	call addlisttoken_copy
	add Dstack, 32
; ------------------------------ label
L1467:
; ------------------------------ stmt
; ------------------------------ label
L48: ;<skip>
; ------------------------------ stmt
; ------------------------------ label
L49: ;<L273>
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; tk 16  
	cmp D0,0
	jnz L1468
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L53
; ------------------------------ label
L1468:
; ------------------------------ stmt
; ------------------------------ label
L50: ;<skip2>
; ------------------------------ stmt
; ------------------------------ label
L51: ;<L276>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; tk 16  
; ------------------------------ stmt
; ------------------------------ label
L52: ;<L267>
; ------------------------------ label
L1451:
; ------------------------------ jumptrue
	mov D0,[Dframe+16]	; tk 16  
	and D0,D0
	jnz L1453
; ------------------------------ label
L1452:
; ------------------------------ stmt
; ------------------------------ label
L53: ;<L268>
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+32]	; expanded 32  
	mov A0, [D0]
	mov [Dframe-456],A0	; T46  
; ------------------------------ jumpfalse
	mov A0,[Dframe-456]	; T46  
	and A0,A0
	jz L1469
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; newtk -8  
	mov [Dframe+16],D0	; tk 16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L44
; ------------------------------ label
L1469:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; newtk -8  
	jmp L1442
; ------------------------------ label
L1442:
; ------------------------------ hardret
	add Dstack, 464
	pop Dframe
	ret
;	End

;	Proc:readmacrocall
readmacrocall:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 416

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; tksource 32  
	call lexa
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-56],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-56]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T1  
	mov dword[Dframe-64],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T3  
	cmp A0,12
	jz L1471
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK291
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1471:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,123
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T4  
	mov dword[Dframe-80],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-80]	; T5  
	mov [Dframe-4],A0	; nparams -4  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; nargs -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; nparams -4  
	cmp A0,0
	jnz L1472
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; tksource 32  
	call lexa
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-96]	; T7  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T6  
	mov dword[Dframe-104],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T8  
	cmp A0,13
	jz L1473
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK292
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1473:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1470
; ------------------------------ label
L1472:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-12],A0	; paramno -12  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-8],A0	; lbcount -8  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-40],D0	; tklistx -40  
; ------------------------------ move
	mov D0,[Dframe-40]	; tklistx -40  
	mov [Dframe-32],D0	; tklist -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,118
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T9  
	mov dword[Dframe-120],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-120]	; T10  
	mov [Dframe-20],A0	; usesvargs -20  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-24],A0	; varg -24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1474
; ------------------------------ label
L1476:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; paramno -12  
	cmp A0,[Dframe-4]	; nparams -4  
	jnz L1477
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; usesvargs -20  
	and A0,A0
	jz L1477
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-24],A0	; varg -24  
; ------------------------------ label
L1477:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; tksource 32  
	call lexa
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-136],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-136]	; T12  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T11  
	mov dword[Dframe-144],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T13  
	cmp A0,8
	jnz L1478
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; lbcount -8  
	cmp A0,1
	jnz L1479
; ------------------------------ jumptrue
	mov A0,[Dframe-24]	; varg -24  
	and A0,A0
	jnz L1479
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; tklist -32  
	cmp D0,0
	jnz L1480
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call alloctokenz
	mov [Dframe-152],D0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-152]	; T14  
	mov [Dframe-32],D0	; tklist -32  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; tklist -32  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T15  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-176],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-176]	; T17  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T16  
; ------------------------------ move
	mov B0,[Dframe-168]	; T16  
	mov D13,[Dframe-160]	; T15 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; tklist -32  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T18  
; ------------------------------ move
	mov A0,64
	mov D13,[Dframe-184]	; T18 *
	mov byte [D13],B0
; ------------------------------ label
L1480:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-12]	; paramno -12  
	mov A1,1
	sub A0,A1
	mov [Dframe-208],A0	; T21  
; ------------------------------ widen
	movsx D0,dword[Dframe-208]	; T21  
	mov qword[Dframe-200],D0	; T20  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; args 24  
	mov D1,[Dframe-200]	; T20  
	lea D0, [D0+D1*8]
	mov [Dframe-192],D0	; T19  
; ------------------------------ move
	mov D0,[Dframe-32]	; tklist -32  
	mov D13,[Dframe-192]	; T19 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-40],D0	; tklistx -40  
; ------------------------------ move
	mov D0,[Dframe-40]	; tklistx -40  
	mov [Dframe-32],D0	; tklist -32  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-12]	; paramno -12  
; ------------------------------ jump
	jmp	L1481
; ------------------------------ label
L1479:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L55
; ------------------------------ label
L1481:
; ------------------------------ jump
	jmp	L1482
; ------------------------------ label
L1478:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-224],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-224]	; T23  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-216],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T22  
	mov dword[Dframe-232],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-232]	; T24  
	cmp A0,55
	jnz L1483
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK293
	call lxerror
	add Dstack, 32
; ------------------------------ jump
	jmp	L1484
; ------------------------------ label
L1483:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-248],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe-248]	; T26  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-240],B0	; T25  
; ------------------------------ widen
	movzx A0,byte [Dframe-240]	; T25  
	mov dword[Dframe-256],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T27  
	cmp A0,12
	jnz L1485
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-8]	; lbcount -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L55
; ------------------------------ jump
	jmp	L1486
; ------------------------------ label
L1485:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-272],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-272]	; T29  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-264],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-264]	; T28  
	mov dword[Dframe-280],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-280]	; T30  
	cmp A0,13
	jnz L1487
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; lbcount -8  
	cmp A0,1
	jle L1488
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-8]	; lbcount -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; tklist -32  
	mov [Dframe-288],D0	; T31  
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; tklistx -40  
	mov [Dframe-296],D0	; T32  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; T31  
	mov D11,[Dframe-296]	; T32  
	call addlist_nextlx
	add Dstack, 32
; ------------------------------ jump
	jmp	L1489
; ------------------------------ label
L1488:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; tklist -32  
	cmp D0,0
	jnz L1490
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call alloctokenz
	mov [Dframe-304],D0	; T33  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-304]	; T33  
	mov [Dframe-32],D0	; tklist -32  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; tklist -32  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-312],D0	; T34  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-328],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-328]	; T36  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-320],B0	; T35  
; ------------------------------ move
	mov B0,[Dframe-320]	; T35  
	mov D13,[Dframe-312]	; T34 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; tklist -32  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-336],D0	; T37  
; ------------------------------ move
	mov A0,64
	mov D13,[Dframe-336]	; T37 *
	mov byte [D13],B0
; ------------------------------ label
L1490:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-12]	; paramno -12  
	mov A1,1
	sub A0,A1
	mov [Dframe-360],A0	; T40  
; ------------------------------ widen
	movsx D0,dword[Dframe-360]	; T40  
	mov qword[Dframe-352],D0	; T39  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; args 24  
	mov D1,[Dframe-352]	; T39  
	lea D0, [D0+D1*8]
	mov [Dframe-344],D0	; T38  
; ------------------------------ move
	mov D0,[Dframe-32]	; tklist -32  
	mov D13,[Dframe-344]	; T38 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L56
; ------------------------------ label
L1489:
; ------------------------------ jump
	jmp	L1491
; ------------------------------ label
L1487:
; ------------------------------ stmt
; ------------------------------ label
L54: ;<addtoken>
; ------------------------------ stmt
; ------------------------------ label
L55: ;<L280>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; tklist -32  
	mov [Dframe-368],D0	; T41  
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; tklistx -40  
	mov [Dframe-376],D0	; T42  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-368]	; T41  
	mov D11,[Dframe-376]	; T42  
	call addlist_nextlx
	add Dstack, 32
; ------------------------------ label
L1491:
; ------------------------------ label
L1486:
; ------------------------------ label
L1484:
; ------------------------------ label
L1482:
; ------------------------------ label
L1474:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L1476
; ------------------------------ label
L1475:
; ------------------------------ stmt
; ------------------------------ label
L56: ;<L278>
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; paramno -12  
	cmp A0,[Dframe-4]	; nparams -4  
	jz L1492
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-12]	; paramno -12  
	mov A1,1
	add A0,A1
	mov [Dframe-384],A0	; T43  
; ------------------------------ jumpcc
	mov A0,[Dframe-384]	; T43  
	cmp A0,[Dframe-4]	; nparams -4  
	jnz L1493
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; usesvargs -20  
	and A0,A0
	jz L1493
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; nparams -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-408],A0	; T46  
; ------------------------------ widen
	movsx D0,dword[Dframe-408]	; T46  
	mov qword[Dframe-400],D0	; T45  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; args 24  
	mov D1,[Dframe-400]	; T45  
	lea D0, [D0+D1*8]
	mov [Dframe-392],D0	; T44  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-392]	; T44 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1494
; ------------------------------ label
L1493:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK294
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1494:
; ------------------------------ label
L1492:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; nparams -4  
	jmp L1470
; ------------------------------ label
L1470:
; ------------------------------ hardret
	add Dstack, 416
	pop Dframe
	ret
;	End

;	Proc:substituteargs
substituteargs:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1392

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; params -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; seqstart -24  
; ------------------------------ move
	mov D0,[Dframe-24]	; seqstart -24  
	mov [Dframe-16],D0	; seq -16  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-48],D0	; newtkx -48  
; ------------------------------ move
	mov D0,[Dframe-48]	; newtkx -48  
	mov [Dframe-40],D0	; newtk -40  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-916],A0	; nhashhash -916  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-32],D0	; lasttoken -32  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1496
; ------------------------------ label
L1498:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-928],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-928]	; T1  
	mov dword[Dframe-936],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-936]	; T2  
	cmp A0,5
	jnz L1499
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; nargs 40  
	and A0,A0
	jz L1500
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; seq -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; seq -16  
	cmp D0,0
	jnz L1501
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK295
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1501:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,17
	mov B0, [D0+D1]
	mov [Dframe-944],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-944]	; T3  
	mov dword[Dframe-952],A0	; T4  
; ------------------------------ iand
	mov A0,[Dframe-952]	; T4  
	mov A1,2
	and A0,A1
	mov [Dframe-960],A0	; T5  
; ------------------------------ jumptrue
	mov A0,[Dframe-960]	; T5  
	and A0,A0
	jnz L1502
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK296
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1502:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,28
	mov A0, [D0+D1]
	mov [Dframe-100],A0	; n -100  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-100]	; n -100  
	mov A1,1
	sub A0,A1
	mov [Dframe-984],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-984]	; T8  
	mov qword[Dframe-976],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe+24]	; args 24  
	mov D1,[Dframe-976]	; T7  
	mov D0, [D0+D1*8]
	mov [Dframe-968],D0	; T6  
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; tk -96  
	mov [Dframe-992],D0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-968]	; T6  
	mov D11,[Dframe-992]	; T9  
	call stringify
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; newtk -40  
	mov [Dframe-1000],D0	; T10  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; newtkx -48  
	mov [Dframe-1008],D0	; T11  
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; tk -96  
	mov [Dframe-1016],D0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1000]	; T10  
	mov D11,[Dframe-1008]	; T11  
	mov D12,[Dframe-1016]	; T12  
	call addlisttoken_copy
	add Dstack, 32
; ------------------------------ jump
	jmp	L1503
; ------------------------------ label
L1500:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; newtk -40  
	mov [Dframe-1024],D0	; T13  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; newtkx -48  
	mov [Dframe-1032],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1024]	; T13  
	mov D11,[Dframe-1032]	; T14  
	mov D12,[Dframe-16]	; seq -16  
	call addlisttoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-48]	; newtkx -48  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-1040],D0	; T15  
; ------------------------------ move
	mov A0,6
	mov D13,[Dframe-1040]	; T15 *
	mov byte [D13],B0
; ------------------------------ label
L1503:
; ------------------------------ jump
	jmp	L1504
; ------------------------------ label
L1499:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1048],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-1048]	; T16  
	mov dword[Dframe-1056],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-1056]	; T17  
	cmp A0,7
	jnz L1505
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; seq -16  
	cmp D0,[Dframe-24]	; seqstart -24  
	jnz L1506
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK297
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1506:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-916]	; nhashhash -916  
	cmp A0,100
	jl L1507
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK298
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1507:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[Dframe-916]	; nhashhash -916  
	mov A0,dword[Dframe-916]	; nhashhash -916  
	mov dword[Dframe-1080],A0	; T20  
; ------------------------------ sub
	mov A0,[Dframe-1080]	; T20  
	mov A1,1
	sub A0,A1
	mov [Dframe-1088],A0	; T21  
; ------------------------------ widen
	movsx D0,dword[Dframe-1088]	; T21  
	mov qword[Dframe-1072],D0	; T19  
; ------------------------------ indexlv
	lea D0,[Dframe-912]	; hhpoints -912  
	mov D1,[Dframe-1072]	; T19  
	lea D0, [D0+D1*8]
	mov [Dframe-1064],D0	; T18  
; ------------------------------ move
	mov D0,[Dframe-48]	; newtkx -48  
	mov D13,[Dframe-1064]	; T18 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1508
; ------------------------------ label
L1505:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1096],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-1096]	; T22  
	mov dword[Dframe-1104],A0	; T23  
; ------------------------------ jumpcc
	mov A0,[Dframe-1104]	; T23  
	cmp A0,65
	jnz L1509
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,17
	mov B0, [D0+D1]
	mov [Dframe-1112],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-1112]	; T24  
	mov dword[Dframe-1120],A0	; T25  
; ------------------------------ iand
	mov A0,[Dframe-1120]	; T25  
	mov A1,2
	and A0,A1
	mov [Dframe-1128],A0	; T26  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1128]	; T26  
	and A0,A0
	jz L1509
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; nargs 40  
	and A0,A0
	jz L1509
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,28
	mov A0, [D0+D1]
	mov [Dframe-100],A0	; n -100  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-1136],D0	; T27  
; ------------------------------ jumpfalse
	mov D0,[Dframe-1136]	; T27  
	and D0,D0
	jz L1512
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-1152],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-1152]	; T29  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1144],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-1144]	; T28  
	mov dword[Dframe-1160],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-1160]	; T30  
	cmp A0,7
	jz L1511
; ------------------------------ label
L1512:
; ------------------------------ jumpfalse
	mov D0,[Dframe-32]	; lasttoken -32  
	and D0,D0
	jz L1510
; ------------------------------ index
	mov D0,[Dframe-32]	; lasttoken -32  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1168],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-1168]	; T31  
	mov dword[Dframe-1176],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-1176]	; T32  
	cmp A0,7
	jnz L1510
; ------------------------------ label
L1511:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; newtk -40  
	mov [Dframe-1184],D0	; T33  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; newtkx -48  
	mov [Dframe-1192],D0	; T34  
; ------------------------------ sub
	mov A0,[Dframe-100]	; n -100  
	mov A1,1
	sub A0,A1
	mov [Dframe-1216],A0	; T37  
; ------------------------------ widen
	movsx D0,dword[Dframe-1216]	; T37  
	mov qword[Dframe-1208],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe+24]	; args 24  
	mov D1,[Dframe-1208]	; T36  
	mov D0, [D0+D1*8]
	mov [Dframe-1200],D0	; T35  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1184]	; T33  
	mov D11,[Dframe-1192]	; T34  
	mov D12,[Dframe-1200]	; T35  
	call addlisttoken_seq
	add Dstack, 32
; ------------------------------ jump
	jmp	L1513
; ------------------------------ label
L1510:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-100]	; n -100  
	mov A1,1
	sub A0,A1
	mov [Dframe-1232],A0	; T39  
; ------------------------------ widen
	movsx D0,dword[Dframe-1232]	; T39  
	mov qword[Dframe-1224],D0	; T38  
; ------------------------------ index
	mov D0,[Dframe+32]	; expargs 32  
	mov D1,[Dframe-1224]	; T38  
	mov D0, [D0+D1*8]
	mov [Dframe-64],D0	; tkexp -64  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-64]	; tkexp -64  
	cmp D0,0
	jnz L1514
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-100]	; n -100  
	mov A1,1
	sub A0,A1
	mov [Dframe-1256],A0	; T42  
; ------------------------------ widen
	movsx D0,dword[Dframe-1256]	; T42  
	mov qword[Dframe-1248],D0	; T41  
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; expargs 32  
	mov D1,[Dframe-1248]	; T41  
	lea D0, [D0+D1*8]
	mov [Dframe-1240],D0	; T40  
; ------------------------------ sub
	mov A0,[Dframe-100]	; n -100  
	mov A1,1
	sub A0,A1
	mov [Dframe-1280],A0	; T45  
; ------------------------------ widen
	movsx D0,dword[Dframe-1280]	; T45  
	mov qword[Dframe-1272],D0	; T44  
; ------------------------------ index
	mov D0,[Dframe+24]	; args 24  
	mov D1,[Dframe-1272]	; T44  
	mov D0, [D0+D1*8]
	mov [Dframe-1264],D0	; T43  
; ------------------------------ getaddr
	lea D0,[Dframe-108]	; expanded -108  
	mov [Dframe-1288],D0	; T46  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1264]	; T43  
	mov D11,[Dframe+48]	; macrostack 48  
	mov D12,[Dframe-1288]	; T46  
	call scantokenseq
	mov [Dframe-1296],D0	; T47  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1296]	; T47  
	mov D13,[Dframe-1240]	; T40 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe-1240]	; T40 *
	mov D0,qword[D13]
	mov qword[Dframe-64],D0	; tkexp -64  
; ------------------------------ label
L1514:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; newtk -40  
	mov [Dframe-1304],D0	; T48  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; newtkx -48  
	mov [Dframe-1312],D0	; T49  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1304]	; T48  
	mov D11,[Dframe-1312]	; T49  
	mov D12,[Dframe-64]	; tkexp -64  
	call addlisttoken_seq
	add Dstack, 32
; ------------------------------ label
L1513:
; ------------------------------ jump
	jmp	L1515
; ------------------------------ label
L1509:
; ------------------------------ stmt
; ------------------------------ label
L57: ;<doother>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; newtk -40  
	mov [Dframe-1320],D0	; T50  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; newtkx -48  
	mov [Dframe-1328],D0	; T51  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1320]	; T50  
	mov D11,[Dframe-1328]	; T51  
	mov D12,[Dframe-16]	; seq -16  
	call addlisttoken_copy
	add Dstack, 32
; ------------------------------ label
L1515:
; ------------------------------ label
L1508:
; ------------------------------ label
L1504:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; seq -16  
	mov [Dframe-32],D0	; lasttoken -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; seq -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; seq -16  
; ------------------------------ label
L1496:
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; seq -16  
	and D0,D0
	jnz L1498
; ------------------------------ label
L1497:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-916]	; nhashhash -916  
	and A0,A0
	jz L1516
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-56],D0	; niltk -56  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-104],A0	; i -104  
; ------------------------------ jump
	jmp	L1519
; ------------------------------ label
L1520:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-104]	; i -104  
	mov A1,1
	sub A0,A1
	mov [Dframe-1352],A0	; T54  
; ------------------------------ widen
	movsx D0,dword[Dframe-1352]	; T54  
	mov qword[Dframe-1344],D0	; T53  
; ------------------------------ index
	lea D0,[Dframe-912]	; hhpoints -912  
	mov D1,[Dframe-1344]	; T53  
	mov D0, [D0+D1*8]
	mov [Dframe-1336],D0	; T52  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; i -104  
	cmp A0,[Dframe-916]	; nhashhash -916  
	jge L1521
; ------------------------------ add
	mov A0,[Dframe-104]	; i -104  
	mov A1,1
	add A0,A1
	mov [Dframe-1376],A0	; T57  
; ------------------------------ sub
	mov A0,[Dframe-1376]	; T57  
	mov A1,1
	sub A0,A1
	mov [Dframe-1384],A0	; T58  
; ------------------------------ widen
	movsx D0,dword[Dframe-1384]	; T58  
	mov qword[Dframe-1368],D0	; T56  
; ------------------------------ indexref
	lea D0,[Dframe-912]	; hhpoints -912  
	mov D1,[Dframe-1368]	; T56  
	lea D0, [D0+D1*8]
	mov [Dframe-1360],D0	; T55  
; ------------------------------ jump
	jmp	L1522
; ------------------------------ label
L1521:
; ------------------------------ getaddr
	lea D0,[Dframe-56]	; niltk -56  
	mov [Dframe-1360],D0	; T55  
; ------------------------------ label
L1522:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1336]	; T52  
	mov D11,[Dframe-1360]	; T55  
	call pastetokens
	add Dstack, 32
; ------------------------------ label
L1517:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-104]	; i -104  
; ------------------------------ label
L1519:
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; i -104  
	cmp A0,[Dframe-916]	; nhashhash -916  
	jle L1520
; ------------------------------ label
L1518:
; ------------------------------ label
L1516:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-40]	; newtk -40  
	jmp L1495
; ------------------------------ label
L1495:
; ------------------------------ hardret
	add Dstack, 1392
	pop Dframe
	ret
;	End

;	Proc:strtoken
strtoken:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1088

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getptr
	lea D10,[Dframe-80]	; T1  
	mov D11,[Dframe+16]	; lp 16  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	lea D10,[Dframe-48]	; l -48  
	lea D11,[Dframe-80]	; T1  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-96],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-96]	; T3  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T2  
	mov dword[Dframe-104],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T4  
	cmp A0,65
	jnz L1524
; ------------------------------ stmt
; ------------------------------ label
L58: ;<doname>
; ------------------------------ stmt
; ------------------------------ label
L59: ;<L295>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-128],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-128]	; T7  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-120],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-120]	; T6  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T5  
	mov dword[Dframe-136],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-136]	; T8  
	mov D13,[Dframe+24]	; length 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-160],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-160]	; T11  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-152]	; T10  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T9  
; ------------------------------ returnx
	mov D0,[Dframe-144]	; T9  
	jmp L1523
; ------------------------------ jump
	jmp	L1525
; ------------------------------ label
L1524:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-176],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-176]	; T13  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T12  
	mov dword[Dframe-184],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T14  
	cmp A0,57
	jz L1527
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-200],D0	; T16  
; ------------------------------ index
	mov D0,[Dframe-200]	; T16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-192],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T15  
	mov dword[Dframe-208],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T17  
	cmp A0,58
	jnz L1526
; ------------------------------ label
L1527:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-224],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe-224]	; T19  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T18  
; ------------------------------ move
	mov A0,[Dframe-216]	; T18  
	mov D13,[Dframe+24]	; length 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-240],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe-240]	; T21  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-232],B0	; T20  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T20  
	mov dword[Dframe-248],A0	; T22  
; ------------------------------ jumpfalse
	mov A0,[Dframe-248]	; T22  
	and A0,A0
	jz L1528
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-288],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-288]	; T27  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-280],B0	; T26  
; ------------------------------ widen
	movzx A0,byte [Dframe-280]	; T26  
	mov dword[Dframe-296],A0	; T28  
; ------------------------------ widen
	movsx D0,dword[Dframe-296]	; T28  
	mov qword[Dframe-272],D0	; T25  
; ------------------------------ index
	lea D0,[sourcefiletext]
	mov D1,[Dframe-272]	; T25  
	mov D0, [D0+D1*8]
	mov [Dframe-264],D0	; T24  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-320],D0	; T31  
; ------------------------------ index
	mov D0,[Dframe-320]	; T31  
	mov A1,28
	mov A0, [D0+D1]
	mov [Dframe-312],A0	; T30  
; ------------------------------ widen
	movsx D0,dword[Dframe-312]	; T30  
	mov qword[Dframe-304],D0	; T29  
; ------------------------------ indexref
	mov D0,[Dframe-264]	; T24  
	mov D1,[Dframe-304]	; T29  
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T23  
; ------------------------------ returnx
	mov D0,[Dframe-256]	; T23  
	jmp L1523
; ------------------------------ jump
	jmp	L1529
; ------------------------------ label
L1528:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-352],D0	; T35  
; ------------------------------ index
	mov D0,[Dframe-352]	; T35  
	mov A1,28
	mov A0, [D0+D1]
	mov [Dframe-344],A0	; T34  
; ------------------------------ sub
	mov A0,[Dframe-344]	; T34  
	mov A1,1
	sub A0,A1
	mov [Dframe-360],A0	; T36  
; ------------------------------ widen
	movsx D0,dword[Dframe-360]	; T36  
	mov qword[Dframe-336],D0	; T33  
; ------------------------------ index
	lea D0,[pastedtokenlist]
	mov D1,[Dframe-336]	; T33  
	mov D0, [D0+D1*8]
	mov [Dframe-328],D0	; T32  
; ------------------------------ returnx
	mov D0,[Dframe-328]	; T32  
	jmp L1523
; ------------------------------ label
L1529:
; ------------------------------ jump
	jmp	L1530
; ------------------------------ label
L1526:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-376],D0	; T38  
; ------------------------------ index
	mov D0,[Dframe-376]	; T38  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-368],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-368]	; T37  
	mov dword[Dframe-384],A0	; T39  
; ------------------------------ jumpcc
	mov A0,[Dframe-384]	; T39  
	cmp A0,56
	jnz L1531
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-400],D0	; T41  
; ------------------------------ index
	mov D0,[Dframe-400]	; T41  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-392],A0	; T40  
; ------------------------------ move
	mov A0,[Dframe-392]	; T40  
	mov D13,[Dframe+24]	; length 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-416],D0	; T43  
; ------------------------------ index
	mov D0,[Dframe-416]	; T43  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-408],D0	; T42  
; ------------------------------ returnx
	mov D0,[Dframe-408]	; T42  
	jmp L1523
; ------------------------------ jump
	jmp	L1532
; ------------------------------ label
L1531:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-432],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe-432]	; T45  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-424],B0	; T44  
; ------------------------------ widen
	movzx A0,byte [Dframe-424]	; T44  
	mov dword[Dframe-440],A0	; T46  
; ------------------------------ jumpcc
	mov A0,[Dframe-440]	; T46  
	cmp A0,61
	jz L1534
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-456],D0	; T48  
; ------------------------------ index
	mov D0,[Dframe-456]	; T48  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-448],B0	; T47  
; ------------------------------ widen
	movzx A0,byte [Dframe-448]	; T47  
	mov dword[Dframe-464],A0	; T49  
; ------------------------------ jumpcc
	mov A0,[Dframe-464]	; T49  
	cmp A0,62
	jnz L1533
; ------------------------------ label
L1534:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-480],D0	; T51  
; ------------------------------ index
	mov D0,[Dframe-480]	; T51  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-472],D0	; T50  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-496],D0	; T53  
; ------------------------------ index
	mov D0,[Dframe-496]	; T53  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-488],A0	; T52  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-472]	; T50  
	mov A11,[Dframe-488]	; T52  
	mov D12,[Dframe+24]	; length 24  
	mov A13,34
	call strstring
	mov [Dframe-504],D0	; T54  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-504]	; T54  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; s -16  
	jmp L1523
; ------------------------------ jump
	jmp	L1535
; ------------------------------ label
L1533:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-520],D0	; T56  
; ------------------------------ index
	mov D0,[Dframe-520]	; T56  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-512],B0	; T55  
; ------------------------------ widen
	movzx A0,byte [Dframe-512]	; T55  
	mov dword[Dframe-528],A0	; T57  
; ------------------------------ jumpcc
	mov A0,[Dframe-528]	; T57  
	cmp A0,59
	jnz L1536
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-544],D0	; T59  
; ------------------------------ index
	mov D0,[Dframe-544]	; T59  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-536],D0	; T58  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-560],D0	; T61  
; ------------------------------ index
	mov D0,[Dframe-560]	; T61  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-552],A0	; T60  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-536]	; T58  
	mov A11,[Dframe-552]	; T60  
	mov D12,[Dframe+24]	; length 24  
	mov A13,39
	call strstring
	mov [Dframe-568],D0	; T62  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-568]	; T62  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; s -16  
	jmp L1523
; ------------------------------ jump
	jmp	L1537
; ------------------------------ label
L1536:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-584],D0	; T64  
; ------------------------------ index
	mov D0,[Dframe-584]	; T64  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-576],B0	; T63  
; ------------------------------ widen
	movzx A0,byte [Dframe-576]	; T63  
	mov dword[Dframe-592],A0	; T65  
; ------------------------------ jumpcc
	mov A0,[Dframe-592]	; T65  
	cmp A0,54
	jnz L1538
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[dowhitespace]
	and A0,A0
	jz L1539
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-608],D0	; T67  
; ------------------------------ index
	mov D0,[Dframe-608]	; T67  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-600],A0	; T66  
; ------------------------------ add
	mov A0,[Dframe-600]	; T66  
	mov A1,1
	add A0,A1
	mov [Dframe-616],A0	; T68  
; ------------------------------ move
	mov A0,[Dframe-616]	; T68  
	mov D13,[Dframe+24]	; length 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; length 24  
	mov A0, [D0]
	mov [Dframe-624],A0	; T69  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-624]	; T69  
	call pcm_alloc
	mov [Dframe-632],D0	; T70  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-632]	; T70  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,10
	mov D13,[Dframe-16]	; s -16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe-16]	; s -16  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-648],D0	; T72  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-672],D0	; T75  
; ------------------------------ index
	mov D0,[Dframe-672]	; T75  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-664],D0	; T74  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-696],D0	; T78  
; ------------------------------ index
	mov D0,[Dframe-696]	; T78  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-688],A0	; T77  
; ------------------------------ widen
	movsx D0,dword[Dframe-688]	; T77  
	mov qword[Dframe-680],D0	; T76  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-648]	; T72  
	mov D11,[Dframe-664]	; T74  
	mov D12,[Dframe-680]	; T76  
	call memcpy
	add Dstack, 32
; ------------------------------ jump
	jmp	L1540
; ------------------------------ label
L1539:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe+24]	; length 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK299
	jmp L1523
; ------------------------------ label
L1540:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; s -16  
	jmp L1523
; ------------------------------ jump
	jmp	L1541
; ------------------------------ label
L1538:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-712],D0	; T80  
; ------------------------------ index
	mov D0,[Dframe-712]	; T80  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-704],B0	; T79  
; ------------------------------ widen
	movzx A0,byte [Dframe-704]	; T79  
	mov dword[Dframe-720],A0	; T81  
; ------------------------------ jumpcc
	mov A0,[Dframe-720]	; T81  
	cmp A0,55
	jnz L1542
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe+24]	; length 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK300
	jmp L1523
; ------------------------------ jump
	jmp	L1543
; ------------------------------ label
L1542:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-736],D0	; T83  
; ------------------------------ index
	mov D0,[Dframe-736]	; T83  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-728],B0	; T82  
; ------------------------------ widen
	movzx A0,byte [Dframe-728]	; T82  
	mov dword[Dframe-744],A0	; T84  
; ------------------------------ jumpcc
	mov A0,[Dframe-744]	; T84  
	cmp A0,68
	jz L1545
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-760],D0	; T86  
; ------------------------------ index
	mov D0,[Dframe-760]	; T86  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-752],B0	; T85  
; ------------------------------ widen
	movzx A0,byte [Dframe-752]	; T85  
	mov dword[Dframe-768],A0	; T87  
; ------------------------------ jumpcc
	mov A0,[Dframe-768]	; T87  
	cmp A0,84
	jz L1545
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-784],D0	; T89  
; ------------------------------ index
	mov D0,[Dframe-784]	; T89  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-776],B0	; T88  
; ------------------------------ widen
	movzx A0,byte [Dframe-776]	; T88  
	mov dword[Dframe-792],A0	; T90  
; ------------------------------ jumpcc
	mov A0,[Dframe-792]	; T90  
	cmp A0,83
	jz L1545
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-808],D0	; T92  
; ------------------------------ index
	mov D0,[Dframe-808]	; T92  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-800],B0	; T91  
; ------------------------------ widen
	movzx A0,byte [Dframe-800]	; T91  
	mov dword[Dframe-816],A0	; T93  
; ------------------------------ jumpcc
	mov A0,[Dframe-816]	; T93  
	cmp A0,85
	jnz L1544
; ------------------------------ label
L1545:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L59
; ------------------------------ jump
	jmp	L1546
; ------------------------------ label
L1544:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-840],D0	; T96  
; ------------------------------ index
	mov D0,[Dframe-840]	; T96  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-832],B0	; T95  
; ------------------------------ widen
	movzx A0,byte [Dframe-832]	; T95  
	mov dword[Dframe-848],A0	; T97  
; ------------------------------ sub
	mov A0,[Dframe-848]	; T97  
	mov A1,1
	sub A0,A1
	mov [Dframe-856],A0	; T98  
; ------------------------------ widen
	movsx D0,dword[Dframe-856]	; T98  
	mov qword[Dframe-824],D0	; T94  
; ------------------------------ index
	lea D0,[shortsymbolnames]
	mov D1,[Dframe-824]	; T94  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; name -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; name -8  
	call strlen
	mov [Dframe-872],D0	; T100  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-872]	; T100  
	mov A0,A0
	mov [Dframe-864],A0	; T99  
; ------------------------------ move
	mov A0,[Dframe-864]	; T99  
	mov D13,[Dframe+24]	; length 24 *
	mov dword[D13],A0
; ------------------------------ jumpfalse
	mov D13,[Dframe+24]	; length 24 *
	mov A0,dword[D13]
	and A0,A0
	jz L1547
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; name -8  
	mov B0, [D0]
	mov [Dframe-896],B0	; T103  
; ------------------------------ widen
	movzx A0,byte [Dframe-896]	; T103  
	mov dword[Dframe-904],A0	; T104  
; ------------------------------ truncate
	mov A0,[Dframe-904]	; T104  
	and D0,255
	mov [Dframe-888],B0	; T102  
; ------------------------------ widen
	movzx A0,byte [Dframe-888]	; T102  
	mov dword[Dframe-880],A0	; T101  
; ------------------------------ jumpcc
	mov A0,[Dframe-880]	; T101  
	cmp A0,107
	jz L1548
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; name -8  
	jmp L1523
; ------------------------------ jump
	jmp	L1549
; ------------------------------ label
L1548:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-952],D0	; T110  
; ------------------------------ index
	mov D0,[Dframe-952]	; T110  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-944],B0	; T109  
; ------------------------------ widen
	movzx A0,byte [Dframe-944]	; T109  
	mov dword[Dframe-960],A0	; T111  
; ------------------------------ sub
	mov A0,[Dframe-960]	; T111  
	mov A1,1
	sub A0,A1
	mov [Dframe-968],A0	; T112  
; ------------------------------ widen
	movsx D0,dword[Dframe-968]	; T112  
	mov qword[Dframe-936],D0	; T108  
; ------------------------------ index
	lea D0,[symbolnames]
	mov D1,[Dframe-936]	; T108  
	mov D0, [D0+D1*8]
	mov [Dframe-928],D0	; T107  
; ------------------------------ indexref
	mov D0,[Dframe-928]	; T107  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-920],D0	; T106  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-920]	; T106  
	call strlen
	mov [Dframe-976],D0	; T113  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-976]	; T113  
	mov A0,A0
	mov [Dframe-912],A0	; T105  
; ------------------------------ move
	mov A0,[Dframe-912]	; T105  
	mov D13,[Dframe+24]	; length 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-1016],D0	; T118  
; ------------------------------ index
	mov D0,[Dframe-1016]	; T118  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1008],B0	; T117  
; ------------------------------ widen
	movzx A0,byte [Dframe-1008]	; T117  
	mov dword[Dframe-1024],A0	; T119  
; ------------------------------ sub
	mov A0,[Dframe-1024]	; T119  
	mov A1,1
	sub A0,A1
	mov [Dframe-1032],A0	; T120  
; ------------------------------ widen
	movsx D0,dword[Dframe-1032]	; T120  
	mov qword[Dframe-1000],D0	; T116  
; ------------------------------ index
	lea D0,[symbolnames]
	mov D1,[Dframe-1000]	; T116  
	mov D0, [D0+D1*8]
	mov [Dframe-992],D0	; T115  
; ------------------------------ indexref
	mov D0,[Dframe-992]	; T115  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-984],D0	; T114  
; ------------------------------ returnx
	mov D0,[Dframe-984]	; T114  
	jmp L1523
; ------------------------------ label
L1549:
; ------------------------------ jump
	jmp	L1550
; ------------------------------ label
L1547:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; l -48  
	mov [Dframe-1064],D0	; T124  
; ------------------------------ index
	mov D0,[Dframe-1064]	; T124  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1056],B0	; T123  
; ------------------------------ widen
	movzx A0,byte [Dframe-1056]	; T123  
	mov dword[Dframe-1072],A0	; T125  
; ------------------------------ sub
	mov A0,[Dframe-1072]	; T125  
	mov A1,1
	sub A0,A1
	mov [Dframe-1080],A0	; T126  
; ------------------------------ widen
	movsx D0,dword[Dframe-1080]	; T126  
	mov qword[Dframe-1048],D0	; T122  
; ------------------------------ index
	lea D0,[symbolnames]
	mov D1,[Dframe-1048]	; T122  
	mov D0, [D0+D1*8]
	mov [Dframe-1040],D0	; T121  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK301
	mov D11,KK302
	mov D12,[Dframe-1040]	; T121  
	mov D13,KK303
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK304
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1550:
; ------------------------------ label
L1546:
; ------------------------------ label
L1543:
; ------------------------------ label
L1541:
; ------------------------------ label
L1537:
; ------------------------------ label
L1535:
; ------------------------------ label
L1532:
; ------------------------------ label
L1530:
; ------------------------------ label
L1525:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK305
	jmp L1523
; ------------------------------ label
L1523:
; ------------------------------ hardret
	add Dstack, 1088
	pop Dframe
	ret
;	End

;	Proc:strstring
strstring:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ mul
	mov A0,[Dframe+24]	; length 24  
	mov A1,2
	mul A1
	mov [Dframe-24],A0	; T1  
; ------------------------------ add
	mov A0,[Dframe-24]	; T1  
	mov A1,4
	add A0,A1
	mov [Dframe-32],A0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-32]	; T2  
	call pcm_alloc
	mov [Dframe-40],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T3  
	mov [Dframe-16],D0	; u -16  
; ------------------------------ move
	mov D0,[Dframe-16]	; u -16  
	mov [Dframe-8],D0	; t -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; quotechar 40  
	and A0,A0
	jz L1552
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+40]	; quotechar 40  
	mov D13,[Dframe-16]	; u -16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-16]	; u -16  
; ------------------------------ label
L1552:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	mov D11,[Dframe-16]	; u -16  
	mov A12,[Dframe+24]	; length 24  
	call convertstring
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; t -8  
	call strlen
	mov [Dframe-56],D0	; T5  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-56]	; T5  
	mov A0,A0
	mov [Dframe-48],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-48]	; T4  
	mov D13,[Dframe+32]	; newlength 32 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; quotechar 40  
	and A0,A0
	jz L1553
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+32]	; newlength 32  
	mov A0, [D0]
	mov [Dframe-80],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T8  
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; t -8  
	mov D1,[Dframe-72]	; T7  
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ move
	mov A0,[Dframe+40]	; quotechar 40  
	mov D13,[Dframe-64]	; T6 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	mov D13,[Dframe+32]	; newlength 32 *
	inc dword[D13]
; ------------------------------ label
L1553:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; t -8  
	jmp L1551
; ------------------------------ label
L1551:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:emittoken
	segment .data
	align 4
emittoken.lasttoken:
	dd 0
	segment .text
emittoken:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; lp 16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-32],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T2  
	cmp A0,54
	jnz L1555
; ------------------------------ jumpcc
	mov A0,[emittoken.lasttoken]
	cmp A0,54
	jnz L1555
; ------------------------------ stmt
; ------------------------------ return
	jmp L1554
; ------------------------------ label
L1555:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4]	; length -4  
	mov [Dframe-40],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; lp 16  
	mov D11,[Dframe-40]	; T3  
	call strtoken
	mov [Dframe-48],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T4  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; lp 16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[emittoken.lasttoken]
	mov A11,[Dframe-64]	; T6  
	call needspace
	mov [Dframe-72],A0	; T7  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-72]	; T7  
	and A0,A0
	jz L1556
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; dest 24  
	mov D11,KK306
	mov A12,1
	call gs_strn
	add Dstack, 32
; ------------------------------ label
L1556:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; dest 24  
	mov D11,[Dframe-16]	; s -16  
	mov A12,[Dframe-4]	; length -4  
	call gs_strn
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; lp 16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T8  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-88]	; T9  
	mov [emittoken.lasttoken],A0
; ------------------------------ label
L1554:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global showtoken
;	Proc:showtoken
	segment .bss
	align 8,resb 1
showtoken.buffer:	resb 16
	segment .data
	align 8
showtoken.dest:
	dq showtoken.buffer
	segment .text
showtoken:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[showtoken.dest]
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; lp 16  
	mov D11,[showtoken.dest]
	call emittoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[showtoken.dest]
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ index
	mov D0,[showtoken.dest]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK307
	mov A11,[Dframe-8]	; T1  
	mov D12,[Dframe-16]	; T2  
	call printf
	add Dstack, 32
; ------------------------------ label
L1557:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:stringify
	segment .bss
	align 8,resb 1
stringify.buffer:	resb 16
	segment .data
	align 8
stringify.deststr:
	dq stringify.buffer
	segment .text
stringify:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; dest 24  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T1  
; ------------------------------ move
	mov A0,61
	mov D13,[Dframe-24]	; T1 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; dest 24  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-32]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; seq 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ jumpcc
	mov D0,[Dframe-40]	; T3  
	cmp D0,0
	jnz L1559
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-12]	; length -12  
	mov [Dframe-48],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; seq 16  
	mov D11,[Dframe-48]	; T4  
	call strtoken
	mov [Dframe-56],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov [Dframe-8],D0	; s -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; dest 24  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ move
	mov A0,[Dframe-12]	; length -12  
	mov D13,[Dframe-64]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; dest 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T7  
; ------------------------------ move
	mov D0,[Dframe-8]	; s -8  
	mov D13,[Dframe-72]	; T7 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ return
	jmp L1558
; ------------------------------ label
L1559:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[stringify.deststr]
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1560
; ------------------------------ label
L1562:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; seq 16  
	mov D11,[stringify.deststr]
	call emittoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; seq 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; seq 16  
; ------------------------------ label
L1560:
; ------------------------------ jumptrue
	mov D0,[Dframe+16]	; seq 16  
	and D0,D0
	jnz L1562
; ------------------------------ label
L1561:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; dest 24  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T8  
; ------------------------------ move
	mov A0,[Dframe-12]	; length -12  
	mov D13,[Dframe-80]	; T8 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; dest 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ index
	mov D0,[stringify.deststr]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-96],D0	; T10  
; ------------------------------ move
	mov D0,[Dframe-96]	; T10  
	mov D13,[Dframe-88]	; T9 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; dest 24  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T11  
; ------------------------------ index
	mov D0,[stringify.deststr]
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-112],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-112]	; T12  
	mov D13,[Dframe-104]	; T11 *
	mov dword[D13],A0
; ------------------------------ label
L1558:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:pastetokens
pastetokens:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 528

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; tk2 -8  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; tknext 24  
	mov D0, [D0]
	mov [Dframe-128],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; tk2 -8  
	cmp D0,[Dframe-128]	; T1  
	jnz L1564
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; tk 16  
	mov D13,[Dframe+24]	; tknext 24 *
	mov qword[D13],D0
; ------------------------------ label
L1564:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; tk 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-8]	; tk2 -8  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe-144]	; T3  
	mov D13,[Dframe-136]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-152],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-152]	; T4  
	mov dword[Dframe-160],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T5  
	cmp A0,64
	jnz L1565
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; tk2 -8  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T6  
	mov dword[Dframe-176],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T7  
	cmp A0,64
	jnz L1566
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1567
; ------------------------------ label
L1566:
; ------------------------------ stmt
; ------------------------------ getptr
	lea D10,[Dframe-208]	; T8  
	mov D11,[Dframe-8]	; tk2 -8  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe+16]	; tk 16  
	lea D11,[Dframe-208]	; T8  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ label
L1567:
; ------------------------------ jump
	jmp	L1568
; ------------------------------ label
L1565:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; tk2 -8  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-216],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T9  
	mov dword[Dframe-224],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T10  
	cmp A0,64
	jnz L1569
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1570
; ------------------------------ label
L1569:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-12]	; length1 -12  
	mov [Dframe-232],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; tk 16  
	mov D11,[Dframe-232]	; T11  
	call strtoken
	mov [Dframe-240],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-240]	; T12  
	mov [Dframe-24],D0	; s -24  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; length2 -16  
	mov [Dframe-248],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; tk2 -8  
	mov D11,[Dframe-248]	; T13  
	call strtoken
	mov [Dframe-256],D0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-256]	; T14  
	mov [Dframe-32],D0	; t -32  
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-12]	; length1 -12  
	mov A1,[Dframe-16]	; length2 -16  
	add A0,A1
	mov [Dframe-264],A0	; T15  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-264]	; T15  
	call pcm_alloc
	mov [Dframe-272],D0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-272]	; T16  
	mov [Dframe-40],D0	; u -40  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; length1 -12  
	mov qword[Dframe-296],D0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-40]	; u -40  
	mov D11,[Dframe-24]	; s -24  
	mov D12,[Dframe-296]	; T19  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; length1 -12  
	mov qword[Dframe-320],D0	; T22  
; ------------------------------ indexref
	mov D0,[Dframe-40]	; u -40  
	mov D1,[Dframe-320]	; T22  
	lea D0, [D0+D1]
	mov [Dframe-312],D0	; T21  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; length2 -16  
	mov qword[Dframe-336],D0	; T24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-312]	; T21  
	mov D11,[Dframe-32]	; t -32  
	mov D12,[Dframe-336]	; T24  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; length1 -12  
	mov qword[Dframe-360],D0	; T27  
; ------------------------------ indexref
	mov D0,[Dframe-40]	; u -40  
	mov D1,[Dframe-360]	; T27  
	lea D0, [D0+D1]
	mov [Dframe-352],D0	; T26  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; length2 -16  
	mov qword[Dframe-368],D0	; T28  
; ------------------------------ indexlv
	mov D0,[Dframe-352]	; T26  
	mov D1,[Dframe-368]	; T28  
	lea D0, [D0+D1]
	mov [Dframe-344],D0	; T25  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-344]	; T25 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[npastedtokens]
	cmp A0,3500
	jl L1571
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK308
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1571:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[npastedtokens]
	mov A0,dword[npastedtokens]
	mov dword[Dframe-392],A0	; T31  
; ------------------------------ sub
	mov A0,[Dframe-392]	; T31  
	mov A1,1
	sub A0,A1
	mov [Dframe-400],A0	; T32  
; ------------------------------ widen
	movsx D0,dword[Dframe-400]	; T32  
	mov qword[Dframe-384],D0	; T30  
; ------------------------------ indexlv
	lea D0,[pastedtokenlist]
	mov D1,[Dframe-384]	; T30  
	lea D0, [D0+D1*8]
	mov [Dframe-376],D0	; T29  
; ------------------------------ move
	mov D0,[Dframe-40]	; u -40  
	mov D13,[Dframe-376]	; T29 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	lea D10,[Dframe-72]	; oldtoken -72  
	lea D11,[nextlx]
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[lxsptr]
	mov [Dframe-112],D0	; oldlxsptr -112  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[lx_stackindex]
	mov [Dframe-116],A0	; oldlx_stackindex -116  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-40]	; u -40  
	mov [lxsptr],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [lx_stackindex],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-416],D0	; T34  
; ------------------------------ indexlv
	mov D0,[Dframe-416]	; T34  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-408],D0	; T33  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-408]	; T33 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-432],D0	; T36  
; ------------------------------ indexlv
	mov D0,[Dframe-432]	; T36  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-424],D0	; T35  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-424]	; T35 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	lea D10,[Dframe-104]	; token -104  
	lea D11,[nextlx]
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-448],D0	; T38  
; ------------------------------ index
	mov D0,[Dframe-448]	; T38  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-440],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-440]	; T37  
	mov dword[Dframe-456],A0	; T39  
; ------------------------------ jumpcc
	mov A0,[Dframe-456]	; T39  
	cmp A0,55
	jz L1572
; ------------------------------ stmt
; ------------------------------ label
L1572:
; ------------------------------ stmt
; ------------------------------ move
	lea D10,[nextlx]
	lea D11,[Dframe-72]	; oldtoken -72  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-112]	; oldlxsptr -112  
	mov [lxsptr],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-116]	; oldlx_stackindex -116  
	mov [lx_stackindex],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-104]	; token -104  
	mov [Dframe-472],D0	; T41  
; ------------------------------ indexlv
	mov D0,[Dframe-472]	; T41  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-464],D0	; T40  
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-480],D0	; T42  
; ------------------------------ move
	mov D0,[Dframe-480]	; T42  
	mov D13,[Dframe-464]	; T40 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-104]	; token -104  
	mov [Dframe-496],D0	; T44  
; ------------------------------ indexlv
	mov D0,[Dframe-496]	; T44  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-488],D0	; T43  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-488]	; T43 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-104]	; token -104  
	mov [Dframe-512],D0	; T46  
; ------------------------------ indexlv
	mov D0,[Dframe-512]	; T46  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-504],D0	; T45  
; ------------------------------ move
	mov A0,[npastedtokens]
	mov D13,[Dframe-504]	; T45 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-104]	; token -104  
	mov [Dframe-528],D0	; T48  
; ------------------------------ indexlv
	mov D0,[Dframe-528]	; T48  
	mov A1,17
	lea D0, [D0+D1]
	mov [Dframe-520],D0	; T47  
; ------------------------------ iorto
	mov D13,[Dframe-520]	; T47 *
	mov B0,byte [D13]
	mov A1,8
	or B0,B1
	mov D13,qword[Dframe-520]	; T47 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov D10,[Dframe+16]	; tk 16  
	lea D11,[Dframe-104]	; token -104  
	mov D12,32
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ label
L1570:
; ------------------------------ label
L1568:
; ------------------------------ label
L1563:
; ------------------------------ hardret
	add Dstack, 528
	pop Dframe
	ret
;	End

;	Proc:getifexpr
getifexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4]	; sx -4  
	mov [Dframe-24],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; T2  
	call evalcondexpr
	mov [Dframe-32],D0	; T3  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-32]	; T3  
	mov A0,A0
	mov [Dframe-16],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-8],A0	; x -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-48],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-48]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T4  
	mov dword[Dframe-56],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T6  
	cmp A0,54
	jz L1574
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK309
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1574:
; ------------------------------ stmt
; ------------------------------ setcc
	mov A0,[Dframe-8]	; x -8  
	cmp A0,0
	setnz B0
	movzx A0,B0
	mov [Dframe-64],A0	; T7  
; ------------------------------ returnx
	mov A0,[Dframe-64]	; T7  
	jmp L1573
; ------------------------------ label
L1573:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:evalcondexpr
evalcondexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalorexpr
	mov [Dframe-40],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-56],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-56]	; T3  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T2  
	mov dword[Dframe-64],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T4  
	cmp A0,18
	jnz L1576
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-28]	; sy -28  
	mov [Dframe-72],D0	; T5  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-72]	; T5  
	call evalcondexpr
	mov [Dframe-80],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T6  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-96]	; T8  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T7  
	mov dword[Dframe-104],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T9  
	cmp A0,10
	jz L1577
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK310
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1577:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; sz -32  
	mov [Dframe-112],D0	; T10  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-112]	; T10  
	call evalcondexpr
	mov [Dframe-120],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-120]	; T11  
	mov [Dframe-24],D0	; z -24  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; x -8  
	and D0,D0
	jz L1578
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-28]	; sy -28  
	mov D13,[Dframe+16]	; sx 16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; y -16  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1579
; ------------------------------ label
L1578:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-32]	; sz -32  
	mov D13,[Dframe+16]	; sx 16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-24]	; z -24  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1579:
; ------------------------------ label
L1576:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1575
; ------------------------------ label
L1575:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:evalorexpr
evalorexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalandexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1581
; ------------------------------ label
L1583:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evalandexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; x -8  
	and D0,D0
	jnz L1586
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; y -16  
	and D0,D0
	jz L1584
; ------------------------------ label
L1586:
; ------------------------------ move
	mov A0,1
	mov [Dframe-64],A0	; T5  
; ------------------------------ jump
	jmp	L1585
; ------------------------------ label
L1584:
; ------------------------------ move
	mov A0,0
	mov [Dframe-64],A0	; T5  
; ------------------------------ label
L1585:
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T5  
	mov qword[Dframe-56],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1581:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-80],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-80]	; T7  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T6  
	mov dword[Dframe-88],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T8  
	cmp A0,29
	jz L1583
; ------------------------------ label
L1582:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1580
; ------------------------------ label
L1580:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:evalandexpr
evalandexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evaliorexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1588
; ------------------------------ label
L1590:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evaliorexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; x -8  
	and D0,D0
	jz L1591
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; y -16  
	and D0,D0
	jz L1591
; ------------------------------ move
	mov A0,1
	mov [Dframe-64],A0	; T5  
; ------------------------------ jump
	jmp	L1592
; ------------------------------ label
L1591:
; ------------------------------ move
	mov A0,0
	mov [Dframe-64],A0	; T5  
; ------------------------------ label
L1592:
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T5  
	mov qword[Dframe-56],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1588:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-80],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-80]	; T7  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T6  
	mov dword[Dframe-88],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T8  
	cmp A0,30
	jz L1590
; ------------------------------ label
L1589:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1587
; ------------------------------ label
L1587:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:evaliorexpr
evaliorexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalixorexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1594
; ------------------------------ label
L1596:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evalixorexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ iorto
	mov D0,[Dframe-8]	; x -8  
	mov D1,[Dframe-48]	; T3  
	or D0,D1
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1594:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-64]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T4  
	mov dword[Dframe-72],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T6  
	cmp A0,26
	jz L1596
; ------------------------------ label
L1595:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1593
; ------------------------------ label
L1593:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:evalixorexpr
evalixorexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evaliandexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1598
; ------------------------------ label
L1600:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evaliandexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ ixorto
	mov D0,[Dframe-8]	; x -8  
	mov D1,[Dframe-48]	; T3  
	xor D0,D1
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1598:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-64]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T4  
	mov dword[Dframe-72],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T6  
	cmp A0,28
	jz L1600
; ------------------------------ label
L1599:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1597
; ------------------------------ label
L1597:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:evaliandexpr
evaliandexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evaleqexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1602
; ------------------------------ label
L1604:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evaleqexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ iandto
	mov D0,[Dframe-8]	; x -8  
	mov D1,[Dframe-48]	; T3  
	and D0,D1
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1602:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-64]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T4  
	mov dword[Dframe-72],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T6  
	cmp A0,27
	jz L1604
; ------------------------------ label
L1603:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1601
; ------------------------------ label
L1601:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:evaleqexpr
evaleqexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalcmpexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1606
; ------------------------------ label
L1608:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evalcmpexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,38
	jnz L1609
; ------------------------------ stmt
; ------------------------------ setcc
	mov D0,[Dframe-8]	; x -8  
	cmp D0,[Dframe-16]	; y -16  
	setz B0
	movzx A0,B0
	mov [Dframe-64],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T5  
	mov qword[Dframe-56],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1610
; ------------------------------ label
L1609:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,39
	jnz L1611
; ------------------------------ stmt
; ------------------------------ setcc
	mov D0,[Dframe-8]	; x -8  
	cmp D0,[Dframe-16]	; y -16  
	setnz B0
	movzx A0,B0
	mov [Dframe-80],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T7  
	mov qword[Dframe-72],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-72]	; T6  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1611:
; ------------------------------ label
L1610:
; ------------------------------ label
L1606:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-96]	; T9  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T8  
	mov dword[Dframe-104],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-104]	; T10  
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,38
	jz L1608
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,39
	jz L1608
; ------------------------------ label
L1607:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1605
; ------------------------------ label
L1605:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:evalcmpexpr
evalcmpexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalshiftexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1613
; ------------------------------ label
L1615:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evalshiftexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,40
	jnz L1616
; ------------------------------ stmt
; ------------------------------ setcc
	mov D0,[Dframe-8]	; x -8  
	cmp D0,[Dframe-16]	; y -16  
	setl B0
	movzx A0,B0
	mov [Dframe-64],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T5  
	mov qword[Dframe-56],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1617
; ------------------------------ label
L1616:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,41
	jnz L1618
; ------------------------------ stmt
; ------------------------------ setcc
	mov D0,[Dframe-8]	; x -8  
	cmp D0,[Dframe-16]	; y -16  
	setle B0
	movzx A0,B0
	mov [Dframe-80],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T7  
	mov qword[Dframe-72],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-72]	; T6  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1619
; ------------------------------ label
L1618:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,42
	jnz L1620
; ------------------------------ stmt
; ------------------------------ setcc
	mov D0,[Dframe-8]	; x -8  
	cmp D0,[Dframe-16]	; y -16  
	setge B0
	movzx A0,B0
	mov [Dframe-96],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T9  
	mov qword[Dframe-88],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-88]	; T8  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1621
; ------------------------------ label
L1620:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,43
	jnz L1622
; ------------------------------ stmt
; ------------------------------ setcc
	mov D0,[Dframe-8]	; x -8  
	cmp D0,[Dframe-16]	; y -16  
	setg B0
	movzx A0,B0
	mov [Dframe-112],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-112]	; T11  
	mov qword[Dframe-104],D0	; T10  
; ------------------------------ move
	mov D0,[Dframe-104]	; T10  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1622:
; ------------------------------ label
L1621:
; ------------------------------ label
L1619:
; ------------------------------ label
L1617:
; ------------------------------ label
L1613:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-128],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-128]	; T13  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T12  
	mov dword[Dframe-136],A0	; T14  
; ------------------------------ move
	mov A0,[Dframe-136]	; T14  
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,40
	jz L1615
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,41
	jz L1615
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,42
	jz L1615
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,43
	jz L1615
; ------------------------------ label
L1614:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1612
; ------------------------------ label
L1612:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

;	Proc:evalshiftexpr
evalshiftexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evaladdexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1624
; ------------------------------ label
L1626:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evaladdexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,32
	jnz L1627
; ------------------------------ stmt
; ------------------------------ truncate
	mov D0,[Dframe-16]	; y -16  
	mov A0,A0
	mov [Dframe-56],A0	; T4  
; ------------------------------ shr
	mov D0,[Dframe-8]	; x -8  
	mov B10,[Dframe-56]	; T4  
	sar D0, cl
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1628
; ------------------------------ label
L1627:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,31
	jnz L1629
; ------------------------------ stmt
; ------------------------------ truncate
	mov D0,[Dframe-16]	; y -16  
	mov A0,A0
	mov [Dframe-64],A0	; T5  
; ------------------------------ shl
	mov D0,[Dframe-8]	; x -8  
	mov B10,[Dframe-64]	; T5  
	shl D0, cl
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1629:
; ------------------------------ label
L1628:
; ------------------------------ label
L1624:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-80],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-80]	; T7  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T6  
	mov dword[Dframe-88],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-88]	; T8  
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,31
	jz L1626
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,32
	jz L1626
; ------------------------------ label
L1625:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1623
; ------------------------------ label
L1623:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:evaladdexpr
evaladdexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalmulexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1631
; ------------------------------ label
L1633:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evalmulexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,21
	jnz L1634
; ------------------------------ stmt
; ------------------------------ addto
	mov D0,[Dframe-8]	; x -8  
	mov D1,[Dframe-16]	; y -16  
	add D0,D1
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1635
; ------------------------------ label
L1634:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,22
	jnz L1636
; ------------------------------ stmt
; ------------------------------ subto
	mov D0,[Dframe-8]	; x -8  
	mov D1,[Dframe-16]	; y -16  
	sub D0,D1
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1636:
; ------------------------------ label
L1635:
; ------------------------------ label
L1631:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-64]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T4  
	mov dword[Dframe-72],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-72]	; T6  
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,21
	jz L1633
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,22
	jz L1633
; ------------------------------ label
L1632:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1630
; ------------------------------ label
L1630:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:evalmulexpr
evalmulexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalunaryexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1638
; ------------------------------ label
L1640:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; sy -20  
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T2  
	call evalunaryexpr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; y -16  
	cmp D0,0
	jnz L1641
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,23
	jz L1641
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK311
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1641:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,23
	jnz L1642
; ------------------------------ stmt
; ------------------------------ multo
	mov D0,[Dframe-8]	; x -8  
	mov D1,[Dframe-16]	; y -16  
	mul D1
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1643
; ------------------------------ label
L1642:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,24
	jnz L1644
; ------------------------------ stmt
; ------------------------------ div
	mov D0,[Dframe-8]	; x -8  
	mov D1,[Dframe-16]	; y -16  
	cqo
	idiv D1
	mov [Dframe-8],D0	; x -8  
; ------------------------------ jump
	jmp	L1645
; ------------------------------ label
L1644:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,25
	jnz L1646
; ------------------------------ stmt
; ------------------------------ rem
	mov D0,[Dframe-8]	; x -8  
	mov D1,[Dframe-16]	; y -16  
	cqo
	idiv D1
	xchg D0,D11
	mov [Dframe-8],D0	; x -8  
; ------------------------------ label
L1646:
; ------------------------------ label
L1645:
; ------------------------------ label
L1643:
; ------------------------------ label
L1638:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-64]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T4  
	mov dword[Dframe-72],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-72]	; T6  
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,23
	jz L1640
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,24
	jz L1640
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; opc -24  
	cmp A0,25
	jz L1640
; ------------------------------ label
L1639:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1637
; ------------------------------ label
L1637:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:evalunaryexpr
evalunaryexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-32]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,21
	jz L1649
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-56]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T4  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T6  
	cmp A0,22
	jz L1649
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-80],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-80]	; T8  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T9  
	cmp A0,34
	jz L1649
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-104],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-104]	; T11  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T10  
	mov dword[Dframe-112],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T12  
	cmp A0,33
	jnz L1648
; ------------------------------ label
L1649:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-128],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-128]	; T14  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T13  
	mov dword[Dframe-136],A0	; T15  
; ------------------------------ move
	mov A0,[Dframe-136]	; T15  
	mov [Dframe-12],A0	; opc -12  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalunaryexpr
	mov [Dframe-144],D0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T16  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; opc -12  
	cmp A0,21
	jnz L1650
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L1647
; ------------------------------ jump
	jmp	L1651
; ------------------------------ label
L1650:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; opc -12  
	cmp A0,22
	jnz L1652
; ------------------------------ stmt
; ------------------------------ neg
	mov D0,[Dframe-8]	; x -8  
	neg D0
	mov [Dframe-152],D0	; T17  
; ------------------------------ returnx
	mov D0,[Dframe-152]	; T17  
	jmp L1647
; ------------------------------ jump
	jmp	L1653
; ------------------------------ label
L1652:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; opc -12  
	cmp A0,34
	jnz L1654
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; x -8  
	and D0,D0
	jnz L1655
; ------------------------------ move
	mov A0,1
	mov [Dframe-168],A0	; T19  
; ------------------------------ jump
	jmp	L1656
; ------------------------------ label
L1655:
; ------------------------------ move
	mov A0,0
	mov [Dframe-168],A0	; T19  
; ------------------------------ label
L1656:
; ------------------------------ widen
	movsx D0,dword[Dframe-168]	; T19  
	mov qword[Dframe-160],D0	; T18  
; ------------------------------ returnx
	mov D0,[Dframe-160]	; T18  
	jmp L1647
; ------------------------------ jump
	jmp	L1657
; ------------------------------ label
L1654:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; opc -12  
	cmp A0,33
	jnz L1658
; ------------------------------ stmt
; ------------------------------ inot
	mov D0,[Dframe-8]	; x -8  
	not D0
	mov [Dframe-176],D0	; T20  
; ------------------------------ returnx
	mov D0,[Dframe-176]	; T20  
	jmp L1647
; ------------------------------ label
L1658:
; ------------------------------ label
L1657:
; ------------------------------ label
L1653:
; ------------------------------ label
L1651:
; ------------------------------ label
L1648:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalterm
	mov [Dframe-184],D0	; T21  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-184]	; T21  
	jmp L1647
; ------------------------------ label
L1647:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

;	Proc:evalterm
evalterm:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 608

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe+16]	; sx 16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-32]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,65
	jnz L1660
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-64]	; T6  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-56]	; T5  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T4  
	mov dword[Dframe-72],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T7  
	cmp A0,90
	jnz L1661
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [noexpand],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-12],A0	; lb -12  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-88],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-88]	; T9  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T8  
	mov dword[Dframe-96],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T10  
	cmp A0,12
	jnz L1662
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-12],A0	; lb -12  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ label
L1662:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-112],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-112]	; T12  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T11  
	mov dword[Dframe-120],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T13  
	cmp A0,65
	jz L1663
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK312
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1663:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-152],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-152]	; T17  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T16  
; ------------------------------ index
	mov D0,[Dframe-144]	; T16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T15  
	mov dword[Dframe-160],A0	; T18  
; ------------------------------ setcc
	mov A0,[Dframe-160]	; T18  
	cmp A0,1
	setz B0
	movzx A0,B0
	mov [Dframe-168],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-168]	; T19  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ move
	mov D0,[Dframe-128]	; T14  
	mov [Dframe-8],D0	; res -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-12]	; lb -12  
	and A0,A0
	jz L1664
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-184],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe-184]	; T21  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-176],B0	; T20  
; ------------------------------ widen
	movzx A0,byte [Dframe-176]	; T20  
	mov dword[Dframe-192],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T22  
	cmp A0,13
	jz L1665
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK313
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1665:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ label
L1664:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [noexpand],A0
; ------------------------------ jump
	jmp	L1666
; ------------------------------ label
L1661:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-216],D0	; T25  
; ------------------------------ index
	mov D0,[Dframe-216]	; T25  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-208],D0	; T24  
; ------------------------------ index
	mov D0,[Dframe-208]	; T24  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-200],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T23  
	mov dword[Dframe-224],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T26  
	cmp A0,89
	jnz L1667
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-240],D0	; T28  
; ------------------------------ index
	mov D0,[Dframe-240]	; T28  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-232],B0	; T27  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T27  
	mov dword[Dframe-248],A0	; T29  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T29  
	cmp A0,12
	jz L1668
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK314
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1668:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-264],D0	; T31  
; ------------------------------ index
	mov D0,[Dframe-264]	; T31  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-256],B0	; T30  
; ------------------------------ widen
	movzx A0,byte [Dframe-256]	; T30  
	mov dword[Dframe-272],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-272]	; T32  
	cmp A0,65
	jz L1669
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK315
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1669:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-296],D0	; T35  
; ------------------------------ index
	mov D0,[Dframe-296]	; T35  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-288],D0	; T34  
; ------------------------------ index
	mov D0,[Dframe-288]	; T34  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-280],B0	; T33  
; ------------------------------ widen
	movzx A0,byte [Dframe-280]	; T33  
	mov dword[Dframe-304],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-304]	; T36  
	cmp A0,68
	jnz L1670
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-352],D0	; T42  
; ------------------------------ index
	mov D0,[Dframe-352]	; T42  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-344],D0	; T41  
; ------------------------------ index
	mov D0,[Dframe-344]	; T41  
	mov A1,108
	mov W0, [D0+D1]
	mov [Dframe-336],W0	; T40  
; ------------------------------ widen
	movsx A0,word [Dframe-336]	; T40  
	mov dword[Dframe-360],A0	; T43  
; ------------------------------ sub
	mov A0,[Dframe-360]	; T43  
	mov A1,1
	sub A0,A1
	mov [Dframe-368],A0	; T44  
; ------------------------------ widen
	movsx D0,dword[Dframe-368]	; T44  
	mov qword[Dframe-328],D0	; T39  
; ------------------------------ index
	lea D0,[typespecsizes]
	mov D1,[Dframe-328]	; T39  
	mov B0, [D0+D1]
	mov [Dframe-320],B0	; T38  
; ------------------------------ widen
	movzx A0,byte [Dframe-320]	; T38  
	mov dword[Dframe-376],A0	; T45  
; ------------------------------ widen
	movsx D0,dword[Dframe-376]	; T45  
	mov qword[Dframe-312],D0	; T37  
; ------------------------------ move
	mov D0,[Dframe-312]	; T37  
	mov [Dframe-8],D0	; res -8  
; ------------------------------ jump
	jmp	L1671
; ------------------------------ label
L1670:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK316
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1671:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-392],D0	; T47  
; ------------------------------ index
	mov D0,[Dframe-392]	; T47  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-384],B0	; T46  
; ------------------------------ widen
	movzx A0,byte [Dframe-384]	; T46  
	mov dword[Dframe-400],A0	; T48  
; ------------------------------ jumpcc
	mov A0,[Dframe-400]	; T48  
	cmp A0,13
	jz L1672
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK317
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1672:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ jump
	jmp	L1673
; ------------------------------ label
L1667:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L1659
; ------------------------------ label
L1673:
; ------------------------------ label
L1666:
; ------------------------------ jump
	jmp	L1674
; ------------------------------ label
L1660:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-416],D0	; T50  
; ------------------------------ index
	mov D0,[Dframe-416]	; T50  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-408],B0	; T49  
; ------------------------------ widen
	movzx A0,byte [Dframe-408]	; T49  
	mov dword[Dframe-424],A0	; T51  
; ------------------------------ jumpcc
	mov A0,[Dframe-424]	; T51  
	cmp A0,57
	jnz L1675
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-432],D0	; T52  
; ------------------------------ index
	mov D0,[Dframe-432]	; T52  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; res -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ jump
	jmp	L1676
; ------------------------------ label
L1675:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-448],D0	; T54  
; ------------------------------ index
	mov D0,[Dframe-448]	; T54  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-440],B0	; T53  
; ------------------------------ widen
	movzx A0,byte [Dframe-440]	; T53  
	mov dword[Dframe-456],A0	; T55  
; ------------------------------ jumpcc
	mov A0,[Dframe-456]	; T55  
	cmp A0,59
	jnz L1677
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-472],D0	; T57  
; ------------------------------ index
	mov D0,[Dframe-472]	; T57  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-464],A0	; T56  
; ------------------------------ jumpcc
	mov A0,[Dframe-464]	; T56  
	cmp A0,0
	jnz L1678
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-8],D0	; res -8  
; ------------------------------ jump
	jmp	L1679
; ------------------------------ label
L1678:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-504],D0	; T61  
; ------------------------------ index
	mov D0,[Dframe-504]	; T61  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-496],D0	; T60  
; ------------------------------ getptr
	mov D0,[Dframe-496]	; T60  
	mov B0, [D0]
	mov [Dframe-488],B0	; T59  
; ------------------------------ widen
	movzx A0,byte [Dframe-488]	; T59  
	mov dword[Dframe-512],A0	; T62  
; ------------------------------ widen
	movsx D0,dword[Dframe-512]	; T62  
	mov qword[Dframe-480],D0	; T58  
; ------------------------------ move
	mov D0,[Dframe-480]	; T58  
	mov [Dframe-8],D0	; res -8  
; ------------------------------ label
L1679:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ jump
	jmp	L1680
; ------------------------------ label
L1677:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-528],D0	; T64  
; ------------------------------ index
	mov D0,[Dframe-528]	; T64  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-520],B0	; T63  
; ------------------------------ widen
	movzx A0,byte [Dframe-520]	; T63  
	mov dword[Dframe-536],A0	; T65  
; ------------------------------ jumpcc
	mov A0,[Dframe-536]	; T65  
	cmp A0,12
	jnz L1681
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; sx 16  
	call evalcondexpr
	mov [Dframe-544],D0	; T66  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-544]	; T66  
	mov [Dframe-8],D0	; res -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-560],D0	; T68  
; ------------------------------ index
	mov D0,[Dframe-560]	; T68  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-552],B0	; T67  
; ------------------------------ widen
	movzx A0,byte [Dframe-552]	; T67  
	mov dword[Dframe-568],A0	; T69  
; ------------------------------ jumpcc
	mov A0,[Dframe-568]	; T69  
	cmp A0,13
	jz L1682
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK318
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1682:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ jump
	jmp	L1683
; ------------------------------ label
L1681:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-576],D0	; T70  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-576]	; T70  
	call printsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-592],D0	; T72  
; ------------------------------ index
	mov D0,[Dframe-592]	; T72  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-584],D0	; T71  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-608],D0	; T74  
; ------------------------------ index
	mov D0,[Dframe-608]	; T74  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-600],A0	; T73  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-584]	; T71  
	mov A11,[Dframe-600]	; T73  
	mov D12,0
	call printstrn
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK319
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK320
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1683:
; ------------------------------ label
L1680:
; ------------------------------ label
L1676:
; ------------------------------ label
L1674:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; res -8  
	jmp L1659
; ------------------------------ label
L1659:
; ------------------------------ hardret
	add Dstack, 608
	pop Dframe
	ret
;	End

;	Proc:getifdef
getifdef:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [noexpand],A0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [noexpand],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-32]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,65
	jz L1685
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK321
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1685:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-48],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-48]	; T4  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; res -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T6  
	cmp A0,1
	jnz L1686
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; res -4  
; ------------------------------ jump
	jmp	L1687
; ------------------------------ label
L1686:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T8  
	cmp A0,67
	jnz L1688
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; res -4  
; ------------------------------ label
L1688:
; ------------------------------ label
L1687:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-96]	; T10  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T9  
	mov dword[Dframe-104],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T11  
	cmp A0,54
	jz L1689
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK322
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1689:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; res -4  
	jmp L1684
; ------------------------------ label
L1684:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:skipcode
skipcode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; level -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1691
; ------------------------------ label
L1693:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call fastreadtoken
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-32]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,4
	jnz L1694
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getlexdirective
	mov [Dframe-48],A0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T4  
	mov [Dframe-8],A0	; dir -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; dir -8  
	cmp A0,3
	jz L1696
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; dir -8  
	cmp A0,8
	jz L1696
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; dir -8  
	cmp A0,9
	jnz L1695
; ------------------------------ label
L1696:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; level -4  
; ------------------------------ jump
	jmp	L1697
; ------------------------------ label
L1695:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; dir -8  
	cmp A0,4
	jz L1699
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; dir -8  
	cmp A0,5
	jnz L1698
; ------------------------------ label
L1699:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; level -4  
	cmp A0,0
	jnz L1700
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-8]	; dir -8  
	jmp L1690
; ------------------------------ label
L1700:
; ------------------------------ jump
	jmp	L1701
; ------------------------------ label
L1698:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; dir -8  
	cmp A0,6
	jnz L1702
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; level -4  
	cmp A0,0
	jnz L1703
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-8]	; dir -8  
	jmp L1690
; ------------------------------ label
L1703:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-4]	; level -4  
; ------------------------------ label
L1702:
; ------------------------------ label
L1701:
; ------------------------------ label
L1697:
; ------------------------------ jump
	jmp	L1704
; ------------------------------ label
L1694:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-64]	; T6  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-72],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T7  
	cmp A0,55
	jnz L1705
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK323
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1705:
; ------------------------------ label
L1704:
; ------------------------------ label
L1691:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L1693
; ------------------------------ label
L1692:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1690
; ------------------------------ label
L1690:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:freetokens
freetokens:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1707
; ------------------------------ label
L1709:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tk 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; nexttk -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; tk 16  
	mov A11,32
	call pcm_free
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; nexttk -8  
	mov [Dframe+16],D0	; tk 16  
; ------------------------------ label
L1707:
; ------------------------------ jumptrue
	mov D0,[Dframe+16]	; tk 16  
	and D0,D0
	jnz L1709
; ------------------------------ label
L1708:
; ------------------------------ label
L1706:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global fastreadtoken
;	Proc:fastreadtoken
fastreadtoken:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 320

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-64],D0	; T2  
; ------------------------------ indexlv
	mov D0,[Dframe-64]	; T2  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T1  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-56]	; T1 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ label
L60: ;<L383>
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[lxsptr]
	inc qword[lxsptr]
	mov qword[Dframe-80],D0	; T4  
; ------------------------------ getptr
	mov D0,[Dframe-80]	; T4  
	mov B0, [D0]
	mov [Dframe-72],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T3  
	mov dword[Dframe-88],A0	; T5  
; ------------------------------ switch
	mov A0,[Dframe-88]	; T5  
	sub A0, 0
	cmp A0, 48
	jae L1711
	jmp [A0*8+L1721]
	align 8
; ------------------------------ label
L1721:
; ------------------------------ jumplabel
	dq L1714	; 1
; ------------------------------ jumplabel
	dq L1711	; 2
; ------------------------------ jumplabel
	dq L1711	; 3
; ------------------------------ jumplabel
	dq L1711	; 4
; ------------------------------ jumplabel
	dq L1711	; 5
; ------------------------------ jumplabel
	dq L1711	; 6
; ------------------------------ jumplabel
	dq L1711	; 7
; ------------------------------ jumplabel
	dq L1711	; 8
; ------------------------------ jumplabel
	dq L1711	; 9
; ------------------------------ jumplabel
	dq L1711	; 10
; ------------------------------ jumplabel
	dq L1715	; 11
; ------------------------------ jumplabel
	dq L1711	; 12
; ------------------------------ jumplabel
	dq L1713	; 13
; ------------------------------ jumplabel
	dq L1716	; 14
; ------------------------------ jumplabel
	dq L1711	; 15
; ------------------------------ jumplabel
	dq L1711	; 16
; ------------------------------ jumplabel
	dq L1711	; 17
; ------------------------------ jumplabel
	dq L1711	; 18
; ------------------------------ jumplabel
	dq L1711	; 19
; ------------------------------ jumplabel
	dq L1711	; 20
; ------------------------------ jumplabel
	dq L1711	; 21
; ------------------------------ jumplabel
	dq L1711	; 22
; ------------------------------ jumplabel
	dq L1711	; 23
; ------------------------------ jumplabel
	dq L1711	; 24
; ------------------------------ jumplabel
	dq L1711	; 25
; ------------------------------ jumplabel
	dq L1711	; 26
; ------------------------------ jumplabel
	dq L1711	; 27
; ------------------------------ jumplabel
	dq L1711	; 28
; ------------------------------ jumplabel
	dq L1711	; 29
; ------------------------------ jumplabel
	dq L1711	; 30
; ------------------------------ jumplabel
	dq L1711	; 31
; ------------------------------ jumplabel
	dq L1711	; 32
; ------------------------------ jumplabel
	dq L1711	; 33
; ------------------------------ jumplabel
	dq L1711	; 34
; ------------------------------ jumplabel
	dq L1717	; 35
; ------------------------------ jumplabel
	dq L1720	; 36
; ------------------------------ jumplabel
	dq L1711	; 37
; ------------------------------ jumplabel
	dq L1711	; 38
; ------------------------------ jumplabel
	dq L1711	; 39
; ------------------------------ jumplabel
	dq L1718	; 40
; ------------------------------ jumplabel
	dq L1711	; 41
; ------------------------------ jumplabel
	dq L1711	; 42
; ------------------------------ jumplabel
	dq L1711	; 43
; ------------------------------ jumplabel
	dq L1711	; 44
; ------------------------------ jumplabel
	dq L1711	; 45
; ------------------------------ jumplabel
	dq L1711	; 46
; ------------------------------ jumplabel
	dq L1711	; 47
; ------------------------------ jumplabel
	dq L1719	; 48
; ------------------------------ stmt
; ------------------------------ comment
;case 35:
; ------------------------------ label
L1720:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[lxsptr]
	mov D1,2
	sub D0,D1
	mov [Dframe-40],D0	; p -40  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-20],A0	; dodir -20  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1722
; ------------------------------ label
L1724:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-40]	; p -40  
	mov B0, [D0]
	mov [Dframe-96],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T6  
	mov dword[Dframe-104],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T7  
	cmp A0,10
	jnz L1725
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-20],A0	; dodir -20  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L61
; ------------------------------ jump
	jmp	L1726
; ------------------------------ label
L1725:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-40]	; p -40  
	mov B0, [D0]
	mov [Dframe-112],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T8  
	mov dword[Dframe-120],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T9  
	cmp A0,9
	jz L1728
; ------------------------------ getptr
	mov D0,[Dframe-40]	; p -40  
	mov B0, [D0]
	mov [Dframe-128],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T10  
	mov dword[Dframe-136],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T11  
	cmp A0,32
	jnz L1727
; ------------------------------ label
L1728:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1729
; ------------------------------ label
L1727:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L61
; ------------------------------ label
L1729:
; ------------------------------ label
L1726:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[Dframe-40]	; p -40  
; ------------------------------ label
L1722:
; ------------------------------ jumpcc
	mov D0,[Dframe-40]	; p -40  
	cmp D0,[lxstart]
	jae L1724
; ------------------------------ label
L1723:
; ------------------------------ stmt
; ------------------------------ label
L61: ;<L387>
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[Dframe-20]	; dodir -20  
	and A0,A0
	jnz L1731
; ------------------------------ jumpcc
	mov D0,[Dframe-40]	; p -40  
	cmp D0,[lxstart]
	jae L1730
; ------------------------------ label
L1731:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-152],D0	; T13  
; ------------------------------ indexlv
	mov D0,[Dframe-152]	; T13  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-144],D0	; T12  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-144]	; T12 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L1710
; ------------------------------ jump
	jmp	L1732
; ------------------------------ label
L1730:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-160],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T14  
	mov dword[Dframe-168],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T15  
	cmp A0,35
	jnz L1733
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ label
L1733:
; ------------------------------ label
L1732:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1712
; ------------------------------ stmt
; ------------------------------ comment
;case 47:
; ------------------------------ label
L1719:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-176],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-176]	; T16  
	mov dword[Dframe-184],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T17  
	cmp A0,47
	jnz L1734
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call readlinecomment
	add Dstack, 32
; ------------------------------ jump
	jmp	L1735
; ------------------------------ label
L1734:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[lxsptr]
	mov B0, [D0]
	mov [Dframe-192],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T18  
	mov dword[Dframe-200],A0	; T19  
; ------------------------------ jumpcc
	mov A0,[Dframe-200]	; T19  
	cmp A0,42
	jnz L1736
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call readblockcomment
	add Dstack, 32
; ------------------------------ label
L1736:
; ------------------------------ label
L1735:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1712
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L1718:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,39
	mov A11,0
	call lxreadstring
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1712
; ------------------------------ stmt
; ------------------------------ comment
;case 34:
; ------------------------------ label
L1717:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,34
	mov A11,0
	call lxreadstring
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1712
; ------------------------------ stmt
; ------------------------------ comment
;case 13:
; ------------------------------ label
L1716:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-216],D0	; T21  
; ------------------------------ indexlv
	mov D0,[Dframe-216]	; T21  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T20  
; ------------------------------ incrto
	mov D13,[Dframe-208]	; T20 *
	inc dword[D13]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-232],D0	; T23  
; ------------------------------ indexlv
	mov D0,[Dframe-232]	; T23  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T22  
; ------------------------------ move
	mov A0,54
	mov D13,[Dframe-224]	; T22 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-248],D0	; T25  
; ------------------------------ indexlv
	mov D0,[Dframe-248]	; T25  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-240],D0	; T24  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-240]	; T24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1712
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L1715:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-264],D0	; T27  
; ------------------------------ indexlv
	mov D0,[Dframe-264]	; T27  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T26  
; ------------------------------ incrto
	mov D13,[Dframe-256]	; T26 *
	inc dword[D13]
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[NALLLINES]
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-280],D0	; T29  
; ------------------------------ indexlv
	mov D0,[Dframe-280]	; T29  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T28  
; ------------------------------ move
	mov A0,54
	mov D13,[Dframe-272]	; T28 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-296],D0	; T31  
; ------------------------------ indexlv
	mov D0,[Dframe-296]	; T31  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-288],D0	; T30  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-288]	; T30 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1712
; ------------------------------ stmt
; ------------------------------ comment
;case 0:
; ------------------------------ label
L1714:
; ------------------------------ stmt
; ------------------------------ decrto
	dec qword[lxsptr]
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[lx_stackindex]
	and A0,A0
	jz L1737
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call unstacksourcefile
	add Dstack, 32
; ------------------------------ jump
	jmp	L1738
; ------------------------------ label
L1737:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-312],D0	; T33  
; ------------------------------ indexlv
	mov D0,[Dframe-312]	; T33  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T32  
; ------------------------------ move
	mov A0,55
	mov D13,[Dframe-304]	; T32 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ return
	jmp L1710
; ------------------------------ label
L1738:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1712
; ------------------------------ stmt
; ------------------------------ comment
;case 12:
; ------------------------------ label
L1713:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1712
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1711:
; ------------------------------ label
L1712:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L60
; ------------------------------ label
L1710:
; ------------------------------ hardret
	add Dstack, 320
	pop Dframe
	ret
;	End

;	Proc:alloctoken
alloctoken:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,32
	call pcm_alloc
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; tk -8  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; tk -8  
	jmp L1739
; ------------------------------ label
L1739:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:alloctokenz
alloctokenz:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,32
	call pcm_alloc
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; tk -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; tk -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; tk -8  
	jmp L1740
; ------------------------------ label
L1740:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:expandpredefmacro
expandpredefmacro:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 320

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[noexpand]
	and A0,A0
	jz L1742
; ------------------------------ stmt
; ------------------------------ return
	jmp L1741
; ------------------------------ label
L1742:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; pdmcode 16  
	cmp A0,1
	jnz L1743
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T1  
; ------------------------------ move
	mov A0,61
	mov D13,[Dframe-24]	; T1 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ move
	mov D0,KK324
	mov D13,[Dframe-32]	; T2 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1744
; ------------------------------ label
L1743:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; pdmcode 16  
	cmp A0,2
	jnz L1745
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ move
	mov A0,61
	mov D13,[Dframe-40]	; T3 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ move
	mov D0,KK325
	mov D13,[Dframe-48]	; T4 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1746
; ------------------------------ label
L1745:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; pdmcode 16  
	cmp A0,3
	jnz L1747
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ move
	mov A0,61
	mov D13,[Dframe-56]	; T5 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; tk 24  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T6  
	mov dword[Dframe-72],A0	; T7  
; ------------------------------ move
	mov A0,[Dframe-72]	; T7  
	mov [Dframe-12],A0	; fileno -12  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; fileno -12  
	cmp A0,0
	jnz L1748
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[sfileno]
	mov [Dframe-12],A0	; fileno -12  
; ------------------------------ label
L1748:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[sfileno]
	and A0,A0
	jz L1749
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T8  
; ------------------------------ widen
	movsx D0,dword[sfileno]
	mov qword[Dframe-96],D0	; T10  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-96]	; T10  
	mov D0, [D0+D1*8]
	mov [Dframe-88],D0	; T9  
; ------------------------------ move
	mov D0,[Dframe-88]	; T9  
	mov D13,[Dframe-80]	; T8 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1750
; ------------------------------ label
L1749:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T11  
; ------------------------------ move
	mov D0,KK326
	mov D13,[Dframe-104]	; T11 *
	mov qword[D13],D0
; ------------------------------ label
L1750:
; ------------------------------ jump
	jmp	L1751
; ------------------------------ label
L1747:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; pdmcode 16  
	cmp A0,4
	jnz L1752
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T12  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-112]	; T12 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; lineno 32  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ move
	mov D0,[Dframe-128]	; T14  
	mov D13,[Dframe-120]	; T13 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1753
; ------------------------------ label
L1752:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; pdmcode 16  
	cmp A0,7
	jnz L1754
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T15  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-136]	; T15 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-144],D0	; T16  
; ------------------------------ move
	mov D0,1
	mov D13,[Dframe-144]	; T16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1755
; ------------------------------ label
L1754:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; pdmcode 16  
	cmp A0,6
	jnz L1756
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,18
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T17  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-152]	; T17 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T18  
; ------------------------------ move
	mov D0,1
	mov D13,[Dframe-160]	; T18 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L1757
; ------------------------------ label
L1756:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK327
	mov A11,[Dframe+16]	; pdmcode 16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK328
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1757:
; ------------------------------ label
L1755:
; ------------------------------ label
L1753:
; ------------------------------ label
L1751:
; ------------------------------ label
L1746:
; ------------------------------ label
L1744:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; tk 24  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T19  
	mov dword[Dframe-176],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T20  
	cmp A0,61
	jnz L1758
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T23  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-200]	; T23  
	call strlen
	mov [Dframe-208],D0	; T24  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-208]	; T24  
	mov A0,A0
	mov [Dframe-192],A0	; T22  
; ------------------------------ move
	mov A0,[Dframe-192]	; T22  
	mov D13,[Dframe-184]	; T21 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-216],D0	; T25  
; ------------------------------ move
	mov A0,[trefchar]
	mov D13,[Dframe-216]	; T25 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1759
; ------------------------------ label
L1758:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T26  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-224]	; T26 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call pcm_alloc
	mov [Dframe-232],D0	; T27  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-232]	; T27  
	mov [Dframe-8],D0	; s -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; tk 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-240],D0	; T28  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; s -8  
	mov D11,KK329
	mov D12,[Dframe-240]	; T28  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-248],D0	; T29  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; s -8  
	call strlen
	mov [Dframe-264],D0	; T31  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-264]	; T31  
	mov A0,A0
	mov [Dframe-256],A0	; T30  
; ------------------------------ move
	mov A0,[Dframe-256]	; T30  
	mov D13,[Dframe-248]	; T29 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[npastedtokens]
	mov A0,dword[npastedtokens]
	mov dword[Dframe-288],A0	; T34  
; ------------------------------ sub
	mov A0,[Dframe-288]	; T34  
	mov A1,1
	sub A0,A1
	mov [Dframe-296],A0	; T35  
; ------------------------------ widen
	movsx D0,dword[Dframe-296]	; T35  
	mov qword[Dframe-280],D0	; T33  
; ------------------------------ indexlv
	lea D0,[pastedtokenlist]
	mov D1,[Dframe-280]	; T33  
	lea D0, [D0+D1*8]
	mov [Dframe-272],D0	; T32  
; ------------------------------ move
	mov D0,[Dframe-8]	; s -8  
	mov D13,[Dframe-272]	; T32 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,19
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T36  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-304]	; T36 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; tk 24  
	mov A1,28
	lea D0, [D0+D1]
	mov [Dframe-312],D0	; T37  
; ------------------------------ move
	mov A0,[npastedtokens]
	mov D13,[Dframe-312]	; T37 *
	mov dword[D13],A0
; ------------------------------ label
L1759:
; ------------------------------ label
L1741:
; ------------------------------ hardret
	add Dstack, 320
	pop Dframe
	ret
;	End

;	Proc:dopragmadir
dopragmadir:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 224

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-16],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-16]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,65
	jnz L1761
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-48],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-48]	; T6  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-40]	; T5  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; T4  
	mov D11,KK330
	mov D12,4
	call memcmp
	mov [Dframe-56],A0	; T7  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T7  
	cmp A0,0
	jnz L1762
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-72],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-72]	; T9  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T8  
	mov dword[Dframe-80],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T10  
	cmp A0,12
	jz L1763
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK331
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1763:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-96]	; T12  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T11  
	mov dword[Dframe-104],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T13  
	cmp A0,57
	jnz L1764
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-120],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe-120]	; T15  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-112],D0	; T14  
; ------------------------------ jumpcc
	mov D0,[Dframe-112]	; T14  
	cmp D0,1
	jnz L1765
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [structpadding],A0
; ------------------------------ jump
	jmp	L1766
; ------------------------------ label
L1765:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L63
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK332
	call lxerror
	add Dstack, 32
; ------------------------------ label
L1766:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ jump
	jmp	L1767
; ------------------------------ label
L1764:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-136],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-136]	; T17  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T16  
	mov dword[Dframe-144],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T18  
	cmp A0,13
	jnz L1768
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [structpadding],A0
; ------------------------------ label
L1768:
; ------------------------------ label
L1767:
; ------------------------------ jump
	jmp	L1769
; ------------------------------ label
L1762:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-168],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe-168]	; T21  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-160],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-160]	; T20  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-152]	; T19  
	mov D11,KK333
	mov D12,9
	call memcmp
	mov [Dframe-176],A0	; T22  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T22  
	cmp A0,0
	jnz L1770
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [callbackflag],A0
; ------------------------------ label
L1770:
; ------------------------------ label
L1769:
; ------------------------------ label
L1761:
; ------------------------------ stmt
; ------------------------------ label
L62: ;<finish>
; ------------------------------ stmt
; ------------------------------ label
L63: ;<L407>
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1771
; ------------------------------ label
L1773:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexm
	add Dstack, 32
; ------------------------------ label
L1771:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-192],D0	; T24  
; ------------------------------ index
	mov D0,[Dframe-192]	; T24  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-184],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T23  
	mov dword[Dframe-200],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-200]	; T25  
	cmp A0,54
	jz L1774
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-216],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-216]	; T27  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-208],B0	; T26  
; ------------------------------ widen
	movzx A0,byte [Dframe-208]	; T26  
	mov dword[Dframe-224],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T28  
	cmp A0,55
	jnz L1773
; ------------------------------ label
L1774:
; ------------------------------ label
L1772:
; ------------------------------ label
L1760:
; ------------------------------ hardret
	add Dstack, 224
	pop Dframe
	ret
;	End

;	Proc:needspace
needspace:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 304

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+16]	; a 16  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T2  
	mov qword[Dframe-24],D0	; T1  
; ------------------------------ index
	lea D0,[shortsymbolnames]
	mov D1,[Dframe-24]	; T1  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; aname -8  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+24]	; b 24  
	mov A1,1
	sub A0,A1
	mov [Dframe-48],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T4  
	mov qword[Dframe-40],D0	; T3  
; ------------------------------ index
	lea D0,[shortsymbolnames]
	mov D1,[Dframe-40]	; T3  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; bname -16  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; bname -16  
	mov B0, [D0]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ truncate
	mov A0,[Dframe-80]	; T8  
	and D0,255
	mov [Dframe-64],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T6  
	mov dword[Dframe-56],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T5  
	cmp A0,110
	jz L1777
; ------------------------------ getptr
	mov D0,[Dframe-16]	; bname -16  
	mov B0, [D0]
	mov [Dframe-104],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T11  
	mov dword[Dframe-112],A0	; T12  
; ------------------------------ truncate
	mov A0,[Dframe-112]	; T12  
	and D0,255
	mov [Dframe-96],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T10  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T9  
	cmp A0,107
	jnz L1776
; ------------------------------ label
L1777:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; aname -8  
	mov B0, [D0]
	mov [Dframe-136],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T15  
	mov dword[Dframe-144],A0	; T16  
; ------------------------------ truncate
	mov A0,[Dframe-144]	; T16  
	and D0,255
	mov [Dframe-128],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T14  
	mov dword[Dframe-120],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T13  
	cmp A0,110
	jz L1779
; ------------------------------ getptr
	mov D0,[Dframe-8]	; aname -8  
	mov B0, [D0]
	mov [Dframe-168],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T19  
	mov dword[Dframe-176],A0	; T20  
; ------------------------------ truncate
	mov A0,[Dframe-176]	; T20  
	and D0,255
	mov [Dframe-160],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T18  
	mov dword[Dframe-152],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T17  
	cmp A0,107
	jnz L1778
; ------------------------------ label
L1779:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L1775
; ------------------------------ label
L1778:
; ------------------------------ jump
	jmp	L1780
; ------------------------------ label
L1776:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; bname -16  
	mov B0, [D0]
	mov [Dframe-200],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T23  
	mov dword[Dframe-208],A0	; T24  
; ------------------------------ truncate
	mov A0,[Dframe-208]	; T24  
	and D0,255
	mov [Dframe-192],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T22  
	mov dword[Dframe-184],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T21  
	cmp A0,45
	jz L1782
; ------------------------------ getptr
	mov D0,[Dframe-16]	; bname -16  
	mov B0, [D0]
	mov [Dframe-232],B0	; T27  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T27  
	mov dword[Dframe-240],A0	; T28  
; ------------------------------ truncate
	mov A0,[Dframe-240]	; T28  
	and D0,255
	mov [Dframe-224],B0	; T26  
; ------------------------------ widen
	movzx A0,byte [Dframe-224]	; T26  
	mov dword[Dframe-216],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T25  
	cmp A0,43
	jnz L1781
; ------------------------------ label
L1782:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; aname -8  
	mov B0, [D0]
	mov [Dframe-264],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-264]	; T31  
	mov dword[Dframe-272],A0	; T32  
; ------------------------------ truncate
	mov A0,[Dframe-272]	; T32  
	and D0,255
	mov [Dframe-256],B0	; T30  
; ------------------------------ widen
	movzx A0,byte [Dframe-256]	; T30  
	mov dword[Dframe-248],A0	; T29  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T29  
	cmp A0,45
	jz L1784
; ------------------------------ getptr
	mov D0,[Dframe-8]	; aname -8  
	mov B0, [D0]
	mov [Dframe-296],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-296]	; T35  
	mov dword[Dframe-304],A0	; T36  
; ------------------------------ truncate
	mov A0,[Dframe-304]	; T36  
	and D0,255
	mov [Dframe-288],B0	; T34  
; ------------------------------ widen
	movzx A0,byte [Dframe-288]	; T34  
	mov dword[Dframe-280],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-280]	; T33  
	cmp A0,43
	jnz L1783
; ------------------------------ label
L1784:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L1775
; ------------------------------ label
L1783:
; ------------------------------ label
L1781:
; ------------------------------ label
L1780:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1775
; ------------------------------ label
L1775:
; ------------------------------ hardret
	add Dstack, 304
	pop Dframe
	ret
;	End

;	Proc:newstrec
newstrec:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,128
	call pcm_alloc
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov A11,0
	mov D12,128
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,96
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-48],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-48]	; T5  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T4  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-64],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-64]	; T7  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T6  
	mov dword[Dframe-72],A0	; T8  
; ------------------------------ shl
	mov A0,[Dframe-72]	; T8  
	mov B10,24
	shl A0, cl
	mov [Dframe-80],A0	; T9  
; ------------------------------ add
	mov A0,[Dframe-40]	; T4  
	mov A1,[Dframe-80]	; T9  
	add A0,A1
	mov [Dframe-88],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-88]	; T10  
	mov D13,[Dframe-32]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,125
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ move
	mov A0,[currmoduleno]
	mov D13,[Dframe-96]	; T11 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L1785
; ------------------------------ label
L1785:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global initcclib
;	Proc:initcclib
initcclib:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ label
L1786:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global printst
;	Proc:printst
printst:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,65
	jz L1788
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK334
	call mcerror
	add Dstack, 32
; ------------------------------ label
L1788:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,[Dframe+24]	; p 24  
	mov A12,[Dframe+32]	; level 32  
	call printstrec
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1789
; ------------------------------ label
L1791:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe+32]	; level 32  
	mov A1,1
	add A0,A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe-32]	; T3  
	call printst
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ label
L1789:
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; q -8  
	cmp D0,0
	jnz L1791
; ------------------------------ label
L1790:
; ------------------------------ label
L1787:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:printstrec
printstrec:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1344

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; v -40  
	mov [Dframe-344],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe-344]	; T1  
	mov [Dframe-48],D0	; d -48  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-56],A0	; offset -56  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+32]	; level 32  
	mov [Dframe-332],A0	; av_1 -332  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1793
; ------------------------------ label
L1795:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK335
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-56]	; offset -56  
	mov A1,4
	add A0,A1
	mov [Dframe-56],A0	; offset -56  
; ------------------------------ label
L1793:
; ------------------------------ postdecrx
	mov A0,[Dframe-332]	; av_1 -332  
	dec dword[Dframe-332]	; av_1 -332  
	mov dword[Dframe-352],A0	; T2  
; ------------------------------ jumptrue
	mov A0,[Dframe-352]	; T2  
	and A0,A0
	jnz L1795
; ------------------------------ label
L1794:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK336
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,104
	mov W0, [D0+D1]
	mov [Dframe-360],W0	; T3  
; ------------------------------ widen
	movzx A0,word [Dframe-360]	; T3  
	mov dword[Dframe-368],A0	; T4  
; ------------------------------ jumpfalse
	mov A0,[Dframe-368]	; T4  
	and A0,A0
	jz L1796
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-376],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-384],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,104
	mov W0, [D0+D1]
	mov [Dframe-392],W0	; T7  
; ------------------------------ widen
	movzx A0,word [Dframe-392]	; T7  
	mov dword[Dframe-400],A0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-376]	; T5  
	mov D11,KK337
	mov D12,[Dframe-384]	; T6  
	mov A13,[Dframe-400]	; T8  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-408],D0	; T9  
; ------------------------------ sub
	mov A0,28
	mov A1,[Dframe-56]	; offset -56  
	sub A0,A1
	mov [Dframe-416],A0	; T10  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-408]	; T9  
	mov A12,[Dframe-416]	; T10  
	mov A13,45
	call gs_leftstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L1797
; ------------------------------ label
L1796:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-424],D0	; T11  
; ------------------------------ sub
	mov A0,28
	mov A1,[Dframe-56]	; offset -56  
	sub A0,A1
	mov [Dframe-432],A0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-424]	; T11  
	mov A12,[Dframe-432]	; T12  
	mov A13,45
	call gs_leftstr
	add Dstack, 32
; ------------------------------ label
L1797:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-456],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-456]	; T15  
	mov dword[Dframe-464],A0	; T16  
; ------------------------------ widen
	movsx D0,dword[Dframe-464]	; T16  
	mov qword[Dframe-448],D0	; T14  
; ------------------------------ index
	lea D0,[namenames]
	mov D1,[Dframe-448]	; T14  
	mov D0, [D0+D1*8]
	mov [Dframe-440],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-440]	; T13  
	mov A12,12
	mov A13,46
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	call gs_getcol
	mov [Dframe-472],A0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-472]	; T17  
	mov [Dframe-52],A0	; col -52  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,116
	lea D11, [D0+D1]
	lea D10,[Dframe-16]	; attrs -16  
	mov D12,12
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK338
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-496],B0	; T20  
; ------------------------------ widen
	movzx A0,byte [Dframe-496]	; T20  
	mov dword[Dframe-504],A0	; T21  
; ------------------------------ widen
	movsx D0,dword[Dframe-504]	; T21  
	mov qword[Dframe-488],D0	; T19  
; ------------------------------ index
	lea D0,[scopenames]
	mov D1,[Dframe-488]	; T19  
	mov D0, [D0+D1*8]
	mov [Dframe-480],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-480]	; T18  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK339
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-520],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-520]	; T23  
	mov A1,0
	mov B0, [D0+D1]
	mov [Dframe-512],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-512]	; T22  
	mov dword[Dframe-528],A0	; T24  
; ------------------------------ jumpfalse
	mov A0,[Dframe-528]	; T24  
	and A0,A0
	jz L1798
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK340
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1798:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-544],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe-544]	; T26  
	mov A1,11
	mov B0, [D0+D1]
	mov [Dframe-536],B0	; T25  
; ------------------------------ widen
	movzx A0,byte [Dframe-536]	; T25  
	mov dword[Dframe-552],A0	; T27  
; ------------------------------ jumpfalse
	mov A0,[Dframe-552]	; T27  
	and A0,A0
	jz L1799
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK341
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-576],D0	; T30  
; ------------------------------ index
	mov D0,[Dframe-576]	; T30  
	mov A1,11
	mov B0, [D0+D1]
	mov [Dframe-568],B0	; T29  
; ------------------------------ widen
	movzx A0,byte [Dframe-568]	; T29  
	mov dword[Dframe-584],A0	; T31  
; ------------------------------ widen
	movsx D0,dword[Dframe-584]	; T31  
	mov qword[Dframe-560],D0	; T28  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-560]	; T28  
	call gs_strint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK342
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1799:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-600],D0	; T33  
; ------------------------------ index
	mov D0,[Dframe-600]	; T33  
	mov A1,2
	mov B0, [D0+D1]
	mov [Dframe-592],B0	; T32  
; ------------------------------ widen
	movzx A0,byte [Dframe-592]	; T32  
	mov dword[Dframe-608],A0	; T34  
; ------------------------------ jumpfalse
	mov A0,[Dframe-608]	; T34  
	and A0,A0
	jz L1800
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK343
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1800:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-624],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-624]	; T36  
	mov A1,3
	mov B0, [D0+D1]
	mov [Dframe-616],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-616]	; T35  
	mov dword[Dframe-632],A0	; T37  
; ------------------------------ jumpfalse
	mov A0,[Dframe-632]	; T37  
	and A0,A0
	jz L1801
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK344
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1801:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-648],D0	; T39  
; ------------------------------ index
	mov D0,[Dframe-648]	; T39  
	mov A1,4
	mov B0, [D0+D1]
	mov [Dframe-640],B0	; T38  
; ------------------------------ widen
	movzx A0,byte [Dframe-640]	; T38  
	mov dword[Dframe-656],A0	; T40  
; ------------------------------ jumpfalse
	mov A0,[Dframe-656]	; T40  
	and A0,A0
	jz L1802
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK345
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1802:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-672],D0	; T42  
; ------------------------------ index
	mov D0,[Dframe-672]	; T42  
	mov A1,5
	mov B0, [D0+D1]
	mov [Dframe-664],B0	; T41  
; ------------------------------ widen
	movzx A0,byte [Dframe-664]	; T41  
	mov dword[Dframe-680],A0	; T43  
; ------------------------------ jumpfalse
	mov A0,[Dframe-680]	; T43  
	and A0,A0
	jz L1803
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK346
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1803:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-696],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe-696]	; T45  
	mov A1,6
	mov B0, [D0+D1]
	mov [Dframe-688],B0	; T44  
; ------------------------------ widen
	movzx A0,byte [Dframe-688]	; T44  
	mov dword[Dframe-704],A0	; T46  
; ------------------------------ jumpfalse
	mov A0,[Dframe-704]	; T46  
	and A0,A0
	jz L1804
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK347
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1804:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-720],D0	; T48  
; ------------------------------ index
	mov D0,[Dframe-720]	; T48  
	mov A1,7
	mov B0, [D0+D1]
	mov [Dframe-712],B0	; T47  
; ------------------------------ widen
	movzx A0,byte [Dframe-712]	; T47  
	mov dword[Dframe-728],A0	; T49  
; ------------------------------ jumpfalse
	mov A0,[Dframe-728]	; T49  
	and A0,A0
	jz L1805
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-736],D0	; T50  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-752],D0	; T52  
; ------------------------------ index
	mov D0,[Dframe-752]	; T52  
	mov A1,7
	mov B0, [D0+D1]
	mov [Dframe-744],B0	; T51  
; ------------------------------ widen
	movzx A0,byte [Dframe-744]	; T51  
	mov dword[Dframe-760],A0	; T53  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-736]	; T50  
	mov D11,KK348
	mov A12,[Dframe-760]	; T53  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-768],D0	; T54  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-768]	; T54  
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1805:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-784],D0	; T56  
; ------------------------------ index
	mov D0,[Dframe-784]	; T56  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-776],B0	; T55  
; ------------------------------ widen
	movzx A0,byte [Dframe-776]	; T55  
	mov dword[Dframe-792],A0	; T57  
; ------------------------------ jumpfalse
	mov A0,[Dframe-792]	; T57  
	and A0,A0
	jz L1806
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-800],D0	; T58  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-816],D0	; T60  
; ------------------------------ index
	mov D0,[Dframe-816]	; T60  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-808],B0	; T59  
; ------------------------------ widen
	movzx A0,byte [Dframe-808]	; T59  
	mov dword[Dframe-824],A0	; T61  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-800]	; T58  
	mov D11,KK349
	mov A12,[Dframe-824]	; T61  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-832],D0	; T62  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-832]	; T62  
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1806:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; attrs -16  
	mov [Dframe-848],D0	; T64  
; ------------------------------ index
	mov D0,[Dframe-848]	; T64  
	mov A1,1
	mov B0, [D0+D1]
	mov [Dframe-840],B0	; T63  
; ------------------------------ widen
	movzx A0,byte [Dframe-840]	; T63  
	mov dword[Dframe-856],A0	; T65  
; ------------------------------ jumpfalse
	mov A0,[Dframe-856]	; T65  
	and A0,A0
	jz L1807
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK350
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1807:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK351
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-52]	; col -52  
	mov A1,10
	add A0,A1
	mov [Dframe-864],A0	; T66  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov A11,[Dframe-864]	; T66  
	mov A12,61
	call gs_padto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-872],D0	; T67  
; ------------------------------ jumpfalse
	mov D0,[Dframe-872]	; T67  
	and D0,D0
	jz L1808
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-880],D0	; T68  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-896],D0	; T70  
; ------------------------------ index
	mov D0,[Dframe-896]	; T70  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-888],D0	; T69  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-880]	; T68  
	mov D11,KK352
	mov D12,[Dframe-888]	; T69  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-904],D0	; T71  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-904]	; T71  
	mov A12,18
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L1809
; ------------------------------ label
L1808:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK353
	mov A12,18
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ label
L1809:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-912],W0	; T72  
; ------------------------------ widen
	movsx A0,word [Dframe-912]	; T72  
	mov dword[Dframe-920],A0	; T73  
; ------------------------------ jumpcc
	mov A0,[Dframe-920]	; T73  
	cmp A0,1
	jnz L1810
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK354
	call gs_str
	add Dstack, 32
; ------------------------------ jump
	jmp	L1811
; ------------------------------ label
L1810:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-928],W0	; T74  
; ------------------------------ widen
	movsx A0,word [Dframe-928]	; T74  
	mov dword[Dframe-936],A0	; T75  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-936]	; T75  
	mov A11,1
	call Strmode
	mov [Dframe-944],D0	; T76  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-944]	; T76  
	call gs_strsp
	add Dstack, 32
; ------------------------------ label
L1811:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-952],B0	; T77  
; ------------------------------ widen
	movzx A0,byte [Dframe-952]	; T77  
	mov dword[Dframe-960],A0	; T78  
; ------------------------------ jumpcc
	mov A0,[Dframe-960]	; T78  
	cmp A0,10
	jnz L1812
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK355
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-976],A0	; T80  
; ------------------------------ widen
	movsx D0,dword[Dframe-976]	; T80  
	mov qword[Dframe-968],D0	; T79  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-968]	; T79  
	call gs_strint
	add Dstack, 32
; ------------------------------ jump
	jmp	L1813
; ------------------------------ label
L1812:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-984],B0	; T81  
; ------------------------------ widen
	movzx A0,byte [Dframe-984]	; T81  
	mov dword[Dframe-992],A0	; T82  
; ------------------------------ jumpcc
	mov A0,[Dframe-992]	; T82  
	cmp A0,8
	jz L1815
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-1000],B0	; T83  
; ------------------------------ widen
	movzx A0,byte [Dframe-1000]	; T83  
	mov dword[Dframe-1008],A0	; T84  
; ------------------------------ jumpcc
	mov A0,[Dframe-1008]	; T84  
	cmp A0,9
	jnz L1814
; ------------------------------ label
L1815:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-1016],D0	; T85  
; ------------------------------ jumpfalse
	mov D0,[Dframe-1016]	; T85  
	and D0,D0
	jz L1816
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK356
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-1024],D0	; T86  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1024]	; T86  
	call strexpr
	mov [Dframe-1032],D0	; T87  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1032]	; T87  
	call gs_strvar
	add Dstack, 32
; ------------------------------ label
L1816:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK357
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-1048],A0	; T89  
; ------------------------------ widen
	movsx D0,dword[Dframe-1048]	; T89  
	mov qword[Dframe-1040],D0	; T88  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1040]	; T88  
	call gs_strint
	add Dstack, 32
; ------------------------------ jump
	jmp	L1817
; ------------------------------ label
L1814:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-1056],B0	; T90  
; ------------------------------ widen
	movzx A0,byte [Dframe-1056]	; T90  
	mov dword[Dframe-1064],A0	; T91  
; ------------------------------ jumpcc
	mov A0,[Dframe-1064]	; T91  
	cmp A0,6
	jnz L1818
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK358
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,100
	mov A0, [D0+D1]
	mov [Dframe-1080],A0	; T93  
; ------------------------------ widen
	movsx D0,dword[Dframe-1080]	; T93  
	mov qword[Dframe-1072],D0	; T92  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1072]	; T92  
	call gs_strint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK359
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-1088],D0	; T94  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,88
	mov D0, [D0+D1]
	mov [Dframe-1096],D0	; T95  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-1088]	; T94  
	mov D11,KK360
	mov D12,[Dframe-1096]	; T95  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-312]	; str -312  
	mov [Dframe-1104],D0	; T96  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1104]	; T96  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,124
	mov B0, [D0+D1]
	mov [Dframe-1112],B0	; T97  
; ------------------------------ widen
	movzx A0,byte [Dframe-1112]	; T97  
	mov dword[Dframe-1120],A0	; T98  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1120]	; T98  
	and A0,A0
	jz L1819
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK361
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1819:
; ------------------------------ jump
	jmp	L1820
; ------------------------------ label
L1818:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-1128],B0	; T99  
; ------------------------------ widen
	movzx A0,byte [Dframe-1128]	; T99  
	mov dword[Dframe-1136],A0	; T100  
; ------------------------------ jumpcc
	mov A0,[Dframe-1136]	; T100  
	cmp A0,11
	jnz L1821
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK362
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,100
	mov A0, [D0+D1]
	mov [Dframe-1152],A0	; T102  
; ------------------------------ widen
	movsx D0,dword[Dframe-1152]	; T102  
	mov qword[Dframe-1144],D0	; T101  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1144]	; T101  
	call gs_strint
	add Dstack, 32
; ------------------------------ jump
	jmp	L1822
; ------------------------------ label
L1821:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-1160],B0	; T103  
; ------------------------------ widen
	movzx A0,byte [Dframe-1160]	; T103  
	mov dword[Dframe-1168],A0	; T104  
; ------------------------------ jumpcc
	mov A0,[Dframe-1168]	; T104  
	cmp A0,7
	jnz L1823
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-1176],D0	; T105  
; ------------------------------ jumpfalse
	mov D0,[Dframe-1176]	; T105  
	and D0,D0
	jz L1824
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK363
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-1184],D0	; T106  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1184]	; T106  
	call strexpr
	mov [Dframe-1192],D0	; T107  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1192]	; T107  
	call gs_strvar
	add Dstack, 32
; ------------------------------ label
L1824:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK364
	call gs_str
	add Dstack, 32
; ------------------------------ label
L1823:
; ------------------------------ label
L1822:
; ------------------------------ label
L1820:
; ------------------------------ label
L1817:
; ------------------------------ label
L1813:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK365
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK366
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,96
	mov A0, [D0+D1]
	mov [Dframe-1208],A0	; T109  
; ------------------------------ iand
	mov A0,[Dframe-1208]	; T109  
	mov A1,16777215
	and A0,A1
	mov [Dframe-1216],A0	; T110  
; ------------------------------ widen
	movsx D0,dword[Dframe-1216]	; T110  
	mov qword[Dframe-1200],D0	; T108  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1200]	; T108  
	call gs_strint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK367
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,96
	mov A0, [D0+D1]
	mov [Dframe-1240],A0	; T113  
; ------------------------------ shr
	mov A0,[Dframe-1240]	; T113  
	mov B10,24
	sar A0, cl
	mov [Dframe-1248],A0	; T114  
; ------------------------------ widen
	movsx D0,dword[Dframe-1248]	; T114  
	mov qword[Dframe-1232],D0	; T112  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-1232]	; T112  
	mov D0, [D0+D1*8]
	mov [Dframe-1224],D0	; T111  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1224]	; T111  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ label
L64: ;<NEXT>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-1256],B0	; T115  
; ------------------------------ widen
	movzx A0,byte [Dframe-1256]	; T115  
	mov dword[Dframe-1264],A0	; T116  
; ------------------------------ jumpcc
	mov A0,[Dframe-1264]	; T116  
	cmp A0,6
	jnz L1825
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	call gs_line
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-328],D0	; pm -328  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1826
; ------------------------------ label
L1828:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,KK368
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-328]	; pm -328  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1280],D0	; T118  
; ------------------------------ jumpfalse
	mov D0,[Dframe-1280]	; T118  
	and D0,D0
	jz L1829
; ------------------------------ index
	mov D0,[Dframe-328]	; pm -328  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1288],D0	; T119  
; ------------------------------ index
	mov D0,[Dframe-1288]	; T119  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1272],D0	; T117  
; ------------------------------ jump
	jmp	L1830
; ------------------------------ label
L1829:
; ------------------------------ move
	mov D0,KK369
	mov [Dframe-1272],D0	; T117  
; ------------------------------ label
L1830:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1272]	; T117  
	mov A12,10
	mov A13,45
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-328]	; pm -328  
	mov A1,16
	mov A0, [D0+D1]
	mov [Dframe-1296],A0	; T120  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-1296]	; T120  
	mov A11,1
	call Strmode
	mov [Dframe-1304],D0	; T121  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1304]	; T121  
	mov A12,16
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-328]	; pm -328  
	mov A1,22
	mov W0, [D0+D1]
	mov [Dframe-1328],W0	; T124  
; ------------------------------ widen
	movsx A0,word [Dframe-1328]	; T124  
	mov dword[Dframe-1336],A0	; T125  
; ------------------------------ widen
	movsx D0,dword[Dframe-1336]	; T125  
	mov qword[Dframe-1320],D0	; T123  
; ------------------------------ index
	lea D0,[pmflagnames]
	mov D1,[Dframe-1320]	; T123  
	mov D0, [D0+D1*8]
	mov [Dframe-1312],D0	; T122  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe-1312]	; T122  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	call gs_line
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-328]	; pm -328  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-328],D0	; pm -328  
; ------------------------------ label
L1826:
; ------------------------------ jumptrue
	mov D0,[Dframe-328]	; pm -328  
	and D0,D0
	jnz L1828
; ------------------------------ label
L1827:
; ------------------------------ label
L1825:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; d -48  
	mov D11,[Dframe+16]	; f 16  
	call gs_println
	add Dstack, 32
; ------------------------------ label
L1792:
; ------------------------------ hardret
	add Dstack, 1344
	pop Dframe
	ret
;	End

	global printstflat
;	Proc:printstflat
printstflat:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK370
	mov D12,KK371
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L1834
; ------------------------------ label
L1835:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-32],D0	; T1  
; ------------------------------ indexref
	lea D0,[hashtable]
	mov D1,[Dframe-32]	; T1  
	imul D1,128
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T2  
; ------------------------------ jumpfalse
	mov D0,[Dframe-40]	; T2  
	and D0,D0
	jz L1836
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T3  
	mov dword[Dframe-56],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T4  
	cmp A0,65
	jnz L1837
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; p -16  
	call getstname
	mov [Dframe-64],D0	; T5  
	add Dstack, 32
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T8  
	mov dword[Dframe-96],A0	; T9  
; ------------------------------ sub
	mov A0,[Dframe-96]	; T9  
	mov A1,1
	sub A0,A1
	mov [Dframe-104],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T10  
	mov qword[Dframe-80],D0	; T7  
; ------------------------------ index
	lea D0,[symbolnames]
	mov D1,[Dframe-80]	; T7  
	mov D0, [D0+D1*8]
	mov [Dframe-72],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T13  
	mov dword[Dframe-136],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-136]	; T14  
	mov qword[Dframe-120],D0	; T12  
; ------------------------------ index
	lea D0,[namenames]
	mov D1,[Dframe-120]	; T12  
	mov D0, [D0+D1*8]
	mov [Dframe-112],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	push qword [Dframe-112]	; T11  
	push qword [Dframe-72]	; T6  
	push qword [Dframe-64]	; T5  
	push qword KK372
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK373
	mov A12,[Dframe-4]	; i -4  
	mov D13,[Dframe-16]	; p -16  
	call fprintf
	add Dstack, 64
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1838
; ------------------------------ label
L1840:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; p -16  
	call getstname
	mov [Dframe-144],D0	; T15  
	add Dstack, 32
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,113
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T18  
	mov dword[Dframe-176],A0	; T19  
; ------------------------------ sub
	mov A0,[Dframe-176]	; T19  
	mov A1,1
	sub A0,A1
	mov [Dframe-184],A0	; T20  
; ------------------------------ widen
	movsx D0,dword[Dframe-184]	; T20  
	mov qword[Dframe-160],D0	; T17  
; ------------------------------ index
	lea D0,[symbolnames]
	mov D1,[Dframe-160]	; T17  
	mov D0, [D0+D1*8]
	mov [Dframe-152],D0	; T16  
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-208],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-208]	; T23  
	mov dword[Dframe-216],A0	; T24  
; ------------------------------ widen
	movsx D0,dword[Dframe-216]	; T24  
	mov qword[Dframe-200],D0	; T22  
; ------------------------------ index
	lea D0,[namenames]
	mov D1,[Dframe-200]	; T22  
	mov D0, [D0+D1*8]
	mov [Dframe-192],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-224],D0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	push qword [Dframe-224]	; T25  
	push qword [Dframe-192]	; T21  
	push qword [Dframe-152]	; T16  
	push qword [Dframe-144]	; T15  
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK374
	mov D12,KK375
	mov D13,[Dframe-16]	; p -16  
	call fprintf
	add Dstack, 64
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-240],D0	; T27  
; ------------------------------ jumpfalse
	mov D0,[Dframe-240]	; T27  
	and D0,D0
	jz L1841
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-248],D0	; T28  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-248]	; T28  
	call getstname
	mov [Dframe-256],D0	; T29  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-256]	; T29  
	mov [Dframe-232],D0	; T26  
; ------------------------------ jump
	jmp	L1842
; ------------------------------ label
L1841:
; ------------------------------ move
	mov D0,KK376
	mov [Dframe-232],D0	; T26  
; ------------------------------ label
L1842:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword KK377
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK378
	mov D12,KK379
	mov D13,[Dframe-232]	; T26  
	call fprintf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; p -16  
; ------------------------------ label
L1838:
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; p -16  
	and D0,D0
	jnz L1840
; ------------------------------ label
L1839:
; ------------------------------ label
L1837:
; ------------------------------ label
L1836:
; ------------------------------ label
L1832:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L1834:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,65534
	jle L1835
; ------------------------------ label
L1833:
; ------------------------------ label
L1831:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

	global createname
;	Proc:createname
createname:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call allocunitrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; u -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,3
	mov D13,[Dframe-24]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,56
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-40]	; T4 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; u -8  
	jmp L1843
; ------------------------------ label
L1843:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global createunit0
;	Proc:createunit0
createunit0:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call allocunitrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; u -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,[Dframe+16]	; tag 16  
	mov D13,[Dframe-24]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; u -8  
	jmp L1844
; ------------------------------ label
L1844:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global createunit1
;	Proc:createunit1
createunit1:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call allocunitrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; u -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,[Dframe+16]	; tag 16  
	mov D13,[Dframe-24]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+24]	; p 24  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; u -8  
	jmp L1845
; ------------------------------ label
L1845:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global createunit2
;	Proc:createunit2
createunit2:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call allocunitrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; u -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,[Dframe+16]	; tag 16  
	mov D13,[Dframe-24]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+24]	; p 24  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe+32]	; q 32  
	mov D13,[Dframe-40]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; u -8  
	jmp L1846
; ------------------------------ label
L1846:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global createunit3
;	Proc:createunit3
createunit3:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call allocunitrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; u -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,[Dframe+16]	; tag 16  
	mov D13,[Dframe-24]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+24]	; p 24  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe+32]	; q 32  
	mov D13,[Dframe-40]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe+40]	; r 40  
	mov D13,[Dframe-48]	; T5 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; u -8  
	jmp L1847
; ------------------------------ label
L1847:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global createconstunit
;	Proc:createconstunit
createconstunit:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call allocunitrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; u -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-24]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ softconv
	mov D0,[Dframe+16]	; a 16  
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-40]	; T4  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-48]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,56
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-56]	; T6 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; u -8  
	jmp L1848
; ------------------------------ label
L1848:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global createstringconstunit
;	Proc:createstringconstunit
createstringconstunit:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call allocunitrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; u -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-24]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+16]	; s 16  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov A0,[trefchar]
	mov D13,[Dframe-40]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; length 24  
	cmp A0,-1
	jnz L1850
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	call strlen
	mov [Dframe-64],D0	; T7  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-64]	; T7  
	mov A0,A0
	mov [Dframe-56],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-56]	; T6  
	mov D13,[Dframe-48]	; T5 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L1851
; ------------------------------ label
L1850:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ move
	mov A0,[Dframe+24]	; length 24  
	mov D13,[Dframe-72]	; T8 *
	mov dword[D13],A0
; ------------------------------ label
L1851:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,58
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-80]	; T9 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; u -8  
	mov A1,56
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-88]	; T10 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; u -8  
	jmp L1849
; ------------------------------ label
L1849:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global getoptocode
;	Proc:getoptocode
	segment .bss
	align 2,resb 1
getoptocode.opctotable:	resb 164
	segment .text
getoptocode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; opc 16  
	mov qword[Dframe-48],D0	; T2  
; ------------------------------ index
	lea D0,[getoptocode.opctotable]
	mov D1,[Dframe-48]	; T2  
	mov W0, [D0+D1*2]
	mov [Dframe-40],W0	; T1  
; ------------------------------ widen
	movsx A0,word [Dframe-40]	; T1  
	mov dword[Dframe-56],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-56]	; T3  
	mov [Dframe-8],A0	; opcto -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-8]	; opcto -8  
	and A0,A0
	jz L1853
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-8]	; opcto -8  
	jmp L1852
; ------------------------------ label
L1853:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; str -32  
	mov [Dframe-64],D0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; opc 16  
	mov qword[Dframe-80],D0	; T6  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-80]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-72],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-64]	; T4  
	mov D11,[Dframe-72]	; T5  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; str -32  
	mov [Dframe-88],D0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-88]	; T7  
	mov D11,KK380
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-12],A0	; i -12  
; ------------------------------ jump
	jmp	L1856
; ------------------------------ label
L1857:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; i -12  
	mov qword[Dframe-104],D0	; T9  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-104]	; T9  
	mov D0, [D0+D1*8]
	mov [Dframe-96],D0	; T8  
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; str -32  
	mov [Dframe-112],D0	; T10  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-96]	; T8  
	mov D11,[Dframe-112]	; T10  
	call strcmp
	mov [Dframe-120],A0	; T11  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T11  
	cmp A0,0
	jnz L1858
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; opc 16  
	mov qword[Dframe-136],D0	; T13  
; ------------------------------ indexlv
	lea D0,[getoptocode.opctotable]
	mov D1,[Dframe-136]	; T13  
	lea D0, [D0+D1*2]
	mov [Dframe-128],D0	; T12  
; ------------------------------ move
	mov A0,[Dframe-12]	; i -12  
	mov D13,[Dframe-128]	; T12 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-12]	; i -12  
	jmp L1852
; ------------------------------ label
L1858:
; ------------------------------ label
L1854:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-12]	; i -12  
; ------------------------------ label
L1856:
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; i -12  
	cmp A0,81
	jle L1857
; ------------------------------ label
L1855:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; opc 16  
	mov qword[Dframe-152],D0	; T15  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-152]	; T15  
	mov D0, [D0+D1*8]
	mov [Dframe-144],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK381
	mov D11,[Dframe-144]	; T14  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK382
	call serror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L1852
; ------------------------------ label
L1852:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

	global getconstvalue
;	Proc:getconstvalue
getconstvalue:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+16]	; p 16  
	and D0,D0
	jz L1860
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,1
	jnz L1860
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ returnx
	mov D0,[Dframe-16]	; T2  
	jmp L1859
; ------------------------------ label
L1860:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK383
	call serror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L1859
; ------------------------------ label
L1859:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global nextautotype
;	Proc:nextautotype
	segment .bss
nextautotype.str:	resb 32
	segment .text
nextautotype:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextautotype.str]
	mov [Dframe-8],D0	; T1  
; ------------------------------ preincrx
	inc dword[autotypeno]
	mov A0,dword[autotypeno]
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	mov D11,KK384
	mov A12,[Dframe-16]	; T2  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextautotype.str]
	mov [Dframe-24],D0	; T3  
; ------------------------------ returnx
	mov D0,[Dframe-24]	; T3  
	jmp L1861
; ------------------------------ label
L1861:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global createconstmode
;	Proc:createconstmode
createconstmode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-24]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; T3  
	and A0,A0
	jz L1863
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; m 16  
	jmp L1862
; ------------------------------ label
L1863:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-48]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; T4  
	and A0,A0
	jz L1864
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-64]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T6  
; ------------------------------ returnx
	mov A0,[Dframe-56]	; T6  
	jmp L1862
; ------------------------------ label
L1864:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call copymode
	mov [Dframe-72],A0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-72]	; T8  
	mov [Dframe-4],A0	; newm -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ indexlv
	lea D0,[ttconsttype]
	mov D1,[Dframe-88]	; T10  
	lea D0, [D0+D1*4]
	mov [Dframe-80],D0	; T9  
; ------------------------------ move
	mov A0,[Dframe-4]	; newm -4  
	mov D13,[Dframe-80]	; T9 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-104],D0	; T12  
; ------------------------------ indexlv
	lea D0,[ttconst]
	mov D1,[Dframe-104]	; T12  
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-96]	; T11 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-120],D0	; T14  
; ------------------------------ indexlv
	lea D0,[ttconsttype]
	mov D1,[Dframe-120]	; T14  
	lea D0, [D0+D1*4]
	mov [Dframe-112],D0	; T13  
; ------------------------------ move
	mov A0,[Dframe+16]	; m 16  
	mov D13,[Dframe-112]	; T13 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; newm -4  
	jmp L1862
; ------------------------------ label
L1862:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

	global createrefmode
;	Proc:createrefmode
createrefmode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[ttreftype]
	mov D1,[Dframe-24]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe-16]	; T1  
	and A0,A0
	jz L1866
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ index
	lea D0,[ttreftype]
	mov D1,[Dframe-40]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-32],A0	; T3  
; ------------------------------ returnx
	mov A0,[Dframe-32]	; T3  
	jmp L1865
; ------------------------------ label
L1866:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call createnewmode
	mov [Dframe-48],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T5  
	mov [Dframe-4],A0	; newm -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ indexlv
	lea D0,[ttreftype]
	mov D1,[Dframe-64]	; T7  
	lea D0, [D0+D1*4]
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov A0,[Dframe-4]	; newm -4  
	mov D13,[Dframe-56]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ indexlv
	lea D0,[tttarget]
	mov D1,[Dframe-80]	; T9  
	lea D0, [D0+D1*4]
	mov [Dframe-72],D0	; T8  
; ------------------------------ move
	mov A0,[Dframe+16]	; m 16  
	mov D13,[Dframe-72]	; T8 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-96],D0	; T11  
; ------------------------------ indexlv
	lea D0,[ttisref]
	mov D1,[Dframe-96]	; T11  
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-88]	; T10 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; newm -4  
	jmp L1865
; ------------------------------ label
L1865:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global createprocmode
;	Proc:createprocmode
createprocmode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,17
	call createnewmode
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; newm -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-32],D0	; T3  
; ------------------------------ indexlv
	lea D0,[ttparams]
	mov D1,[Dframe-32]	; T3  
	lea D0, [D0+D1*8]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+24]	; pm 24  
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ indexlv
	lea D0,[tttarget]
	mov D1,[Dframe-48]	; T5  
	lea D0, [D0+D1*4]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov A0,[Dframe+16]	; m 16  
	mov D13,[Dframe-40]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; newm -4  
	jmp L1867
; ------------------------------ label
L1867:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global createarraymode
;	Proc:createarraymode
createarraymode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,19
	call createnewmode
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; newm -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-32],D0	; T3  
; ------------------------------ indexlv
	lea D0,[tttarget]
	mov D1,[Dframe-32]	; T3  
	lea D0, [D0+D1*4]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,[Dframe+16]	; m 16  
	mov D13,[Dframe-24]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ indexlv
	lea D0,[ttlength]
	mov D1,[Dframe-48]	; T5  
	lea D0, [D0+D1*4]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov A0,[Dframe+24]	; length 24  
	mov D13,[Dframe-40]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ indexlv
	lea D0,[ttsize]
	mov D1,[Dframe-64]	; T7  
	lea D0, [D0+D1*4]
	mov [Dframe-56],D0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-80]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T8  
; ------------------------------ mul
	mov A0,[Dframe+24]	; length 24  
	mov A1,[Dframe-72]	; T8  
	mul A1
	mov [Dframe-88],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-88]	; T10  
	mov D13,[Dframe-56]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; newm -4  
	jmp L1868
; ------------------------------ label
L1868:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global createenummode
;	Proc:createenummode
createenummode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,15
	call createnewmode
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; newm -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-32],D0	; T3  
; ------------------------------ indexlv
	lea D0,[ttnamedef]
	mov D1,[Dframe-32]	; T3  
	lea D0, [D0+D1*8]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+16]	; e 16  
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; newm -4  
	jmp L1869
; ------------------------------ label
L1869:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global createstructmode
;	Proc:createstructmode
createstructmode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+24]	; smode 24  
	call createnewmode
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; newm -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; newm -4  
	mov qword[Dframe-32],D0	; T3  
; ------------------------------ indexlv
	lea D0,[ttnamedef]
	mov D1,[Dframe-32]	; T3  
	lea D0, [D0+D1*8]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+16]	; s 16  
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; newm -4  
	jmp L1870
; ------------------------------ label
L1870:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global setnameptr
;	Proc:setnameptr
setnameptr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; T2  
	mov A1,72
	lea D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov D13,[Dframe-8]	; T1 *
	mov qword[D13],D0
; ------------------------------ label
L1871:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global printcode_all
;	Proc:printcode_all
printcode_all:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L1875
; ------------------------------ label
L1876:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,[Dframe+24]	; caption 24  
	mov A12,[Dframe-4]	; i -4  
	call printcode
	add Dstack, 32
; ------------------------------ label
L1873:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L1875:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[nmodules]
	jle L1876
; ------------------------------ label
L1874:
; ------------------------------ label
L1872:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global printcode
;	Proc:printcode
printcode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; n 32  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-32]	; T2  
	imul D1,78
	mov D0, [D0+D1+8]
	mov [Dframe-24],D0	; T1  
; ------------------------------ index
	mov D0,[Dframe-24]	; T1  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; n 32  
	mov qword[Dframe-48],D0	; T4  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-48]	; T4  
	imul D1,78
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe-40]	; T3  
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK385
	mov D12,[Dframe+24]	; caption 24  
	mov D13,KK386
	call fprintf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1878
; ------------------------------ label
L1880:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T6  
	cmp A0,6
	jnz L1881
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T8  
	cmp A0,3
	jz L1882
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ jumpfalse
	mov D0,[Dframe-88]	; T9  
	and D0,D0
	jz L1882
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-96],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T13  
	mov dword[Dframe-128],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T14  
	mov qword[Dframe-112],D0	; T12  
; ------------------------------ index
	lea D0,[scopenames]
	mov D1,[Dframe-112]	; T12  
	mov D0, [D0+D1*8]
	mov [Dframe-104],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe-104]	; T11  
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK387
	mov D12,[Dframe-96]	; T10  
	mov D13,KK388
	call fprintf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-136],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,[Dframe-136]	; T15  
	mov A12,0
	mov D13,KK389
	call printunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK390
	call fprintf
	add Dstack, 32
; ------------------------------ label
L1882:
; ------------------------------ label
L1881:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; p -16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; p -16  
; ------------------------------ label
L1878:
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; p -16  
	and D0,D0
	jnz L1880
; ------------------------------ label
L1879:
; ------------------------------ label
L1877:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

	global printunit
;	Proc:printunit
printunit:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 832

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+24]	; p 24  
	cmp D0,0
	jnz L1884
; ------------------------------ stmt
; ------------------------------ return
	jmp L1883
; ------------------------------ label
L1884:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T1  
	cmp A0,81
	jl L1885
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK391
	mov D11,KK392
	mov A12,[Dframe-56]	; T2  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call os_getch
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ label
L1885:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T3  
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; T3  
	and A0,A0
	jz L1886
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,44
	mov A0, [D0+D1]
	mov [currlineno],A0
; ------------------------------ label
L1886:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+32]	; level 32  
	mov D11,[Dframe+40]	; prefix 40  
	mov D12,[Dframe+24]	; p 24  
	call getprefix
	mov [Dframe-72],D0	; T4  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK393
	mov D12,[Dframe-72]	; T4  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-88],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T6  
	mov qword[Dframe-80],D0	; T5  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-80]	; T5  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; idname -32  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-32]	; idname -32  
	mov B0, [D0]
	mov [Dframe-112],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T9  
	mov dword[Dframe-120],A0	; T10  
; ------------------------------ truncate
	mov A0,[Dframe-120]	; T10  
	and D0,255
	mov [Dframe-104],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T8  
	mov dword[Dframe-96],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T7  
	cmp A0,106
	jnz L1887
; ------------------------------ stmt
; ------------------------------ addto
	mov D0,[Dframe-32]	; idname -32  
	mov D1,2
	add D0,D1
	mov [Dframe-32],D0	; idname -32  
; ------------------------------ label
L1887:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK394
	mov D12,[Dframe-32]	; idname -32  
	mov D13,KK395
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[fdebug]
	and A0,A0
	jz L1888
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK396
	mov D11,KK397
	mov D12,[Dframe-32]	; idname -32  
	call printf
	add Dstack, 32
; ------------------------------ label
L1888:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T11  
	cmp A0,3
	jz L1890
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-136],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T12  
	cmp A0,4
	jnz L1889
; ------------------------------ label
L1890:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T16  
	mov dword[Dframe-176],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-176]	; T17  
	mov qword[Dframe-160],D0	; T15  
; ------------------------------ index
	lea D0,[namenames]
	mov D1,[Dframe-160]	; T15  
	mov D0, [D0+D1*8]
	mov [Dframe-152],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK398
	mov D12,[Dframe-144]	; T13  
	mov D13,[Dframe-152]	; T14  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-184],D0	; T18  
; ------------------------------ jumpfalse
	mov D0,[Dframe-184]	; T18  
	and D0,D0
	jz L1891
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-216],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe-216]	; T22  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-208],A0	; T21  
; ------------------------------ widen
	movsx D0,dword[Dframe-208]	; T21  
	mov qword[Dframe-200],D0	; T20  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-200]	; T20  
	mov D0, [D0+D1*8]
	mov [Dframe-192],D0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword KK399
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK400
	mov D12,KK401
	mov D13,[Dframe-192]	; T19  
	call fprintf
	add Dstack, 48
; ------------------------------ label
L1891:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; d -16  
	call getdottedname
	mov [Dframe-224],D0	; T23  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK402
	mov D12,KK403
	mov D13,[Dframe-224]	; T23  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-232],D0	; T24  
; ------------------------------ jumpfalse
	mov D0,[Dframe-232]	; T24  
	and D0,D0
	jz L1892
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-240],D0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK404
	mov D12,KK405
	mov D13,[Dframe-240]	; T25  
	call fprintf
	add Dstack, 32
; ------------------------------ label
L1892:
; ------------------------------ jump
	jmp	L1893
; ------------------------------ label
L1889:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-248],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T26  
	cmp A0,8
	jz L1895
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-256],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T27  
	cmp A0,9
	jz L1895
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-264],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-264]	; T28  
	cmp A0,18
	jnz L1894
; ------------------------------ label
L1895:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-272],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-296],B0	; T32  
; ------------------------------ widen
	movzx A0,byte [Dframe-296]	; T32  
	mov dword[Dframe-304],A0	; T33  
; ------------------------------ widen
	movsx D0,dword[Dframe-304]	; T33  
	mov qword[Dframe-288],D0	; T31  
; ------------------------------ index
	lea D0,[namenames]
	mov D1,[Dframe-288]	; T31  
	mov D0, [D0+D1*8]
	mov [Dframe-280],D0	; T30  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK406
	mov D12,[Dframe-272]	; T29  
	mov D13,[Dframe-280]	; T30  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK407
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-312],D0	; T34  
; ------------------------------ add
	mov A0,[Dframe+32]	; level 32  
	mov A1,1
	add A0,A1
	mov [Dframe-320],A0	; T35  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,[Dframe-312]	; T34  
	mov A12,[Dframe-320]	; T35  
	mov D13,KK408
	call printunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L1883
; ------------------------------ jump
	jmp	L1896
; ------------------------------ label
L1894:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-328],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T36  
	cmp A0,18
	jnz L1897
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-336],D0	; T37  
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-360],B0	; T40  
; ------------------------------ widen
	movzx A0,byte [Dframe-360]	; T40  
	mov dword[Dframe-368],A0	; T41  
; ------------------------------ widen
	movsx D0,dword[Dframe-368]	; T41  
	mov qword[Dframe-352],D0	; T39  
; ------------------------------ index
	lea D0,[namenames]
	mov D1,[Dframe-352]	; T39  
	mov D0, [D0+D1*8]
	mov [Dframe-344],D0	; T38  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK409
	mov D12,[Dframe-336]	; T37  
	mov D13,[Dframe-344]	; T38  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1898
; ------------------------------ label
L1897:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-376],A0	; T42  
; ------------------------------ jumpcc
	mov A0,[Dframe-376]	; T42  
	cmp A0,19
	jnz L1899
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-392],D0	; T44  
; ------------------------------ index
	mov D0,[Dframe-392]	; T44  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-384],D0	; T43  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK410
	mov D12,[Dframe-384]	; T43  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1900
; ------------------------------ label
L1899:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-400],A0	; T45  
; ------------------------------ jumpcc
	mov A0,[Dframe-400]	; T45  
	cmp A0,20
	jnz L1901
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-408],A0	; T46  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK411
	mov D12,KK412
	mov A13,[Dframe-408]	; T46  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1902
; ------------------------------ label
L1901:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-416],A0	; T47  
; ------------------------------ jumpcc
	mov A0,[Dframe-416]	; T47  
	cmp A0,1
	jnz L1903
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-20],A0	; t -20  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; t -20  
	cmp A0,[trefchar]
	jnz L1904
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,58
	mov B0, [D0+D1]
	mov [Dframe-424],B0	; T48  
; ------------------------------ widen
	movzx A0,byte [Dframe-424]	; T48  
	mov dword[Dframe-432],A0	; T49  
; ------------------------------ jumptrue
	mov A0,[Dframe-432]	; T49  
	and A0,A0
	jnz L1905
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L68
; ------------------------------ label
L1905:
; ------------------------------ stmt
; ------------------------------ label
L65: ;<dostring>
; ------------------------------ stmt
; ------------------------------ label
L66: ;<L49>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-440],A0	; T50  
; ------------------------------ jumpcc
	mov A0,[Dframe-440]	; T50  
	cmp A0,256
	jle L1906
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-448],A0	; T51  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	mov A13,[Dframe-448]	; T51  
	push D13
	push qword KK413
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK414
	mov D12,KK415
	mov D13,KK416
	call fprintf
	add Dstack, 48
; ------------------------------ jump
	jmp	L1907
; ------------------------------ label
L1906:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-456],D0	; T52  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-464],A0	; T53  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	mov A13,[Dframe-464]	; T53  
	push D13
	push qword KK417
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK418
	mov D12,KK419
	mov D13,[Dframe-456]	; T52  
	call fprintf
	add Dstack, 48
; ------------------------------ label
L1907:
; ------------------------------ jump
	jmp	L1908
; ------------------------------ label
L1904:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; t -20  
	cmp A0,2
	jl L1909
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; t -20  
	cmp A0,5
	jg L1909
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-472],D0	; T54  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK420
	mov D12,[Dframe-472]	; T54  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1910
; ------------------------------ label
L1909:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; t -20  
	cmp A0,7
	jl L1911
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; t -20  
	cmp A0,10
	jg L1911
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-480],D0	; T55  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK421
	mov D12,[Dframe-480]	; T55  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1912
; ------------------------------ label
L1911:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; t -20  
	cmp A0,11
	jl L1913
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; t -20  
	cmp A0,13
	jg L1913
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-488],D0	; T56  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK422
	movq XMM2,[Dframe-488]	; T56  
	mov D12,[Dframe-488]	; T56  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1914
; ------------------------------ label
L1913:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-504],D0	; T58  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-504]	; T58  
	mov A0, [D0+D1*4]
	mov [Dframe-496],A0	; T57  
; ------------------------------ jumpcc
	mov A0,[Dframe-496]	; T57  
	cmp A0,16
	jnz L1915
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,58
	mov B0, [D0+D1]
	mov [Dframe-512],B0	; T59  
; ------------------------------ widen
	movzx A0,byte [Dframe-512]	; T59  
	mov dword[Dframe-520],A0	; T60  
; ------------------------------ jumpfalse
	mov A0,[Dframe-520]	; T60  
	and A0,A0
	jz L1916
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L66
; ------------------------------ label
L1916:
; ------------------------------ stmt
; ------------------------------ label
L67: ;<doref>
; ------------------------------ stmt
; ------------------------------ label
L68: ;<L48>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-536],D0	; T62  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK423
	mov D12,[Dframe-536]	; T62  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1917
; ------------------------------ label
L1915:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; t -20  
	call typename
	mov [Dframe-544],D0	; T63  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK424
	mov D11,[Dframe-544]	; T63  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK425
	call serror
	add Dstack, 32
; ------------------------------ label
L1917:
; ------------------------------ label
L1914:
; ------------------------------ label
L1912:
; ------------------------------ label
L1910:
; ------------------------------ label
L1908:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; t -20  
	mov A11,1
	call Strmode
	mov [Dframe-552],D0	; T64  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK426
	mov D12,KK427
	mov D13,[Dframe-552]	; T64  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,58
	mov B0, [D0+D1]
	mov [Dframe-560],B0	; T65  
; ------------------------------ widen
	movzx A0,byte [Dframe-560]	; T65  
	mov dword[Dframe-568],A0	; T66  
; ------------------------------ jumpfalse
	mov A0,[Dframe-568]	; T66  
	and A0,A0
	jz L1918
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK428
	mov D12,KK429
	call fprintf
	add Dstack, 32
; ------------------------------ label
L1918:
; ------------------------------ jump
	jmp	L1919
; ------------------------------ label
L1903:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-576],A0	; T67  
; ------------------------------ jumpcc
	mov A0,[Dframe-576]	; T67  
	cmp A0,58
	jnz L1920
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-600],A0	; T70  
; ------------------------------ widen
	movsx D0,dword[Dframe-600]	; T70  
	mov qword[Dframe-592],D0	; T69  
; ------------------------------ index
	lea D0,[convnames]
	mov D1,[Dframe-592]	; T69  
	mov D0, [D0+D1*8]
	mov [Dframe-584],D0	; T68  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK430
	mov D12,[Dframe-584]	; T68  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK431
	mov D12,KK432
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,58
	mov B0, [D0+D1]
	mov [Dframe-608],B0	; T71  
; ------------------------------ widen
	movzx A0,byte [Dframe-608]	; T71  
	mov dword[Dframe-616],A0	; T72  
; ------------------------------ jumpfalse
	mov A0,[Dframe-616]	; T72  
	and A0,A0
	jz L1921
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK433
	mov D12,KK434
	call fprintf
	add Dstack, 32
; ------------------------------ label
L1921:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-632],D0	; T74  
; ------------------------------ index
	mov D0,[Dframe-632]	; T74  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-624],A0	; T73  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-624]	; T73  
	call typename
	mov [Dframe-640],D0	; T75  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK435
	mov D12,[Dframe-640]	; T75  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK436
	mov D12,KK437
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,59
	mov B0, [D0+D1]
	mov [Dframe-648],B0	; T76  
; ------------------------------ widen
	movzx A0,byte [Dframe-648]	; T76  
	mov dword[Dframe-656],A0	; T77  
; ------------------------------ jumpfalse
	mov A0,[Dframe-656]	; T77  
	and A0,A0
	jz L1922
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK438
	mov D12,KK439
	call fprintf
	add Dstack, 32
; ------------------------------ label
L1922:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-664],A0	; T78  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-664]	; T78  
	call typename
	mov [Dframe-672],D0	; T79  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK440
	mov D12,[Dframe-672]	; T79  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1923
; ------------------------------ label
L1920:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-680],A0	; T80  
; ------------------------------ jumpcc
	mov A0,[Dframe-680]	; T80  
	cmp A0,59
	jnz L1924
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-688],A0	; T81  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK441
	mov D12,KK442
	mov A13,[Dframe-688]	; T81  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1925
; ------------------------------ label
L1924:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-696],A0	; T82  
; ------------------------------ jumpcc
	mov A0,[Dframe-696]	; T82  
	cmp A0,56
	jz L1927
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-704],A0	; T83  
; ------------------------------ jumpcc
	mov A0,[Dframe-704]	; T83  
	cmp A0,57
	jnz L1926
; ------------------------------ label
L1927:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-712],A0	; T84  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK443
	mov D12,KK444
	mov A13,[Dframe-712]	; T84  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1928
; ------------------------------ label
L1926:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-720],A0	; T85  
; ------------------------------ jumpcc
	mov A0,[Dframe-720]	; T85  
	cmp A0,24
	jnz L1929
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; pc -40  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-24],A0	; n -24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1930
; ------------------------------ label
L1932:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-24]	; n -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; pc -40  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; pc -40  
; ------------------------------ label
L1930:
; ------------------------------ jumptrue
	mov D0,[Dframe-40]	; pc -40  
	and D0,D0
	jnz L1932
; ------------------------------ label
L1931:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-728],D0	; T86  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK445
	mov D12,[Dframe-728]	; T86  
	mov A13,[Dframe-24]	; n -24  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1933
; ------------------------------ label
L1929:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-736],A0	; T87  
; ------------------------------ jumpcc
	mov A0,[Dframe-736]	; T87  
	cmp A0,32
	jnz L1934
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-744],A0	; T88  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK446
	mov D12,KK447
	mov A13,[Dframe-744]	; T88  
	call fprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1935
; ------------------------------ label
L1934:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-752],A0	; T89  
; ------------------------------ jumpcc
	mov A0,[Dframe-752]	; T89  
	cmp A0,55
	jnz L1936
; ------------------------------ stmt
; ------------------------------ label
L1936:
; ------------------------------ label
L1935:
; ------------------------------ label
L1933:
; ------------------------------ label
L1928:
; ------------------------------ label
L1925:
; ------------------------------ label
L1923:
; ------------------------------ label
L1919:
; ------------------------------ label
L1902:
; ------------------------------ label
L1900:
; ------------------------------ label
L1898:
; ------------------------------ label
L1896:
; ------------------------------ label
L1893:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,56
	mov B0, [D0+D1]
	mov [Dframe-760],B0	; T90  
; ------------------------------ widen
	movzx A0,byte [Dframe-760]	; T90  
	mov dword[Dframe-768],A0	; T91  
; ------------------------------ jumpfalse
	mov A0,[Dframe-768]	; T91  
	and A0,A0
	jz L1937
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK448
	mov D12,KK449
	call fprintf
	add Dstack, 32
; ------------------------------ label
L1937:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,KK450
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-776],D0	; T92  
; ------------------------------ add
	mov A0,[Dframe+32]	; level 32  
	mov A1,1
	add A0,A1
	mov [Dframe-784],A0	; T93  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,[Dframe-776]	; T92  
	mov A12,[Dframe-784]	; T93  
	mov D13,KK451
	call printunitlist
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-792],D0	; T94  
; ------------------------------ add
	mov A0,[Dframe+32]	; level 32  
	mov A1,1
	add A0,A1
	mov [Dframe-800],A0	; T95  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,[Dframe-792]	; T94  
	mov A12,[Dframe-800]	; T95  
	mov D13,KK452
	call printunitlist
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-808],A0	; T96  
; ------------------------------ jumpcc
	mov A0,[Dframe-808]	; T96  
	cmp A0,7
	jz L1938
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-816],D0	; T97  
; ------------------------------ add
	mov A0,[Dframe+32]	; level 32  
	mov A1,1
	add A0,A1
	mov [Dframe-824],A0	; T98  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,[Dframe-816]	; T97  
	mov A12,[Dframe-824]	; T98  
	mov D13,KK453
	call printunitlist
	add Dstack, 32
; ------------------------------ label
L1938:
; ------------------------------ label
L1883:
; ------------------------------ hardret
	add Dstack, 832
	pop Dframe
	ret
;	End

;	Proc:printunitlist
printunitlist:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+24]	; p 24  
	cmp D0,0
	jnz L1940
; ------------------------------ stmt
; ------------------------------ return
	jmp L1939
; ------------------------------ label
L1940:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1941
; ------------------------------ label
L1943:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dev 16  
	mov D11,[Dframe+24]	; p 24  
	mov A12,[Dframe+32]	; level 32  
	mov D13,[Dframe+40]	; prefix 40  
	call printunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+24],D0	; p 24  
; ------------------------------ label
L1941:
; ------------------------------ jumptrue
	mov D0,[Dframe+24]	; p 24  
	and D0,D0
	jnz L1943
; ------------------------------ label
L1942:
; ------------------------------ label
L1939:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:getprefix
	segment .bss
getprefix.str:	resb 512
	segment .text
getprefix:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 736

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[Dframe-512]	; indentstr -512  
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-536],D0	; T1  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-536]	; T1 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; level 16  
	cmp A0,10
	jle L1945
; ------------------------------ stmt
; ------------------------------ move
	mov A0,10
	mov [Dframe+16],A0	; level 16  
; ------------------------------ label
L1945:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-512]	; indentstr -512  
	mov [Dframe-544],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-544]	; T2  
	mov D11,KK454
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; p 32  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-552],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-552]	; T3  
	mov A11,0
	call Strmode
	mov [Dframe-560],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-560]	; T4  
	mov [Dframe-520],D0	; modestr -520  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-520]	; modestr -520  
	call strlen
	mov [Dframe-576],D0	; T6  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-576]	; T6  
	mov A0,A0
	mov [Dframe-568],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-568]	; T5  
	mov [Dframe-524],A0	; length -524  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-524]	; length -524  
	mov qword[Dframe-584],D0	; T7  
; ------------------------------ getaddr
	lea D0,[Dframe-512]	; indentstr -512  
	mov [Dframe-600],D0	; T9  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-600]	; T9  
	call strlen
	mov [Dframe-608],D0	; T10  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-608]	; T10  
	mov [Dframe-592],D0	; T8  
; ------------------------------ jumpcc
	mov D0,[Dframe-584]	; T7  
	cmp D0,[Dframe-592]	; T8  
	jge L1946
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-512]	; indentstr -512  
	mov [Dframe-616],D0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-524]	; length -524  
	mov qword[Dframe-632],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-616]	; T11  
	mov D11,[Dframe-520]	; modestr -520  
	mov D12,[Dframe-632]	; T13  
	call memcpy
	add Dstack, 32
; ------------------------------ jump
	jmp	L1947
; ------------------------------ label
L1946:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-512]	; indentstr -512  
	mov [Dframe-640],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-640]	; T14  
	mov D11,[Dframe-520]	; modestr -520  
	call strcpy
	add Dstack, 32
; ------------------------------ label
L1947:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+16]	; level 16  
	mov [Dframe-528],A0	; av_2 -528  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1948
; ------------------------------ label
L1950:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-512]	; indentstr -512  
	mov [Dframe-648],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-648]	; T15  
	mov D11,KK455
	call strcat
	add Dstack, 32
; ------------------------------ label
L1948:
; ------------------------------ postdecrx
	mov A0,[Dframe-528]	; av_2 -528  
	dec dword[Dframe-528]	; av_2 -528  
	mov dword[Dframe-656],A0	; T16  
; ------------------------------ jumptrue
	mov A0,[Dframe-656]	; T16  
	and A0,A0
	jnz L1950
; ------------------------------ label
L1949:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getprefix.str]
	mov [Dframe-664],D0	; T17  
; ------------------------------ callfn
	sub Dstack,32
	call getlineinfok
	mov [Dframe-672],D0	; T18  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-664]	; T17  
	mov D11,[Dframe-672]	; T18  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getprefix.str]
	mov [Dframe-680],D0	; T19  
; ------------------------------ getaddr
	lea D0,[Dframe-512]	; indentstr -512  
	mov [Dframe-688],D0	; T20  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-680]	; T19  
	mov D11,[Dframe-688]	; T20  
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getprefix.str]
	mov [Dframe-696],D0	; T21  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-696]	; T21  
	mov D11,[Dframe+24]	; prefix 24  
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; prefix 24  
	mov B0, [D0]
	mov [Dframe-712],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-712]	; T23  
	mov dword[Dframe-720],A0	; T24  
; ------------------------------ truncate
	mov A0,[Dframe-720]	; T24  
	and D0,255
	mov [Dframe-704],B0	; T22  
; ------------------------------ jumpfalse
	mov B0,[Dframe-704]	; T22  
	and B0,B0
	jz L1951
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getprefix.str]
	mov [Dframe-728],D0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-728]	; T25  
	mov D11,KK456
	call strcat
	add Dstack, 32
; ------------------------------ label
L1951:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getprefix.str]
	mov [Dframe-736],D0	; T26  
; ------------------------------ returnx
	mov D0,[Dframe-736]	; T26  
	jmp L1944
; ------------------------------ label
L1944:
; ------------------------------ hardret
	add Dstack, 736
	pop Dframe
	ret
;	End

	global getdottedname
;	Proc:getdottedname
	segment .bss
getdottedname.str:	resb 256
	segment .text
getdottedname:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 416

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getdottedname.str]
	mov [Dframe-272],D0	; T1  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-280],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-272]	; T1  
	mov D11,[Dframe-280]	; T2  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; owner -264  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1953
; ------------------------------ label
L1955:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str2 -256  
	mov [Dframe-288],D0	; T3  
; ------------------------------ getaddr
	lea D0,[getdottedname.str]
	mov [Dframe-296],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; T3  
	mov D11,[Dframe-296]	; T4  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getdottedname.str]
	mov [Dframe-304],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-264]	; owner -264  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-312],D0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-304]	; T5  
	mov D11,[Dframe-312]	; T6  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getdottedname.str]
	mov [Dframe-320],D0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-320]	; T7  
	mov D11,KK457
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getdottedname.str]
	mov [Dframe-328],D0	; T8  
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str2 -256  
	mov [Dframe-336],D0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-328]	; T8  
	mov D11,[Dframe-336]	; T9  
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-264]	; owner -264  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; owner -264  
; ------------------------------ label
L1953:
; ------------------------------ jumpfalse
	mov D0,[Dframe-264]	; owner -264  
	and D0,D0
	jz L1956
; ------------------------------ index
	mov D0,[Dframe-264]	; owner -264  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-344],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-344]	; T10  
	mov dword[Dframe-352],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-352]	; T11  
	cmp A0,2
	jnz L1955
; ------------------------------ label
L1956:
; ------------------------------ label
L1954:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,104
	mov W0, [D0+D1]
	mov [Dframe-360],W0	; T12  
; ------------------------------ widen
	movzx A0,word [Dframe-360]	; T12  
	mov dword[Dframe-368],A0	; T13  
; ------------------------------ jumpfalse
	mov A0,[Dframe-368]	; T13  
	and A0,A0
	jz L1957
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str2 -256  
	mov [Dframe-376],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,104
	mov W0, [D0+D1]
	mov [Dframe-384],W0	; T15  
; ------------------------------ widen
	movzx A0,word [Dframe-384]	; T15  
	mov dword[Dframe-392],A0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-376]	; T14  
	mov D11,KK458
	mov A12,[Dframe-392]	; T16  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getdottedname.str]
	mov [Dframe-400],D0	; T17  
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str2 -256  
	mov [Dframe-408],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-400]	; T17  
	mov D11,[Dframe-408]	; T18  
	call strcat
	add Dstack, 32
; ------------------------------ label
L1957:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getdottedname.str]
	mov [Dframe-416],D0	; T19  
; ------------------------------ returnx
	mov D0,[Dframe-416]	; T19  
	jmp L1952
; ------------------------------ label
L1952:
; ------------------------------ hardret
	add Dstack, 416
	pop Dframe
	ret
;	End

;	Proc:getlineinfok
	segment .bss
getlineinfok.str:	resb 40
	segment .text
getlineinfok:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getlineinfok.str]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	mov D11,KK459
	mov A12,[currlineno]
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getlineinfok.str]
	mov [Dframe-16],D0	; T2  
; ------------------------------ returnx
	mov D0,[Dframe-16]	; T2  
	jmp L1958
; ------------------------------ label
L1958:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global getautofieldname
;	Proc:getautofieldname
getautofieldname:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; str -32  
	mov [Dframe-48],D0	; T1  
; ------------------------------ preincrx
	inc dword[nextafindex]
	mov A0,dword[nextafindex]
	mov dword[Dframe-56],A0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; T1  
	mov D11,KK460
	mov A12,[Dframe-56]	; T2  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; str -32  
	mov [Dframe-64],D0	; T3  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-64]	; T3  
	call pcm_copyheapstring
	mov [Dframe-72],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-72]	; T4  
	mov [Dframe-40],D0	; name -40  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; name -40  
	call addnamestr
	mov [Dframe-80],D0	; T5  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-80]	; T5  
	jmp L1959
; ------------------------------ label
L1959:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global convertstring
;	Proc:convertstring
convertstring:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 640

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; length 32  
	cmp A0,-1
	jnz L1961
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; s 16  
	call strlen
	mov [Dframe-56],D0	; T2  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-56]	; T2  
	mov A0,A0
	mov [Dframe-48],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-48]	; T1  
	mov [Dframe+32],A0	; length 32  
; ------------------------------ label
L1961:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; t 24  
	mov [Dframe-32],D0	; t0 -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+32]	; length 32  
	mov [Dframe-36],A0	; av_3 -36  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1962
; ------------------------------ label
L1964:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+16]	; s 16  
	inc qword[Dframe+16]	; s 16  
	mov qword[Dframe-88],D0	; T6  
; ------------------------------ getptr
	mov D0,[Dframe-88]	; T6  
	mov B0, [D0]
	mov [Dframe-80],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T5  
	mov dword[Dframe-96],A0	; T7  
; ------------------------------ truncate
	mov A0,[Dframe-96]	; T7  
	and D0,255
	mov [Dframe-72],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T4  
	mov dword[Dframe-64],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-64]	; T3  
	mov [Dframe-4],A0	; c -4  
; ------------------------------ stmt
; ------------------------------ switch
	mov A0,[Dframe-4]	; c -4  
	sub A0, 7
	cmp A0, 86
	jae L1965
	jmp [A0*8+L1977]
	align 8
; ------------------------------ label
L1977:
; ------------------------------ jumplabel
	dq L1970	; 1
; ------------------------------ jumplabel
	dq L1969	; 2
; ------------------------------ jumplabel
	dq L1972	; 3
; ------------------------------ jumplabel
	dq L1974	; 4
; ------------------------------ jumplabel
	dq L1967	; 5
; ------------------------------ jumplabel
	dq L1968	; 6
; ------------------------------ jumplabel
	dq L1973	; 7
; ------------------------------ jumplabel
	dq L1965	; 8
; ------------------------------ jumplabel
	dq L1965	; 9
; ------------------------------ jumplabel
	dq L1965	; 10
; ------------------------------ jumplabel
	dq L1965	; 11
; ------------------------------ jumplabel
	dq L1965	; 12
; ------------------------------ jumplabel
	dq L1965	; 13
; ------------------------------ jumplabel
	dq L1965	; 14
; ------------------------------ jumplabel
	dq L1965	; 15
; ------------------------------ jumplabel
	dq L1965	; 16
; ------------------------------ jumplabel
	dq L1965	; 17
; ------------------------------ jumplabel
	dq L1965	; 18
; ------------------------------ jumplabel
	dq L1965	; 19
; ------------------------------ jumplabel
	dq L1965	; 20
; ------------------------------ jumplabel
	dq L1965	; 21
; ------------------------------ jumplabel
	dq L1965	; 22
; ------------------------------ jumplabel
	dq L1965	; 23
; ------------------------------ jumplabel
	dq L1965	; 24
; ------------------------------ jumplabel
	dq L1965	; 25
; ------------------------------ jumplabel
	dq L1965	; 26
; ------------------------------ jumplabel
	dq L1965	; 27
; ------------------------------ jumplabel
	dq L1976	; 28
; ------------------------------ jumplabel
	dq L1965	; 29
; ------------------------------ jumplabel
	dq L1965	; 30
; ------------------------------ jumplabel
	dq L1965	; 31
; ------------------------------ jumplabel
	dq L1965	; 32
; ------------------------------ jumplabel
	dq L1975	; 33
; ------------------------------ jumplabel
	dq L1965	; 34
; ------------------------------ jumplabel
	dq L1965	; 35
; ------------------------------ jumplabel
	dq L1965	; 36
; ------------------------------ jumplabel
	dq L1965	; 37
; ------------------------------ jumplabel
	dq L1965	; 38
; ------------------------------ jumplabel
	dq L1965	; 39
; ------------------------------ jumplabel
	dq L1965	; 40
; ------------------------------ jumplabel
	dq L1965	; 41
; ------------------------------ jumplabel
	dq L1965	; 42
; ------------------------------ jumplabel
	dq L1965	; 43
; ------------------------------ jumplabel
	dq L1965	; 44
; ------------------------------ jumplabel
	dq L1965	; 45
; ------------------------------ jumplabel
	dq L1965	; 46
; ------------------------------ jumplabel
	dq L1965	; 47
; ------------------------------ jumplabel
	dq L1965	; 48
; ------------------------------ jumplabel
	dq L1965	; 49
; ------------------------------ jumplabel
	dq L1965	; 50
; ------------------------------ jumplabel
	dq L1965	; 51
; ------------------------------ jumplabel
	dq L1965	; 52
; ------------------------------ jumplabel
	dq L1965	; 53
; ------------------------------ jumplabel
	dq L1965	; 54
; ------------------------------ jumplabel
	dq L1965	; 55
; ------------------------------ jumplabel
	dq L1965	; 56
; ------------------------------ jumplabel
	dq L1965	; 57
; ------------------------------ jumplabel
	dq L1965	; 58
; ------------------------------ jumplabel
	dq L1965	; 59
; ------------------------------ jumplabel
	dq L1965	; 60
; ------------------------------ jumplabel
	dq L1965	; 61
; ------------------------------ jumplabel
	dq L1965	; 62
; ------------------------------ jumplabel
	dq L1965	; 63
; ------------------------------ jumplabel
	dq L1965	; 64
; ------------------------------ jumplabel
	dq L1965	; 65
; ------------------------------ jumplabel
	dq L1965	; 66
; ------------------------------ jumplabel
	dq L1965	; 67
; ------------------------------ jumplabel
	dq L1965	; 68
; ------------------------------ jumplabel
	dq L1965	; 69
; ------------------------------ jumplabel
	dq L1965	; 70
; ------------------------------ jumplabel
	dq L1965	; 71
; ------------------------------ jumplabel
	dq L1965	; 72
; ------------------------------ jumplabel
	dq L1965	; 73
; ------------------------------ jumplabel
	dq L1965	; 74
; ------------------------------ jumplabel
	dq L1965	; 75
; ------------------------------ jumplabel
	dq L1965	; 76
; ------------------------------ jumplabel
	dq L1965	; 77
; ------------------------------ jumplabel
	dq L1965	; 78
; ------------------------------ jumplabel
	dq L1965	; 79
; ------------------------------ jumplabel
	dq L1965	; 80
; ------------------------------ jumplabel
	dq L1965	; 81
; ------------------------------ jumplabel
	dq L1965	; 82
; ------------------------------ jumplabel
	dq L1965	; 83
; ------------------------------ jumplabel
	dq L1965	; 84
; ------------------------------ jumplabel
	dq L1965	; 85
; ------------------------------ jumplabel
	dq L1971	; 86
; ------------------------------ stmt
; ------------------------------ comment
;case 34:
; ------------------------------ label
L1976:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-112],D0	; T9  
; ------------------------------ move
	mov D0,[Dframe-112]	; T9  
	mov [Dframe-104],D0	; T8  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-104]	; T8 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-128],D0	; T11  
; ------------------------------ move
	mov D0,[Dframe-128]	; T11  
	mov [Dframe-120],D0	; T10  
; ------------------------------ move
	mov A0,34
	mov D13,[Dframe-120]	; T10 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L1975:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-144],D0	; T13  
; ------------------------------ move
	mov D0,[Dframe-144]	; T13  
	mov [Dframe-136],D0	; T12  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-136]	; T12 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-160],D0	; T15  
; ------------------------------ move
	mov D0,[Dframe-160]	; T15  
	mov [Dframe-152],D0	; T14  
; ------------------------------ move
	mov A0,39
	mov D13,[Dframe-152]	; T14 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L1974:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-176],D0	; T17  
; ------------------------------ move
	mov D0,[Dframe-176]	; T17  
	mov [Dframe-168],D0	; T16  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-168]	; T16 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-192],D0	; T19  
; ------------------------------ move
	mov D0,[Dframe-192]	; T19  
	mov [Dframe-184],D0	; T18  
; ------------------------------ move
	mov A0,110
	mov D13,[Dframe-184]	; T18 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 13:
; ------------------------------ label
L1973:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-208],D0	; T21  
; ------------------------------ move
	mov D0,[Dframe-208]	; T21  
	mov [Dframe-200],D0	; T20  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-200]	; T20 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-224],D0	; T23  
; ------------------------------ move
	mov D0,[Dframe-224]	; T23  
	mov [Dframe-216],D0	; T22  
; ------------------------------ move
	mov A0,114
	mov D13,[Dframe-216]	; T22 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L1972:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-240],D0	; T25  
; ------------------------------ move
	mov D0,[Dframe-240]	; T25  
	mov [Dframe-232],D0	; T24  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-232]	; T24 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-256],D0	; T27  
; ------------------------------ move
	mov D0,[Dframe-256]	; T27  
	mov [Dframe-248],D0	; T26  
; ------------------------------ move
	mov A0,116
	mov D13,[Dframe-248]	; T26 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 92:
; ------------------------------ label
L1971:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-272],D0	; T29  
; ------------------------------ move
	mov D0,[Dframe-272]	; T29  
	mov [Dframe-264],D0	; T28  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-264]	; T28 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-288],D0	; T31  
; ------------------------------ move
	mov D0,[Dframe-288]	; T31  
	mov [Dframe-280],D0	; T30  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-280]	; T30 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 7:
; ------------------------------ label
L1970:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-304],D0	; T33  
; ------------------------------ move
	mov D0,[Dframe-304]	; T33  
	mov [Dframe-296],D0	; T32  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-296]	; T32 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-320],D0	; T35  
; ------------------------------ move
	mov D0,[Dframe-320]	; T35  
	mov [Dframe-312],D0	; T34  
; ------------------------------ move
	mov A0,97
	mov D13,[Dframe-312]	; T34 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 8:
; ------------------------------ label
L1969:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-336],D0	; T37  
; ------------------------------ move
	mov D0,[Dframe-336]	; T37  
	mov [Dframe-328],D0	; T36  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-328]	; T36 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-352],D0	; T39  
; ------------------------------ move
	mov D0,[Dframe-352]	; T39  
	mov [Dframe-344],D0	; T38  
; ------------------------------ move
	mov A0,98
	mov D13,[Dframe-344]	; T38 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 12:
; ------------------------------ label
L1968:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-368],D0	; T41  
; ------------------------------ move
	mov D0,[Dframe-368]	; T41  
	mov [Dframe-360],D0	; T40  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-360]	; T40 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-384],D0	; T43  
; ------------------------------ move
	mov D0,[Dframe-384]	; T43  
	mov [Dframe-376],D0	; T42  
; ------------------------------ move
	mov A0,102
	mov D13,[Dframe-376]	; T42 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;case 11:
; ------------------------------ label
L1967:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-400],D0	; T45  
; ------------------------------ move
	mov D0,[Dframe-400]	; T45  
	mov [Dframe-392],D0	; T44  
; ------------------------------ move
	mov A0,92
	mov D13,[Dframe-392]	; T44 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-416],D0	; T47  
; ------------------------------ move
	mov D0,[Dframe-416]	; T47  
	mov [Dframe-408],D0	; T46  
; ------------------------------ move
	mov A0,118
	mov D13,[Dframe-408]	; T46 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L1966
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L1965:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; c -4  
	cmp A0,32
	jl L1979
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; c -4  
	cmp A0,127
	jl L1978
; ------------------------------ label
L1979:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-24]	; str -24  
	mov [Dframe-424],D0	; T48  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-424]	; T48  
	mov D11,KK461
	mov A12,[Dframe-4]	; c -4  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-440],D0	; T50  
; ------------------------------ move
	mov D0,[Dframe-440]	; T50  
	mov [Dframe-432],D0	; T49  
; ------------------------------ index
	lea D0,[Dframe-24]	; str -24  
	mov D1,0
	mov B0, [D0+D1]
	mov [Dframe-464],B0	; T53  
; ------------------------------ widen
	movzx A0,byte [Dframe-464]	; T53  
	mov dword[Dframe-472],A0	; T54  
; ------------------------------ truncate
	mov A0,[Dframe-472]	; T54  
	and D0,255
	mov [Dframe-456],B0	; T52  
; ------------------------------ widen
	movzx A0,byte [Dframe-456]	; T52  
	mov dword[Dframe-448],A0	; T51  
; ------------------------------ move
	mov A0,[Dframe-448]	; T51  
	mov D13,[Dframe-432]	; T49 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-488],D0	; T56  
; ------------------------------ move
	mov D0,[Dframe-488]	; T56  
	mov [Dframe-480],D0	; T55  
; ------------------------------ index
	lea D0,[Dframe-24]	; str -24  
	mov D1,1
	mov B0, [D0+D1]
	mov [Dframe-512],B0	; T59  
; ------------------------------ widen
	movzx A0,byte [Dframe-512]	; T59  
	mov dword[Dframe-520],A0	; T60  
; ------------------------------ truncate
	mov A0,[Dframe-520]	; T60  
	and D0,255
	mov [Dframe-504],B0	; T58  
; ------------------------------ widen
	movzx A0,byte [Dframe-504]	; T58  
	mov dword[Dframe-496],A0	; T57  
; ------------------------------ move
	mov A0,[Dframe-496]	; T57  
	mov D13,[Dframe-480]	; T55 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-536],D0	; T62  
; ------------------------------ move
	mov D0,[Dframe-536]	; T62  
	mov [Dframe-528],D0	; T61  
; ------------------------------ index
	lea D0,[Dframe-24]	; str -24  
	mov D1,2
	mov B0, [D0+D1]
	mov [Dframe-560],B0	; T65  
; ------------------------------ widen
	movzx A0,byte [Dframe-560]	; T65  
	mov dword[Dframe-568],A0	; T66  
; ------------------------------ truncate
	mov A0,[Dframe-568]	; T66  
	and D0,255
	mov [Dframe-552],B0	; T64  
; ------------------------------ widen
	movzx A0,byte [Dframe-552]	; T64  
	mov dword[Dframe-544],A0	; T63  
; ------------------------------ move
	mov A0,[Dframe-544]	; T63  
	mov D13,[Dframe-528]	; T61 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-584],D0	; T68  
; ------------------------------ move
	mov D0,[Dframe-584]	; T68  
	mov [Dframe-576],D0	; T67  
; ------------------------------ index
	lea D0,[Dframe-24]	; str -24  
	mov D1,3
	mov B0, [D0+D1]
	mov [Dframe-608],B0	; T71  
; ------------------------------ widen
	movzx A0,byte [Dframe-608]	; T71  
	mov dword[Dframe-616],A0	; T72  
; ------------------------------ truncate
	mov A0,[Dframe-616]	; T72  
	and D0,255
	mov [Dframe-600],B0	; T70  
; ------------------------------ widen
	movzx A0,byte [Dframe-600]	; T70  
	mov dword[Dframe-592],A0	; T69  
; ------------------------------ move
	mov A0,[Dframe-592]	; T69  
	mov D13,[Dframe-576]	; T67 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L1980
; ------------------------------ label
L1978:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+24]	; t 24  
	inc qword[Dframe+24]	; t 24  
	mov qword[Dframe-632],D0	; T74  
; ------------------------------ move
	mov D0,[Dframe-632]	; T74  
	mov [Dframe-624],D0	; T73  
; ------------------------------ move
	mov A0,[Dframe-4]	; c -4  
	mov D13,[Dframe-624]	; T73 *
	mov byte [D13],B0
; ------------------------------ label
L1980:
; ------------------------------ label
L1966:
; ------------------------------ label
L1962:
; ------------------------------ postdecrx
	mov A0,[Dframe-36]	; av_3 -36  
	dec dword[Dframe-36]	; av_3 -36  
	mov dword[Dframe-640],A0	; T75  
; ------------------------------ jumptrue
	mov A0,[Dframe-640]	; T75  
	and A0,A0
	jnz L1964
; ------------------------------ label
L1963:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe+24]	; t 24 *
	mov byte [D13],B0
; ------------------------------ label
L1960:
; ------------------------------ hardret
	add Dstack, 640
	pop Dframe
	ret
;	End

	global strexpr
;	Proc:strexpr
strexpr:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[exprstr]
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[exprstr]
	mov D11,[Dframe+16]	; p 16  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[exprstr]
	jmp L1981
; ------------------------------ label
L1981:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:jeval
jeval:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16992

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16024],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-16024]	; T1  
	cmp A0,1
	jnz L1983
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-16016],A0	; t -16016  
; ------------------------------ jumpcc
	mov A0,[Dframe-16016]	; t -16016  
	cmp A0,[trefchar]
	jnz L1984
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-16032],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16032]	; T2  
	cmp A0,0
	jnz L1985
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L70
; ------------------------------ label
L1985:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,58
	mov B0, [D0+D1]
	mov [Dframe-16040],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-16040]	; T3  
	mov dword[Dframe-16048],A0	; T4  
; ------------------------------ jumptrue
	mov A0,[Dframe-16048]	; T4  
	and A0,A0
	jnz L1986
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L70
; ------------------------------ label
L1986:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-16056],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-16056]	; T5  
	cmp A0,8000
	jle L1987
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16064],D0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16064]	; T6  
	mov D11,KK462
	call strcpy
	add Dstack, 32
; ------------------------------ jump
	jmp	L1988
; ------------------------------ label
L1987:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16072],D0	; T7  
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16080],D0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16072]	; T7  
	mov D11,[Dframe-16080]	; T8  
	mov A12,-1
	call convertstring
	add Dstack, 32
; ------------------------------ label
L1988:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK463
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16088],D0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16088]	; T9  
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK464
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L1982
; ------------------------------ jump
	jmp	L1989
; ------------------------------ label
L1984:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16016]	; t -16016  
	cmp A0,2
	jl L1990
; ------------------------------ jumpcc
	mov A0,[Dframe-16016]	; t -16016  
	cmp A0,5
	jg L1990
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16096],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16104],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16096]	; T10  
	mov D11,KK465
	mov D12,[Dframe-16104]	; T11  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1991
; ------------------------------ label
L1990:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16016]	; t -16016  
	cmp A0,7
	jl L1992
; ------------------------------ jumpcc
	mov A0,[Dframe-16016]	; t -16016  
	cmp A0,10
	jg L1992
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16112],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16120],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16112]	; T12  
	mov D11,KK466
	mov D12,[Dframe-16120]	; T13  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1993
; ------------------------------ label
L1992:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16016]	; t -16016  
	cmp A0,12
	jz L1995
; ------------------------------ jumpcc
	mov A0,[Dframe-16016]	; t -16016  
	cmp A0,11
	jnz L1994
; ------------------------------ label
L1995:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16128],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16136],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16128]	; T14  
	mov D11,KK467
	movq XMM2,[Dframe-16136]	; T15  
	mov D12,[Dframe-16136]	; T15  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1996
; ------------------------------ label
L1994:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-16160],A0	; T18  
; ------------------------------ widen
	movsx D0,dword[Dframe-16160]	; T18  
	mov qword[Dframe-16152],D0	; T17  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-16152]	; T17  
	mov A0, [D0+D1*4]
	mov [Dframe-16144],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-16144]	; T16  
	cmp A0,16
	jnz L1997
; ------------------------------ stmt
; ------------------------------ label
L69: ;<doref>
; ------------------------------ stmt
; ------------------------------ label
L70: ;<L79>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16168],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16176],D0	; T20  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16168]	; T19  
	mov D11,KK468
	mov D12,[Dframe-16176]	; T20  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L1998
; ------------------------------ label
L1997:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-16184],A0	; T21  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16184]	; T21  
	call typename
	mov [Dframe-16192],D0	; T22  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK469
	mov D11,[Dframe-16192]	; T22  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK470
	mov D11,[Dframe+24]	; p 24  
	call nxerror
	add Dstack, 32
; ------------------------------ label
L1998:
; ------------------------------ label
L1996:
; ------------------------------ label
L1993:
; ------------------------------ label
L1991:
; ------------------------------ label
L1989:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16200],D0	; T23  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16200]	; T23  
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L1999
; ------------------------------ label
L1983:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16208],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-16208]	; T24  
	cmp A0,3
	jnz L2000
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16224],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe-16224]	; T26  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16216],D0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16216]	; T25  
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2001
; ------------------------------ label
L2000:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16232],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-16232]	; T27  
	cmp A0,4
	jz L2003
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16240],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-16240]	; T28  
	cmp A0,6
	jnz L2002
; ------------------------------ label
L2003:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK471
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16256],D0	; T30  
; ------------------------------ index
	mov D0,[Dframe-16256]	; T30  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16248],D0	; T29  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16248]	; T29  
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2004
; ------------------------------ label
L2002:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16264],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-16264]	; T31  
	cmp A0,26
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16272],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-16272]	; T32  
	cmp A0,27
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16280],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-16280]	; T33  
	cmp A0,34
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16288],A0	; T34  
; ------------------------------ jumpcc
	mov A0,[Dframe-16288]	; T34  
	cmp A0,35
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16296],A0	; T35  
; ------------------------------ jumpcc
	mov A0,[Dframe-16296]	; T35  
	cmp A0,36
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16304],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-16304]	; T36  
	cmp A0,37
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16312],A0	; T37  
; ------------------------------ jumpcc
	mov A0,[Dframe-16312]	; T37  
	cmp A0,38
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16320],A0	; T38  
; ------------------------------ jumpcc
	mov A0,[Dframe-16320]	; T38  
	cmp A0,39
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16328],A0	; T39  
; ------------------------------ jumpcc
	mov A0,[Dframe-16328]	; T39  
	cmp A0,40
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16336],A0	; T40  
; ------------------------------ jumpcc
	mov A0,[Dframe-16336]	; T40  
	cmp A0,41
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16344],A0	; T41  
; ------------------------------ jumpcc
	mov A0,[Dframe-16344]	; T41  
	cmp A0,42
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16352],A0	; T42  
; ------------------------------ jumpcc
	mov A0,[Dframe-16352]	; T42  
	cmp A0,43
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16360],A0	; T43  
; ------------------------------ jumpcc
	mov A0,[Dframe-16360]	; T43  
	cmp A0,44
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16368],A0	; T44  
; ------------------------------ jumpcc
	mov A0,[Dframe-16368]	; T44  
	cmp A0,45
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16376],A0	; T45  
; ------------------------------ jumpcc
	mov A0,[Dframe-16376]	; T45  
	cmp A0,46
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16384],A0	; T46  
; ------------------------------ jumpcc
	mov A0,[Dframe-16384]	; T46  
	cmp A0,47
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16392],A0	; T47  
; ------------------------------ jumpcc
	mov A0,[Dframe-16392]	; T47  
	cmp A0,48
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16400],A0	; T48  
; ------------------------------ jumpcc
	mov A0,[Dframe-16400]	; T48  
	cmp A0,49
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16408],A0	; T49  
; ------------------------------ jumpcc
	mov A0,[Dframe-16408]	; T49  
	cmp A0,50
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16416],A0	; T50  
; ------------------------------ jumpcc
	mov A0,[Dframe-16416]	; T50  
	cmp A0,67
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16424],A0	; T51  
; ------------------------------ jumpcc
	mov A0,[Dframe-16424]	; T51  
	cmp A0,68
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16432],A0	; T52  
; ------------------------------ jumpcc
	mov A0,[Dframe-16432]	; T52  
	cmp A0,69
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16440],A0	; T53  
; ------------------------------ jumpcc
	mov A0,[Dframe-16440]	; T53  
	cmp A0,70
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16448],A0	; T54  
; ------------------------------ jumpcc
	mov A0,[Dframe-16448]	; T54  
	cmp A0,71
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16456],A0	; T55  
; ------------------------------ jumpcc
	mov A0,[Dframe-16456]	; T55  
	cmp A0,72
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16464],A0	; T56  
; ------------------------------ jumpcc
	mov A0,[Dframe-16464]	; T56  
	cmp A0,73
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16472],A0	; T57  
; ------------------------------ jumpcc
	mov A0,[Dframe-16472]	; T57  
	cmp A0,74
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16480],A0	; T58  
; ------------------------------ jumpcc
	mov A0,[Dframe-16480]	; T58  
	cmp A0,75
	jz L2006
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16488],A0	; T59  
; ------------------------------ jumpcc
	mov A0,[Dframe-16488]	; T59  
	cmp A0,76
	jnz L2005
; ------------------------------ label
L2006:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16496],D0	; T60  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16504],A0	; T61  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16504]	; T61  
	call getopcjname
	mov [Dframe-16512],D0	; T62  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16496]	; T60  
	mov D11,[Dframe-16512]	; T62  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK472
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16520],D0	; T63  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16520]	; T63  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16528],D0	; T64  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16528]	; T64  
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-16536],D0	; T65  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16536]	; T65  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK473
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2007
; ------------------------------ label
L2005:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16544],A0	; T66  
; ------------------------------ jumpcc
	mov A0,[Dframe-16544]	; T66  
	cmp A0,60
	jz L2009
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16552],A0	; T67  
; ------------------------------ jumpcc
	mov A0,[Dframe-16552]	; T67  
	cmp A0,61
	jz L2009
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16560],A0	; T68  
; ------------------------------ jumpcc
	mov A0,[Dframe-16560]	; T68  
	cmp A0,62
	jz L2009
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16568],A0	; T69  
; ------------------------------ jumpcc
	mov A0,[Dframe-16568]	; T69  
	cmp A0,28
	jz L2009
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16576],A0	; T70  
; ------------------------------ jumpcc
	mov A0,[Dframe-16576]	; T70  
	cmp A0,29
	jnz L2008
; ------------------------------ label
L2009:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16584],D0	; T71  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16592],A0	; T72  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16592]	; T72  
	call getopcjname
	mov [Dframe-16600],D0	; T73  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16584]	; T71  
	mov D11,[Dframe-16600]	; T73  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16008]	; str -16008  
	mov [Dframe-16608],D0	; T74  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16608]	; T74  
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK474
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16616],D0	; T75  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16616]	; T75  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK475
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2010
; ------------------------------ label
L2008:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16624],A0	; T76  
; ------------------------------ jumpcc
	mov A0,[Dframe-16624]	; T76  
	cmp A0,32
	jnz L2011
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16632],D0	; T77  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16632]	; T77  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK476
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2012
; ------------------------------ label
L2014:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-8]	; q -8  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; q -8  
	and D0,D0
	jz L2015
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK477
	call gs_additem
	add Dstack, 32
; ------------------------------ label
L2015:
; ------------------------------ label
L2012:
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; q -8  
	and D0,D0
	jnz L2014
; ------------------------------ label
L2013:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK478
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2016
; ------------------------------ label
L2011:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16640],A0	; T78  
; ------------------------------ jumpcc
	mov A0,[Dframe-16640]	; T78  
	cmp A0,51
	jnz L2017
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16648],D0	; T79  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16648]	; T79  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK479
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-16656],D0	; T80  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16656]	; T80  
	call jeval
	add Dstack, 32
; ------------------------------ jump
	jmp	L2018
; ------------------------------ label
L2017:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16664],A0	; T81  
; ------------------------------ jumpcc
	mov A0,[Dframe-16664]	; T81  
	cmp A0,52
	jnz L2019
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16672],D0	; T82  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16672]	; T82  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK480
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-16680],D0	; T83  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16680]	; T83  
	call jeval
	add Dstack, 32
; ------------------------------ jump
	jmp	L2020
; ------------------------------ label
L2019:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16688],A0	; T84  
; ------------------------------ jumpcc
	mov A0,[Dframe-16688]	; T84  
	cmp A0,30
	jz L2022
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16696],A0	; T85  
; ------------------------------ jumpcc
	mov A0,[Dframe-16696]	; T85  
	cmp A0,31
	jnz L2021
; ------------------------------ label
L2022:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16704],A0	; T86  
; ------------------------------ setcc
	mov A0,[Dframe-16704]	; T86  
	cmp A0,31
	setz B0
	movzx A0,B0
	mov [Dframe-16712],A0	; T87  
; ------------------------------ move
	mov A0,[Dframe-16712]	; T87  
	mov [Dframe-16012],A0	; lb -16012  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-16012]	; lb -16012  
	and A0,A0
	jz L2023
; ------------------------------ move
	mov D0,KK481
	mov [Dframe-16720],D0	; T88  
; ------------------------------ jump
	jmp	L2024
; ------------------------------ label
L2023:
; ------------------------------ move
	mov D0,KK482
	mov [Dframe-16720],D0	; T88  
; ------------------------------ label
L2024:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16720]	; T88  
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2025
; ------------------------------ label
L2027:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-8]	; q -8  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; q -8  
	and D0,D0
	jz L2028
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK483
	call gs_additem
	add Dstack, 32
; ------------------------------ label
L2028:
; ------------------------------ label
L2025:
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; q -8  
	and D0,D0
	jnz L2027
; ------------------------------ label
L2026:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-16012]	; lb -16012  
	and A0,A0
	jz L2029
; ------------------------------ move
	mov D0,KK484
	mov [Dframe-16728],D0	; T89  
; ------------------------------ jump
	jmp	L2030
; ------------------------------ label
L2029:
; ------------------------------ move
	mov D0,KK485
	mov [Dframe-16728],D0	; T89  
; ------------------------------ label
L2030:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16728]	; T89  
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2031
; ------------------------------ label
L2021:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16736],A0	; T90  
; ------------------------------ jumpcc
	mov A0,[Dframe-16736]	; T90  
	cmp A0,13
	jnz L2032
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16744],D0	; T91  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16744]	; T91  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK486
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-16752],D0	; T92  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16752]	; T92  
	call jeval
	add Dstack, 32
; ------------------------------ jump
	jmp	L2033
; ------------------------------ label
L2032:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16760],A0	; T93  
; ------------------------------ jumpcc
	mov A0,[Dframe-16760]	; T93  
	cmp A0,33
	jnz L2034
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16768],D0	; T94  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16768]	; T94  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK487
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-16776],D0	; T95  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16776]	; T95  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK488
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-16784],D0	; T96  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16784]	; T96  
	call jeval
	add Dstack, 32
; ------------------------------ jump
	jmp	L2035
; ------------------------------ label
L2034:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16792],A0	; T97  
; ------------------------------ jumpcc
	mov A0,[Dframe-16792]	; T97  
	cmp A0,58
	jnz L2036
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-16800],A0	; T98  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16800]	; T98  
	mov A11,1
	call Strmode
	mov [Dframe-16808],D0	; T99  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16808]	; T99  
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK489
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16816],D0	; T100  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16816]	; T100  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK490
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2037
; ------------------------------ label
L2036:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16824],A0	; T101  
; ------------------------------ jumpcc
	mov A0,[Dframe-16824]	; T101  
	cmp A0,55
	jnz L2038
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK491
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16832],D0	; T102  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16832]	; T102  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-16840],D0	; T103  
; ------------------------------ jumpfalse
	mov D0,[Dframe-16840]	; T103  
	and D0,D0
	jz L2039
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK492
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-16848],D0	; T104  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16848]	; T104  
	call jeval
	add Dstack, 32
; ------------------------------ label
L2039:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK493
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2040
; ------------------------------ label
L2038:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16856],A0	; T105  
; ------------------------------ jumpcc
	mov A0,[Dframe-16856]	; T105  
	cmp A0,7
	jnz L2041
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK494
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2042
; ------------------------------ label
L2041:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16864],A0	; T106  
; ------------------------------ jumpcc
	mov A0,[Dframe-16864]	; T106  
	cmp A0,77
	jnz L2043
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK495
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16872],D0	; T107  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16872]	; T107  
	call jeval
	add Dstack, 32
; ------------------------------ jump
	jmp	L2044
; ------------------------------ label
L2043:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16880],A0	; T108  
; ------------------------------ jumpcc
	mov A0,[Dframe-16880]	; T108  
	cmp A0,78
	jnz L2045
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK496
	call gs_additem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16888],D0	; T109  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16888]	; T109  
	call jeval
	add Dstack, 32
; ------------------------------ jump
	jmp	L2046
; ------------------------------ label
L2045:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16896],A0	; T110  
; ------------------------------ jumpcc
	mov A0,[Dframe-16896]	; T110  
	cmp A0,79
	jnz L2047
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16904],D0	; T111  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16904]	; T111  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK497
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2048
; ------------------------------ label
L2047:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16912],A0	; T112  
; ------------------------------ jumpcc
	mov A0,[Dframe-16912]	; T112  
	cmp A0,80
	jnz L2049
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16920],D0	; T113  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16920]	; T113  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK498
	call gs_additem
	add Dstack, 32
; ------------------------------ jump
	jmp	L2050
; ------------------------------ label
L2049:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16928],A0	; T114  
; ------------------------------ jumpcc
	mov A0,[Dframe-16928]	; T114  
	cmp A0,2
	jnz L2051
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK499
	call gs_str
	add Dstack, 32
; ------------------------------ jump
	jmp	L2052
; ------------------------------ label
L2051:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16936],A0	; T115  
; ------------------------------ jumpcc
	mov A0,[Dframe-16936]	; T115  
	cmp A0,59
	jnz L2053
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK500
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16944],D0	; T116  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16944]	; T116  
	call jeval
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-16952],A0	; T117  
; ------------------------------ jumpcc
	mov A0,[Dframe-16952]	; T117  
	cmp A0,0
	jle L2054
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK501
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-16968],A0	; T119  
; ------------------------------ widen
	movsx D0,dword[Dframe-16968]	; T119  
	mov qword[Dframe-16960],D0	; T118  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16960]	; T118  
	call gs_strint
	add Dstack, 32
; ------------------------------ jump
	jmp	L2055
; ------------------------------ label
L2054:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK502
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-16984],A0	; T121  
; ------------------------------ neg
	mov A0,[Dframe-16984]	; T121  
	neg A0
	mov [Dframe-16992],A0	; T122  
; ------------------------------ widen
	movsx D0,dword[Dframe-16992]	; T122  
	mov qword[Dframe-16976],D0	; T120  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,[Dframe-16976]	; T120  
	call gs_strint
	add Dstack, 32
; ------------------------------ label
L2055:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK503
	call gs_str
	add Dstack, 32
; ------------------------------ jump
	jmp	L2056
; ------------------------------ label
L2053:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; dest 16  
	mov D11,KK504
	call gs_str
	add Dstack, 32
; ------------------------------ label
L2056:
; ------------------------------ label
L2052:
; ------------------------------ label
L2050:
; ------------------------------ label
L2048:
; ------------------------------ label
L2046:
; ------------------------------ label
L2044:
; ------------------------------ label
L2042:
; ------------------------------ label
L2040:
; ------------------------------ label
L2037:
; ------------------------------ label
L2035:
; ------------------------------ label
L2033:
; ------------------------------ label
L2031:
; ------------------------------ label
L2020:
; ------------------------------ label
L2018:
; ------------------------------ label
L2016:
; ------------------------------ label
L2010:
; ------------------------------ label
L2007:
; ------------------------------ label
L2004:
; ------------------------------ label
L2001:
; ------------------------------ label
L1999:
; ------------------------------ label
L1982:
; ------------------------------ hardret
	add Dstack, 16992
	pop Dframe
	ret
;	End

	global getopcjname
;	Proc:getopcjname
	segment .bss
getopcjname.str:	resb 20
	segment .text
getopcjname:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; opc 16  
	mov qword[Dframe-24],D0	; T1  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-24]	; T1  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; name -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; name -8  
	mov A11,32
	call strchr
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; s -16  
	and D0,D0
	jz L2058
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getopcjname.str]
	mov [Dframe-40],D0	; T3  
; ------------------------------ sub
	mov D0,[Dframe-16]	; s -16  
	mov D1,[Dframe-8]	; name -8  
	sub D0,D1
	mov [Dframe-64],D0	; T6  
; ------------------------------ truncate
	mov D0,[Dframe-64]	; T6  
	mov [Dframe-56],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-40]	; T3  
	mov D11,[Dframe-8]	; name -8  
	mov D12,[Dframe-56]	; T5  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[Dframe-16]	; s -16  
	mov D1,[Dframe-8]	; name -8  
	sub D0,D1
	mov [Dframe-80],D0	; T8  
; ------------------------------ add
	mov D0,[Dframe-80]	; T8  
	mov D1,1
	add D0,D1
	mov [Dframe-88],D0	; T9  
; ------------------------------ sub
	mov D0,[Dframe-88]	; T9  
	mov D1,1
	sub D0,D1
	mov [Dframe-96],D0	; T10  
; ------------------------------ indexlv
	lea D0,[getopcjname.str]
	mov D1,[Dframe-96]	; T10  
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T7  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-72]	; T7 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getopcjname.str]
	mov [Dframe-104],D0	; T11  
; ------------------------------ returnx
	mov D0,[Dframe-104]	; T11  
	jmp L2057
; ------------------------------ jump
	jmp	L2059
; ------------------------------ label
L2058:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; name -8  
	jmp L2057
; ------------------------------ label
L2059:
; ------------------------------ label
L2057:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global Strmode
;	Proc:Strmode
	segment .bss
Strmode.str:	resb 16384
	segment .text
Strmode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Strmode.str]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	mov A11,[Dframe+24]	; expand 24  
	mov D12,[Dframe-8]	; T1  
	call istrmode
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Strmode.str]
	mov [Dframe-16],D0	; T2  
; ------------------------------ returnx
	mov D0,[Dframe-16]	; T2  
	jmp L2060
; ------------------------------ label
L2060:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global Strmode2
;	Proc:Strmode2
	segment .bss
Strmode2.str:	resb 16384
	segment .text
Strmode2:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Strmode2.str]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	mov A11,[Dframe+24]	; expand 24  
	mov D12,[Dframe-8]	; T1  
	call istrmode
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Strmode2.str]
	mov [Dframe-16],D0	; T2  
; ------------------------------ returnx
	mov D0,[Dframe-16]	; T2  
	jmp L2061
; ------------------------------ label
L2061:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global istrmode
;	Proc:istrmode
istrmode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 736

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-64]	; sxx -64  
	mov [Dframe-304],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe-304]	; T1  
	mov [Dframe-72],D0	; xx -72  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; m 16  
	cmp A0,22
	jge L2063
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call typename
	mov [Dframe-312],D0	; T2  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,[Dframe-312]	; T2  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L2062
; ------------------------------ label
L2063:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-320],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-320]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; t -40  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; t -40  
	cmp A0,16
	jnz L2064
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-336],D0	; T5  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-336]	; T5  
	mov B0, [D0+D1]
	mov [Dframe-328],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-328]	; T4  
	mov dword[Dframe-344],A0	; T6  
; ------------------------------ jumpfalse
	mov A0,[Dframe-344]	; T6  
	and A0,A0
	jz L2065
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK505
	call strcpy
	add Dstack, 32
; ------------------------------ jump
	jmp	L2066
; ------------------------------ label
L2065:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK506
	call strcpy
	add Dstack, 32
; ------------------------------ label
L2066:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-352],D0	; T7  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-352]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-36],A0	; target -36  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-36]	; target -36  
	cmp A0,0
	jl L2067
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-384],D0	; T11  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-384]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-376],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-376]	; T10  
	mov qword[Dframe-368],D0	; T9  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-368]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-360],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-360]	; T8  
	cmp A0,20
	jnz L2067
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-400],D0	; T13  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-400]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-392],A0	; T12  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-392]	; T12  
	call typename
	mov [Dframe-408],D0	; T14  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,[Dframe-408]	; T14  
	call strcat
	add Dstack, 32
; ------------------------------ jump
	jmp	L2068
; ------------------------------ label
L2067:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-424],D0	; T16  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-424]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-416],A0	; T15  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	call strlen
	mov [Dframe-448],D0	; T19  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-448]	; T19  
	mov [Dframe-440],D0	; T18  
; ------------------------------ indexref
	mov D0,[Dframe+32]	; dest 32  
	mov D1,[Dframe-440]	; T18  
	lea D0, [D0+D1]
	mov [Dframe-432],D0	; T17  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-416]	; T15  
	mov A11,0
	mov D12,[Dframe-432]	; T17  
	call istrmode
	add Dstack, 32
; ------------------------------ label
L2068:
; ------------------------------ jump
	jmp	L2069
; ------------------------------ label
L2064:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; t -40  
	cmp A0,19
	jnz L2070
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-464],D0	; T21  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-464]	; T21  
	mov A0, [D0+D1*4]
	mov [Dframe-456],A0	; T20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-456]	; T20  
	and A0,A0
	jz L2071
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-480],D0	; T23  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-480]	; T23  
	mov A0, [D0+D1*4]
	mov [Dframe-472],A0	; T22  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK507
	mov A12,[Dframe-472]	; T22  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L2072
; ------------------------------ label
L2071:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK508
	call sprintf
	add Dstack, 32
; ------------------------------ label
L2072:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-496],D0	; T25  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-496]	; T25  
	mov A0, [D0+D1*4]
	mov [Dframe-488],A0	; T24  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	call strlen
	mov [Dframe-520],D0	; T28  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-520]	; T28  
	mov [Dframe-512],D0	; T27  
; ------------------------------ indexref
	mov D0,[Dframe+32]	; dest 32  
	mov D1,[Dframe-512]	; T27  
	lea D0, [D0+D1]
	mov [Dframe-504],D0	; T26  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-488]	; T24  
	mov A11,0
	mov D12,[Dframe-504]	; T26  
	call istrmode
	add Dstack, 32
; ------------------------------ jump
	jmp	L2073
; ------------------------------ label
L2070:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; t -40  
	cmp A0,15
	jnz L2074
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK509
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call typename
	mov [Dframe-528],D0	; T29  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,[Dframe-528]	; T29  
	call strcat
	add Dstack, 32
; ------------------------------ jump
	jmp	L2075
; ------------------------------ label
L2074:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; t -40  
	cmp A0,20
	jz L2077
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; t -40  
	cmp A0,21
	jnz L2076
; ------------------------------ label
L2077:
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[Dframe+24]	; expand 24  
	and A0,A0
	jnz L2078
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call typename
	mov [Dframe-536],D0	; T30  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,[Dframe-536]	; T30  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L2062
; ------------------------------ label
L2078:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-552],D0	; T32  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-552]	; T32  
	mov A0, [D0+D1*4]
	mov [Dframe-544],A0	; T31  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-544]	; T31  
	call typename
	mov [Dframe-560],D0	; T33  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,[Dframe-560]	; T33  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK510
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-568],D0	; T34  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-568]	; T34  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-24],A0	; needcomma -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2079
; ------------------------------ label
L2081:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-24]	; needcomma -24  
	and A0,A0
	jz L2082
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK511
	call strcat
	add Dstack, 32
; ------------------------------ label
L2082:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-24],A0	; needcomma -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; q -16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-576],W0	; T35  
; ------------------------------ widen
	movsx A0,word [Dframe-576]	; T35  
	mov dword[Dframe-584],A0	; T36  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	call strlen
	mov [Dframe-608],D0	; T39  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-608]	; T39  
	mov [Dframe-600],D0	; T38  
; ------------------------------ indexref
	mov D0,[Dframe+32]	; dest 32  
	mov D1,[Dframe-600]	; T38  
	lea D0, [D0+D1]
	mov [Dframe-592],D0	; T37  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-584]	; T36  
	mov A11,0
	mov D12,[Dframe-592]	; T37  
	call istrmode
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK512
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; q -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-616],D0	; T40  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,[Dframe-616]	; T40  
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; q -16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; q -16  
; ------------------------------ label
L2079:
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; q -16  
	and D0,D0
	jnz L2081
; ------------------------------ label
L2080:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK513
	call strcat
	add Dstack, 32
; ------------------------------ jump
	jmp	L2083
; ------------------------------ label
L2076:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; t -40  
	cmp A0,1
	jnz L2084
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call typename
	mov [Dframe-624],D0	; T41  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,[Dframe-624]	; T41  
	call strcpy
	add Dstack, 32
; ------------------------------ jump
	jmp	L2085
; ------------------------------ label
L2084:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; t -40  
	cmp A0,17
	jnz L2086
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK514
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-632],D0	; T42  
; ------------------------------ index
	lea D0,[ttparams]
	mov D1,[Dframe-632]	; T42  
	mov D0, [D0+D1*8]
	mov [Dframe-296],D0	; pm -296  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-296]	; pm -296  
	mov A1,20
	mov W0, [D0+D1]
	mov [Dframe-640],W0	; T43  
; ------------------------------ widen
	movsx A0,word [Dframe-640]	; T43  
	mov dword[Dframe-648],A0	; T44  
; ------------------------------ move
	mov A0,[Dframe-648]	; T44  
	mov [Dframe-44],A0	; n -44  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-32],A0	; i -32  
; ------------------------------ jump
	jmp	L2089
; ------------------------------ label
L2090:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-296]	; pm -296  
	mov A1,16
	mov A0, [D0+D1]
	mov [Dframe-656],A0	; T45  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	call strlen
	mov [Dframe-680],D0	; T48  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-680]	; T48  
	mov [Dframe-672],D0	; T47  
; ------------------------------ indexref
	mov D0,[Dframe+32]	; dest 32  
	mov D1,[Dframe-672]	; T47  
	lea D0, [D0+D1]
	mov [Dframe-664],D0	; T46  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-656]	; T45  
	mov A11,0
	mov D12,[Dframe-664]	; T46  
	call istrmode
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; i -32  
	cmp A0,[Dframe-44]	; n -44  
	jz L2091
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK515
	call strcat
	add Dstack, 32
; ------------------------------ label
L2091:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-296]	; pm -296  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-296],D0	; pm -296  
; ------------------------------ label
L2087:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-32]	; i -32  
; ------------------------------ label
L2089:
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; i -32  
	cmp A0,[Dframe-44]	; n -44  
	jle L2090
; ------------------------------ label
L2088:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,KK516
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-696],D0	; T50  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-696]	; T50  
	mov A0, [D0+D1*4]
	mov [Dframe-688],A0	; T49  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	call strlen
	mov [Dframe-720],D0	; T53  
	add Dstack, 32
; ------------------------------ softconv
	mov D0,[Dframe-720]	; T53  
	mov [Dframe-712],D0	; T52  
; ------------------------------ indexref
	mov D0,[Dframe+32]	; dest 32  
	mov D1,[Dframe-712]	; T52  
	lea D0, [D0+D1]
	mov [Dframe-704],D0	; T51  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-688]	; T49  
	mov A11,0
	mov D12,[Dframe-704]	; T51  
	call istrmode
	add Dstack, 32
; ------------------------------ jump
	jmp	L2092
; ------------------------------ label
L2086:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; t -40  
	cmp A0,22
	jge L2093
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call typename
	mov [Dframe-728],D0	; T54  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov D11,[Dframe-728]	; T54  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L2062
; ------------------------------ jump
	jmp	L2094
; ------------------------------ label
L2093:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call typename
	mov [Dframe-736],D0	; T55  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK517
	mov D11,[Dframe-736]	; T55  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK518
	call mcerror
	add Dstack, 32
; ------------------------------ label
L2094:
; ------------------------------ label
L2092:
; ------------------------------ label
L2085:
; ------------------------------ label
L2083:
; ------------------------------ label
L2075:
; ------------------------------ label
L2073:
; ------------------------------ label
L2069:
; ------------------------------ label
L2062:
; ------------------------------ hardret
	add Dstack, 736
	pop Dframe
	ret
;	End

	global countunits
;	Proc:countunits
countunits:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; n -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2096
; ------------------------------ label
L2098:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; n -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; p 16  
; ------------------------------ label
L2096:
; ------------------------------ jumptrue
	mov D0,[Dframe+16]	; p 16  
	and D0,D0
	jnz L2098
; ------------------------------ label
L2097:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; n -4  
	jmp L2095
; ------------------------------ label
L2095:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:purgesymbol
purgesymbol:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,10
	jnz L2100
; ------------------------------ stmt
; ------------------------------ return
	jmp L2099
; ------------------------------ label
L2100:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T3  
	mov A11,0
	mov A12,[Dframe+32]	; del 32  
	call purgesymbollist
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+24]	; prev 24  
	and D0,D0
	jz L2101
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; prev 24  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe-48]	; T5  
	mov D13,[Dframe-40]	; T4 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2102
; ------------------------------ label
L2101:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ indexlv
	mov D0,[Dframe-64]	; T7  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-72]	; T8  
	mov D13,[Dframe-56]	; T6 *
	mov qword[D13],D0
; ------------------------------ label
L2102:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov D0,[Dframe-88]	; T10  
	mov D13,[Dframe-80]	; T9 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+32]	; del 32  
	and A0,A0
	jz L2103
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,128
	call pcm_free
	add Dstack, 32
; ------------------------------ label
L2103:
; ------------------------------ label
L2099:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global purgesymbollist
;	Proc:purgesymbollist
purgesymbollist:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK519
	call serror
	add Dstack, 32
; ------------------------------ label
L2104:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global purgeprocs
;	Proc:purgeprocs
purgeprocs:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2106
; ------------------------------ label
L2108:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,6
	jnz L2109
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,[Dframe+24]	; del 24  
	call purgeproc
	add Dstack, 32
; ------------------------------ label
L2109:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; p 16  
; ------------------------------ label
L2106:
; ------------------------------ jumptrue
	mov D0,[Dframe+16]	; p 16  
	and D0,D0
	jnz L2108
; ------------------------------ label
L2107:
; ------------------------------ label
L2105:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global purgeproc
;	Proc:purgeproc
purgeproc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-16],D0	; prev -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2111
; ------------------------------ label
L2113:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; r -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T1  
	mov dword[Dframe-40],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T2  
	cmp A0,8
	jnz L2114
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; q -8  
	mov D11,[Dframe-16]	; prev -16  
	mov A12,[Dframe+24]	; del 24  
	call purgesymbol
	add Dstack, 32
; ------------------------------ jump
	jmp	L2115
; ------------------------------ label
L2114:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; q -8  
	mov [Dframe-16],D0	; prev -16  
; ------------------------------ label
L2115:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-24]	; r -24  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ label
L2111:
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; q -8  
	and D0,D0
	jnz L2113
; ------------------------------ label
L2112:
; ------------------------------ label
L2110:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global printmodelist
;	Proc:printmodelist
printmodelist:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 656

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-280]	; destv -280  
	mov [Dframe-304],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe-304]	; T1  
	mov [Dframe-288],D0	; dest -288  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK520
	mov D12,KK521
	mov A13,[ntypes]
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK522
	mov A12,4
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK523
	mov A12,13
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK524
	mov A12,13
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK525
	mov A12,3
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK526
	mov A12,14
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK527
	mov A12,4
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK528
	mov A12,5
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK529
	mov A12,3
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK530
	mov A12,3
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK531
	mov A12,3
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK532
	mov A12,5
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK533
	mov A12,5
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK534
	mov A12,8
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK535
	mov A12,32
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe+16]	; f 16  
	call gs_println
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-292],A0	; m -292  
; ------------------------------ jump
	jmp	L2119
; ------------------------------ label
L2120:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-292]	; m -292  
	mov A12,4
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-292]	; m -292  
	call typename
	mov [Dframe-312],D0	; T2  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe-312]	; T2  
	mov A12,13
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-328],D0	; T4  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-328]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-320],A0	; T3  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-320]	; T3  
	call typename
	mov [Dframe-336],D0	; T5  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe-336]	; T5  
	mov A12,13
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-352],D0	; T7  
; ------------------------------ index
	lea D0,[ttbitwidth]
	mov D1,[Dframe-352]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-344],A0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-344]	; T6  
	mov A12,3
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-368],D0	; T9  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-368]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-360],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-360]	; T8  
	and A0,A0
	jz L2121
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-384],D0	; T11  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-384]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-376],A0	; T10  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-376]	; T10  
	mov A12,3
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-400],D0	; T13  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-400]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-392],A0	; T12  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-392]	; T12  
	call typename
	mov [Dframe-408],D0	; T14  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe-408]	; T14  
	mov A12,11
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L2122
; ------------------------------ label
L2121:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK536
	mov A12,14
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ label
L2122:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-424],D0	; T16  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-424]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-416],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-416]	; T15  
	cmp A0,19
	jz L2124
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-440],D0	; T18  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-440]	; T18  
	mov A0, [D0+D1*4]
	mov [Dframe-432],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-432]	; T17  
	cmp A0,20
	jz L2124
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-456],D0	; T20  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-456]	; T20  
	mov A0, [D0+D1*4]
	mov [Dframe-448],A0	; T19  
; ------------------------------ jumpcc
	mov A0,[Dframe-448]	; T19  
	cmp A0,21
	jnz L2123
; ------------------------------ label
L2124:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-472],D0	; T22  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-472]	; T22  
	mov A0, [D0+D1*4]
	mov [Dframe-464],A0	; T21  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-464]	; T21  
	mov A12,4
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ jump
	jmp	L2125
; ------------------------------ label
L2123:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK537
	mov A12,4
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ label
L2125:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-488],D0	; T24  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-488]	; T24  
	mov A0, [D0+D1*4]
	mov [Dframe-480],A0	; T23  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-480]	; T23  
	mov A12,5
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-504],D0	; T26  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-504]	; T26  
	mov B0, [D0+D1]
	mov [Dframe-496],B0	; T25  
; ------------------------------ widen
	movzx A0,byte [Dframe-496]	; T25  
	mov dword[Dframe-512],A0	; T27  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-512]	; T27  
	mov A12,3
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-528],D0	; T29  
; ------------------------------ index
	lea D0,[ttrestrict]
	mov D1,[Dframe-528]	; T29  
	mov B0, [D0+D1]
	mov [Dframe-520],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-520]	; T28  
	mov dword[Dframe-536],A0	; T30  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-536]	; T30  
	mov A12,3
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-552],D0	; T32  
; ------------------------------ index
	lea D0,[ttvolatile]
	mov D1,[Dframe-552]	; T32  
	mov B0, [D0+D1]
	mov [Dframe-544],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-544]	; T31  
	mov dword[Dframe-560],A0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-560]	; T33  
	mov A12,3
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-576],D0	; T35  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-576]	; T35  
	mov A0, [D0+D1*4]
	mov [Dframe-568],A0	; T34  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-568]	; T34  
	mov A12,5
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-592],D0	; T37  
; ------------------------------ index
	lea D0,[ttreftype]
	mov D1,[Dframe-592]	; T37  
	mov A0, [D0+D1*4]
	mov [Dframe-584],A0	; T36  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov A11,[Dframe-584]	; T36  
	mov A12,5
	mov A13,32
	call gs_leftint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-608],D0	; T39  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-608]	; T39  
	mov D0, [D0+D1*8]
	mov [Dframe-600],D0	; T38  
; ------------------------------ jumpfalse
	mov D0,[Dframe-600]	; T38  
	and D0,D0
	jz L2126
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-292]	; m -292  
	mov qword[Dframe-632],D0	; T42  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-632]	; T42  
	mov D0, [D0+D1*8]
	mov [Dframe-624],D0	; T41  
; ------------------------------ index
	mov D0,[Dframe-624]	; T41  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-616],D0	; T40  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe-616]	; T40  
	mov A12,8
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L2127
; ------------------------------ label
L2126:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK538
	mov A12,8
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ label
L2127:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-292]	; m -292  
	mov A11,1
	call Strmode
	mov [Dframe-640],D0	; T43  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-640]	; T43  
	mov [Dframe-264],D0	; mstr -264  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-264]	; mstr -264  
	call strlen
	mov [Dframe-648],D0	; T44  
	add Dstack, 32
; ------------------------------ jumpcc
	mov D0,[Dframe-648]	; T44  
	cmp D0,16
	jae L2128
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe-264]	; mstr -264  
	call gs_str
	add Dstack, 32
; ------------------------------ jump
	jmp	L2129
; ------------------------------ label
L2128:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe+16]	; f 16  
	call gs_println
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,KK539
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe-264]	; mstr -264  
	call gs_str
	add Dstack, 32
; ------------------------------ label
L2129:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; dest -288  
	mov D11,[Dframe+16]	; f 16  
	call gs_println
	add Dstack, 32
; ------------------------------ label
L2117:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-292]	; m -292  
; ------------------------------ label
L2119:
; ------------------------------ jumpcc
	mov A0,[Dframe-292]	; m -292  
	cmp A0,[ntypes]
	jle L2120
; ------------------------------ label
L2118:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,KK540
	call fprintf
	add Dstack, 32
; ------------------------------ label
L2116:
; ------------------------------ hardret
	add Dstack, 656
	pop Dframe
	ret
;	End

	global addtoproclist
;	Proc:addtoproclist
addtoproclist:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[nproclist]
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call pcm_alloc
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; pp -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; pp -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov D0,[proclist]
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; pp -8  
	mov [proclist],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; pp -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+16]	; d 16  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ label
L2130:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global typename
;	Proc:typename
	segment .bss
typename.str:	resb 300
	segment .text
typename:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-16],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-16]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-4],A0	; basem -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; basem -4  
	cmp A0,20
	jz L2133
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; basem -4  
	cmp A0,21
	jnz L2132
; ------------------------------ label
L2133:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-32],D0	; T3  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-32]	; T3  
	mov D0, [D0+D1*8]
	mov [Dframe-24],D0	; T2  
; ------------------------------ jumpfalse
	mov D0,[Dframe-24]	; T2  
	and D0,D0
	jz L2134
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-56]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-48],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-48]	; T5  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ returnx
	mov D0,[Dframe-40]	; T4  
	jmp L2131
; ------------------------------ label
L2134:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; basem -4  
	cmp A0,20
	jnz L2135
; ------------------------------ move
	mov D0,KK541
	mov [Dframe-64],D0	; T7  
; ------------------------------ jump
	jmp	L2136
; ------------------------------ label
L2135:
; ------------------------------ move
	mov D0,KK542
	mov [Dframe-64],D0	; T7  
; ------------------------------ label
L2136:
; ------------------------------ returnx
	mov D0,[Dframe-64]	; T7  
	jmp L2131
; ------------------------------ jump
	jmp	L2137
; ------------------------------ label
L2132:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; basem -4  
	cmp A0,19
	jnz L2138
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK543
	jmp L2131
; ------------------------------ jump
	jmp	L2139
; ------------------------------ label
L2138:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; basem -4  
	cmp A0,15
	jnz L2140
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-80]	; T9  
	mov D0, [D0+D1*8]
	mov [Dframe-72],D0	; T8  
; ------------------------------ jumpfalse
	mov D0,[Dframe-72]	; T8  
	and D0,D0
	jz L2141
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-104],D0	; T12  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-104]	; T12  
	mov D0, [D0+D1*8]
	mov [Dframe-96],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-96]	; T11  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T10  
; ------------------------------ returnx
	mov D0,[Dframe-88]	; T10  
	jmp L2131
; ------------------------------ label
L2141:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK544
	jmp L2131
; ------------------------------ jump
	jmp	L2142
; ------------------------------ label
L2140:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-120],D0	; T14  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-120]	; T14  
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T13  
	mov dword[Dframe-128],A0	; T15  
; ------------------------------ jumpfalse
	mov A0,[Dframe-128]	; T15  
	and A0,A0
	jz L2143
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[typename.str]
	mov [Dframe-136],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-136]	; T16  
	mov D11,KK545
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[typename.str]
	mov [Dframe-144],D0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; basem -4  
	mov qword[Dframe-160],D0	; T19  
; ------------------------------ index
	lea D0,[stdtypenames]
	mov D1,[Dframe-160]	; T19  
	mov D0, [D0+D1*8]
	mov [Dframe-152],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-144]	; T17  
	mov D11,[Dframe-152]	; T18  
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[typename.str]
	mov [Dframe-168],D0	; T20  
; ------------------------------ returnx
	mov D0,[Dframe-168]	; T20  
	jmp L2131
; ------------------------------ label
L2143:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; basem -4  
	mov qword[Dframe-184],D0	; T22  
; ------------------------------ index
	lea D0,[stdtypenames]
	mov D1,[Dframe-184]	; T22  
	mov D0, [D0+D1*8]
	mov [Dframe-176],D0	; T21  
; ------------------------------ returnx
	mov D0,[Dframe-176]	; T21  
	jmp L2131
; ------------------------------ label
L2142:
; ------------------------------ label
L2139:
; ------------------------------ label
L2137:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK546
	jmp L2131
; ------------------------------ label
L2131:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

	global allocunitrec
;	Proc:allocunitrec
allocunitrec:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 208

; ------------------------------ stmt
; ------------------------------ postdecrx
	mov A0,[remainingunits]
	dec dword[remainingunits]
	mov dword[Dframe-32],A0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; T1  
	and A0,A0
	jz L2145
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[unitheapptr]
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ addto
	mov D0,[unitheapptr]
	mov D1,62
	add D0,D1
	mov [unitheapptr],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,44
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T3  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-64],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-64]	; T5  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-56]	; T4  
	mov D13,[Dframe-48]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-80],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-80]	; T7  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T6  
	mov dword[Dframe-88],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T8  
	cmp A0,255
	jg L2146
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,57
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T9  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-112],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-112]	; T11  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T10  
; ------------------------------ move
	mov B0,[Dframe-104]	; T10  
	mov D13,[Dframe-96]	; T9 *
	mov byte [D13],B0
; ------------------------------ label
L2146:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2144
; ------------------------------ label
L2145:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,3100000
	call pcm_alloc
	mov [Dframe-128],D0	; T13  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-128]	; T13  
	mov [unitheapptr],D0
; ------------------------------ move
	mov D0,[unitheapptr]
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov A11,0
	mov D12,3100000
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,49999
	mov [remainingunits],A0
; ------------------------------ stmt
; ------------------------------ addto
	mov D0,[unitheapptr]
	mov D1,62
	add D0,D1
	mov [unitheapptr],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,44
	lea D0, [D0+D1]
	mov [Dframe-144],D0	; T15  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-160],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-160]	; T17  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-152],A0	; T16  
; ------------------------------ move
	mov A0,[Dframe-152]	; T16  
	mov D13,[Dframe-144]	; T15 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-176],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe-176]	; T19  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T18  
	mov dword[Dframe-184],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T20  
	cmp A0,255
	jg L2147
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,57
	lea D0, [D0+D1]
	mov [Dframe-192],D0	; T21  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-208],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-208]	; T23  
	mov A1,19
	mov B0, [D0+D1]
	mov [Dframe-200],B0	; T22  
; ------------------------------ move
	mov B0,[Dframe-200]	; T22  
	mov D13,[Dframe-192]	; T21 *
	mov byte [D13],B0
; ------------------------------ label
L2147:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2144
; ------------------------------ label
L2144:
; ------------------------------ hardret
	add Dstack, 208
	pop Dframe
	ret
;	End

;	Proc:copymode
copymode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 384

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[ntypes]
	cmp A0,25000
	jl L2149
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK547
	call serror
	add Dstack, 32
; ------------------------------ label
L2149:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[ntypes]
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ indexlv
	lea D0,[ttnamedef]
	mov D1,[Dframe-16]	; T2  
	lea D0, [D0+D1*8]
	mov [Dframe-8],D0	; T1  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-32]	; T4  
	mov D0, [D0+D1*8]
	mov [Dframe-24],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe-24]	; T3  
	mov D13,[Dframe-8]	; T1 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ indexlv
	lea D0,[ttbasetype]
	mov D1,[Dframe-48]	; T6  
	lea D0, [D0+D1*4]
	mov [Dframe-40],D0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-64],D0	; T8  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-64]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T7  
; ------------------------------ move
	mov A0,[Dframe-56]	; T7  
	mov D13,[Dframe-40]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-80],D0	; T10  
; ------------------------------ indexlv
	lea D0,[ttlength]
	mov D1,[Dframe-80]	; T10  
	lea D0, [D0+D1*4]
	mov [Dframe-72],D0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-96],D0	; T12  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-96]	; T12  
	mov A0, [D0+D1*4]
	mov [Dframe-88],A0	; T11  
; ------------------------------ move
	mov A0,[Dframe-88]	; T11  
	mov D13,[Dframe-72]	; T9 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-112],D0	; T14  
; ------------------------------ indexlv
	lea D0,[ttconst]
	mov D1,[Dframe-112]	; T14  
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-128],D0	; T16  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-128]	; T16  
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T15  
; ------------------------------ move
	mov B0,[Dframe-120]	; T15  
	mov D13,[Dframe-104]	; T13 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-144],D0	; T18  
; ------------------------------ indexlv
	lea D0,[ttrestrict]
	mov D1,[Dframe-144]	; T18  
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-160],D0	; T20  
; ------------------------------ index
	lea D0,[ttrestrict]
	mov D1,[Dframe-160]	; T20  
	mov B0, [D0+D1]
	mov [Dframe-152],B0	; T19  
; ------------------------------ move
	mov B0,[Dframe-152]	; T19  
	mov D13,[Dframe-136]	; T17 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-176],D0	; T22  
; ------------------------------ indexlv
	lea D0,[ttvolatile]
	mov D1,[Dframe-176]	; T22  
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T21  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-192],D0	; T24  
; ------------------------------ index
	lea D0,[ttvolatile]
	mov D1,[Dframe-192]	; T24  
	mov B0, [D0+D1]
	mov [Dframe-184],B0	; T23  
; ------------------------------ move
	mov B0,[Dframe-184]	; T23  
	mov D13,[Dframe-168]	; T21 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-208],D0	; T26  
; ------------------------------ indexlv
	lea D0,[ttusertype]
	mov D1,[Dframe-208]	; T26  
	lea D0, [D0+D1*4]
	mov [Dframe-200],D0	; T25  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-224],D0	; T28  
; ------------------------------ index
	lea D0,[ttusertype]
	mov D1,[Dframe-224]	; T28  
	mov A0, [D0+D1*4]
	mov [Dframe-216],A0	; T27  
; ------------------------------ move
	mov A0,[Dframe-216]	; T27  
	mov D13,[Dframe-200]	; T25 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-240],D0	; T30  
; ------------------------------ indexlv
	lea D0,[ttsize]
	mov D1,[Dframe-240]	; T30  
	lea D0, [D0+D1*4]
	mov [Dframe-232],D0	; T29  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-256],D0	; T32  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-256]	; T32  
	mov A0, [D0+D1*4]
	mov [Dframe-248],A0	; T31  
; ------------------------------ move
	mov A0,[Dframe-248]	; T31  
	mov D13,[Dframe-232]	; T29 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-272],D0	; T34  
; ------------------------------ indexlv
	lea D0,[ttbitwidth]
	mov D1,[Dframe-272]	; T34  
	lea D0, [D0+D1*4]
	mov [Dframe-264],D0	; T33  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-288],D0	; T36  
; ------------------------------ index
	lea D0,[ttbitwidth]
	mov D1,[Dframe-288]	; T36  
	mov A0, [D0+D1*4]
	mov [Dframe-280],A0	; T35  
; ------------------------------ move
	mov A0,[Dframe-280]	; T35  
	mov D13,[Dframe-264]	; T33 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-304],D0	; T38  
; ------------------------------ indexlv
	lea D0,[tttarget]
	mov D1,[Dframe-304]	; T38  
	lea D0, [D0+D1*4]
	mov [Dframe-296],D0	; T37  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-320],D0	; T40  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-320]	; T40  
	mov A0, [D0+D1*4]
	mov [Dframe-312],A0	; T39  
; ------------------------------ move
	mov A0,[Dframe-312]	; T39  
	mov D13,[Dframe-296]	; T37 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-336],D0	; T42  
; ------------------------------ indexlv
	lea D0,[ttparams]
	mov D1,[Dframe-336]	; T42  
	lea D0, [D0+D1*8]
	mov [Dframe-328],D0	; T41  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-352],D0	; T44  
; ------------------------------ index
	lea D0,[ttparams]
	mov D1,[Dframe-352]	; T44  
	mov D0, [D0+D1*8]
	mov [Dframe-344],D0	; T43  
; ------------------------------ move
	mov D0,[Dframe-344]	; T43  
	mov D13,[Dframe-328]	; T41 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-368],D0	; T46  
; ------------------------------ indexlv
	lea D0,[ttisref]
	mov D1,[Dframe-368]	; T46  
	lea D0, [D0+D1]
	mov [Dframe-360],D0	; T45  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-384],D0	; T48  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-384]	; T48  
	mov B0, [D0+D1]
	mov [Dframe-376],B0	; T47  
; ------------------------------ move
	mov B0,[Dframe-376]	; T47  
	mov D13,[Dframe-360]	; T45 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[ntypes]
	jmp L2148
; ------------------------------ label
L2148:
; ------------------------------ hardret
	add Dstack, 384
	pop Dframe
	ret
;	End

;	Proc:createnewmode
createnewmode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[ntypes]
	cmp A0,25000
	jl L2151
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK548
	mov D11,KK549
	mov A12,25000
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK550
	call serror
	add Dstack, 32
; ------------------------------ label
L2151:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[ntypes]
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ indexlv
	lea D0,[ttbasetype]
	mov D1,[Dframe-16]	; T2  
	lea D0, [D0+D1*4]
	mov [Dframe-8],D0	; T1  
; ------------------------------ move
	mov A0,[Dframe+16]	; m 16  
	mov D13,[Dframe-8]	; T1 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ indexlv
	lea D0,[ttsize]
	mov D1,[Dframe-32]	; T4  
	lea D0, [D0+D1*4]
	mov [Dframe-24],D0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-48]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-40]	; T5  
	mov D13,[Dframe-24]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[ntypes]
	mov qword[Dframe-64],D0	; T8  
; ------------------------------ indexlv
	lea D0,[ttbitwidth]
	mov D1,[Dframe-64]	; T8  
	lea D0, [D0+D1*4]
	mov [Dframe-56],D0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-80],D0	; T10  
; ------------------------------ index
	lea D0,[ttbitwidth]
	mov D1,[Dframe-80]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-72]	; T9  
	mov D13,[Dframe-56]	; T7 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[ntypes]
	jmp L2150
; ------------------------------ label
L2150:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global addlistunit
;	Proc:addlistunit
addlistunit:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; ulist 16  
	mov D0, [D0]
	mov [Dframe-8],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; T1  
	cmp D0,0
	jnz L2153
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe+24]	; ulistx 24 *
	mov D0,qword[D13]
	mov D13,qword[Dframe+16]	; ulist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2154
; ------------------------------ label
L2153:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; ulistx 24  
	mov D0, [D0]
	mov [Dframe-24],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; T3  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe-16]	; T2 *
	mov qword[D13],D0
; ------------------------------ label
L2154:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; p 32  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-32]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ label
L2152:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global addlistdef
;	Proc:addlistdef
addlistdef:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; ulist 16  
	mov D0, [D0]
	mov [Dframe-8],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; T1  
	cmp D0,0
	jnz L2156
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe+24]	; ulistx 24 *
	mov D0,qword[D13]
	mov D13,qword[Dframe+16]	; ulist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2157
; ------------------------------ label
L2156:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; ulistx 24  
	mov D0, [D0]
	mov [Dframe-24],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; T3  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe-16]	; T2 *
	mov qword[D13],D0
; ------------------------------ label
L2157:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; p 32  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-32]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ label
L2155:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global addlistparam
;	Proc:addlistparam
addlistparam:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; ulist 16  
	mov D0, [D0]
	mov [Dframe-8],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; T1  
	cmp D0,0
	jnz L2159
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe+24]	; ulistx 24 *
	mov D0,qword[D13]
	mov D13,qword[Dframe+16]	; ulist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2160
; ------------------------------ label
L2159:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+24]	; ulistx 24  
	mov D0, [D0]
	mov [Dframe-24],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; T3  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe-16]	; T2 *
	mov qword[D13],D0
; ------------------------------ label
L2160:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; p 32  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-32]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; p 32  
	mov D13,[Dframe+24]	; ulistx 24 *
	mov qword[D13],D0
; ------------------------------ label
L2158:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global checksymbol
;	Proc:checksymbol
checksymbol:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 448

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-272],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-272]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-264],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-264]	; T1  
	mov dword[Dframe-280],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-280]	; T3  
	cmp A0,[Dframe+16]	; symbol 16  
	jz L2162
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-288],D0	; T4  
; ------------------------------ sub
	mov A0,[Dframe+16]	; symbol 16  
	mov A1,1
	sub A0,A1
	mov [Dframe-312],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-312]	; T7  
	mov qword[Dframe-304],D0	; T6  
; ------------------------------ index
	lea D0,[symbolnames]
	mov D1,[Dframe-304]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-296],D0	; T5  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-344],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-344]	; T11  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T10  
	mov dword[Dframe-352],A0	; T12  
; ------------------------------ sub
	mov A0,[Dframe-352]	; T12  
	mov A1,1
	sub A0,A1
	mov [Dframe-360],A0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-360]	; T13  
	mov qword[Dframe-328],D0	; T9  
; ------------------------------ index
	lea D0,[symbolnames]
	mov D1,[Dframe-328]	; T9  
	mov D0, [D0+D1*8]
	mov [Dframe-320],D0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-288]	; T4  
	mov D11,KK551
	mov D12,[Dframe-296]	; T5  
	mov D13,[Dframe-320]	; T8  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-376],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe-376]	; T15  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-368],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-368]	; T14  
	mov dword[Dframe-384],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-384]	; T16  
	cmp A0,65
	jnz L2163
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-392],D0	; T17  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-392]	; T17  
	mov D11,KK552
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-400],D0	; T18  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-416],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-416]	; T20  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-408],D0	; T19  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-408]	; T19  
	call getstname
	mov [Dframe-424],D0	; T21  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-400]	; T18  
	mov D11,[Dframe-424]	; T21  
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-432],D0	; T22  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-432]	; T22  
	mov D11,KK553
	call strcat
	add Dstack, 32
; ------------------------------ label
L2163:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-440],D0	; T23  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-440]	; T23  
	call serror
	add Dstack, 32
; ------------------------------ label
L2162:
; ------------------------------ label
L2161:
; ------------------------------ hardret
	add Dstack, 448
	pop Dframe
	ret
;	End

	global skipsymbol
;	Proc:skipsymbol
skipsymbol:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-16],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-16]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,[Dframe+16]	; symbol 16  
	jz L2165
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+16]	; symbol 16  
	call checksymbol
	add Dstack, 32
; ------------------------------ label
L2165:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ label
L2164:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global inittypetables
;	Proc:inittypetables
inittypetables:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 384

; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L2169
; ------------------------------ label
L2170:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-48],D0	; T2  
; ------------------------------ indexlv
	lea D0,[ttbasetype]
	mov D1,[Dframe-48]	; T2  
	lea D0, [D0+D1*4]
	mov [Dframe-40],D0	; T1  
; ------------------------------ move
	mov A0,[Dframe-4]	; i -4  
	mov D13,[Dframe-40]	; T1 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-64],D0	; T4  
; ------------------------------ index
	lea D0,[stdtypewidths]
	mov D1,[Dframe-64]	; T4  
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T3  
	mov dword[Dframe-72],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-72]	; T5  
	mov [Dframe-16],A0	; bitsize -16  
; ------------------------------ stmt
; ------------------------------ div
	mov A0,[Dframe-16]	; bitsize -16  
	mov A1,8
	cdq 
	idiv A1
	mov [Dframe-12],A0	; size -12  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-88],D0	; T7  
; ------------------------------ indexlv
	lea D0,[ttsize]
	mov D1,[Dframe-88]	; T7  
	lea D0, [D0+D1*4]
	mov [Dframe-80],D0	; T6  
; ------------------------------ move
	mov A0,[Dframe-12]	; size -12  
	mov D13,[Dframe-80]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-104],D0	; T9  
; ------------------------------ indexlv
	lea D0,[ttbitwidth]
	mov D1,[Dframe-104]	; T9  
	lea D0, [D0+D1*4]
	mov [Dframe-96],D0	; T8  
; ------------------------------ move
	mov A0,[Dframe-16]	; bitsize -16  
	mov D13,[Dframe-96]	; T8 *
	mov dword[D13],A0
; ------------------------------ label
L2167:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L2169:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,21
	jle L2170
; ------------------------------ label
L2168:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,21
	mov [ntypes],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,7
	call createrefmode
	mov [Dframe-112],A0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-112]	; T10  
	mov [trefchar],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,8
	call createrefmode
	mov [Dframe-120],A0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-120]	; T11  
	mov [trefwchar],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L2173
; ------------------------------ label
L2174:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-144],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-144]	; T14  
	mov qword[Dframe-136],D0	; T13  
; ------------------------------ index
	lea D0,[dominantsetuptable]
	mov D1,[Dframe-136]	; T13  
	imul D1,3
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T12  
	mov dword[Dframe-152],A0	; T15  
; ------------------------------ move
	mov A0,[Dframe-152]	; T15  
	mov [Dframe-20],A0	; s -20  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-176],A0	; T18  
; ------------------------------ widen
	movsx D0,dword[Dframe-176]	; T18  
	mov qword[Dframe-168],D0	; T17  
; ------------------------------ index
	lea D0,[dominantsetuptable]
	mov D1,[Dframe-168]	; T17  
	imul D1,3
	mov B0, [D0+D1+1]
	mov [Dframe-160],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T16  
	mov dword[Dframe-184],A0	; T19  
; ------------------------------ move
	mov A0,[Dframe-184]	; T19  
	mov [Dframe-24],A0	; t -24  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-208],A0	; T22  
; ------------------------------ widen
	movsx D0,dword[Dframe-208]	; T22  
	mov qword[Dframe-200],D0	; T21  
; ------------------------------ index
	lea D0,[dominantsetuptable]
	mov D1,[Dframe-200]	; T21  
	imul D1,3
	mov B0, [D0+D1+2]
	mov [Dframe-192],B0	; T20  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T20  
	mov dword[Dframe-216],A0	; T23  
; ------------------------------ move
	mov A0,[Dframe-216]	; T23  
	mov [Dframe-28],A0	; u -28  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; s -20  
	mov qword[Dframe-240],D0	; T26  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-240]	; T26  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-232],D0	; T25  
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; t -24  
	mov qword[Dframe-248],D0	; T27  
; ------------------------------ indexlv
	mov D0,[Dframe-232]	; T25  
	mov D1,[Dframe-248]	; T27  
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T24  
; ------------------------------ move
	mov A0,[Dframe-28]	; u -28  
	mov D13,[Dframe-224]	; T24 *
	mov byte [D13],B0
; ------------------------------ label
L2171:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L2173:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,144
	jle L2174
; ------------------------------ label
L2172:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L2177
; ------------------------------ label
L2178:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-272],A0	; T30  
; ------------------------------ widen
	movsx D0,dword[Dframe-272]	; T30  
	mov qword[Dframe-264],D0	; T29  
; ------------------------------ index
	lea D0,[convsetuptable]
	mov D1,[Dframe-264]	; T29  
	imul D1,3
	mov B0, [D0+D1]
	mov [Dframe-256],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-256]	; T28  
	mov dword[Dframe-280],A0	; T31  
; ------------------------------ move
	mov A0,[Dframe-280]	; T31  
	mov [Dframe-20],A0	; s -20  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-304],A0	; T34  
; ------------------------------ widen
	movsx D0,dword[Dframe-304]	; T34  
	mov qword[Dframe-296],D0	; T33  
; ------------------------------ index
	lea D0,[convsetuptable]
	mov D1,[Dframe-296]	; T33  
	imul D1,3
	mov B0, [D0+D1+1]
	mov [Dframe-288],B0	; T32  
; ------------------------------ widen
	movzx A0,byte [Dframe-288]	; T32  
	mov dword[Dframe-312],A0	; T35  
; ------------------------------ move
	mov A0,[Dframe-312]	; T35  
	mov [Dframe-24],A0	; t -24  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-336],A0	; T38  
; ------------------------------ widen
	movsx D0,dword[Dframe-336]	; T38  
	mov qword[Dframe-328],D0	; T37  
; ------------------------------ index
	lea D0,[convsetuptable]
	mov D1,[Dframe-328]	; T37  
	imul D1,3
	mov B0, [D0+D1+2]
	mov [Dframe-320],B0	; T36  
; ------------------------------ widen
	movzx A0,byte [Dframe-320]	; T36  
	mov dword[Dframe-344],A0	; T39  
; ------------------------------ move
	mov A0,[Dframe-344]	; T39  
	mov [Dframe-28],A0	; u -28  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; s -20  
	mov qword[Dframe-368],D0	; T42  
; ------------------------------ indexref
	lea D0,[conversionops]
	mov D1,[Dframe-368]	; T42  
	imul D1,16
	lea D0, [D0+D1]
	mov [Dframe-360],D0	; T41  
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; t -24  
	mov qword[Dframe-376],D0	; T43  
; ------------------------------ indexlv
	mov D0,[Dframe-360]	; T41  
	mov D1,[Dframe-376]	; T43  
	lea D0, [D0+D1]
	mov [Dframe-352],D0	; T40  
; ------------------------------ move
	mov A0,[Dframe-28]	; u -28  
	mov D13,[Dframe-352]	; T40 *
	mov byte [D13],B0
; ------------------------------ label
L2175:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L2177:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,144
	jle L2178
; ------------------------------ label
L2176:
; ------------------------------ label
L2166:
; ------------------------------ hardret
	add Dstack, 384
	pop Dframe
	ret
;	End

	global createdupldef
;	Proc:createdupldef
createdupldef:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call newstrec
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe+24]	; symptr 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe-40]	; T3  
	mov D13,[Dframe-32]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,112
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe+24]	; symptr 24  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ move
	mov B0,[Dframe-56]	; T5  
	mov D13,[Dframe-48]	; T4 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,113
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ move
	mov A0,65
	mov D13,[Dframe-64]	; T6 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T7  
; ------------------------------ move
	mov D0,[Dframe+16]	; owner 16  
	mov D13,[Dframe-72]	; T7 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,114
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T8  
; ------------------------------ move
	mov A0,[Dframe+32]	; id 32  
	mov D13,[Dframe-80]	; T8 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,106
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; id 32  
	mov qword[Dframe-104],D0	; T11  
; ------------------------------ index
	lea D0,[namespaces]
	mov D1,[Dframe-104]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-96],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-96]	; T10  
	mov D13,[Dframe-88]	; T9 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; symptr 24  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; q -16  
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; q -16  
	and D0,D0
	jz L2180
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; q -16  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T12  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-112]	; T12 *
	mov qword[D13],D0
; ------------------------------ label
L2180:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T13  
; ------------------------------ move
	mov D0,[Dframe-16]	; q -16  
	mov D13,[Dframe-120]	; T13 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-128],D0	; T14  
; ------------------------------ move
	mov D0,[Dframe+24]	; symptr 24  
	mov D13,[Dframe-128]	; T14 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; symptr 24  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T15  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-136]	; T15 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+16]	; owner 16  
	and D0,D0
	jz L2181
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; owner 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T16  
; ------------------------------ jumpcc
	mov D0,[Dframe-144]	; T16  
	cmp D0,0
	jnz L2182
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; owner 16  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T17  
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; owner 16  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T18  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-160]	; T18 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe-160]	; T18 *
	mov D0,qword[D13]
	mov D13,qword[Dframe-152]	; T17 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2183
; ------------------------------ label
L2182:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; owner 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-176],D0	; T20  
; ------------------------------ indexlv
	mov D0,[Dframe-176]	; T20  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T19  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-168]	; T19 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; owner 16  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T21  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-184]	; T21 *
	mov qword[D13],D0
; ------------------------------ label
L2183:
; ------------------------------ label
L2181:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2179
; ------------------------------ label
L2179:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

	global createnewmoduledef
;	Proc:createnewmoduledef
createnewmoduledef:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe+24]	; symptr 24  
	mov A12,3
	call createdupldef
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2184
; ------------------------------ label
L2184:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global createnewproc
;	Proc:createnewproc
createnewproc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe+24]	; symptr 24  
	mov A12,6
	call createdupldef
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2186
; ------------------------------ label
L2188:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; q -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; T2  
	cmp D0,[Dframe+16]	; owner 16  
	jnz L2189
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; q -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; owner 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK554
	mov D11,[Dframe-40]	; T3  
	mov D12,KK555
	mov D13,[Dframe-48]	; T4  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK556
	call serror
	add Dstack, 32
; ------------------------------ label
L2189:
; ------------------------------ label
L2186:
; ------------------------------ index
	mov D0,[Dframe-16]	; q -16  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; q -16  
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; q -16  
	and D0,D0
	jnz L2188
; ------------------------------ label
L2187:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2185
; ------------------------------ label
L2185:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global resolvename
;	Proc:resolvename
	segment .data
	align 4
resolvename.NNN:
	dd 0
	segment .text
resolvename:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; symptr 24  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-32],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T2  
	cmp A0,1
	jle L2191
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; symptr 24  
	jmp L2190
; ------------------------------ label
L2191:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; blockno 40  
	and A0,A0
	jz L2192
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; blockno 40  
	mov qword[Dframe-48],D0	; T4  
; ------------------------------ index
	lea D0,[blockcounts]
	mov D1,[Dframe-48]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,0
	jnz L2192
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; blockno 40  
	mov qword[Dframe-56],D0	; T5  
; ------------------------------ index
	lea D0,[blockowner]
	mov D1,[Dframe-56]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe+40],A0	; blockno 40  
; ------------------------------ label
L2192:
; ------------------------------ stmt
; ------------------------------ label
L71: ;<L161>
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2193
; ------------------------------ label
L2195:
; ------------------------------ stmt
; ------------------------------ shl
	mov A0,[Dframe+32]	; ns 32  
	mov B10,16
	shl A0, cl
	mov [Dframe-64],A0	; T6  
; ------------------------------ ior
	mov A0,[Dframe-64]	; T6  
	mov A1,[Dframe+40]	; blockno 40  
	or A0,A1
	mov [Dframe-4],A0	; nsblock -4  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; symptr 24  
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2196
; ------------------------------ label
L2198:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T7  
; ------------------------------ jumpcc
	mov D0,[Dframe-72]	; T7  
	cmp D0,[Dframe+16]	; owner 16  
	jnz L2199
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,104
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T8  
; ------------------------------ softconv
	mov A0,[Dframe-4]	; nsblock -4  
	mov [Dframe-88],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T8  
	cmp A0,[Dframe-88]	; T9  
	jnz L2199
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; d -16  
	jmp L2190
; ------------------------------ label
L2199:
; ------------------------------ label
L2196:
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; d -16  
	and D0,D0
	jnz L2198
; ------------------------------ label
L2197:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; blockno 40  
	cmp A0,0
	jnz L2200
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; owner 16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T10  
	mov dword[Dframe-104],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T11  
	cmp A0,6
	jnz L2201
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[stmodule]
	mov [Dframe+16],D0	; owner 16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L71
; ------------------------------ jump
	jmp	L2202
; ------------------------------ label
L2201:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; owner 16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T12  
	mov dword[Dframe-120],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T13  
	cmp A0,13
	jnz L2203
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; owner 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; owner 16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; owner 16  
	cmp D0,0
	jnz L2204
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L2190
; ------------------------------ label
L2204:
; ------------------------------ jump
	jmp	L2205
; ------------------------------ label
L2203:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L2190
; ------------------------------ label
L2205:
; ------------------------------ label
L2202:
; ------------------------------ jump
	jmp	L2206
; ------------------------------ label
L2200:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; blockno 40  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ index
	lea D0,[blockowner]
	mov D1,[Dframe-128]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe+40],A0	; blockno 40  
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; blockno 40  
	cmp A0,0
	jnz L2207
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[stmodule]
	mov [Dframe+16],D0	; owner 16  
; ------------------------------ label
L2207:
; ------------------------------ label
L2206:
; ------------------------------ label
L2193:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L2195
; ------------------------------ label
L2194:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L2190
; ------------------------------ label
L2190:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

	global checkdupl
;	Proc:checkdupl
checkdupl:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; symptr 24  
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ shl
	mov A0,[Dframe+32]	; ns 32  
	mov B10,16
	shl A0, cl
	mov [Dframe-24],A0	; T1  
; ------------------------------ ior
	mov A0,[Dframe-24]	; T1  
	mov A1,[Dframe+40]	; blockno 40  
	or A0,A1
	mov [Dframe-4],A0	; nsblock -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2209
; ------------------------------ label
L2211:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; T2  
	cmp D0,[Dframe+16]	; owner 16  
	jnz L2212
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,104
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T3  
; ------------------------------ softconv
	mov A0,[Dframe-4]	; nsblock -4  
	mov [Dframe-48],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,[Dframe-48]	; T4  
	jnz L2212
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; d -16  
	jmp L2208
; ------------------------------ label
L2212:
; ------------------------------ label
L2209:
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; d -16  
	and D0,D0
	jnz L2211
; ------------------------------ label
L2210:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L2208
; ------------------------------ label
L2208:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global checkdupl_inproc
;	Proc:checkdupl_inproc
checkdupl_inproc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; symptr 24  
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ shl
	mov A0,[Dframe+32]	; ns 32  
	mov B10,16
	shl A0, cl
	mov [Dframe-24],A0	; T1  
; ------------------------------ ior
	mov A0,[Dframe-24]	; T1  
	mov A1,[Dframe+40]	; blockno 40  
	or A0,A1
	mov [Dframe-4],A0	; nsblock -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2214
; ------------------------------ label
L2216:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,104
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T2  
; ------------------------------ softconv
	mov A0,[Dframe-4]	; nsblock -4  
	mov [Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T2  
	cmp A0,[Dframe-40]	; T3  
	jnz L2217
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; d -16  
	jmp L2213
; ------------------------------ label
L2217:
; ------------------------------ label
L2214:
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; d -16  
	and D0,D0
	jz L2218
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ jumpcc
	mov D0,[Dframe-48]	; T4  
	cmp D0,[Dframe+16]	; owner 16  
	jz L2216
; ------------------------------ label
L2218:
; ------------------------------ label
L2215:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L2213
; ------------------------------ label
L2213:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global getalignment
;	Proc:getalignment
getalignment:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-24]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T1  
	cmp A0,19
	jnz L2220
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-40]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-32],A0	; T3  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-32]	; T3  
	call getalignment
	mov [Dframe-48],A0	; T5  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-48]	; T5  
	jmp L2219
; ------------------------------ jump
	jmp	L2221
; ------------------------------ label
L2220:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-64]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T6  
	cmp A0,20
	jz L2223
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-80]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T8  
	cmp A0,21
	jnz L2222
; ------------------------------ label
L2223:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-104],D0	; T12  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-104]	; T12  
	mov D0, [D0+D1*8]
	mov [Dframe-96],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-96]	; T11  
	mov A1,127
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T10  
	mov dword[Dframe-112],A0	; T13  
; ------------------------------ move
	mov A0,[Dframe-112]	; T13  
	mov [Dframe-4],A0	; a -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; a -4  
	cmp A0,0
	jnz L2224
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK557
	call serror
	add Dstack, 32
; ------------------------------ label
L2224:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; a -4  
	jmp L2219
; ------------------------------ label
L2222:
; ------------------------------ label
L2221:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-120],D0	; T14  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-120]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe-4],A0	; a -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; a -4  
	cmp A0,1
	jz L2226
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; a -4  
	cmp A0,2
	jz L2226
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; a -4  
	cmp A0,4
	jz L2226
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; a -4  
	cmp A0,8
	jnz L2225
; ------------------------------ label
L2226:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-4]	; a -4  
	jmp L2219
; ------------------------------ label
L2225:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	mov A11,1
	call Strmode
	mov [Dframe-128],D0	; T15  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK558
	mov D11,[Dframe-128]	; T15  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK559
	call serror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L2219
; ------------------------------ label
L2219:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:readmodule
readmodule:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 400

; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2228
; ------------------------------ label
L2230:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-72],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-72]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T1  
	mov dword[Dframe-80],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T3  
	cmp A0,94
	jnz L2231
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; d -40  
	mov [Dframe-88],D0	; T4  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; pm -48  
	mov [Dframe-96],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-88]	; T4  
	mov A11,0
	mov D12,[Dframe-96]	; T5  
	call readcasttype
	mov [Dframe-104],A0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-104]	; T6  
	mov [Dframe-52],A0	; t -52  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-52]	; t -52  
	mov A11,1
	call Strmode
	mov [Dframe-112],D0	; T7  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK560
	mov D11,KK561
	mov D12,[Dframe-112]	; T7  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L74
; ------------------------------ label
L2231:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4]	; linkage -4  
	mov [Dframe-120],D0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[stmodule]
	mov D11,[Dframe-120]	; T8  
	call readdeclspec
	mov [Dframe-128],A0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-128]	; T9  
	mov [Dframe-12],A0	; mbase -12  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; commaseen -16  
; ------------------------------ stmt
; ------------------------------ label
L72: ;<L4>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-144],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-144]	; T11  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T10  
	mov dword[Dframe-152],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T12  
	cmp A0,65
	jz L2233
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-168],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-168]	; T14  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-160],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T13  
	mov dword[Dframe-176],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T15  
	cmp A0,23
	jz L2233
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-192],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-192]	; T17  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-184],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T16  
	mov dword[Dframe-200],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-200]	; T18  
	cmp A0,12
	jnz L2232
; ------------------------------ label
L2233:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; d -40  
	mov [Dframe-208],D0	; T19  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; pm -48  
	mov [Dframe-216],D0	; T20  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[stmodule]
	mov D11,[Dframe-208]	; T19  
	mov A12,[Dframe-12]	; mbase -12  
	mov D13,[Dframe-216]	; T20  
	call readtype
	mov [Dframe-224],A0	; T21  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-224]	; T21  
	mov [Dframe-8],A0	; m -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-40]	; d -40  
	cmp D0,0
	jnz L2234
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK562
	call serror
	add Dstack, 32
; ------------------------------ label
L2234:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; linkage -4  
	cmp A0,5
	jnz L2235
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[stmodule]
	mov D11,[Dframe-40]	; d -40  
	mov A12,[Dframe-8]	; m -8  
	call createtypedef
	mov [Dframe-232],D0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-232]	; T22  
	mov [Dframe-40],D0	; d -40  
; ------------------------------ jump
	jmp	L2236
; ------------------------------ label
L2235:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-48]	; pm -48  
	and D0,D0
	jz L2237
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-248],D0	; T24  
; ------------------------------ index
	mov D0,[Dframe-248]	; T24  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-240],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-240]	; T23  
	mov dword[Dframe-256],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T25  
	cmp A0,16
	jnz L2238
; ------------------------------ jumpfalse
	mov A0,[Dframe-16]	; commaseen -16  
	and A0,A0
	jz L2238
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK563
	call serror
	add Dstack, 32
; ------------------------------ label
L2238:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-20]	; wasdef -20  
	mov [Dframe-264],D0	; T26  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,8
	push qword [Dframe-264]	; T26  
	sub Dstack,32
	mov D10,[Dframe-40]	; d -40  
	mov A11,[Dframe-8]	; m -8  
	mov A12,[Dframe-4]	; linkage -4  
	mov D13,[Dframe-48]	; pm -48  
	call readfunction
	mov [Dframe-272],D0	; T27  
	add Dstack, 48
; ------------------------------ move
	mov D0,[Dframe-272]	; T27  
	mov [Dframe-40],D0	; d -40  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; wasdef -20  
	and A0,A0
	jz L2239
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L73
; ------------------------------ label
L2239:
; ------------------------------ jump
	jmp	L2240
; ------------------------------ label
L2237:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; d -40  
	mov A11,[Dframe-8]	; m -8  
	mov A12,[Dframe-4]	; linkage -4  
	call readmodulevar
	mov [Dframe-280],D0	; T28  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-280]	; T28  
	mov [Dframe-40],D0	; d -40  
; ------------------------------ label
L2240:
; ------------------------------ label
L2236:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-296],D0	; T30  
; ------------------------------ index
	mov D0,[Dframe-296]	; T30  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-288],B0	; T29  
; ------------------------------ widen
	movzx A0,byte [Dframe-288]	; T29  
	mov dword[Dframe-304],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-304]	; T31  
	cmp A0,8
	jnz L2241
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-16],A0	; commaseen -16  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L2242
; ------------------------------ label
L2241:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L73
; ------------------------------ label
L2242:
; ------------------------------ jump
	jmp	L2243
; ------------------------------ label
L2232:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; mbase -12  
	mov qword[Dframe-320],D0	; T33  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-320]	; T33  
	mov A0, [D0+D1*4]
	mov [Dframe-312],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-312]	; T32  
	cmp A0,15
	jz L2245
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; mbase -12  
	mov qword[Dframe-336],D0	; T35  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-336]	; T35  
	mov A0, [D0+D1*4]
	mov [Dframe-328],A0	; T34  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T34  
	cmp A0,20
	jz L2245
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; mbase -12  
	mov qword[Dframe-352],D0	; T37  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-352]	; T37  
	mov A0, [D0+D1*4]
	mov [Dframe-344],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-344]	; T36  
	cmp A0,21
	jnz L2244
; ------------------------------ label
L2245:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L73
; ------------------------------ jump
	jmp	L2246
; ------------------------------ label
L2244:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; mbase -12  
	mov qword[Dframe-368],D0	; T39  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-368]	; T39  
	mov A0, [D0+D1*4]
	mov [Dframe-360],A0	; T38  
; ------------------------------ jumpcc
	mov A0,[Dframe-360]	; T38  
	cmp A0,4
	jnz L2247
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L73
; ------------------------------ jump
	jmp	L2248
; ------------------------------ label
L2247:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-12]	; mbase -12  
	call typename
	mov [Dframe-376],D0	; T40  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK564
	mov D11,[Dframe-376]	; T40  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2248:
; ------------------------------ label
L2246:
; ------------------------------ label
L2243:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L72
; ------------------------------ stmt
; ------------------------------ label
L73: ;<L5>
; ------------------------------ stmt
; ------------------------------ label
L74: ;<L2>
; ------------------------------ label
L2228:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-392],D0	; T42  
; ------------------------------ index
	mov D0,[Dframe-392]	; T42  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-384],B0	; T41  
; ------------------------------ widen
	movzx A0,byte [Dframe-384]	; T41  
	mov dword[Dframe-400],A0	; T43  
; ------------------------------ jumpcc
	mov A0,[Dframe-400]	; T43  
	cmp A0,55
	jnz L2230
; ------------------------------ label
L2229:
; ------------------------------ label
L2227:
; ------------------------------ hardret
	add Dstack, 400
	pop Dframe
	ret
;	End

	global parsemodule
;	Proc:parsemodule
parsemodule:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-40],D0	; T2  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-40]	; T2  
	imul D1,78
	mov A0, [D0+D1+16]
	mov [Dframe-32],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK565
	mov A11,[Dframe-32]	; T1  
	call startlex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[stmodule]
	mov [Dframe-16],D0	; owner -16  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [currproc],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [loopindex],A0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call readmodule
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call endlex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L2249
; ------------------------------ label
L2249:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:readdeclspec
readdeclspec:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1760

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-64],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-64]	; T1  
	mov A11,0
	mov D12,15
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-32],A0	; mod -32  
; ------------------------------ move
	mov A0,[Dframe-32]	; mod -32  
	mov [Dframe-40],A0	; fstruct -40  
; ------------------------------ stmt
; ------------------------------ label
L75: ;<L15>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-80],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-80]	; T3  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T2  
	mov dword[Dframe-88],A0	; T4  
; ------------------------------ switch
	mov A0,[Dframe-88]	; T4  
	sub A0, 65
	cmp A0, 33
	jae L2251
	jmp [A0*8+L2263]
	align 8
; ------------------------------ label
L2263:
; ------------------------------ jumplabel
	dq L2255	; 1
; ------------------------------ jumplabel
	dq L2251	; 2
; ------------------------------ jumplabel
	dq L2251	; 3
; ------------------------------ jumplabel
	dq L2262	; 4
; ------------------------------ jumplabel
	dq L2251	; 5
; ------------------------------ jumplabel
	dq L2251	; 6
; ------------------------------ jumplabel
	dq L2251	; 7
; ------------------------------ jumplabel
	dq L2251	; 8
; ------------------------------ jumplabel
	dq L2251	; 9
; ------------------------------ jumplabel
	dq L2251	; 10
; ------------------------------ jumplabel
	dq L2251	; 11
; ------------------------------ jumplabel
	dq L2251	; 12
; ------------------------------ jumplabel
	dq L2251	; 13
; ------------------------------ jumplabel
	dq L2251	; 14
; ------------------------------ jumplabel
	dq L2251	; 15
; ------------------------------ jumplabel
	dq L2251	; 16
; ------------------------------ jumplabel
	dq L2257	; 17
; ------------------------------ jumplabel
	dq L2258	; 18
; ------------------------------ jumplabel
	dq L2260	; 19
; ------------------------------ jumplabel
	dq L2261	; 20
; ------------------------------ jumplabel
	dq L2259	; 21
; ------------------------------ jumplabel
	dq L2251	; 22
; ------------------------------ jumplabel
	dq L2256	; 23
; ------------------------------ jumplabel
	dq L2251	; 24
; ------------------------------ jumplabel
	dq L2251	; 25
; ------------------------------ jumplabel
	dq L2251	; 26
; ------------------------------ jumplabel
	dq L2251	; 27
; ------------------------------ jumplabel
	dq L2251	; 28
; ------------------------------ jumplabel
	dq L2251	; 29
; ------------------------------ jumplabel
	dq L2251	; 30
; ------------------------------ jumplabel
	dq L2254	; 31
; ------------------------------ jumplabel
	dq L2251	; 32
; ------------------------------ jumplabel
	dq L2253	; 33
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L2262:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-104],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-104]	; T6  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T5  
	mov dword[Dframe-112],A0	; T7  
; ------------------------------ switch
	mov A0,[Dframe-112]	; T7  
	sub A0, 1
	cmp A0, 11
	jae L2264
	jmp [A0*8+L2277]
	align 8
; ------------------------------ label
L2277:
; ------------------------------ jumplabel
	dq L2276	; 1
; ------------------------------ jumplabel
	dq L2272	; 2
; ------------------------------ jumplabel
	dq L2270	; 3
; ------------------------------ jumplabel
	dq L2269	; 4
; ------------------------------ jumplabel
	dq L2271	; 5
; ------------------------------ jumplabel
	dq L2273	; 6
; ------------------------------ jumplabel
	dq L2274	; 7
; ------------------------------ jumplabel
	dq L2268	; 8
; ------------------------------ jumplabel
	dq L2267	; 9
; ------------------------------ jumplabel
	dq L2275	; 10
; ------------------------------ jumplabel
	dq L2266	; 11
; ------------------------------ stmt
; ------------------------------ comment
;case 5:
; ------------------------------ label
L2271:
; ------------------------------ stmt
; ------------------------------ comment
;case 2:
; ------------------------------ label
L2272:
; ------------------------------ stmt
; ------------------------------ comment
;case 6:
; ------------------------------ label
L2273:
; ------------------------------ stmt
; ------------------------------ comment
;case 7:
; ------------------------------ label
L2274:
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L2275:
; ------------------------------ stmt
; ------------------------------ comment
;case 1:
; ------------------------------ label
L2276:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-128],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-128]	; T9  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-120]	; T8  
	and A0,A0
	jz L2278
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; fstruct -40  
	and A0,A0
	jz L2279
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call checksymbol
	add Dstack, 32
; ------------------------------ jump
	jmp	L2280
; ------------------------------ label
L2279:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L77
; ------------------------------ label
L2280:
; ------------------------------ label
L2278:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-144],D0	; T11  
; ------------------------------ indexlv
	mov D0,[Dframe-144]	; T11  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T10  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-176],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe-176]	; T15  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T14  
	mov dword[Dframe-184],A0	; T16  
; ------------------------------ sub
	mov A0,[Dframe-184]	; T16  
	mov A1,1
	sub A0,A1
	mov [Dframe-192],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-192]	; T17  
	mov qword[Dframe-160],D0	; T13  
; ------------------------------ index
	lea D0,[typespectypes]
	mov D1,[Dframe-160]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-152],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-152]	; T12  
	mov D13,[Dframe-136]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2265
; ------------------------------ stmt
; ------------------------------ comment
;case 3:
; ------------------------------ label
L2270:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-208],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe-208]	; T19  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-200],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T18  
	mov dword[Dframe-216],A0	; T20  
; ------------------------------ jumptrue
	mov A0,[Dframe-216]	; T20  
	and A0,A0
	jnz L2282
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-232],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe-232]	; T22  
	mov A1,10
	mov B0, [D0+D1]
	mov [Dframe-224],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-224]	; T21  
	mov dword[Dframe-240],A0	; T23  
; ------------------------------ jumptrue
	mov A0,[Dframe-240]	; T23  
	and A0,A0
	jnz L2282
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-256],D0	; T25  
; ------------------------------ index
	mov D0,[Dframe-256]	; T25  
	mov A1,11
	mov B0, [D0+D1]
	mov [Dframe-248],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-248]	; T24  
	mov dword[Dframe-264],A0	; T26  
; ------------------------------ jumpfalse
	mov A0,[Dframe-264]	; T26  
	and A0,A0
	jz L2281
; ------------------------------ label
L2282:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L77
; ------------------------------ label
L2281:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-280],D0	; T28  
; ------------------------------ indexlv
	mov D0,[Dframe-280]	; T28  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T27  
; ------------------------------ move
	mov A0,1
	mov [Dframe-32],A0	; mod -32  
; ------------------------------ move
	mov A0,[Dframe-32]	; mod -32  
	mov D13,[Dframe-272]	; T27 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2265
; ------------------------------ stmt
; ------------------------------ comment
;case 4:
; ------------------------------ label
L2269:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-296],D0	; T30  
; ------------------------------ index
	mov D0,[Dframe-296]	; T30  
	mov A1,11
	mov B0, [D0+D1]
	mov [Dframe-288],B0	; T29  
; ------------------------------ widen
	movzx A0,byte [Dframe-288]	; T29  
	mov dword[Dframe-304],A0	; T31  
; ------------------------------ jumptrue
	mov A0,[Dframe-304]	; T31  
	and A0,A0
	jnz L2284
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-320],D0	; T33  
; ------------------------------ index
	mov D0,[Dframe-320]	; T33  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-312],B0	; T32  
; ------------------------------ widen
	movzx A0,byte [Dframe-312]	; T32  
	mov dword[Dframe-328],A0	; T34  
; ------------------------------ jumpfalse
	mov A0,[Dframe-328]	; T34  
	and A0,A0
	jz L2283
; ------------------------------ label
L2284:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L77
; ------------------------------ jump
	jmp	L2285
; ------------------------------ label
L2283:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-344],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-344]	; T36  
	mov A1,10
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T35  
	mov dword[Dframe-352],A0	; T37  
; ------------------------------ jumpfalse
	mov A0,[Dframe-352]	; T37  
	and A0,A0
	jz L2286
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-368],D0	; T39  
; ------------------------------ indexlv
	mov D0,[Dframe-368]	; T39  
	mov A1,10
	lea D0, [D0+D1]
	mov [Dframe-360],D0	; T38  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-360]	; T38 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-384],D0	; T41  
; ------------------------------ indexlv
	mov D0,[Dframe-384]	; T41  
	mov A1,11
	lea D0, [D0+D1]
	mov [Dframe-376],D0	; T40  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-376]	; T40 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L2287
; ------------------------------ label
L2286:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-400],D0	; T43  
; ------------------------------ indexlv
	mov D0,[Dframe-400]	; T43  
	mov A1,10
	lea D0, [D0+D1]
	mov [Dframe-392],D0	; T42  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-392]	; T42 *
	mov byte [D13],B0
; ------------------------------ label
L2287:
; ------------------------------ label
L2285:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-32],A0	; mod -32  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2265
; ------------------------------ stmt
; ------------------------------ comment
;case 8:
; ------------------------------ label
L2268:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-416],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe-416]	; T45  
	mov A1,12
	mov B0, [D0+D1]
	mov [Dframe-408],B0	; T44  
; ------------------------------ widen
	movzx A0,byte [Dframe-408]	; T44  
	mov dword[Dframe-424],A0	; T46  
; ------------------------------ jumptrue
	mov A0,[Dframe-424]	; T46  
	and A0,A0
	jnz L2289
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-440],D0	; T48  
; ------------------------------ index
	mov D0,[Dframe-440]	; T48  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-432],B0	; T47  
; ------------------------------ widen
	movzx A0,byte [Dframe-432]	; T47  
	mov dword[Dframe-448],A0	; T49  
; ------------------------------ jumpfalse
	mov A0,[Dframe-448]	; T49  
	and A0,A0
	jz L2288
; ------------------------------ label
L2289:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L77
; ------------------------------ label
L2288:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-464],D0	; T51  
; ------------------------------ indexlv
	mov D0,[Dframe-464]	; T51  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-456],D0	; T50  
; ------------------------------ move
	mov A0,1
	mov [Dframe-32],A0	; mod -32  
; ------------------------------ move
	mov A0,[Dframe-32]	; mod -32  
	mov D13,[Dframe-456]	; T50 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2265
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L2267:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-480],D0	; T53  
; ------------------------------ index
	mov D0,[Dframe-480]	; T53  
	mov A1,12
	mov B0, [D0+D1]
	mov [Dframe-472],B0	; T52  
; ------------------------------ widen
	movzx A0,byte [Dframe-472]	; T52  
	mov dword[Dframe-488],A0	; T54  
; ------------------------------ jumptrue
	mov A0,[Dframe-488]	; T54  
	and A0,A0
	jnz L2291
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-504],D0	; T56  
; ------------------------------ index
	mov D0,[Dframe-504]	; T56  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-496],B0	; T55  
; ------------------------------ widen
	movzx A0,byte [Dframe-496]	; T55  
	mov dword[Dframe-512],A0	; T57  
; ------------------------------ jumpfalse
	mov A0,[Dframe-512]	; T57  
	and A0,A0
	jz L2290
; ------------------------------ label
L2291:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L77
; ------------------------------ label
L2290:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-528],D0	; T59  
; ------------------------------ indexlv
	mov D0,[Dframe-528]	; T59  
	mov A1,13
	lea D0, [D0+D1]
	mov [Dframe-520],D0	; T58  
; ------------------------------ move
	mov A0,1
	mov [Dframe-32],A0	; mod -32  
; ------------------------------ move
	mov A0,[Dframe-32]	; mod -32  
	mov D13,[Dframe-520]	; T58 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2265
; ------------------------------ stmt
; ------------------------------ comment
;case 11:
; ------------------------------ label
L2266:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-544],D0	; T61  
; ------------------------------ index
	mov D0,[Dframe-544]	; T61  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-536],A0	; T60  
; ------------------------------ jumpfalse
	mov A0,[Dframe-536]	; T60  
	and A0,A0
	jz L2292
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-560],D0	; T63  
; ------------------------------ index
	mov D0,[Dframe-560]	; T63  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-552],A0	; T62  
; ------------------------------ jumpcc
	mov A0,[Dframe-552]	; T62  
	cmp A0,11
	jz L2292
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-576],D0	; T65  
; ------------------------------ index
	mov D0,[Dframe-576]	; T65  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-568],A0	; T64  
; ------------------------------ jumpcc
	mov A0,[Dframe-568]	; T64  
	cmp A0,12
	jz L2292
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L77
; ------------------------------ label
L2292:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-592],D0	; T67  
; ------------------------------ indexlv
	mov D0,[Dframe-592]	; T67  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-584],D0	; T66  
; ------------------------------ move
	mov A0,14
	mov D13,[Dframe-584]	; T66 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2265
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2264:
; ------------------------------ stmt
; ------------------------------ label
L76: ;<tserror>
; ------------------------------ stmt
; ------------------------------ label
L77: ;<L17>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-624],D0	; T71  
; ------------------------------ index
	mov D0,[Dframe-624]	; T71  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-616],B0	; T70  
; ------------------------------ widen
	movzx A0,byte [Dframe-616]	; T70  
	mov dword[Dframe-632],A0	; T72  
; ------------------------------ sub
	mov A0,[Dframe-632]	; T72  
	mov A1,1
	sub A0,A1
	mov [Dframe-640],A0	; T73  
; ------------------------------ widen
	movsx D0,dword[Dframe-640]	; T73  
	mov qword[Dframe-608],D0	; T69  
; ------------------------------ index
	lea D0,[typespecnames]
	mov D1,[Dframe-608]	; T69  
	mov D0, [D0+D1*8]
	mov [Dframe-600],D0	; T68  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK566
	mov D11,[Dframe-600]	; T68  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2265:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;case 84:
; ------------------------------ label
L2261:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-656],D0	; T75  
; ------------------------------ index
	mov D0,[Dframe-656]	; T75  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-648],B0	; T74  
; ------------------------------ widen
	movzx A0,byte [Dframe-648]	; T74  
	mov dword[Dframe-664],A0	; T76  
; ------------------------------ jumpcc
	mov A0,[Dframe-664]	; T76  
	cmp A0,1
	jnz L2293
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-680],D0	; T78  
; ------------------------------ indexlv
	mov D0,[Dframe-680]	; T78  
	mov A1,4
	lea D0, [D0+D1]
	mov [Dframe-672],D0	; T77  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-672]	; T77 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L2294
; ------------------------------ label
L2293:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-696],D0	; T80  
; ------------------------------ index
	mov D0,[Dframe-696]	; T80  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-688],B0	; T79  
; ------------------------------ widen
	movzx A0,byte [Dframe-688]	; T79  
	mov dword[Dframe-704],A0	; T81  
; ------------------------------ jumpcc
	mov A0,[Dframe-704]	; T81  
	cmp A0,2
	jnz L2295
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-720],D0	; T83  
; ------------------------------ indexlv
	mov D0,[Dframe-720]	; T83  
	mov A1,5
	lea D0, [D0+D1]
	mov [Dframe-712],D0	; T82  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-712]	; T82 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L2296
; ------------------------------ label
L2295:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-736],D0	; T85  
; ------------------------------ index
	mov D0,[Dframe-736]	; T85  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-728],B0	; T84  
; ------------------------------ widen
	movzx A0,byte [Dframe-728]	; T84  
	mov dword[Dframe-744],A0	; T86  
; ------------------------------ jumpcc
	mov A0,[Dframe-744]	; T86  
	cmp A0,3
	jnz L2297
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-760],D0	; T88  
; ------------------------------ indexlv
	mov D0,[Dframe-760]	; T88  
	mov A1,6
	lea D0, [D0+D1]
	mov [Dframe-752],D0	; T87  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-752]	; T87 *
	mov byte [D13],B0
; ------------------------------ label
L2297:
; ------------------------------ label
L2296:
; ------------------------------ label
L2294:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;case 83:
; ------------------------------ label
L2260:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-776],D0	; T90  
; ------------------------------ indexlv
	mov D0,[Dframe-776]	; T90  
	mov A1,7
	lea D0, [D0+D1]
	mov [Dframe-768],D0	; T89  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-792],D0	; T92  
; ------------------------------ index
	mov D0,[Dframe-792]	; T92  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-784],B0	; T91  
; ------------------------------ move
	mov B0,[Dframe-784]	; T91  
	mov D13,[Dframe-768]	; T89 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L2259:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-808],D0	; T94  
; ------------------------------ index
	mov D0,[Dframe-808]	; T94  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-800],B0	; T93  
; ------------------------------ widen
	movzx A0,byte [Dframe-800]	; T93  
	mov dword[Dframe-816],A0	; T95  
; ------------------------------ jumpcc
	mov A0,[Dframe-816]	; T95  
	cmp A0,1
	jnz L2298
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-832],D0	; T97  
; ------------------------------ indexlv
	mov D0,[Dframe-832]	; T97  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-824],D0	; T96  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-824]	; T96 *
	mov byte [D13],B0
; ------------------------------ label
L2298:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;case 81:
; ------------------------------ label
L2257:
; ------------------------------ stmt
; ------------------------------ comment
;case 82:
; ------------------------------ label
L2258:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-848],D0	; T99  
; ------------------------------ index
	mov D0,[Dframe-848]	; T99  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-840],A0	; T98  
; ------------------------------ jumpfalse
	mov A0,[Dframe-840]	; T98  
	and A0,A0
	jz L2299
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK567
	call serror
	add Dstack, 32
; ------------------------------ label
L2299:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-864],D0	; T101  
; ------------------------------ indexlv
	mov D0,[Dframe-864]	; T101  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-856],D0	; T100  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	call readstructdecl
	mov [Dframe-872],A0	; T102  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-872]	; T102  
	mov D13,[Dframe-856]	; T100 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-888],D0	; T104  
; ------------------------------ indexlv
	mov D0,[Dframe-888]	; T104  
	mov A1,14
	lea D0, [D0+D1]
	mov [Dframe-880],D0	; T103  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-880]	; T103 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-40],A0	; fstruct -40  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;case 87:
; ------------------------------ label
L2256:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-904],D0	; T106  
; ------------------------------ index
	mov D0,[Dframe-904]	; T106  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-896],A0	; T105  
; ------------------------------ jumpfalse
	mov A0,[Dframe-896]	; T105  
	and A0,A0
	jz L2300
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK568
	call serror
	add Dstack, 32
; ------------------------------ label
L2300:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	call readenumdecl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-920],D0	; T108  
; ------------------------------ indexlv
	mov D0,[Dframe-920]	; T108  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-912],D0	; T107  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-912]	; T107 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-936],D0	; T110  
; ------------------------------ indexlv
	mov D0,[Dframe-936]	; T110  
	mov A1,14
	lea D0, [D0+D1]
	mov [Dframe-928],D0	; T109  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-928]	; T109 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L2255:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-952],D0	; T112  
; ------------------------------ index
	mov D0,[Dframe-952]	; T112  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-944],A0	; T111  
; ------------------------------ jumptrue
	mov A0,[Dframe-944]	; T111  
	and A0,A0
	jnz L2301
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	call isusertype
	mov [Dframe-960],A0	; T113  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-960]	; T113  
	mov [Dframe-36],A0	; m -36  
; ------------------------------ jumpfalse
	mov A0,[Dframe-36]	; m -36  
	and A0,A0
	jz L2301
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; mod -32  
	and A0,A0
	jz L2302
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-976],D0	; T115  
; ------------------------------ indexlv
	mov D0,[Dframe-976]	; T115  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-968],D0	; T114  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-968]	; T114 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L78
; ------------------------------ label
L2302:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-992],D0	; T117  
; ------------------------------ indexlv
	mov D0,[Dframe-992]	; T117  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-984],D0	; T116  
; ------------------------------ move
	mov A0,[Dframe-36]	; m -36  
	mov D13,[Dframe-984]	; T116 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1008],D0	; T119  
; ------------------------------ indexlv
	mov D0,[Dframe-1008]	; T119  
	mov A1,14
	lea D0, [D0+D1]
	mov [Dframe-1000],D0	; T118  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-1000]	; T118 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L2303
; ------------------------------ label
L2301:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1024],D0	; T121  
; ------------------------------ index
	mov D0,[Dframe-1024]	; T121  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-1016],A0	; T120  
; ------------------------------ jumpcc
	mov A0,[Dframe-1016]	; T120  
	cmp A0,0
	jnz L2304
; ------------------------------ jumptrue
	mov A0,[Dframe-32]	; mod -32  
	and A0,A0
	jnz L2304
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1048],D0	; T124  
; ------------------------------ index
	mov D0,[Dframe-1048]	; T124  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1040],D0	; T123  
; ------------------------------ index
	mov D0,[Dframe-1040]	; T123  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1032],D0	; T122  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK569
	mov D11,[Dframe-1032]	; T122  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2304:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1064],D0	; T126  
; ------------------------------ index
	mov D0,[Dframe-1064]	; T126  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-1056],A0	; T125  
; ------------------------------ jumpcc
	mov A0,[Dframe-1056]	; T125  
	cmp A0,0
	jnz L2305
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1080],D0	; T128  
; ------------------------------ indexlv
	mov D0,[Dframe-1080]	; T128  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-1072],D0	; T127  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-1072]	; T127 *
	mov dword[D13],A0
; ------------------------------ label
L2305:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L78
; ------------------------------ label
L2303:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;case 95:
; ------------------------------ label
L2254:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,12
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-1088],D0	; T129  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1088]	; T129  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1104],D0	; T131  
; ------------------------------ index
	mov D0,[Dframe-1104]	; T131  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-1096],A0	; T130  
; ------------------------------ jumptrue
	mov A0,[Dframe-1096]	; T130  
	and A0,A0
	jnz L2307
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; mod -32  
	and A0,A0
	jz L2306
; ------------------------------ label
L2307:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK570
	call serror
	add Dstack, 32
; ------------------------------ label
L2306:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1120],D0	; T133  
; ------------------------------ indexlv
	mov D0,[Dframe-1120]	; T133  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-1112],D0	; T132  
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-1128],A0	; T134  
; ------------------------------ move
	mov A0,[Dframe-1128]	; T134  
	mov D13,[Dframe-1112]	; T132 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;case 97:
; ------------------------------ label
L2253:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call dostaticassert
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2252
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2251:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L78
; ------------------------------ label
L2252:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L75
; ------------------------------ stmt
; ------------------------------ label
L78: ;<L16>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1152],D0	; T137  
; ------------------------------ index
	mov D0,[Dframe-1152]	; T137  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-1144],A0	; T136  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1144]	; T136  
	and A0,A0
	jz L2308
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1160],D0	; T138  
; ------------------------------ index
	mov D0,[Dframe-1160]	; T138  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-1136],A0	; T135  
; ------------------------------ jump
	jmp	L2309
; ------------------------------ label
L2308:
; ------------------------------ move
	mov A0,4
	mov [Dframe-1136],A0	; T135  
; ------------------------------ label
L2309:
; ------------------------------ move
	mov A0,[Dframe-1136]	; T135  
	mov [Dframe-28],A0	; t -28  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1176],D0	; T140  
; ------------------------------ index
	mov D0,[Dframe-1176]	; T140  
	mov A1,14
	mov B0, [D0+D1]
	mov [Dframe-1168],B0	; T139  
; ------------------------------ widen
	movzx A0,byte [Dframe-1168]	; T139  
	mov dword[Dframe-1184],A0	; T141  
; ------------------------------ jumptrue
	mov A0,[Dframe-1184]	; T141  
	and A0,A0
	jnz L2310
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; t -28  
	cmp A0,4
	jnz L2311
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1200],D0	; T143  
; ------------------------------ index
	mov D0,[Dframe-1200]	; T143  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-1192],B0	; T142  
; ------------------------------ widen
	movzx A0,byte [Dframe-1192]	; T142  
	mov dword[Dframe-1208],A0	; T144  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1208]	; T144  
	and A0,A0
	jz L2312
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1232],D0	; T147  
; ------------------------------ index
	mov D0,[Dframe-1232]	; T147  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-1224],B0	; T146  
; ------------------------------ widen
	movzx A0,byte [Dframe-1224]	; T146  
	mov dword[Dframe-1240],A0	; T148  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1240]	; T148  
	and A0,A0
	jz L2313
; ------------------------------ move
	mov A0,8
	mov [Dframe-1216],A0	; T145  
; ------------------------------ jump
	jmp	L2314
; ------------------------------ label
L2313:
; ------------------------------ move
	mov A0,3
	mov [Dframe-1216],A0	; T145  
; ------------------------------ label
L2314:
; ------------------------------ move
	mov A0,[Dframe-1216]	; T145  
	mov [Dframe-28],A0	; t -28  
; ------------------------------ jump
	jmp	L2315
; ------------------------------ label
L2312:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1256],D0	; T150  
; ------------------------------ index
	mov D0,[Dframe-1256]	; T150  
	mov A1,10
	mov B0, [D0+D1]
	mov [Dframe-1248],B0	; T149  
; ------------------------------ widen
	movzx A0,byte [Dframe-1248]	; T149  
	mov dword[Dframe-1264],A0	; T151  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1264]	; T151  
	and A0,A0
	jz L2316
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[wintarget]
	and A0,A0
	jz L2317
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1288],D0	; T154  
; ------------------------------ index
	mov D0,[Dframe-1288]	; T154  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-1280],B0	; T153  
; ------------------------------ widen
	movzx A0,byte [Dframe-1280]	; T153  
	mov dword[Dframe-1296],A0	; T155  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1296]	; T155  
	and A0,A0
	jz L2318
; ------------------------------ move
	mov A0,9
	mov [Dframe-1272],A0	; T152  
; ------------------------------ jump
	jmp	L2319
; ------------------------------ label
L2318:
; ------------------------------ move
	mov A0,4
	mov [Dframe-1272],A0	; T152  
; ------------------------------ label
L2319:
; ------------------------------ move
	mov A0,[Dframe-1272]	; T152  
	mov [Dframe-28],A0	; t -28  
; ------------------------------ jump
	jmp	L2320
; ------------------------------ label
L2317:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1320],D0	; T158  
; ------------------------------ index
	mov D0,[Dframe-1320]	; T158  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-1312],B0	; T157  
; ------------------------------ widen
	movzx A0,byte [Dframe-1312]	; T157  
	mov dword[Dframe-1328],A0	; T159  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1328]	; T159  
	and A0,A0
	jz L2321
; ------------------------------ move
	mov A0,10
	mov [Dframe-1304],A0	; T156  
; ------------------------------ jump
	jmp	L2322
; ------------------------------ label
L2321:
; ------------------------------ move
	mov A0,5
	mov [Dframe-1304],A0	; T156  
; ------------------------------ label
L2322:
; ------------------------------ move
	mov A0,[Dframe-1304]	; T156  
	mov [Dframe-28],A0	; t -28  
; ------------------------------ label
L2320:
; ------------------------------ jump
	jmp	L2323
; ------------------------------ label
L2316:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1344],D0	; T161  
; ------------------------------ index
	mov D0,[Dframe-1344]	; T161  
	mov A1,11
	mov B0, [D0+D1]
	mov [Dframe-1336],B0	; T160  
; ------------------------------ widen
	movzx A0,byte [Dframe-1336]	; T160  
	mov dword[Dframe-1352],A0	; T162  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1352]	; T162  
	and A0,A0
	jz L2324
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1376],D0	; T165  
; ------------------------------ index
	mov D0,[Dframe-1376]	; T165  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-1368],B0	; T164  
; ------------------------------ widen
	movzx A0,byte [Dframe-1368]	; T164  
	mov dword[Dframe-1384],A0	; T166  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1384]	; T166  
	and A0,A0
	jz L2325
; ------------------------------ move
	mov A0,10
	mov [Dframe-1360],A0	; T163  
; ------------------------------ jump
	jmp	L2326
; ------------------------------ label
L2325:
; ------------------------------ move
	mov A0,5
	mov [Dframe-1360],A0	; T163  
; ------------------------------ label
L2326:
; ------------------------------ move
	mov A0,[Dframe-1360]	; T163  
	mov [Dframe-28],A0	; t -28  
; ------------------------------ jump
	jmp	L2327
; ------------------------------ label
L2324:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1400],D0	; T168  
; ------------------------------ index
	mov D0,[Dframe-1400]	; T168  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-1392],B0	; T167  
; ------------------------------ widen
	movzx A0,byte [Dframe-1392]	; T167  
	mov dword[Dframe-1408],A0	; T169  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1408]	; T169  
	and A0,A0
	jz L2328
; ------------------------------ stmt
; ------------------------------ move
	mov A0,9
	mov [Dframe-28],A0	; t -28  
; ------------------------------ label
L2328:
; ------------------------------ label
L2327:
; ------------------------------ label
L2323:
; ------------------------------ label
L2315:
; ------------------------------ jump
	jmp	L2329
; ------------------------------ label
L2311:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; t -28  
	cmp A0,7
	jnz L2330
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1424],D0	; T171  
; ------------------------------ index
	mov D0,[Dframe-1424]	; T171  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-1416],B0	; T170  
; ------------------------------ widen
	movzx A0,byte [Dframe-1416]	; T170  
	mov dword[Dframe-1432],A0	; T172  
; ------------------------------ jumptrue
	mov A0,[Dframe-1432]	; T172  
	and A0,A0
	jnz L2332
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1448],D0	; T174  
; ------------------------------ index
	mov D0,[Dframe-1448]	; T174  
	mov A1,10
	mov B0, [D0+D1]
	mov [Dframe-1440],B0	; T173  
; ------------------------------ widen
	movzx A0,byte [Dframe-1440]	; T173  
	mov dword[Dframe-1456],A0	; T175  
; ------------------------------ jumptrue
	mov A0,[Dframe-1456]	; T175  
	and A0,A0
	jnz L2332
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1472],D0	; T177  
; ------------------------------ index
	mov D0,[Dframe-1472]	; T177  
	mov A1,11
	mov B0, [D0+D1]
	mov [Dframe-1464],B0	; T176  
; ------------------------------ widen
	movzx A0,byte [Dframe-1464]	; T176  
	mov dword[Dframe-1480],A0	; T178  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1480]	; T178  
	and A0,A0
	jz L2331
; ------------------------------ label
L2332:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK571
	call serror
	add Dstack, 32
; ------------------------------ label
L2331:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1504],D0	; T181  
; ------------------------------ index
	mov D0,[Dframe-1504]	; T181  
	mov A1,12
	mov B0, [D0+D1]
	mov [Dframe-1496],B0	; T180  
; ------------------------------ widen
	movzx A0,byte [Dframe-1496]	; T180  
	mov dword[Dframe-1512],A0	; T182  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1512]	; T182  
	and A0,A0
	jz L2333
; ------------------------------ move
	mov A0,2
	mov [Dframe-1488],A0	; T179  
; ------------------------------ jump
	jmp	L2334
; ------------------------------ label
L2333:
; ------------------------------ move
	mov A0,7
	mov [Dframe-1488],A0	; T179  
; ------------------------------ label
L2334:
; ------------------------------ move
	mov A0,[Dframe-1488]	; T179  
	mov [Dframe-28],A0	; t -28  
; ------------------------------ jump
	jmp	L2335
; ------------------------------ label
L2330:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; t -28  
	cmp A0,12
	jnz L2336
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1528],D0	; T184  
; ------------------------------ index
	mov D0,[Dframe-1528]	; T184  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-1520],B0	; T183  
; ------------------------------ widen
	movzx A0,byte [Dframe-1520]	; T183  
	mov dword[Dframe-1536],A0	; T185  
; ------------------------------ jumptrue
	mov A0,[Dframe-1536]	; T185  
	and A0,A0
	jnz L2338
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1552],D0	; T187  
; ------------------------------ index
	mov D0,[Dframe-1552]	; T187  
	mov A1,11
	mov B0, [D0+D1]
	mov [Dframe-1544],B0	; T186  
; ------------------------------ widen
	movzx A0,byte [Dframe-1544]	; T186  
	mov dword[Dframe-1560],A0	; T188  
; ------------------------------ jumptrue
	mov A0,[Dframe-1560]	; T188  
	and A0,A0
	jnz L2338
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1576],D0	; T190  
; ------------------------------ index
	mov D0,[Dframe-1576]	; T190  
	mov A1,12
	mov B0, [D0+D1]
	mov [Dframe-1568],B0	; T189  
; ------------------------------ widen
	movzx A0,byte [Dframe-1568]	; T189  
	mov dword[Dframe-1584],A0	; T191  
; ------------------------------ jumptrue
	mov A0,[Dframe-1584]	; T191  
	and A0,A0
	jnz L2338
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1600],D0	; T193  
; ------------------------------ index
	mov D0,[Dframe-1600]	; T193  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-1592],B0	; T192  
; ------------------------------ widen
	movzx A0,byte [Dframe-1592]	; T192  
	mov dword[Dframe-1608],A0	; T194  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1608]	; T194  
	and A0,A0
	jz L2337
; ------------------------------ label
L2338:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK572
	call serror
	add Dstack, 32
; ------------------------------ label
L2337:
; ------------------------------ jump
	jmp	L2339
; ------------------------------ label
L2336:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; t -28  
	cmp A0,14
	jnz L2340
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1624],D0	; T196  
; ------------------------------ index
	mov D0,[Dframe-1624]	; T196  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-1616],B0	; T195  
; ------------------------------ widen
	movzx A0,byte [Dframe-1616]	; T195  
	mov dword[Dframe-1632],A0	; T197  
; ------------------------------ jumptrue
	mov A0,[Dframe-1632]	; T197  
	and A0,A0
	jnz L2342
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1648],D0	; T199  
; ------------------------------ index
	mov D0,[Dframe-1648]	; T199  
	mov A1,11
	mov B0, [D0+D1]
	mov [Dframe-1640],B0	; T198  
; ------------------------------ widen
	movzx A0,byte [Dframe-1640]	; T198  
	mov dword[Dframe-1656],A0	; T200  
; ------------------------------ jumptrue
	mov A0,[Dframe-1656]	; T200  
	and A0,A0
	jnz L2342
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1672],D0	; T202  
; ------------------------------ index
	mov D0,[Dframe-1672]	; T202  
	mov A1,12
	mov B0, [D0+D1]
	mov [Dframe-1664],B0	; T201  
; ------------------------------ widen
	movzx A0,byte [Dframe-1664]	; T201  
	mov dword[Dframe-1680],A0	; T203  
; ------------------------------ jumptrue
	mov A0,[Dframe-1680]	; T203  
	and A0,A0
	jnz L2342
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1696],D0	; T205  
; ------------------------------ index
	mov D0,[Dframe-1696]	; T205  
	mov A1,13
	mov B0, [D0+D1]
	mov [Dframe-1688],B0	; T204  
; ------------------------------ widen
	movzx A0,byte [Dframe-1688]	; T204  
	mov dword[Dframe-1704],A0	; T206  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1704]	; T206  
	and A0,A0
	jz L2341
; ------------------------------ label
L2342:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK573
	call serror
	add Dstack, 32
; ------------------------------ label
L2341:
; ------------------------------ jump
	jmp	L2343
; ------------------------------ label
L2340:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; mod -32  
	and A0,A0
	jz L2344
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK574
	call serror
	add Dstack, 32
; ------------------------------ label
L2344:
; ------------------------------ label
L2343:
; ------------------------------ label
L2339:
; ------------------------------ label
L2335:
; ------------------------------ label
L2329:
; ------------------------------ label
L2310:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1720],D0	; T208  
; ------------------------------ index
	mov D0,[Dframe-1720]	; T208  
	mov A1,4
	mov B0, [D0+D1]
	mov [Dframe-1712],B0	; T207  
; ------------------------------ widen
	movzx A0,byte [Dframe-1712]	; T207  
	mov dword[Dframe-1728],A0	; T209  
; ------------------------------ jumpfalse
	mov A0,[Dframe-1728]	; T209  
	and A0,A0
	jz L2345
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-28]	; t -28  
	call createconstmode
	mov [Dframe-1736],A0	; T210  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-1736]	; T210  
	mov [Dframe-28],A0	; t -28  
; ------------------------------ label
L2345:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; d -16  
	mov [Dframe-1752],D0	; T212  
; ------------------------------ index
	mov D0,[Dframe-1752]	; T212  
	mov A1,7
	mov B0, [D0+D1]
	mov [Dframe-1744],B0	; T211  
; ------------------------------ widen
	movzx A0,byte [Dframe-1744]	; T211  
	mov dword[Dframe-1760],A0	; T213  
; ------------------------------ move
	mov A0,[Dframe-1760]	; T213  
	mov D13,[Dframe+24]	; linkage 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-28]	; t -28  
	jmp L2250
; ------------------------------ label
L2250:
; ------------------------------ hardret
	add Dstack, 1760
	pop Dframe
	ret
;	End

;	Proc:istypestarter
istypestarter:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-24],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-24]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ switch
	mov A0,[Dframe-32]	; T3  
	sub A0, 65
	cmp A0, 20
	jae L2347
	jmp [A0*8+L2354]
	align 8
; ------------------------------ label
L2354:
; ------------------------------ jumplabel
	dq L2351	; 1
; ------------------------------ jumplabel
	dq L2347	; 2
; ------------------------------ jumplabel
	dq L2347	; 3
; ------------------------------ jumplabel
	dq L2353	; 4
; ------------------------------ jumplabel
	dq L2347	; 5
; ------------------------------ jumplabel
	dq L2347	; 6
; ------------------------------ jumplabel
	dq L2347	; 7
; ------------------------------ jumplabel
	dq L2347	; 8
; ------------------------------ jumplabel
	dq L2347	; 9
; ------------------------------ jumplabel
	dq L2347	; 10
; ------------------------------ jumplabel
	dq L2347	; 11
; ------------------------------ jumplabel
	dq L2347	; 12
; ------------------------------ jumplabel
	dq L2347	; 13
; ------------------------------ jumplabel
	dq L2347	; 14
; ------------------------------ jumplabel
	dq L2347	; 15
; ------------------------------ jumplabel
	dq L2347	; 16
; ------------------------------ jumplabel
	dq L2349	; 17
; ------------------------------ jumplabel
	dq L2350	; 18
; ------------------------------ jumplabel
	dq L2347	; 19
; ------------------------------ jumplabel
	dq L2352	; 20
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L2353:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L2346
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2348
; ------------------------------ stmt
; ------------------------------ comment
;case 84:
; ------------------------------ label
L2352:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L2346
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2348
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L2351:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[currproc]
	and D0,D0
	jz L2355
; ------------------------------ move
	mov D0,[currproc]
	mov [Dframe-40],D0	; T4  
; ------------------------------ jump
	jmp	L2356
; ------------------------------ label
L2355:
; ------------------------------ move
	mov D0,[stmodule]
	mov [Dframe-40],D0	; T4  
; ------------------------------ label
L2356:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-56]	; T6  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T4  
	mov D11,[Dframe-48]	; T5  
	mov A12,2
	mov A13,[currblockno]
	call resolvename
	mov [Dframe-64],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T7  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; d -8  
	and D0,D0
	jz L2357
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-80],D0	; T9  
; ------------------------------ indexlv
	mov D0,[Dframe-80]	; T9  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-8]	; d -8  
	mov D13,[Dframe-72]	; T8 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T10  
	mov dword[Dframe-96],A0	; T11  
; ------------------------------ setcc
	mov A0,[Dframe-96]	; T11  
	cmp A0,5
	setz B0
	movzx A0,B0
	mov [Dframe-104],A0	; T12  
; ------------------------------ returnx
	mov A0,[Dframe-104]	; T12  
	jmp L2346
; ------------------------------ label
L2357:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2348
; ------------------------------ stmt
; ------------------------------ comment
;case 81:
; ------------------------------ label
L2349:
; ------------------------------ stmt
; ------------------------------ comment
;case 82:
; ------------------------------ label
L2350:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L2346
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2348
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2347:
; ------------------------------ label
L2348:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L2346
; ------------------------------ label
L2346:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:readexpression
readexpression:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-48],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-48]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T1  
	mov dword[Dframe-56],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T3  
	cmp A0,9
	jz L2360
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-72],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-72]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T4  
	mov dword[Dframe-80],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T6  
	cmp A0,13
	jnz L2359
; ------------------------------ label
L2360:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-88],D0	; T7  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-88]	; T7  
	jmp L2358
; ------------------------------ label
L2359:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-96],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-96]	; T8  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-112],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-112]	; T10  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T9  
	mov dword[Dframe-120],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T11  
	cmp A0,8
	jnz L2361
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-24],D0	; ulistx -24  
; ------------------------------ move
	mov D0,[Dframe-24]	; ulistx -24  
	mov [Dframe-16],D0	; ulist -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2362
; ------------------------------ label
L2364:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; ulist -16  
	mov [Dframe-128],D0	; T12  
; ------------------------------ getaddr
	lea D0,[Dframe-24]	; ulistx -24  
	mov [Dframe-136],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-128]	; T12  
	mov D11,[Dframe-136]	; T13  
	mov D12,[Dframe-8]	; p -8  
	call addlistunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-152],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe-152]	; T15  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-144],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-144]	; T14  
	mov dword[Dframe-160],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T16  
	cmp A0,8
	jz L2365
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L79
; ------------------------------ label
L2365:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-168],D0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-168]	; T17  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2362:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L2364
; ------------------------------ label
L2363:
; ------------------------------ stmt
; ------------------------------ label
L79: ;<L37>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,31
	mov D11,[Dframe-16]	; ulist -16  
	call createunit1
	mov [Dframe-176],D0	; T18  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T18  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-24]	; ulistx -24  
	and D0,D0
	jz L2366
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe-24]	; ulistx -24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-192],A0	; T20  
; ------------------------------ move
	mov A0,[Dframe-192]	; T20  
	mov D13,[Dframe-184]	; T19 *
	mov dword[D13],A0
; ------------------------------ label
L2366:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2358
; ------------------------------ label
L2361:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2358
; ------------------------------ label
L2358:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

;	Proc:readassignexpr
readassignexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 352

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-48],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-48]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T1  
	mov dword[Dframe-56],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T3  
	cmp A0,8
	jz L2369
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-72],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-72]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T4  
	mov dword[Dframe-80],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T6  
	cmp A0,9
	jz L2369
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-96],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-96]	; T8  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T7  
	mov dword[Dframe-104],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T9  
	cmp A0,13
	jnz L2368
; ------------------------------ label
L2369:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-112],D0	; T10  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-112]	; T10  
	jmp L2367
; ------------------------------ jump
	jmp	L2370
; ------------------------------ label
L2368:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-128],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-128]	; T12  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T11  
	mov dword[Dframe-136],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T13  
	cmp A0,11
	jnz L2371
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-144],D0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T14  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-160],D0	; T16  
; ------------------------------ index
	mov D0,[Dframe-160]	; T16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-152],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-152]	; T15  
	mov dword[Dframe-168],A0	; T17  
; ------------------------------ move
	mov A0,[Dframe-168]	; T17  
	mov [Dframe-28],A0	; opc -28  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L81
; ------------------------------ label
L2371:
; ------------------------------ label
L2370:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readcondexpr
	mov [Dframe-176],D0	; T18  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T18  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-192],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-192]	; T20  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-184],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T19  
	mov dword[Dframe-200],A0	; T21  
; ------------------------------ move
	mov A0,[Dframe-200]	; T21  
	mov [Dframe-28],A0	; opc -28  
; ------------------------------ switch
	mov A0,[Dframe-28]	; opc -28  
	sub A0, 11
	cmp A0, 43
	jae L2372
	jmp [A0*8+L2385]
	align 8
; ------------------------------ label
L2385:
; ------------------------------ jumplabel
	dq L2374	; 1
; ------------------------------ jumplabel
	dq L2372	; 2
; ------------------------------ jumplabel
	dq L2372	; 3
; ------------------------------ jumplabel
	dq L2372	; 4
; ------------------------------ jumplabel
	dq L2372	; 5
; ------------------------------ jumplabel
	dq L2372	; 6
; ------------------------------ jumplabel
	dq L2372	; 7
; ------------------------------ jumplabel
	dq L2372	; 8
; ------------------------------ jumplabel
	dq L2372	; 9
; ------------------------------ jumplabel
	dq L2372	; 10
; ------------------------------ jumplabel
	dq L2372	; 11
; ------------------------------ jumplabel
	dq L2372	; 12
; ------------------------------ jumplabel
	dq L2372	; 13
; ------------------------------ jumplabel
	dq L2372	; 14
; ------------------------------ jumplabel
	dq L2372	; 15
; ------------------------------ jumplabel
	dq L2372	; 16
; ------------------------------ jumplabel
	dq L2372	; 17
; ------------------------------ jumplabel
	dq L2372	; 18
; ------------------------------ jumplabel
	dq L2372	; 19
; ------------------------------ jumplabel
	dq L2372	; 20
; ------------------------------ jumplabel
	dq L2372	; 21
; ------------------------------ jumplabel
	dq L2372	; 22
; ------------------------------ jumplabel
	dq L2372	; 23
; ------------------------------ jumplabel
	dq L2372	; 24
; ------------------------------ jumplabel
	dq L2372	; 25
; ------------------------------ jumplabel
	dq L2372	; 26
; ------------------------------ jumplabel
	dq L2372	; 27
; ------------------------------ jumplabel
	dq L2372	; 28
; ------------------------------ jumplabel
	dq L2372	; 29
; ------------------------------ jumplabel
	dq L2372	; 30
; ------------------------------ jumplabel
	dq L2372	; 31
; ------------------------------ jumplabel
	dq L2372	; 32
; ------------------------------ jumplabel
	dq L2372	; 33
; ------------------------------ jumplabel
	dq L2378	; 34
; ------------------------------ jumplabel
	dq L2379	; 35
; ------------------------------ jumplabel
	dq L2375	; 36
; ------------------------------ jumplabel
	dq L2376	; 37
; ------------------------------ jumplabel
	dq L2377	; 38
; ------------------------------ jumplabel
	dq L2384	; 39
; ------------------------------ jumplabel
	dq L2382	; 40
; ------------------------------ jumplabel
	dq L2383	; 41
; ------------------------------ jumplabel
	dq L2380	; 42
; ------------------------------ jumplabel
	dq L2381	; 43
; ------------------------------ stmt
; ------------------------------ comment
;case 11:
; ------------------------------ label
L2374:
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L2375:
; ------------------------------ stmt
; ------------------------------ comment
;case 47:
; ------------------------------ label
L2376:
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L2377:
; ------------------------------ stmt
; ------------------------------ comment
;case 44:
; ------------------------------ label
L2378:
; ------------------------------ stmt
; ------------------------------ comment
;case 45:
; ------------------------------ label
L2379:
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L2380:
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L2381:
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L2382:
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L2383:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L2384:
; ------------------------------ stmt
; ------------------------------ label
L80: ;<gotp>
; ------------------------------ stmt
; ------------------------------ label
L81: ;<L41>
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; oldpmode -32  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	call checklvalue
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-208],D0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-208]	; T22  
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-232],A0	; T25  
; ------------------------------ widen
	movsx D0,dword[Dframe-232]	; T25  
	mov qword[Dframe-224],D0	; T24  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-224]	; T24  
	mov B0, [D0+D1]
	mov [Dframe-216],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T23  
	mov dword[Dframe-240],A0	; T26  
; ------------------------------ jumpfalse
	mov A0,[Dframe-240]	; T26  
	and A0,A0
	jz L2386
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-28]	; opc -28  
	mov D11,[Dframe-8]	; p -8  
	mov D12,[Dframe-16]	; q -16  
	call createassignopref
	mov [Dframe-248],D0	; T27  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-248]	; T27  
	jmp L2367
; ------------------------------ label
L2386:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; q -16  
	mov A11,[Dframe-32]	; oldpmode -32  
	call coercemode
	mov [Dframe-256],D0	; T28  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-256]	; T28  
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; q -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-264],A0	; T29  
; ------------------------------ jumpcc
	mov A0,[Dframe-264]	; T29  
	cmp A0,58
	jnz L2387
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; opc -28  
	cmp A0,11
	jnz L2387
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; q -16  
	mov A1,59
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T30  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-272]	; T30 *
	mov byte [D13],B0
; ------------------------------ label
L2387:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-280],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-280]	; T31  
	cmp A0,55
	jnz L2388
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-296],D0	; T33  
; ------------------------------ index
	mov D0,[Dframe-296]	; T33  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-288],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T32  
	cmp A0,1
	jnz L2388
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK575
	call terror
	add Dstack, 32
; ------------------------------ label
L2388:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-28]	; opc -28  
	mov A1,1
	sub A0,A1
	mov [Dframe-320],A0	; T36  
; ------------------------------ widen
	movsx D0,dword[Dframe-320]	; T36  
	mov qword[Dframe-312],D0	; T35  
; ------------------------------ index
	lea D0,[symboltojtag]
	mov D1,[Dframe-312]	; T35  
	mov B0, [D0+D1]
	mov [Dframe-304],B0	; T34  
; ------------------------------ widen
	movzx A0,byte [Dframe-304]	; T34  
	mov dword[Dframe-328],A0	; T37  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-328]	; T37  
	mov D11,[Dframe-8]	; p -8  
	mov D12,[Dframe-16]	; q -16  
	call createunit2
	mov [Dframe-336],D0	; T38  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-336]	; T38  
	mov [Dframe-24],D0	; r -24  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; r -24  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-344],D0	; T39  
; ------------------------------ move
	mov A0,[Dframe-32]	; oldpmode -32  
	mov D13,[Dframe-344]	; T39 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; r -24  
	jmp L2367
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2373
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2372:
; ------------------------------ label
L2373:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2367
; ------------------------------ label
L2367:
; ------------------------------ hardret
	add Dstack, 352
	pop Dframe
	ret
;	End

;	Proc:readcondexpr
readcondexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 304

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readorlexpr
	mov [Dframe-48],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T1  
	mov [Dframe-24],D0	; pcond -24  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-64],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-64]	; T3  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T2  
	mov dword[Dframe-72],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T4  
	cmp A0,18
	jnz L2390
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; pcond -24  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-80],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T5  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,10
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readcondexpr
	mov [Dframe-88],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-88]	; T6  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T11  
	mov qword[Dframe-120],D0	; T10  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-120]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-28],A0	; s -28  
; ------------------------------ widen
	movsx D0,dword[Dframe-28]	; s -28  
	mov qword[Dframe-112],D0	; T9  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-112]	; T9  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-152],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-152]	; T14  
	mov qword[Dframe-144],D0	; T13  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-144]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-32],A0	; t -32  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; t -32  
	mov qword[Dframe-136],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-104]	; T8  
	mov D1,[Dframe-136]	; T12  
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T7  
	mov dword[Dframe-160],A0	; T15  
; ------------------------------ move
	mov A0,[Dframe-160]	; T15  
	mov [Dframe-36],A0	; u -36  
; ------------------------------ jumpfalse
	mov A0,[Dframe-36]	; u -36  
	and A0,A0
	jz L2391
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	mov A11,[Dframe-36]	; u -36  
	call coercemode
	mov [Dframe-168],D0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-168]	; T16  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	mov A11,[Dframe-36]	; u -36  
	call coercemode
	mov [Dframe-176],D0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T17  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; pcond -24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-184],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T18  
	cmp A0,1
	jnz L2392
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-192],A0	; T19  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T19  
	cmp A0,1
	jnz L2392
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-200],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-200]	; T20  
	cmp A0,1
	jnz L2392
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; pcond -24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-216],D0	; T22  
; ------------------------------ jumpfalse
	mov D0,[Dframe-216]	; T22  
	and D0,D0
	jz L2393
; ------------------------------ move
	mov D0,[Dframe-8]	; x -8  
	mov [Dframe-208],D0	; T21  
; ------------------------------ jump
	jmp	L2394
; ------------------------------ label
L2393:
; ------------------------------ move
	mov D0,[Dframe-16]	; y -16  
	mov [Dframe-208],D0	; T21  
; ------------------------------ label
L2394:
; ------------------------------ returnx
	mov D0,[Dframe-208]	; T21  
	jmp L2389
; ------------------------------ label
L2392:
; ------------------------------ jump
	jmp	L2395
; ------------------------------ label
L2391:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; s -28  
	cmp A0,16
	jnz L2396
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; t -32  
	cmp A0,16
	jnz L2396
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-36],A0	; u -36  
; ------------------------------ jump
	jmp	L2397
; ------------------------------ label
L2396:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; s -28  
	cmp A0,16
	jnz L2398
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; t -32  
	cmp A0,4
	jnz L2398
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-224],A0	; T23  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T23  
	cmp A0,1
	jnz L2398
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-232],D0	; T24  
; ------------------------------ jumpcc
	mov D0,[Dframe-232]	; T24  
	cmp D0,0
	jnz L2398
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-36],A0	; u -36  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	mov A11,[Dframe-36]	; u -36  
	call coercemode
	add Dstack, 32
; ------------------------------ jump
	jmp	L2399
; ------------------------------ label
L2398:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; s -28  
	cmp A0,4
	jnz L2400
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; t -32  
	cmp A0,16
	jnz L2400
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-240],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T25  
	cmp A0,1
	jnz L2400
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-248],D0	; T26  
; ------------------------------ jumpcc
	mov D0,[Dframe-248]	; T26  
	cmp D0,0
	jnz L2400
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-36],A0	; u -36  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	mov A11,[Dframe-36]	; u -36  
	call coercemode
	add Dstack, 32
; ------------------------------ jump
	jmp	L2401
; ------------------------------ label
L2400:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; s -28  
	cmp A0,20
	jnz L2402
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; t -32  
	cmp A0,20
	jnz L2402
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-36],A0	; u -36  
; ------------------------------ jump
	jmp	L2403
; ------------------------------ label
L2402:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; s -28  
	cmp A0,[Dframe-32]	; t -32  
	jnz L2404
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; t -32  
	cmp A0,1
	jnz L2404
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-36],A0	; u -36  
; ------------------------------ jump
	jmp	L2405
; ------------------------------ label
L2404:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-256],A0	; T27  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-256]	; T27  
	mov A11,1
	call Strmode
	mov [Dframe-264],D0	; T28  
	add Dstack, 32
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-272],A0	; T29  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-272]	; T29  
	mov A11,1
	call Strmode
	mov [Dframe-280],D0	; T30  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK576
	mov D11,[Dframe-264]	; T28  
	mov D12,[Dframe-280]	; T30  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK577
	call terror
	add Dstack, 32
; ------------------------------ label
L2405:
; ------------------------------ label
L2403:
; ------------------------------ label
L2401:
; ------------------------------ label
L2399:
; ------------------------------ label
L2397:
; ------------------------------ label
L2395:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,33
	mov D11,[Dframe-24]	; pcond -24  
	mov D12,[Dframe-8]	; x -8  
	mov D13,[Dframe-16]	; y -16  
	call createunit3
	mov [Dframe-288],D0	; T31  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-288]	; T31  
	mov [Dframe-24],D0	; pcond -24  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; pcond -24  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T32  
; ------------------------------ move
	mov A0,[Dframe-36]	; u -36  
	mov D13,[Dframe-296]	; T32 *
	mov dword[D13],A0
; ------------------------------ label
L2390:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; pcond -24  
	jmp L2389
; ------------------------------ label
L2389:
; ------------------------------ hardret
	add Dstack, 304
	pop Dframe
	ret
;	End

;	Proc:readorlexpr
readorlexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readandlexpr
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2407
; ------------------------------ label
L2409:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readandlexpr
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,1
	jnz L2410
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T4  
	cmp A0,1
	jnz L2410
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; T8  
; ------------------------------ jumptrue
	mov D0,[Dframe-80]	; T8  
	and D0,D0
	jnz L2413
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ jumpfalse
	mov D0,[Dframe-88]	; T9  
	and D0,D0
	jz L2411
; ------------------------------ label
L2413:
; ------------------------------ move
	mov A0,1
	mov [Dframe-72],A0	; T7  
; ------------------------------ jump
	jmp	L2412
; ------------------------------ label
L2411:
; ------------------------------ move
	mov A0,0
	mov [Dframe-72],A0	; T7  
; ------------------------------ label
L2412:
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T7  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-64]	; T6  
	mov D13,[Dframe-56]	; T5 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L82
; ------------------------------ label
L2410:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,27
	mov D11,[Dframe-8]	; x -8  
	mov D12,[Dframe-16]	; y -16  
	call createunit2
	mov [Dframe-96],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-96]	; T10  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T11  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-104]	; T11 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ label
L82: ;<L50>
; ------------------------------ label
L2407:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-120],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-120]	; T13  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T12  
	mov dword[Dframe-128],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T14  
	cmp A0,29
	jz L2409
; ------------------------------ label
L2408:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L2406
; ------------------------------ label
L2406:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:readandlexpr
readandlexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readiorexpr
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2415
; ------------------------------ label
L2417:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readiorexpr
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,1
	jnz L2418
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T4  
	cmp A0,1
	jnz L2418
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; T8  
; ------------------------------ jumpfalse
	mov D0,[Dframe-80]	; T8  
	and D0,D0
	jz L2419
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ jumpfalse
	mov D0,[Dframe-88]	; T9  
	and D0,D0
	jz L2419
; ------------------------------ move
	mov A0,1
	mov [Dframe-72],A0	; T7  
; ------------------------------ jump
	jmp	L2420
; ------------------------------ label
L2419:
; ------------------------------ move
	mov A0,0
	mov [Dframe-72],A0	; T7  
; ------------------------------ label
L2420:
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T7  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-64]	; T6  
	mov D13,[Dframe-56]	; T5 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L83
; ------------------------------ label
L2418:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,26
	mov D11,[Dframe-8]	; x -8  
	mov D12,[Dframe-16]	; y -16  
	call createunit2
	mov [Dframe-96],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-96]	; T10  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T11  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-104]	; T11 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ label
L83: ;<L53>
; ------------------------------ label
L2415:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-120],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-120]	; T13  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T12  
	mov dword[Dframe-128],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T14  
	cmp A0,30
	jz L2417
; ------------------------------ label
L2416:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L2414
; ------------------------------ label
L2414:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:readiorexpr
readiorexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 224

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readixorexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2422
; ------------------------------ label
L2424:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readixorexpr
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-88],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T8  
	mov qword[Dframe-80],D0	; T7  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-80]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T6  
	mov qword[Dframe-64],D0	; T5  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-64]	; T5  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T12  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T12  
	mov qword[Dframe-112],D0	; T11  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-112]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-104],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T10  
	mov qword[Dframe-96],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-56]	; T4  
	mov D1,[Dframe-96]	; T9  
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T3  
	mov dword[Dframe-128],A0	; T13  
; ------------------------------ move
	mov A0,[Dframe-128]	; T13  
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; u -20  
	and A0,A0
	jz L2425
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,11
	jl L2426
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK578
	call terror
	add Dstack, 32
; ------------------------------ label
L2426:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-136],D0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-136]	; T14  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-144],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T15  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ jump
	jmp	L2427
; ------------------------------ label
L2425:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK579
	call terror
	add Dstack, 32
; ------------------------------ label
L2427:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-152],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T16  
	cmp A0,1
	jnz L2428
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T17  
	cmp A0,1
	jnz L2428
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,4
	jz L2430
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,5
	jnz L2429
; ------------------------------ label
L2430:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-168],D0	; T18  
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T19  
; ------------------------------ iorto
	mov D13,[Dframe-176]	; T19 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-168]	; T18  
	or D0,D1
	mov D13,qword[Dframe-176]	; T19 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L84
; ------------------------------ label
L2429:
; ------------------------------ label
L2428:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,47
	mov D11,[Dframe-8]	; x -8  
	mov D12,[Dframe-16]	; y -16  
	call createunit2
	mov [Dframe-184],D0	; T20  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-184]	; T20  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-192],D0	; T21  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-192]	; T21 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ label
L84: ;<L56>
; ------------------------------ label
L2422:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-208],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-208]	; T23  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-200],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T22  
	mov dword[Dframe-216],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T24  
	cmp A0,26
	jz L2424
; ------------------------------ label
L2423:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L2421
; ------------------------------ label
L2421:
; ------------------------------ hardret
	add Dstack, 224
	pop Dframe
	ret
;	End

;	Proc:readixorexpr
readixorexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 224

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readiandexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2432
; ------------------------------ label
L2434:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readiandexpr
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-88],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T8  
	mov qword[Dframe-80],D0	; T7  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-80]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T6  
	mov qword[Dframe-64],D0	; T5  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-64]	; T5  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T12  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T12  
	mov qword[Dframe-112],D0	; T11  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-112]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-104],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T10  
	mov qword[Dframe-96],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-56]	; T4  
	mov D1,[Dframe-96]	; T9  
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T3  
	mov dword[Dframe-128],A0	; T13  
; ------------------------------ move
	mov A0,[Dframe-128]	; T13  
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; u -20  
	and A0,A0
	jz L2435
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,11
	jl L2436
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK580
	call terror
	add Dstack, 32
; ------------------------------ label
L2436:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-136],D0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-136]	; T14  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-144],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T15  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ jump
	jmp	L2437
; ------------------------------ label
L2435:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK581
	call terror
	add Dstack, 32
; ------------------------------ label
L2437:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-152],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T16  
	cmp A0,1
	jnz L2438
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T17  
	cmp A0,1
	jnz L2438
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,4
	jz L2440
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,5
	jnz L2439
; ------------------------------ label
L2440:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-168],D0	; T18  
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T19  
; ------------------------------ ixorto
	mov D13,[Dframe-176]	; T19 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-168]	; T18  
	xor D0,D1
	mov D13,qword[Dframe-176]	; T19 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L85
; ------------------------------ label
L2439:
; ------------------------------ label
L2438:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,48
	mov D11,[Dframe-8]	; x -8  
	mov D12,[Dframe-16]	; y -16  
	call createunit2
	mov [Dframe-184],D0	; T20  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-184]	; T20  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-192],D0	; T21  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-192]	; T21 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ label
L85: ;<L61>
; ------------------------------ label
L2432:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-208],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-208]	; T23  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-200],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T22  
	mov dword[Dframe-216],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T24  
	cmp A0,28
	jz L2434
; ------------------------------ label
L2433:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L2431
; ------------------------------ label
L2431:
; ------------------------------ hardret
	add Dstack, 224
	pop Dframe
	ret
;	End

;	Proc:readiandexpr
readiandexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readeqexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2442
; ------------------------------ label
L2444:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readeqexpr
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-88],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T8  
	mov qword[Dframe-80],D0	; T7  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-80]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T6  
	mov qword[Dframe-64],D0	; T5  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-64]	; T5  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T12  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T12  
	mov qword[Dframe-112],D0	; T11  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-112]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-104],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T10  
	mov qword[Dframe-96],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-56]	; T4  
	mov D1,[Dframe-96]	; T9  
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T3  
	mov dword[Dframe-128],A0	; T13  
; ------------------------------ move
	mov A0,[Dframe-128]	; T13  
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; u -20  
	and A0,A0
	jz L2445
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,11
	jl L2446
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK582
	call terror
	add Dstack, 32
; ------------------------------ label
L2446:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-136],D0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-136]	; T14  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-144],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T15  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ jump
	jmp	L2447
; ------------------------------ label
L2445:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-152],A0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-152]	; T16  
	mov A11,1
	call Strmode
	mov [Dframe-160],D0	; T17  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK583
	mov D11,[Dframe-160]	; T17  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-168],A0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-168]	; T18  
	mov A11,1
	call Strmode
	mov [Dframe-176],D0	; T19  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK584
	mov D11,[Dframe-176]	; T19  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK585
	call terror
	add Dstack, 32
; ------------------------------ label
L2447:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-184],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T20  
	cmp A0,1
	jnz L2448
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-192],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T21  
	cmp A0,1
	jnz L2448
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,4
	jz L2450
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,5
	jnz L2449
; ------------------------------ label
L2450:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T22  
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-208],D0	; T23  
; ------------------------------ iandto
	mov D13,[Dframe-208]	; T23 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-200]	; T22  
	and D0,D1
	mov D13,qword[Dframe-208]	; T23 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L86
; ------------------------------ label
L2449:
; ------------------------------ label
L2448:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,46
	mov D11,[Dframe-8]	; x -8  
	mov D12,[Dframe-16]	; y -16  
	call createunit2
	mov [Dframe-216],D0	; T24  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-216]	; T24  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T25  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-224]	; T25 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ label
L86: ;<L66>
; ------------------------------ label
L2442:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-240],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-240]	; T27  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-232],B0	; T26  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T26  
	mov dword[Dframe-248],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T28  
	cmp A0,27
	jz L2444
; ------------------------------ label
L2443:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L2441
; ------------------------------ label
L2441:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

;	Proc:readeqexpr
readeqexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 400

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readrelexpr
	mov [Dframe-48],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2452
; ------------------------------ label
L2454:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readrelexpr
	mov [Dframe-56],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T2  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T7  
	mov qword[Dframe-88],D0	; T6  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-88]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; s -24  
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; s -24  
	mov qword[Dframe-80],D0	; T5  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-80]	; T5  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T10  
	mov qword[Dframe-112],D0	; T9  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-112]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-28],A0	; t -28  
; ------------------------------ widen
	movsx D0,dword[Dframe-28]	; t -28  
	mov qword[Dframe-104],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-72]	; T4  
	mov D1,[Dframe-104]	; T8  
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T3  
	mov dword[Dframe-128],A0	; T11  
; ------------------------------ move
	mov A0,[Dframe-128]	; T11  
	mov [Dframe-32],A0	; u -32  
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; u -32  
	and A0,A0
	jz L2455
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	mov A11,[Dframe-32]	; u -32  
	call coercemode
	mov [Dframe-136],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-136]	; T12  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	mov A11,[Dframe-32]	; u -32  
	call coercemode
	mov [Dframe-144],D0	; T13  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T13  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ jump
	jmp	L2456
; ------------------------------ label
L2455:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; s -24  
	cmp A0,16
	jnz L2457
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; t -28  
	cmp A0,16
	jnz L2457
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T15  
; ------------------------------ widen
	movsx D0,dword[Dframe-160]	; T15  
	mov qword[Dframe-152],D0	; T14  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-152]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe-36],A0	; ss -36  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-176],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-176]	; T17  
	mov qword[Dframe-168],D0	; T16  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-168]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; tt -40  
; ------------------------------ jumpcc
	mov A0,[Dframe-36]	; ss -36  
	cmp A0,[Dframe-40]	; tt -40  
	jz L2458
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-36]	; ss -36  
	cmp A0,1
	jz L2459
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; tt -40  
	cmp A0,1
	jz L2459
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-184],A0	; T18  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-192],A0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-184]	; T18  
	mov A11,[Dframe-192]	; T19  
	mov A12,1
	call checkpointertypes
	mov [Dframe-200],A0	; T20  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-200]	; T20  
	and A0,A0
	jnz L2460
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK586
	call terror
	add Dstack, 32
; ------------------------------ label
L2460:
; ------------------------------ label
L2459:
; ------------------------------ label
L2458:
; ------------------------------ jump
	jmp	L2461
; ------------------------------ label
L2457:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; s -24  
	cmp A0,16
	jnz L2462
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; t -28  
	cmp A0,4
	jnz L2462
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-208],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T21  
	cmp A0,1
	jnz L2464
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-216],D0	; T22  
; ------------------------------ jumpcc
	mov D0,[Dframe-216]	; T22  
	cmp D0,0
	jz L2463
; ------------------------------ label
L2464:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK587
	call terror
	add Dstack, 32
; ------------------------------ label
L2463:
; ------------------------------ jump
	jmp	L2465
; ------------------------------ label
L2462:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; s -24  
	cmp A0,4
	jnz L2466
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; t -28  
	cmp A0,16
	jnz L2466
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-224],A0	; T23  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T23  
	cmp A0,1
	jnz L2468
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-232],D0	; T24  
; ------------------------------ jumpcc
	mov D0,[Dframe-232]	; T24  
	cmp D0,0
	jz L2467
; ------------------------------ label
L2468:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK588
	call terror
	add Dstack, 32
; ------------------------------ label
L2467:
; ------------------------------ jump
	jmp	L2469
; ------------------------------ label
L2466:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK589
	call terror
	add Dstack, 32
; ------------------------------ label
L2469:
; ------------------------------ label
L2465:
; ------------------------------ label
L2461:
; ------------------------------ label
L2456:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-240],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T25  
	cmp A0,1
	jnz L2470
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-248],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T26  
	cmp A0,1
	jnz L2470
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; u -32  
	cmp A0,4
	jz L2472
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; u -32  
	cmp A0,5
	jz L2472
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; u -32  
	cmp A0,9
	jz L2472
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; u -32  
	cmp A0,10
	jz L2472
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; u -32  
	cmp A0,0
	jnz L2471
; ------------------------------ label
L2472:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,38
	jnz L2473
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-272],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-280],D0	; T30  
; ------------------------------ setcc
	mov D0,[Dframe-272]	; T29  
	cmp D0,[Dframe-280]	; T30  
	setz B0
	movzx A0,B0
	mov [Dframe-288],A0	; T31  
; ------------------------------ widen
	movsx D0,dword[Dframe-288]	; T31  
	mov qword[Dframe-264],D0	; T28  
; ------------------------------ move
	mov D0,[Dframe-264]	; T28  
	mov D13,[Dframe-256]	; T27 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2474
; ------------------------------ label
L2473:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-312],D0	; T34  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-320],D0	; T35  
; ------------------------------ setcc
	mov D0,[Dframe-312]	; T34  
	cmp D0,[Dframe-320]	; T35  
	setnz B0
	movzx A0,B0
	mov [Dframe-328],A0	; T36  
; ------------------------------ widen
	movsx D0,dword[Dframe-328]	; T36  
	mov qword[Dframe-304],D0	; T33  
; ------------------------------ move
	mov D0,[Dframe-304]	; T33  
	mov D13,[Dframe-296]	; T32 *
	mov qword[D13],D0
; ------------------------------ label
L2474:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L87
; ------------------------------ label
L2471:
; ------------------------------ label
L2470:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-20]	; opc -20  
	mov A1,1
	sub A0,A1
	mov [Dframe-352],A0	; T39  
; ------------------------------ widen
	movsx D0,dword[Dframe-352]	; T39  
	mov qword[Dframe-344],D0	; T38  
; ------------------------------ index
	lea D0,[symboltojtag]
	mov D1,[Dframe-344]	; T38  
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T37  
	mov dword[Dframe-360],A0	; T40  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-360]	; T40  
	mov D11,[Dframe-8]	; x -8  
	mov D12,[Dframe-16]	; y -16  
	call createunit2
	mov [Dframe-368],D0	; T41  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-368]	; T41  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-376],D0	; T42  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-376]	; T42 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ label
L87: ;<L71>
; ------------------------------ label
L2452:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-392],D0	; T44  
; ------------------------------ index
	mov D0,[Dframe-392]	; T44  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-384],B0	; T43  
; ------------------------------ widen
	movzx A0,byte [Dframe-384]	; T43  
	mov dword[Dframe-400],A0	; T45  
; ------------------------------ move
	mov A0,[Dframe-400]	; T45  
	mov [Dframe-20],A0	; opc -20  
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,38
	jz L2454
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,39
	jz L2454
; ------------------------------ label
L2453:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L2451
; ------------------------------ label
L2451:
; ------------------------------ hardret
	add Dstack, 400
	pop Dframe
	ret
;	End

;	Proc:readrelexpr
readrelexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 352

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readshiftexpr
	mov [Dframe-56],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2476
; ------------------------------ label
L2478:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readshiftexpr
	mov [Dframe-64],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T2  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-104],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T7  
	mov qword[Dframe-96],D0	; T6  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-96]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; s -24  
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; s -24  
	mov qword[Dframe-88],D0	; T5  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-88]	; T5  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T10  
	mov qword[Dframe-120],D0	; T9  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-120]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-28],A0	; t -28  
; ------------------------------ widen
	movsx D0,dword[Dframe-28]	; t -28  
	mov qword[Dframe-112],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-80]	; T4  
	mov D1,[Dframe-112]	; T8  
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T3  
	mov dword[Dframe-136],A0	; T11  
; ------------------------------ move
	mov A0,[Dframe-136]	; T11  
	mov [Dframe-32],A0	; u -32  
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; u -32  
	and A0,A0
	jz L2479
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	mov A11,[Dframe-32]	; u -32  
	call coercemode
	mov [Dframe-144],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T12  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	mov A11,[Dframe-32]	; u -32  
	call coercemode
	mov [Dframe-152],D0	; T13  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-152]	; T13  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ jump
	jmp	L2480
; ------------------------------ label
L2479:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; s -24  
	cmp A0,16
	jnz L2481
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; t -28  
	cmp A0,16
	jnz L2481
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T14  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-168],A0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-160]	; T14  
	mov A11,[Dframe-168]	; T15  
	mov A12,1
	call checkpointertypes
	mov [Dframe-176],A0	; T16  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-176]	; T16  
	and A0,A0
	jnz L2482
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK590
	call terror
	add Dstack, 32
; ------------------------------ label
L2482:
; ------------------------------ jump
	jmp	L2483
; ------------------------------ label
L2481:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK591
	call terror
	add Dstack, 32
; ------------------------------ label
L2483:
; ------------------------------ label
L2480:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-184],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T17  
	cmp A0,1
	jnz L2484
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-192],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T18  
	cmp A0,1
	jnz L2484
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-208],D0	; T20  
; ------------------------------ truncate
	mov D0,[Dframe-208]	; T20  
	mov A0,A0
	mov [Dframe-200],A0	; T19  
; ------------------------------ move
	mov A0,[Dframe-200]	; T19  
	mov [Dframe-36],A0	; a -36  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-224],D0	; T22  
; ------------------------------ truncate
	mov D0,[Dframe-224]	; T22  
	mov A0,A0
	mov [Dframe-216],A0	; T21  
; ------------------------------ move
	mov A0,[Dframe-216]	; T21  
	mov [Dframe-40],A0	; b -40  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; u -32  
	cmp A0,4
	jz L2486
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; u -32  
	cmp A0,5
	jnz L2485
; ------------------------------ label
L2486:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,40
	jnz L2487
; ------------------------------ stmt
; ------------------------------ setcc
	mov A0,[Dframe-36]	; a -36  
	cmp A0,[Dframe-40]	; b -40  
	setl B0
	movzx A0,B0
	mov [Dframe-232],A0	; T23  
; ------------------------------ move
	mov A0,[Dframe-232]	; T23  
	mov [Dframe-44],A0	; c -44  
; ------------------------------ jump
	jmp	L2488
; ------------------------------ label
L2487:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,41
	jnz L2489
; ------------------------------ stmt
; ------------------------------ setcc
	mov A0,[Dframe-36]	; a -36  
	cmp A0,[Dframe-40]	; b -40  
	setle B0
	movzx A0,B0
	mov [Dframe-240],A0	; T24  
; ------------------------------ move
	mov A0,[Dframe-240]	; T24  
	mov [Dframe-44],A0	; c -44  
; ------------------------------ jump
	jmp	L2490
; ------------------------------ label
L2489:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,42
	jnz L2491
; ------------------------------ stmt
; ------------------------------ setcc
	mov A0,[Dframe-36]	; a -36  
	cmp A0,[Dframe-40]	; b -40  
	setge B0
	movzx A0,B0
	mov [Dframe-248],A0	; T25  
; ------------------------------ move
	mov A0,[Dframe-248]	; T25  
	mov [Dframe-44],A0	; c -44  
; ------------------------------ jump
	jmp	L2492
; ------------------------------ label
L2491:
; ------------------------------ stmt
; ------------------------------ setcc
	mov A0,[Dframe-36]	; a -36  
	cmp A0,[Dframe-40]	; b -40  
	setg B0
	movzx A0,B0
	mov [Dframe-256],A0	; T26  
; ------------------------------ move
	mov A0,[Dframe-256]	; T26  
	mov [Dframe-44],A0	; c -44  
; ------------------------------ label
L2492:
; ------------------------------ label
L2490:
; ------------------------------ label
L2488:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-264],D0	; T27  
; ------------------------------ widen
	movsx D0,dword[Dframe-44]	; c -44  
	mov qword[Dframe-272],D0	; T28  
; ------------------------------ move
	mov D0,[Dframe-272]	; T28  
	mov D13,[Dframe-264]	; T27 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L88
; ------------------------------ label
L2485:
; ------------------------------ label
L2484:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-20]	; opc -20  
	mov A1,1
	sub A0,A1
	mov [Dframe-296],A0	; T31  
; ------------------------------ widen
	movsx D0,dword[Dframe-296]	; T31  
	mov qword[Dframe-288],D0	; T30  
; ------------------------------ index
	lea D0,[symboltojtag]
	mov D1,[Dframe-288]	; T30  
	mov B0, [D0+D1]
	mov [Dframe-280],B0	; T29  
; ------------------------------ widen
	movzx A0,byte [Dframe-280]	; T29  
	mov dword[Dframe-304],A0	; T32  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-304]	; T32  
	mov D11,[Dframe-8]	; x -8  
	mov D12,[Dframe-16]	; y -16  
	call createunit2
	mov [Dframe-312],D0	; T33  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-312]	; T33  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-320],D0	; T34  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-320]	; T34 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ label
L88: ;<L81>
; ------------------------------ label
L2476:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-336],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-336]	; T36  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-328],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-328]	; T35  
	mov dword[Dframe-344],A0	; T37  
; ------------------------------ move
	mov A0,[Dframe-344]	; T37  
	mov [Dframe-20],A0	; opc -20  
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,40
	jz L2478
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,41
	jz L2478
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,42
	jz L2478
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,43
	jz L2478
; ------------------------------ label
L2477:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L2475
; ------------------------------ label
L2475:
; ------------------------------ hardret
	add Dstack, 352
	pop Dframe
	ret
;	End

;	Proc:readshiftexpr
readshiftexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 208

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readaddexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2494
; ------------------------------ label
L2496:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readaddexpr
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; x -8  
	call coercebasetype
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T4  
	mov qword[Dframe-48],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-48]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; u -24  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; u -24  
	cmp A0,2
	jl L2498
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; u -24  
	cmp A0,10
	jle L2497
; ------------------------------ label
L2498:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK592
	call terror
	add Dstack, 32
; ------------------------------ label
L2497:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; y -16  
	mov A11,4
	call coercemode
	mov [Dframe-64],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T5  
	mov [Dframe-16],D0	; y -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T6  
	cmp A0,1
	jnz L2499
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T7  
	cmp A0,1
	jnz L2499
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; u -24  
	cmp A0,4
	jz L2501
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; u -24  
	cmp A0,5
	jnz L2500
; ------------------------------ label
L2501:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,31
	jnz L2502
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-96],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-112],D0	; T11  
; ------------------------------ truncate
	mov D0,[Dframe-112]	; T11  
	mov A0,A0
	mov [Dframe-104],A0	; T10  
; ------------------------------ shl
	mov D0,[Dframe-96]	; T9  
	mov B10,[Dframe-104]	; T10  
	shl D0, cl
	mov [Dframe-120],D0	; T12  
; ------------------------------ move
	mov D0,[Dframe-120]	; T12  
	mov D13,[Dframe-88]	; T8 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2503
; ------------------------------ label
L2502:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-128],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-8]	; x -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-136],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-16]	; y -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T16  
; ------------------------------ truncate
	mov D0,[Dframe-152]	; T16  
	mov A0,A0
	mov [Dframe-144],A0	; T15  
; ------------------------------ shr
	mov D0,[Dframe-136]	; T14  
	mov B10,[Dframe-144]	; T15  
	sar D0, cl
	mov [Dframe-160],D0	; T17  
; ------------------------------ move
	mov D0,[Dframe-160]	; T17  
	mov D13,[Dframe-128]	; T13 *
	mov qword[D13],D0
; ------------------------------ label
L2503:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L89
; ------------------------------ label
L2500:
; ------------------------------ label
L2499:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,31
	jnz L2504
; ------------------------------ move
	mov A0,49
	mov [Dframe-168],A0	; T18  
; ------------------------------ jump
	jmp	L2505
; ------------------------------ label
L2504:
; ------------------------------ move
	mov A0,50
	mov [Dframe-168],A0	; T18  
; ------------------------------ label
L2505:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-168]	; T18  
	mov D11,[Dframe-8]	; x -8  
	mov D12,[Dframe-16]	; y -16  
	call createunit2
	mov [Dframe-176],D0	; T19  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T19  
	mov [Dframe-8],D0	; x -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; x -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T20  
; ------------------------------ move
	mov A0,[Dframe-24]	; u -24  
	mov D13,[Dframe-184]	; T20 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ label
L89: ;<L92>
; ------------------------------ label
L2494:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-200],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe-200]	; T22  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-192],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T21  
	mov dword[Dframe-208],A0	; T23  
; ------------------------------ move
	mov A0,[Dframe-208]	; T23  
	mov [Dframe-20],A0	; opc -20  
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,31
	jz L2496
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,32
	jz L2496
; ------------------------------ label
L2495:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; x -8  
	jmp L2493
; ------------------------------ label
L2493:
; ------------------------------ hardret
	add Dstack, 208
	pop Dframe
	ret
;	End

;	Proc:readaddexpr
readaddexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readmulexpr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2507
; ------------------------------ label
L2509:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readmulexpr
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,21
	jnz L2510
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov D11,[Dframe-16]	; q -16  
	call createaddop
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ jump
	jmp	L2511
; ------------------------------ label
L2510:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov D11,[Dframe-16]	; q -16  
	call createsubop
	mov [Dframe-56],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2511:
; ------------------------------ label
L2507:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-72],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-72]	; T6  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T5  
	mov dword[Dframe-80],A0	; T7  
; ------------------------------ move
	mov A0,[Dframe-80]	; T7  
	mov [Dframe-20],A0	; opc -20  
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,21
	jz L2509
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,22
	jz L2509
; ------------------------------ label
L2508:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2506
; ------------------------------ label
L2506:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:readmulexpr
readmulexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2513
; ------------------------------ label
L2515:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,23
	jnz L2516
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov D11,[Dframe-16]	; q -16  
	call createmulop
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ jump
	jmp	L2517
; ------------------------------ label
L2516:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,24
	jnz L2518
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov D11,[Dframe-16]	; q -16  
	call createdivop
	mov [Dframe-56],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ jump
	jmp	L2519
; ------------------------------ label
L2518:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,25
	jnz L2520
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov D11,[Dframe-16]	; q -16  
	call createremop
	mov [Dframe-64],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T5  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2520:
; ------------------------------ label
L2519:
; ------------------------------ label
L2517:
; ------------------------------ label
L2513:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-80],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-80]	; T7  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T6  
	mov dword[Dframe-88],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-88]	; T8  
	mov [Dframe-20],A0	; opc -20  
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,23
	jz L2515
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,24
	jz L2515
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; opc -20  
	cmp A0,25
	jz L2515
; ------------------------------ label
L2514:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2512
; ------------------------------ label
L2512:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:readterm
readterm:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1568

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-120],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-120]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T1  
	mov dword[Dframe-128],A0	; T3  
; ------------------------------ switch
	mov A0,[Dframe-128]	; T3  
	sub A0, 12
	cmp A0, 85
	jae L2522
	jmp [A0*8+L2545]
	align 8
; ------------------------------ label
L2545:
; ------------------------------ jumplabel
	dq L2528	; 1
; ------------------------------ jumplabel
	dq L2522	; 2
; ------------------------------ jumplabel
	dq L2522	; 3
; ------------------------------ jumplabel
	dq L2522	; 4
; ------------------------------ jumplabel
	dq L2522	; 5
; ------------------------------ jumplabel
	dq L2522	; 6
; ------------------------------ jumplabel
	dq L2522	; 7
; ------------------------------ jumplabel
	dq L2522	; 8
; ------------------------------ jumplabel
	dq L2522	; 9
; ------------------------------ jumplabel
	dq L2538	; 10
; ------------------------------ jumplabel
	dq L2537	; 11
; ------------------------------ jumplabel
	dq L2532	; 12
; ------------------------------ jumplabel
	dq L2522	; 13
; ------------------------------ jumplabel
	dq L2522	; 14
; ------------------------------ jumplabel
	dq L2522	; 15
; ------------------------------ jumplabel
	dq L2534	; 16
; ------------------------------ jumplabel
	dq L2522	; 17
; ------------------------------ jumplabel
	dq L2522	; 18
; ------------------------------ jumplabel
	dq L2533	; 19
; ------------------------------ jumplabel
	dq L2522	; 20
; ------------------------------ jumplabel
	dq L2522	; 21
; ------------------------------ jumplabel
	dq L2535	; 22
; ------------------------------ jumplabel
	dq L2536	; 23
; ------------------------------ jumplabel
	dq L2530	; 24
; ------------------------------ jumplabel
	dq L2531	; 25
; ------------------------------ jumplabel
	dq L2529	; 26
; ------------------------------ jumplabel
	dq L2522	; 27
; ------------------------------ jumplabel
	dq L2522	; 28
; ------------------------------ jumplabel
	dq L2522	; 29
; ------------------------------ jumplabel
	dq L2522	; 30
; ------------------------------ jumplabel
	dq L2522	; 31
; ------------------------------ jumplabel
	dq L2522	; 32
; ------------------------------ jumplabel
	dq L2522	; 33
; ------------------------------ jumplabel
	dq L2522	; 34
; ------------------------------ jumplabel
	dq L2522	; 35
; ------------------------------ jumplabel
	dq L2522	; 36
; ------------------------------ jumplabel
	dq L2522	; 37
; ------------------------------ jumplabel
	dq L2522	; 38
; ------------------------------ jumplabel
	dq L2522	; 39
; ------------------------------ jumplabel
	dq L2522	; 40
; ------------------------------ jumplabel
	dq L2522	; 41
; ------------------------------ jumplabel
	dq L2522	; 42
; ------------------------------ jumplabel
	dq L2522	; 43
; ------------------------------ jumplabel
	dq L2522	; 44
; ------------------------------ jumplabel
	dq L2522	; 45
; ------------------------------ jumplabel
	dq L2543	; 46
; ------------------------------ jumplabel
	dq L2544	; 47
; ------------------------------ jumplabel
	dq L2539	; 48
; ------------------------------ jumplabel
	dq L2522	; 49
; ------------------------------ jumplabel
	dq L2540	; 50
; ------------------------------ jumplabel
	dq L2541	; 51
; ------------------------------ jumplabel
	dq L2522	; 52
; ------------------------------ jumplabel
	dq L2522	; 53
; ------------------------------ jumplabel
	dq L2542	; 54
; ------------------------------ jumplabel
	dq L2522	; 55
; ------------------------------ jumplabel
	dq L2522	; 56
; ------------------------------ jumplabel
	dq L2522	; 57
; ------------------------------ jumplabel
	dq L2522	; 58
; ------------------------------ jumplabel
	dq L2522	; 59
; ------------------------------ jumplabel
	dq L2522	; 60
; ------------------------------ jumplabel
	dq L2522	; 61
; ------------------------------ jumplabel
	dq L2522	; 62
; ------------------------------ jumplabel
	dq L2522	; 63
; ------------------------------ jumplabel
	dq L2522	; 64
; ------------------------------ jumplabel
	dq L2522	; 65
; ------------------------------ jumplabel
	dq L2522	; 66
; ------------------------------ jumplabel
	dq L2522	; 67
; ------------------------------ jumplabel
	dq L2522	; 68
; ------------------------------ jumplabel
	dq L2522	; 69
; ------------------------------ jumplabel
	dq L2522	; 70
; ------------------------------ jumplabel
	dq L2522	; 71
; ------------------------------ jumplabel
	dq L2522	; 72
; ------------------------------ jumplabel
	dq L2522	; 73
; ------------------------------ jumplabel
	dq L2522	; 74
; ------------------------------ jumplabel
	dq L2522	; 75
; ------------------------------ jumplabel
	dq L2522	; 76
; ------------------------------ jumplabel
	dq L2522	; 77
; ------------------------------ jumplabel
	dq L2527	; 78
; ------------------------------ jumplabel
	dq L2522	; 79
; ------------------------------ jumplabel
	dq L2526	; 80
; ------------------------------ jumplabel
	dq L2525	; 81
; ------------------------------ jumplabel
	dq L2522	; 82
; ------------------------------ jumplabel
	dq L2522	; 83
; ------------------------------ jumplabel
	dq L2522	; 84
; ------------------------------ jumplabel
	dq L2524	; 85
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L2543:
; ------------------------------ stmt
; ------------------------------ comment
;case 58:
; ------------------------------ label
L2544:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-152],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-152]	; T6  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T5  
; ------------------------------ truncate
	mov D0,[Dframe-144]	; T5  
	mov [Dframe-136],D0	; T4  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-168],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-168]	; T8  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-160],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T7  
	mov dword[Dframe-176],A0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-136]	; T4  
	mov A11,[Dframe-176]	; T9  
	call createconstunit
	mov [Dframe-184],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-184]	; T10  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L2542:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-208],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-208]	; T13  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-200]	; T12  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-192],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T11  
	mov dword[Dframe-216],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T14  
	cmp A0,1
	jg L2546
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[currproc]
	and D0,D0
	jz L2547
; ------------------------------ move
	mov D0,[currproc]
	mov [Dframe-224],D0	; T15  
; ------------------------------ jump
	jmp	L2548
; ------------------------------ label
L2547:
; ------------------------------ move
	mov D0,[stmodule]
	mov [Dframe-224],D0	; T15  
; ------------------------------ label
L2548:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-240],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-240]	; T17  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-232],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-224]	; T15  
	mov D11,[Dframe-232]	; T16  
	mov A12,2
	mov A13,[currblockno]
	call resolvename
	mov [Dframe-248],D0	; T18  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-248]	; T18  
	mov [Dframe-72],D0	; d -72  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-72]	; d -72  
	cmp D0,0
	jnz L2549
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-264],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-264]	; T20  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-256],D0	; T19  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-256]	; T19  
	call getstname
	mov [Dframe-272],D0	; T21  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK593
	mov D11,[Dframe-272]	; T21  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2549:
; ------------------------------ jump
	jmp	L2550
; ------------------------------ label
L2546:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-280],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe-280]	; T22  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; d -72  
; ------------------------------ label
L2550:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-72]	; d -72  
	mov A1,119
	lea D0, [D0+D1]
	mov [Dframe-288],D0	; T23  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-288]	; T23 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-72]	; d -72  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-296],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-296]	; T24  
	mov dword[Dframe-304],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-304]	; T25  
	cmp A0,11
	jnz L2551
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-72]	; d -72  
	mov A1,100
	mov A0, [D0+D1]
	mov [Dframe-320],A0	; T27  
; ------------------------------ widen
	movsx D0,dword[Dframe-320]	; T27  
	mov qword[Dframe-312],D0	; T26  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-312]	; T26  
	mov A11,4
	call createconstunit
	mov [Dframe-328],D0	; T28  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-328]	; T28  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ jump
	jmp	L2552
; ------------------------------ label
L2551:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-72]	; d -72  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T29  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T29  
	mov dword[Dframe-344],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-344]	; T30  
	cmp A0,6
	jnz L2553
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-360],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-360]	; T32  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-352],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-352]	; T31  
	mov dword[Dframe-368],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-368]	; T33  
	cmp A0,12
	jz L2554
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,6
	call createunit0
	mov [Dframe-376],D0	; T34  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-376]	; T34  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-384],D0	; T35  
; ------------------------------ move
	mov D0,[Dframe-72]	; d -72  
	mov D13,[Dframe-384]	; T35 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-392],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-72]	; d -72  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-400],W0	; T37  
; ------------------------------ widen
	movsx A0,word [Dframe-400]	; T37  
	mov dword[Dframe-408],A0	; T38  
; ------------------------------ index
	mov D0,[Dframe-72]	; d -72  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-416],D0	; T39  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-408]	; T38  
	mov D11,[Dframe-416]	; T39  
	call createprocmode
	mov [Dframe-424],A0	; T40  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-424]	; T40  
	call createrefmode
	mov [Dframe-432],A0	; T41  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-432]	; T41  
	mov D13,[Dframe-392]	; T36 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L2555
; ------------------------------ label
L2554:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L91
; ------------------------------ label
L2555:
; ------------------------------ jump
	jmp	L2556
; ------------------------------ label
L2553:
; ------------------------------ stmt
; ------------------------------ label
L90: ;<doname>
; ------------------------------ stmt
; ------------------------------ label
L91: ;<L107>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-72]	; d -72  
	call createname
	mov [Dframe-440],D0	; T42  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-440]	; T42  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-448],D0	; T43  
; ------------------------------ index
	mov D0,[Dframe-72]	; d -72  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-456],W0	; T44  
; ------------------------------ widen
	movsx A0,word [Dframe-456]	; T44  
	mov dword[Dframe-464],A0	; T45  
; ------------------------------ move
	mov A0,[Dframe-464]	; T45  
	mov [Dframe-20],A0	; t -20  
; ------------------------------ move
	mov A0,[Dframe-20]	; t -20  
	mov D13,[Dframe-448]	; T43 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-480],D0	; T47  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-480]	; T47  
	mov A0, [D0+D1*4]
	mov [Dframe-472],A0	; T46  
; ------------------------------ jumpcc
	mov A0,[Dframe-472]	; T46  
	cmp A0,19
	jnz L2557
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-488],D0	; T48  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-488]	; T48 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-496],D0	; T49  
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-512],D0	; T51  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-512]	; T51  
	mov A0, [D0+D1*4]
	mov [Dframe-504],A0	; T50  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-504]	; T50  
	call createrefmode
	mov [Dframe-520],A0	; T52  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-520]	; T52  
	mov D13,[Dframe-496]	; T49 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-528],D0	; T53  
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-544],D0	; T55  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-544]	; T55  
	mov A0, [D0+D1*4]
	mov [Dframe-536],A0	; T54  
; ------------------------------ move
	mov A0,[Dframe-536]	; T54  
	mov D13,[Dframe-528]	; T53 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L2558
; ------------------------------ label
L2557:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-72]	; d -72  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-552],B0	; T56  
; ------------------------------ widen
	movzx A0,byte [Dframe-552]	; T56  
	mov dword[Dframe-560],A0	; T57  
; ------------------------------ jumpcc
	mov A0,[Dframe-560]	; T57  
	cmp A0,6
	jz L2559
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-576],D0	; T59  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-576]	; T59  
	mov A0, [D0+D1*4]
	mov [Dframe-568],A0	; T58  
; ------------------------------ jumpcc
	mov A0,[Dframe-568]	; T58  
	cmp A0,4
	jge L2559
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	call fixmemopnd
	add Dstack, 32
; ------------------------------ label
L2559:
; ------------------------------ label
L2558:
; ------------------------------ label
L2556:
; ------------------------------ label
L2552:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,44
	lea D0, [D0+D1]
	mov [Dframe-584],D0	; T60  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-600],D0	; T62  
; ------------------------------ index
	mov D0,[Dframe-600]	; T62  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-592],A0	; T61  
; ------------------------------ move
	mov A0,[Dframe-592]	; T61  
	mov D13,[Dframe-584]	; T60 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 61:
; ------------------------------ label
L2540:
; ------------------------------ stmt
; ------------------------------ comment
;case 62:
; ------------------------------ label
L2541:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-616],D0	; T64  
; ------------------------------ index
	mov D0,[Dframe-616]	; T64  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-608],B0	; T63  
; ------------------------------ widen
	movzx A0,byte [Dframe-608]	; T63  
	mov dword[Dframe-624],A0	; T65  
; ------------------------------ setcc
	mov A0,[Dframe-624]	; T65  
	cmp A0,62
	setz B0
	movzx A0,B0
	mov [Dframe-632],A0	; T66  
; ------------------------------ move
	mov A0,[Dframe-632]	; T66  
	mov [Dframe-48],A0	; fwide -48  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-640],D0	; T67  
; ------------------------------ index
	mov D0,[Dframe-640]	; T67  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; s -88  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-648],D0	; T68  
; ------------------------------ index
	mov D0,[Dframe-648]	; T68  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; slength -40  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2560
; ------------------------------ label
L2562:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-664],D0	; T70  
; ------------------------------ index
	mov D0,[Dframe-664]	; T70  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-656],A0	; T69  
; ------------------------------ add
	mov A0,[Dframe-40]	; slength -40  
	mov A1,[Dframe-656]	; T69  
	add A0,A1
	mov [Dframe-36],A0	; newlen -36  
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-36]	; newlen -36  
	mov A1,1
	add A0,A1
	mov [Dframe-672],A0	; T71  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-672]	; T71  
	call pcm_alloc
	mov [Dframe-680],D0	; T72  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-680]	; T72  
	mov [Dframe-80],D0	; ss -80  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; slength -40  
	mov qword[Dframe-704],D0	; T75  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-80]	; ss -80  
	mov D11,[Dframe-88]	; s -88  
	mov D12,[Dframe-704]	; T75  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; slength -40  
	mov qword[Dframe-728],D0	; T78  
; ------------------------------ indexref
	mov D0,[Dframe-80]	; ss -80  
	mov D1,[Dframe-728]	; T78  
	lea D0, [D0+D1]
	mov [Dframe-720],D0	; T77  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-752],D0	; T81  
; ------------------------------ index
	mov D0,[Dframe-752]	; T81  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-744],D0	; T80  
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-776],D0	; T84  
; ------------------------------ index
	mov D0,[Dframe-776]	; T84  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-768],A0	; T83  
; ------------------------------ widen
	movsx D0,dword[Dframe-768]	; T83  
	mov qword[Dframe-760],D0	; T82  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-720]	; T77  
	mov D11,[Dframe-744]	; T80  
	mov D12,[Dframe-760]	; T82  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-36]	; newlen -36  
	mov qword[Dframe-792],D0	; T86  
; ------------------------------ indexlv
	mov D0,[Dframe-80]	; ss -80  
	mov D1,[Dframe-792]	; T86  
	lea D0, [D0+D1]
	mov [Dframe-784],D0	; T85  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-784]	; T85 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-80]	; ss -80  
	mov [Dframe-88],D0	; s -88  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-36]	; newlen -36  
	mov [Dframe-40],A0	; slength -40  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ label
L2560:
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-808],D0	; T88  
; ------------------------------ index
	mov D0,[Dframe-808]	; T88  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-800],B0	; T87  
; ------------------------------ widen
	movzx A0,byte [Dframe-800]	; T87  
	mov dword[Dframe-816],A0	; T89  
; ------------------------------ jumpcc
	mov A0,[Dframe-816]	; T89  
	cmp A0,61
	jz L2562
; ------------------------------ label
L2561:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-88]	; s -88  
	mov A11,[Dframe-40]	; slength -40  
	call createstringconstunit
	mov [Dframe-824],D0	; T90  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-824]	; T90  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-832],D0	; T91  
; ------------------------------ move
	mov A0,[Dframe-40]	; slength -40  
	mov D13,[Dframe-832]	; T91 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-48]	; fwide -48  
	and A0,A0
	jz L2563
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-840],D0	; T92  
; ------------------------------ move
	mov A0,[trefwchar]
	mov D13,[Dframe-840]	; T92 *
	mov dword[D13],A0
; ------------------------------ label
L2563:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 59:
; ------------------------------ label
L2539:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-64],D0	; a -64  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-32],A0	; shift -32  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-848],D0	; T93  
; ------------------------------ index
	mov D0,[Dframe-848]	; T93  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; pbyte -56  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-856],D0	; T94  
; ------------------------------ index
	mov D0,[Dframe-856]	; T94  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-100],A0	; av_1 -100  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2564
; ------------------------------ label
L2566:
; ------------------------------ stmt
; ------------------------------ truncate
	mov D0,[Dframe-64]	; a -64  
	mov [Dframe-872],D0	; T96  
; ------------------------------ getptr
	mov D0,[Dframe-56]	; pbyte -56  
	mov B0, [D0]
	mov [Dframe-888],B0	; T98  
; ------------------------------ widen
	movzx A0,byte [Dframe-888]	; T98  
	mov dword[Dframe-896],A0	; T99  
; ------------------------------ widen
	movsx D0,dword[Dframe-896]	; T99  
	mov qword[Dframe-880],D0	; T97  
; ------------------------------ shl
	mov D0,[Dframe-880]	; T97  
	mov B10,[Dframe-32]	; shift -32  
	shl D0, cl
	mov [Dframe-904],D0	; T100  
; ------------------------------ ior
	mov D0,[Dframe-872]	; T96  
	mov D1,[Dframe-904]	; T100  
	or D0,D1
	mov [Dframe-912],D0	; T101  
; ------------------------------ softconv
	mov D0,[Dframe-912]	; T101  
	mov [Dframe-864],D0	; T95  
; ------------------------------ move
	mov D0,[Dframe-864]	; T95  
	mov [Dframe-64],D0	; a -64  
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-32]	; shift -32  
	mov A1,8
	add A0,A1
	mov [Dframe-32],A0	; shift -32  
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-56]	; pbyte -56  
; ------------------------------ label
L2564:
; ------------------------------ postdecrx
	mov A0,[Dframe-100]	; av_1 -100  
	dec dword[Dframe-100]	; av_1 -100  
	mov dword[Dframe-920],A0	; T102  
; ------------------------------ jumptrue
	mov A0,[Dframe-920]	; T102  
	and A0,A0
	jnz L2566
; ------------------------------ label
L2565:
; ------------------------------ stmt
; ------------------------------ truncate
	mov D0,[Dframe-64]	; a -64  
	mov [Dframe-928],D0	; T103  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-928]	; T103  
	mov A11,4
	call createconstunit
	mov [Dframe-936],D0	; T104  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-936]	; T104  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 21:
; ------------------------------ label
L2538:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-944],D0	; T105  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-944]	; T105  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 22:
; ------------------------------ label
L2537:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-952],D0	; T106  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-952]	; T106  
	call createnegop
	mov [Dframe-960],D0	; T107  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-960]	; T107  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 34:
; ------------------------------ label
L2536:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-968],D0	; T108  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-968]	; T108  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,28
	mov D11,[Dframe-8]	; p -8  
	call createunit1
	mov [Dframe-976],D0	; T109  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-976]	; T109  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-984],D0	; T110  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-984]	; T110 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 33:
; ------------------------------ label
L2535:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-992],D0	; T111  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-992]	; T111  
	call createinotop
	mov [Dframe-1000],D0	; T112  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1000]	; T112  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 27:
; ------------------------------ label
L2534:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1016],D0	; T114  
; ------------------------------ index
	mov D0,[Dframe-1016]	; T114  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1008],B0	; T113  
; ------------------------------ widen
	movzx A0,byte [Dframe-1008]	; T113  
	mov dword[Dframe-1024],A0	; T115  
; ------------------------------ jumpcc
	mov A0,[Dframe-1024]	; T115  
	cmp A0,23
	jnz L2567
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-1032],D0	; T116  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1032]	; T116  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ jump
	jmp	L2568
; ------------------------------ label
L2567:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-1040],D0	; T117  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1040]	; T117  
	call createaddrofop
	mov [Dframe-1048],D0	; T118  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1048]	; T118  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2568:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 30:
; ------------------------------ label
L2533:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK594
	call serror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 23:
; ------------------------------ label
L2532:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-1056],D0	; T119  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1056]	; T119  
	call createderefop
	mov [Dframe-1064],D0	; T120  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1064]	; T120  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 35:
; ------------------------------ label
L2530:
; ------------------------------ stmt
; ------------------------------ comment
;case 36:
; ------------------------------ label
L2531:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1096],D0	; T124  
; ------------------------------ index
	mov D0,[Dframe-1096]	; T124  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1088],B0	; T123  
; ------------------------------ widen
	movzx A0,byte [Dframe-1088]	; T123  
	mov dword[Dframe-1104],A0	; T125  
; ------------------------------ sub
	mov A0,[Dframe-1104]	; T125  
	mov A1,1
	sub A0,A1
	mov [Dframe-1112],A0	; T126  
; ------------------------------ widen
	movsx D0,dword[Dframe-1112]	; T126  
	mov qword[Dframe-1080],D0	; T122  
; ------------------------------ index
	lea D0,[symboltojtag]
	mov D1,[Dframe-1080]	; T122  
	mov B0, [D0+D1]
	mov [Dframe-1072],B0	; T121  
; ------------------------------ widen
	movzx A0,byte [Dframe-1072]	; T121  
	mov dword[Dframe-1120],A0	; T127  
; ------------------------------ move
	mov A0,[Dframe-1120]	; T127  
	mov [Dframe-28],A0	; opc -28  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-1128],D0	; T128  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-28]	; opc -28  
	mov D11,[Dframe-1128]	; T128  
	call createincrop
	mov [Dframe-1136],D0	; T129  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1136]	; T129  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 37:
; ------------------------------ label
L2529:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,12
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-1144],D0	; T130  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1144]	; T130  
	call createabsop
	mov [Dframe-1152],D0	; T131  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1152]	; T131  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 12:
; ------------------------------ label
L2528:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call istypestarter
	mov [Dframe-1160],A0	; T132  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-1160]	; T132  
	and A0,A0
	jz L2569
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-72]	; d -72  
	mov [Dframe-1168],D0	; T133  
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; pm -96  
	mov [Dframe-1176],D0	; T134  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1168]	; T133  
	mov A11,0
	mov D12,[Dframe-1176]	; T134  
	call readcasttype
	mov [Dframe-1184],A0	; T135  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-1184]	; T135  
	mov [Dframe-20],A0	; t -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1200],D0	; T137  
; ------------------------------ index
	mov D0,[Dframe-1200]	; T137  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1192],B0	; T136  
; ------------------------------ widen
	movzx A0,byte [Dframe-1192]	; T136  
	mov dword[Dframe-1208],A0	; T138  
; ------------------------------ jumpcc
	mov A0,[Dframe-1208]	; T138  
	cmp A0,16
	jnz L2570
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK595
	call serror
	add Dstack, 32
; ------------------------------ jump
	jmp	L2571
; ------------------------------ label
L2570:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-1216],D0	; T139  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1216]	; T139  
	mov A11,[Dframe-20]	; t -20  
	mov A12,1
	mov A13,0
	call docast
	mov [Dframe-1224],D0	; T140  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1224]	; T140  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2571:
; ------------------------------ jump
	jmp	L2572
; ------------------------------ label
L2569:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-1232],D0	; T141  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1232]	; T141  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ label
L2572:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 89:
; ------------------------------ label
L2527:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1248],D0	; T143  
; ------------------------------ index
	mov D0,[Dframe-1248]	; T143  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1240],B0	; T142  
; ------------------------------ widen
	movzx A0,byte [Dframe-1240]	; T142  
	mov dword[Dframe-1256],A0	; T144  
; ------------------------------ jumpcc
	mov A0,[Dframe-1256]	; T144  
	cmp A0,12
	jnz L2573
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call istypestarter
	mov [Dframe-1264],A0	; T145  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-1264]	; T145  
	and A0,A0
	jz L2574
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-72]	; d -72  
	mov [Dframe-1272],D0	; T146  
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; pm -96  
	mov [Dframe-1280],D0	; T147  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1272]	; T146  
	mov A11,0
	mov D12,[Dframe-1280]	; T147  
	call readcasttype
	mov [Dframe-1288],A0	; T148  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-1288]	; T148  
	mov [Dframe-20],A0	; t -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-1312],D0	; T151  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-1312]	; T151  
	mov A0, [D0+D1*4]
	mov [Dframe-1304],A0	; T150  
; ------------------------------ widen
	movsx D0,dword[Dframe-1304]	; T150  
	mov qword[Dframe-1296],D0	; T149  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1296]	; T149  
	mov A11,4
	call createconstunit
	mov [Dframe-1320],D0	; T152  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1320]	; T152  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ jump
	jmp	L2575
; ------------------------------ label
L2574:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-1328],D0	; T153  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1328]	; T153  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	call createsizeofop
	mov [Dframe-1336],D0	; T154  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1336]	; T154  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2575:
; ------------------------------ jump
	jmp	L2576
; ------------------------------ label
L2573:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readterm
	mov [Dframe-1344],D0	; T155  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1344]	; T155  
	call createsizeofop
	mov [Dframe-1352],D0	; T156  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1352]	; T156  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2576:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 91:
; ------------------------------ label
L2526:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK596
	call serror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 92:
; ------------------------------ label
L2525:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK597
	call serror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;case 96:
; ------------------------------ label
L2524:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,12
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-72]	; d -72  
	mov [Dframe-1360],D0	; T157  
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; pm -96  
	mov [Dframe-1368],D0	; T158  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1360]	; T157  
	mov A11,0
	mov D12,[Dframe-1368]	; T158  
	call readcasttype
	mov [Dframe-1376],A0	; T159  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-1376]	; T159  
	mov [Dframe-20],A0	; t -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; t -20  
	mov A11,1
	call Strmode
	mov [Dframe-1384],D0	; T160  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1384]	; T160  
	call pcm_copyheapstring
	mov [Dframe-1392],D0	; T161  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1392]	; T161  
	mov A11,-1
	call createstringconstunit
	mov [Dframe-1400],D0	; T162  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1400]	; T162  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2523
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2522:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK598
	call serror
	add Dstack, 32
; ------------------------------ label
L2523:
; ------------------------------ stmt
; ------------------------------ label
L92: ;<L117>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1416],D0	; T164  
; ------------------------------ index
	mov D0,[Dframe-1416]	; T164  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1408],B0	; T163  
; ------------------------------ widen
	movzx A0,byte [Dframe-1408]	; T163  
	mov dword[Dframe-1424],A0	; T165  
; ------------------------------ switch
	mov A0,[Dframe-1424]	; T165  
	sub A0, 2
	cmp A0, 35
	jae L2577
	jmp [A0*8+L2585]
	align 8
; ------------------------------ label
L2585:
; ------------------------------ jumplabel
	dq L2582	; 1
; ------------------------------ jumplabel
	dq L2583	; 2
; ------------------------------ jumplabel
	dq L2577	; 3
; ------------------------------ jumplabel
	dq L2577	; 4
; ------------------------------ jumplabel
	dq L2577	; 5
; ------------------------------ jumplabel
	dq L2577	; 6
; ------------------------------ jumplabel
	dq L2577	; 7
; ------------------------------ jumplabel
	dq L2577	; 8
; ------------------------------ jumplabel
	dq L2577	; 9
; ------------------------------ jumplabel
	dq L2577	; 10
; ------------------------------ jumplabel
	dq L2581	; 11
; ------------------------------ jumplabel
	dq L2577	; 12
; ------------------------------ jumplabel
	dq L2584	; 13
; ------------------------------ jumplabel
	dq L2577	; 14
; ------------------------------ jumplabel
	dq L2577	; 15
; ------------------------------ jumplabel
	dq L2577	; 16
; ------------------------------ jumplabel
	dq L2577	; 17
; ------------------------------ jumplabel
	dq L2577	; 18
; ------------------------------ jumplabel
	dq L2577	; 19
; ------------------------------ jumplabel
	dq L2577	; 20
; ------------------------------ jumplabel
	dq L2577	; 21
; ------------------------------ jumplabel
	dq L2577	; 22
; ------------------------------ jumplabel
	dq L2577	; 23
; ------------------------------ jumplabel
	dq L2577	; 24
; ------------------------------ jumplabel
	dq L2577	; 25
; ------------------------------ jumplabel
	dq L2577	; 26
; ------------------------------ jumplabel
	dq L2577	; 27
; ------------------------------ jumplabel
	dq L2577	; 28
; ------------------------------ jumplabel
	dq L2577	; 29
; ------------------------------ jumplabel
	dq L2577	; 30
; ------------------------------ jumplabel
	dq L2577	; 31
; ------------------------------ jumplabel
	dq L2577	; 32
; ------------------------------ jumplabel
	dq L2577	; 33
; ------------------------------ jumplabel
	dq L2580	; 34
; ------------------------------ jumplabel
	dq L2579	; 35
; ------------------------------ stmt
; ------------------------------ comment
;case 14:
; ------------------------------ label
L2584:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-1432],D0	; T166  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1432]	; T166  
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,15
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov D11,[Dframe-16]	; q -16  
	call createindexop
	mov [Dframe-1440],D0	; T167  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1440]	; T167  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2578
; ------------------------------ stmt
; ------------------------------ comment
;case 2:
; ------------------------------ label
L2582:
; ------------------------------ stmt
; ------------------------------ comment
;case 3:
; ------------------------------ label
L2583:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1472],D0	; T171  
; ------------------------------ index
	mov D0,[Dframe-1472]	; T171  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1464],B0	; T170  
; ------------------------------ widen
	movzx A0,byte [Dframe-1464]	; T170  
	mov dword[Dframe-1480],A0	; T172  
; ------------------------------ sub
	mov A0,[Dframe-1480]	; T172  
	mov A1,1
	sub A0,A1
	mov [Dframe-1488],A0	; T173  
; ------------------------------ widen
	movsx D0,dword[Dframe-1488]	; T173  
	mov qword[Dframe-1456],D0	; T169  
; ------------------------------ index
	lea D0,[symboltojtag]
	mov D1,[Dframe-1456]	; T169  
	mov B0, [D0+D1]
	mov [Dframe-1448],B0	; T168  
; ------------------------------ widen
	movzx A0,byte [Dframe-1448]	; T168  
	mov dword[Dframe-1496],A0	; T174  
; ------------------------------ move
	mov A0,[Dframe-1496]	; T174  
	mov [Dframe-28],A0	; opc -28  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,65
	call checksymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1504],D0	; T175  
; ------------------------------ index
	mov D0,[Dframe-1504]	; T175  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; d -72  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-28]	; opc -28  
	mov D11,[Dframe-8]	; p -8  
	mov D12,[Dframe-72]	; d -72  
	call createdotop
	mov [Dframe-1512],D0	; T176  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1512]	; T176  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2578
; ------------------------------ stmt
; ------------------------------ comment
;case 12:
; ------------------------------ label
L2581:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-1528],D0	; T178  
; ------------------------------ index
	mov D0,[Dframe-1528]	; T178  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-1520],B0	; T177  
; ------------------------------ widen
	movzx A0,byte [Dframe-1520]	; T177  
	mov dword[Dframe-1536],A0	; T179  
; ------------------------------ jumpcc
	mov A0,[Dframe-1536]	; T179  
	cmp A0,13
	jnz L2586
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L2587
; ------------------------------ label
L2586:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,0
	call readexprlist
	mov [Dframe-1544],D0	; T180  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1544]	; T180  
	mov [Dframe-16],D0	; q -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ label
L2587:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov D11,[Dframe-16]	; q -16  
	call createcall
	mov [Dframe-1552],D0	; T181  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1552]	; T181  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2578
; ------------------------------ stmt
; ------------------------------ comment
;case 35:
; ------------------------------ label
L2580:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,79
	mov D11,[Dframe-8]	; p -8  
	call createincrop
	mov [Dframe-1560],D0	; T182  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1560]	; T182  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2578
; ------------------------------ stmt
; ------------------------------ comment
;case 36:
; ------------------------------ label
L2579:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,80
	mov D11,[Dframe-8]	; p -8  
	call createincrop
	mov [Dframe-1568],D0	; T183  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1568]	; T183  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2578
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2577:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L93
; ------------------------------ label
L2578:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L92
; ------------------------------ stmt
; ------------------------------ label
L93: ;<L118>
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2521
; ------------------------------ label
L2521:
; ------------------------------ hardret
	add Dstack, 1568
	pop Dframe
	ret
;	End

;	Proc:readexprlist
readexprlist:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov [Dframe-16],D0	; ulistx -16  
; ------------------------------ move
	mov D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-8],D0	; ulist -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2589
; ------------------------------ label
L2591:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe+16],D0	; p 16  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; ulist -8  
	mov [Dframe-32],D0	; T2  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-40],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T2  
	mov D11,[Dframe-40]	; T3  
	mov D12,[Dframe+16]	; p 16  
	call addlistunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-56]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T4  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T6  
	cmp A0,8
	jz L2592
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L94
; ------------------------------ label
L2592:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ label
L2589:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L2591
; ------------------------------ label
L2590:
; ------------------------------ stmt
; ------------------------------ label
L94: ;<L120>
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ulist -8  
	jmp L2588
; ------------------------------ label
L2588:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:readmodulevar
readmodulevar:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 320

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[stmodule]
	mov D11,[Dframe+16]	; d 16  
	mov A12,2
	mov A13,0
	call checkdupl
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; e -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; e -8  
	and D0,D0
	jz L2594
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; e -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T2  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,7
	jz L2595
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; e -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-8]	; e -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T8  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ index
	lea D0,[namenames]
	mov D1,[Dframe-64]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-56],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK599
	mov D11,[Dframe-48]	; T4  
	mov D12,[Dframe-56]	; T5  
	call serror_ss
	add Dstack, 32
; ------------------------------ label
L2595:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; e -8  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-88],W0	; T9  
; ------------------------------ widen
	movsx A0,word [Dframe-88]	; T9  
	mov dword[Dframe-96],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-96]	; T10  
	mov [Dframe-16],A0	; emode -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; emode -16  
	cmp A0,[Dframe+24]	; m 24  
	jz L2596
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16]	; emode -16  
	mov A11,[Dframe+24]	; m 24  
	call comparemode
	mov [Dframe-104],A0	; T11  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-104]	; T11  
	and A0,A0
	jnz L2597
; ------------------------------ stmt
; ------------------------------ label
L95: ;<redef>
; ------------------------------ stmt
; ------------------------------ label
L96: ;<L121>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; e -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-112],D0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK600
	mov D11,[Dframe-112]	; T12  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2597:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; emode -16  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-128]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe-120],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T13  
	cmp A0,19
	jnz L2598
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; emode -16  
	mov qword[Dframe-144],D0	; T16  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-144]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-136],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T15  
	cmp A0,0
	jnz L2599
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; e -8  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T17  
; ------------------------------ move
	mov A0,[Dframe+24]	; m 24  
	mov D13,[Dframe-152]	; T17 *
	mov word [D13],W0
; ------------------------------ jump
	jmp	L2600
; ------------------------------ label
L2599:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-168],D0	; T19  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-168]	; T19  
	mov A0, [D0+D1*4]
	mov [Dframe-160],A0	; T18  
; ------------------------------ jumpfalse
	mov A0,[Dframe-160]	; T18  
	and A0,A0
	jz L2601
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; emode -16  
	mov qword[Dframe-184],D0	; T21  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-184]	; T21  
	mov A0, [D0+D1*4]
	mov [Dframe-176],A0	; T20  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-200],D0	; T23  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-200]	; T23  
	mov A0, [D0+D1*4]
	mov [Dframe-192],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T20  
	cmp A0,[Dframe-192]	; T22  
	jz L2601
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L96
; ------------------------------ label
L2601:
; ------------------------------ label
L2600:
; ------------------------------ label
L2598:
; ------------------------------ label
L2596:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; e -8  
	mov [Dframe+16],D0	; d 16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-208],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-208]	; T24  
	mov dword[Dframe-216],A0	; T25  
; ------------------------------ move
	mov A0,[Dframe-216]	; T25  
	mov [Dframe-12],A0	; scope -12  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; scope -12  
	cmp A0,2
	jnz L2604
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,0
	jz L2603
; ------------------------------ label
L2604:
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; scope -12  
	cmp A0,4
	jnz L2605
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jz L2603
; ------------------------------ label
L2605:
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; scope -12  
	cmp A0,3
	jnz L2602
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jnz L2602
; ------------------------------ label
L2603:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2606
; ------------------------------ label
L2602:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; scope -12  
	cmp A0,3
	jnz L2607
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,0
	jnz L2607
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-12],A0	; scope -12  
; ------------------------------ label
L2607:
; ------------------------------ label
L2606:
; ------------------------------ jump
	jmp	L2608
; ------------------------------ label
L2594:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[stmodule]
	mov D11,[Dframe+16]	; d 16  
	mov A12,7
	call createdupldef
	mov [Dframe-224],D0	; T26  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-224]	; T26  
	mov [Dframe+16],D0	; d 16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-232],D0	; T27  
; ------------------------------ move
	mov A0,[Dframe+24]	; m 24  
	mov D13,[Dframe-232]	; T27 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jnz L2609
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-12],A0	; scope -12  
; ------------------------------ jump
	jmp	L2610
; ------------------------------ label
L2609:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,4
	jnz L2611
; ------------------------------ stmt
; ------------------------------ move
	mov A0,3
	mov [Dframe-12],A0	; scope -12  
; ------------------------------ jump
	jmp	L2612
; ------------------------------ label
L2611:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-12],A0	; scope -12  
; ------------------------------ label
L2612:
; ------------------------------ label
L2610:
; ------------------------------ label
L2608:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-248],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-248]	; T29  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-240],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-240]	; T28  
	mov dword[Dframe-256],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T30  
	cmp A0,11
	jnz L2613
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; T31  
; ------------------------------ jumpfalse
	mov D0,[Dframe-264]	; T31  
	and D0,D0
	jz L2614
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-272],D0	; T32  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK601
	mov D11,[Dframe-272]	; T32  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2614:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; scope -12  
	cmp A0,3
	jnz L2615
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-280],D0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK602
	mov D11,[Dframe-280]	; T33  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2615:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	lea D0, [D0+D1]
	mov [Dframe-288],D0	; T34  
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-296],W0	; T35  
; ------------------------------ widen
	movsx A0,word [Dframe-296]	; T35  
	mov dword[Dframe-304],A0	; T36  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[stmodule]
	mov A11,[Dframe-304]	; T36  
	call readinitexpr
	mov [Dframe-312],D0	; T37  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-312]	; T37  
	mov D13,[Dframe-288]	; T34 *
	mov qword[D13],D0
; ------------------------------ label
L2613:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	lea D0, [D0+D1]
	mov [Dframe-320],D0	; T38  
; ------------------------------ move
	mov A0,[Dframe-12]	; scope -12  
	mov D13,[Dframe-320]	; T38 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; d 16  
	jmp L2593
; ------------------------------ label
L2593:
; ------------------------------ hardret
	add Dstack, 320
	pop Dframe
	ret
;	End

;	Proc:readframevar
readframevar:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe+16]	; d 16  
	mov A12,2
	mov A13,[currblockno]
	call checkdupl_inproc
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; e -16  
	and D0,D0
	jz L2617
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK603
	mov D11,[Dframe-40]	; T2  
	call serror_s
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; e -16  
	mov [Dframe+16],D0	; d 16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T3  
	mov dword[Dframe-56],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-56]	; T4  
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,2
	jnz L2620
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,0
	jz L2619
; ------------------------------ label
L2620:
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,4
	jnz L2621
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jz L2619
; ------------------------------ label
L2621:
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,3
	jnz L2618
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jnz L2618
; ------------------------------ label
L2619:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2622
; ------------------------------ label
L2618:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,3
	jnz L2623
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,0
	jnz L2623
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ label
L2623:
; ------------------------------ label
L2622:
; ------------------------------ jump
	jmp	L2624
; ------------------------------ label
L2617:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,8
	mov [Dframe-24],A0	; id -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jnz L2625
; ------------------------------ stmt
; ------------------------------ move
	mov A0,7
	mov [Dframe-24],A0	; id -24  
; ------------------------------ jump
	jmp	L2626
; ------------------------------ label
L2625:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,4
	jnz L2627
; ------------------------------ stmt
; ------------------------------ move
	mov A0,3
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,7
	mov [Dframe-24],A0	; id -24  
; ------------------------------ label
L2627:
; ------------------------------ label
L2626:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe+16]	; d 16  
	mov A12,[Dframe-24]	; id -24  
	call createdupldef
	mov [Dframe-64],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T5  
	mov [Dframe+16],D0	; d 16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ move
	mov A0,[Dframe+24]	; m 24  
	mov D13,[Dframe-72]	; T6 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,104
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T7  
; ------------------------------ move
	mov A0,[currblockno]
	mov D13,[Dframe-80]	; T7 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[currblockno]
	mov qword[Dframe-96],D0	; T9  
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,[Dframe-96]	; T9  
	lea D0, [D0+D1*4]
	mov [Dframe-88],D0	; T8  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-88]	; T8 *
	mov dword[D13],A0
; ------------------------------ label
L2624:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-112],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-112]	; T11  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T10  
	mov dword[Dframe-120],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T12  
	cmp A0,11
	jnz L2628
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-128],D0	; T13  
; ------------------------------ jumpfalse
	mov D0,[Dframe-128]	; T13  
	and D0,D0
	jz L2629
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-136],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK604
	mov D11,[Dframe-136]	; T14  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2629:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,3
	jnz L2630
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK605
	mov D11,[Dframe-144]	; T15  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2630:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T16  
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-160],W0	; T17  
; ------------------------------ widen
	movsx A0,word [Dframe-160]	; T17  
	mov dword[Dframe-168],A0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov A11,[Dframe-168]	; T18  
	call readinitexpr
	mov [Dframe-176],D0	; T19  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T19  
	mov D13,[Dframe-152]	; T16 *
	mov qword[D13],D0
; ------------------------------ label
L2628:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T20  
; ------------------------------ move
	mov A0,[Dframe-20]	; scope -20  
	mov D13,[Dframe-184]	; T20 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; d 16  
	jmp L2616
; ------------------------------ label
L2616:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

;	Proc:readtype
readtype:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 480

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-252],A0	; nmodifiers -252  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe+40]	; pm 40 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-80]	; modtype -80  
	mov [Dframe-264],D0	; T1  
; ------------------------------ getaddr
	lea D0,[Dframe-240]	; modvalue -240  
	mov [Dframe-272],D0	; T2  
; ------------------------------ getaddr
	lea D0,[Dframe-252]	; nmodifiers -252  
	mov [Dframe-280],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe-280]	; T3  
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe+24]	; d 24  
	mov D12,[Dframe-264]	; T1  
	mov D13,[Dframe-272]	; T2  
	call readnamedtype
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-252]	; nmodifiers -252  
	mov [Dframe-256],A0	; i -256  
; ------------------------------ jump
	jmp	L2634
; ------------------------------ label
L2635:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-256]	; i -256  
	mov A1,1
	sub A0,A1
	mov [Dframe-304],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-304]	; T6  
	mov qword[Dframe-296],D0	; T5  
; ------------------------------ index
	lea D0,[Dframe-80]	; modtype -80  
	mov D1,[Dframe-296]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-288],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T4  
	cmp A0,65
	jnz L2636
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-256]	; i -256  
	mov A1,1
	sub A0,A1
	mov [Dframe-344],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-344]	; T11  
	mov qword[Dframe-336],D0	; T10  
; ------------------------------ index
	lea D0,[Dframe-240]	; modvalue -240  
	mov D1,[Dframe-336]	; T10  
	mov D0, [D0+D1*8]
	mov [Dframe-328],D0	; T9  
; ------------------------------ truncate
	mov D0,[Dframe-328]	; T9  
	mov A0,A0
	mov [Dframe-312],A0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+32]	; m 32  
	mov A11,[Dframe-312]	; T7  
	call createarraymode
	mov [Dframe-352],A0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-352]	; T12  
	mov [Dframe+32],A0	; m 32  
; ------------------------------ jump
	jmp	L2637
; ------------------------------ label
L2636:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-256]	; i -256  
	mov A1,1
	sub A0,A1
	mov [Dframe-376],A0	; T15  
; ------------------------------ widen
	movsx D0,dword[Dframe-376]	; T15  
	mov qword[Dframe-368],D0	; T14  
; ------------------------------ index
	lea D0,[Dframe-80]	; modtype -80  
	mov D1,[Dframe-368]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe-360],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-360]	; T13  
	cmp A0,82
	jnz L2638
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+32]	; m 32  
	call createrefmode
	mov [Dframe-384],A0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-384]	; T16  
	mov [Dframe+32],A0	; m 32  
; ------------------------------ jump
	jmp	L2639
; ------------------------------ label
L2638:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-256]	; i -256  
	mov A1,1
	sub A0,A1
	mov [Dframe-408],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-408]	; T19  
	mov qword[Dframe-400],D0	; T18  
; ------------------------------ index
	lea D0,[Dframe-80]	; modtype -80  
	mov D1,[Dframe-400]	; T18  
	mov A0, [D0+D1*4]
	mov [Dframe-392],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-392]	; T17  
	cmp A0,67
	jnz L2640
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+32]	; m 32  
	call createconstmode
	mov [Dframe-416],A0	; T20  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-416]	; T20  
	mov [Dframe+32],A0	; m 32  
; ------------------------------ jump
	jmp	L2641
; ------------------------------ label
L2640:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-256]	; i -256  
	mov A1,1
	sub A0,A1
	mov [Dframe-440],A0	; T23  
; ------------------------------ widen
	movsx D0,dword[Dframe-440]	; T23  
	mov qword[Dframe-432],D0	; T22  
; ------------------------------ index
	lea D0,[Dframe-80]	; modtype -80  
	mov D1,[Dframe-432]	; T22  
	mov A0, [D0+D1*4]
	mov [Dframe-424],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-424]	; T21  
	cmp A0,70
	jnz L2642
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; i -256  
	cmp A0,1
	jnz L2643
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[Dframe-240]	; modvalue -240  
	mov D1,0
	mov D0, [D0+D1]
	mov [Dframe-448],D0	; T24  
; ------------------------------ move
	mov D0,[Dframe-448]	; T24  
	mov D13,[Dframe+40]	; pm 40 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2644
; ------------------------------ label
L2643:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-256]	; i -256  
	mov A1,1
	sub A0,A1
	mov [Dframe-472],A0	; T27  
; ------------------------------ widen
	movsx D0,dword[Dframe-472]	; T27  
	mov qword[Dframe-464],D0	; T26  
; ------------------------------ index
	lea D0,[Dframe-240]	; modvalue -240  
	mov D1,[Dframe-464]	; T26  
	mov D0, [D0+D1*8]
	mov [Dframe-456],D0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+32]	; m 32  
	mov D11,[Dframe-456]	; T25  
	call createprocmode
	mov [Dframe-480],A0	; T28  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-480]	; T28  
	mov [Dframe+32],A0	; m 32  
; ------------------------------ label
L2644:
; ------------------------------ label
L2642:
; ------------------------------ label
L2641:
; ------------------------------ label
L2639:
; ------------------------------ label
L2637:
; ------------------------------ label
L2632:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-256]	; i -256  
; ------------------------------ label
L2634:
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; i -256  
	cmp A0,1
	jge L2635
; ------------------------------ label
L2633:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+32]	; m 32  
	jmp L2631
; ------------------------------ label
L2631:
; ------------------------------ hardret
	add Dstack, 480
	pop Dframe
	ret
;	End

;	Proc:readnamedtype
readnamedtype:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 672

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe+24]	; d 24 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-88],A0	; nrefs -88  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2646
; ------------------------------ label
L2648:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-88]	; nrefs -88  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-88]	; nrefs -88  
	mov A1,1
	sub A0,A1
	mov [Dframe-120],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T3  
	mov qword[Dframe-112],D0	; T2  
; ------------------------------ indexlv
	lea D0,[Dframe-84]	; fconst -84  
	mov D1,[Dframe-112]	; T2  
	lea D0, [D0+D1*4]
	mov [Dframe-104],D0	; T1  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-104]	; T1 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2649
; ------------------------------ label
L2651:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-136],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-136]	; T5  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T4  
	mov dword[Dframe-144],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T6  
	cmp A0,1
	jnz L2652
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-88]	; nrefs -88  
	mov A1,1
	sub A0,A1
	mov [Dframe-168],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-168]	; T9  
	mov qword[Dframe-160],D0	; T8  
; ------------------------------ indexlv
	lea D0,[Dframe-84]	; fconst -84  
	mov D1,[Dframe-160]	; T8  
	lea D0, [D0+D1*4]
	mov [Dframe-152],D0	; T7  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-152]	; T7 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L2653
; ------------------------------ label
L2652:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-184],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-184]	; T11  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-176],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-176]	; T10  
	mov dword[Dframe-192],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T12  
	cmp A0,2
	jz L2655
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-208],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-208]	; T14  
	mov A1,16
	mov B0, [D0+D1]
	mov [Dframe-200],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-200]	; T13  
	mov dword[Dframe-216],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T15  
	cmp A0,3
	jnz L2654
; ------------------------------ label
L2655:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2656
; ------------------------------ label
L2654:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK606
	call serror
	add Dstack, 32
; ------------------------------ label
L2656:
; ------------------------------ label
L2653:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ label
L2649:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-232],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-232]	; T17  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-224],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-224]	; T16  
	mov dword[Dframe-240],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T18  
	cmp A0,84
	jz L2651
; ------------------------------ label
L2650:
; ------------------------------ label
L2646:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-256],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-256]	; T20  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-248],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-248]	; T19  
	mov dword[Dframe-264],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-264]	; T21  
	cmp A0,23
	jz L2648
; ------------------------------ label
L2647:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-280],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-280]	; T23  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-272],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-272]	; T22  
	mov dword[Dframe-288],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T24  
	cmp A0,65
	jnz L2657
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-304],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe-304]	; T26  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-296],D0	; T25  
; ------------------------------ move
	mov D0,[Dframe-296]	; T25  
	mov D13,[Dframe+24]	; d 24 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L2658
; ------------------------------ label
L2657:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-320],D0	; T28  
; ------------------------------ index
	mov D0,[Dframe-320]	; T28  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-312],B0	; T27  
; ------------------------------ widen
	movzx A0,byte [Dframe-312]	; T27  
	mov dword[Dframe-328],A0	; T29  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T29  
	cmp A0,12
	jnz L2659
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe+48]	; nmodifiers 48  
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe+24]	; d 24  
	mov D12,[Dframe+32]	; modtype 32  
	mov D13,[Dframe+40]	; modvalue 40  
	call readnamedtype
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ label
L2659:
; ------------------------------ label
L2658:
; ------------------------------ stmt
; ------------------------------ label
L97: ;<L155>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-344],D0	; T31  
; ------------------------------ index
	mov D0,[Dframe-344]	; T31  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T30  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T30  
	mov dword[Dframe-352],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-352]	; T32  
	cmp A0,14
	jnz L2660
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-368],D0	; T34  
; ------------------------------ index
	mov D0,[Dframe-368]	; T34  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-360],B0	; T33  
; ------------------------------ widen
	movzx A0,byte [Dframe-360]	; T33  
	mov dword[Dframe-376],A0	; T35  
; ------------------------------ jumpcc
	mov A0,[Dframe-376]	; T35  
	cmp A0,15
	jnz L2661
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; length -4  
; ------------------------------ jump
	jmp	L2662
; ------------------------------ label
L2661:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-384],D0	; T36  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-384]	; T36  
	mov [Dframe-96],D0	; pdim -96  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-96]	; pdim -96  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-392],A0	; T37  
; ------------------------------ jumpcc
	mov A0,[Dframe-392]	; T37  
	cmp A0,1
	jnz L2663
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-96]	; pdim -96  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-408],D0	; T39  
; ------------------------------ truncate
	mov D0,[Dframe-408]	; T39  
	mov A0,A0
	mov [Dframe-400],A0	; T38  
; ------------------------------ move
	mov A0,[Dframe-400]	; T38  
	mov [Dframe-4],A0	; length -4  
; ------------------------------ jump
	jmp	L2664
; ------------------------------ label
L2663:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK607
	call serror
	add Dstack, 32
; ------------------------------ label
L2664:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,15
	call checksymbol
	add Dstack, 32
; ------------------------------ label
L2662:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; length -4  
	cmp A0,0
	jge L2665
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK608
	call terror
	add Dstack, 32
; ------------------------------ label
L2665:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ preincrx
	mov D13,[Dframe+48]	; nmodifiers 48 *
	inc dword[D13]
	mov A0,dword[D13]
	mov dword[Dframe-432],A0	; T42  
; ------------------------------ sub
	mov A0,[Dframe-432]	; T42  
	mov A1,1
	sub A0,A1
	mov [Dframe-440],A0	; T43  
; ------------------------------ widen
	movsx D0,dword[Dframe-440]	; T43  
	mov qword[Dframe-424],D0	; T41  
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; modtype 32  
	mov D1,[Dframe-424]	; T41  
	lea D0, [D0+D1*4]
	mov [Dframe-416],D0	; T40  
; ------------------------------ move
	mov A0,65
	mov D13,[Dframe-416]	; T40 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+48]	; nmodifiers 48  
	mov A0, [D0]
	mov [Dframe-464],A0	; T46  
; ------------------------------ sub
	mov A0,[Dframe-464]	; T46  
	mov A1,1
	sub A0,A1
	mov [Dframe-472],A0	; T47  
; ------------------------------ widen
	movsx D0,dword[Dframe-472]	; T47  
	mov qword[Dframe-456],D0	; T45  
; ------------------------------ indexlv
	mov D0,[Dframe+40]	; modvalue 40  
	mov D1,[Dframe-456]	; T45  
	lea D0, [D0+D1*8]
	mov [Dframe-448],D0	; T44  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; length -4  
	mov qword[Dframe-488],D0	; T49  
; ------------------------------ move
	mov D0,[Dframe-488]	; T49  
	mov D13,[Dframe-448]	; T44 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2666
; ------------------------------ label
L2660:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-504],D0	; T51  
; ------------------------------ index
	mov D0,[Dframe-504]	; T51  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-496],B0	; T50  
; ------------------------------ widen
	movzx A0,byte [Dframe-496]	; T50  
	mov dword[Dframe-512],A0	; T52  
; ------------------------------ jumpcc
	mov A0,[Dframe-512]	; T52  
	cmp A0,12
	jnz L2667
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ preincrx
	mov D13,[Dframe+48]	; nmodifiers 48 *
	inc dword[D13]
	mov A0,dword[D13]
	mov dword[Dframe-536],A0	; T55  
; ------------------------------ sub
	mov A0,[Dframe-536]	; T55  
	mov A1,1
	sub A0,A1
	mov [Dframe-544],A0	; T56  
; ------------------------------ widen
	movsx D0,dword[Dframe-544]	; T56  
	mov qword[Dframe-528],D0	; T54  
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; modtype 32  
	mov D1,[Dframe-528]	; T54  
	lea D0, [D0+D1*4]
	mov [Dframe-520],D0	; T53  
; ------------------------------ move
	mov A0,70
	mov D13,[Dframe-520]	; T53 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+48]	; nmodifiers 48  
	mov A0, [D0]
	mov [Dframe-568],A0	; T59  
; ------------------------------ sub
	mov A0,[Dframe-568]	; T59  
	mov A1,1
	sub A0,A1
	mov [Dframe-576],A0	; T60  
; ------------------------------ widen
	movsx D0,dword[Dframe-576]	; T60  
	mov qword[Dframe-560],D0	; T58  
; ------------------------------ indexlv
	mov D0,[Dframe+40]	; modvalue 40  
	mov D1,[Dframe-560]	; T58  
	lea D0, [D0+D1*8]
	mov [Dframe-552],D0	; T57  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	call readparams
	mov [Dframe-584],D0	; T61  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-584]	; T61  
	mov D13,[Dframe-552]	; T57 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L2668
; ------------------------------ label
L2667:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L98
; ------------------------------ label
L2668:
; ------------------------------ label
L2666:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L97
; ------------------------------ stmt
; ------------------------------ label
L98: ;<L156>
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2669
; ------------------------------ label
L2671:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-88]	; nrefs -88  
	mov A1,1
	sub A0,A1
	mov [Dframe-608],A0	; T64  
; ------------------------------ widen
	movsx D0,dword[Dframe-608]	; T64  
	mov qword[Dframe-600],D0	; T63  
; ------------------------------ index
	lea D0,[Dframe-84]	; fconst -84  
	mov D1,[Dframe-600]	; T63  
	mov A0, [D0+D1*4]
	mov [Dframe-592],A0	; T62  
; ------------------------------ jumpfalse
	mov A0,[Dframe-592]	; T62  
	and A0,A0
	jz L2672
; ------------------------------ stmt
; ------------------------------ preincrx
	mov D13,[Dframe+48]	; nmodifiers 48 *
	inc dword[D13]
	mov A0,dword[D13]
	mov dword[Dframe-632],A0	; T67  
; ------------------------------ sub
	mov A0,[Dframe-632]	; T67  
	mov A1,1
	sub A0,A1
	mov [Dframe-640],A0	; T68  
; ------------------------------ widen
	movsx D0,dword[Dframe-640]	; T68  
	mov qword[Dframe-624],D0	; T66  
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; modtype 32  
	mov D1,[Dframe-624]	; T66  
	lea D0, [D0+D1*4]
	mov [Dframe-616],D0	; T65  
; ------------------------------ move
	mov A0,67
	mov D13,[Dframe-616]	; T65 *
	mov dword[D13],A0
; ------------------------------ label
L2672:
; ------------------------------ stmt
; ------------------------------ preincrx
	mov D13,[Dframe+48]	; nmodifiers 48 *
	inc dword[D13]
	mov A0,dword[D13]
	mov dword[Dframe-664],A0	; T71  
; ------------------------------ sub
	mov A0,[Dframe-664]	; T71  
	mov A1,1
	sub A0,A1
	mov [Dframe-672],A0	; T72  
; ------------------------------ widen
	movsx D0,dword[Dframe-672]	; T72  
	mov qword[Dframe-656],D0	; T70  
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; modtype 32  
	mov D1,[Dframe-656]	; T70  
	lea D0, [D0+D1*4]
	mov [Dframe-648],D0	; T69  
; ------------------------------ move
	mov A0,82
	mov D13,[Dframe-648]	; T69 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-88]	; nrefs -88  
; ------------------------------ label
L2669:
; ------------------------------ jumptrue
	mov A0,[Dframe-88]	; nrefs -88  
	and A0,A0
	jnz L2671
; ------------------------------ label
L2670:
; ------------------------------ label
L2645:
; ------------------------------ hardret
	add Dstack, 672
	pop Dframe
	ret
;	End

;	Proc:readconstintexpr
readconstintexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,1
	jnz L2674
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ truncate
	mov D0,[Dframe-40]	; T4  
	mov A0,A0
	mov [Dframe-32],A0	; T3  
; ------------------------------ returnx
	mov A0,[Dframe-32]	; T3  
	jmp L2673
; ------------------------------ jump
	jmp	L2675
; ------------------------------ label
L2674:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T7  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-56]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-48],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK609
	mov D11,[Dframe-48]	; T5  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2675:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L2673
; ------------------------------ label
L2673:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:readinitexpr
readinitexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov A11,[Dframe+24]	; m 24  
	mov A12,1
	call readinitexpr2
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; p -16  
	jmp L2676
; ------------------------------ label
L2676:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:readinitexpr2
readinitexpr2:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 672

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-72],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-72]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-28],A0	; mbase -28  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-44],A0	; count -44  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-88],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-88]	; T3  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T2  
	mov dword[Dframe-96],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T4  
	cmp A0,16
	jnz L2678
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-44],A0	; count -44  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; mbase -28  
	cmp A0,19
	jnz L2679
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-104],D0	; T5  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-104]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; dim -40  
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[Dframe+32]	; istop 32  
	and A0,A0
	jnz L2680
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; dim -40  
	cmp A0,0
	jnz L2680
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK610
	call terror
	add Dstack, 32
; ------------------------------ label
L2680:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-112],D0	; T6  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-112]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-32],A0	; melem -32  
; ------------------------------ jump
	jmp	L2681
; ------------------------------ label
L2679:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; mbase -28  
	cmp A0,20
	jz L2683
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; mbase -28  
	cmp A0,21
	jnz L2682
; ------------------------------ label
L2683:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-120],D0	; T7  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-120]	; T7  
	mov D0, [D0+D1*8]
	mov [Dframe-56],D0	; d -56  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; e -64  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-64]	; e -64  
	cmp D0,0
	jnz L2684
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK611
	call terror
	add Dstack, 32
; ------------------------------ label
L2684:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; e -64  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-128],W0	; T8  
; ------------------------------ widen
	movsx A0,word [Dframe-128]	; T8  
	mov dword[Dframe-136],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-136]	; T9  
	mov [Dframe-32],A0	; melem -32  
; ------------------------------ jump
	jmp	L2685
; ------------------------------ label
L2682:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-144],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T10  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; p -24  
	mov A11,[Dframe+24]	; m 24  
	call coercemode
	mov [Dframe-152],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-152]	; T11  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,17
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; p -24  
	jmp L2677
; ------------------------------ label
L2685:
; ------------------------------ label
L2681:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-16],D0	; ulistx -16  
; ------------------------------ move
	mov D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-8],D0	; ulist -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2686
; ------------------------------ label
L2688:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov A11,[Dframe-32]	; melem -32  
	mov A12,0
	call readinitexpr2
	mov [Dframe-160],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-160]	; T12  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-44]	; count -44  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; mbase -28  
	cmp A0,19
	jnz L2689
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; dim -40  
	and A0,A0
	jz L2690
; ------------------------------ jumpcc
	mov A0,[Dframe-44]	; count -44  
	cmp A0,[Dframe-40]	; dim -40  
	jle L2690
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK612
	call terror
	add Dstack, 32
; ------------------------------ label
L2690:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; melem -32  
	mov qword[Dframe-176],D0	; T14  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-176]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe-168],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T13  
	cmp A0,19
	jnz L2691
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; melem -32  
	mov qword[Dframe-208],D0	; T18  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-208]	; T18  
	mov A0, [D0+D1*4]
	mov [Dframe-200],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-200]	; T17  
	mov qword[Dframe-192],D0	; T16  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-192]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-184],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T15  
	cmp A0,7
	jnz L2691
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T19  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T19  
	cmp A0,[trefchar]
	jnz L2691
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2692
; ------------------------------ label
L2691:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; p -24  
	mov A11,[Dframe-32]	; melem -32  
	call coercemode
	mov [Dframe-224],D0	; T20  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-224]	; T20  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ label
L2692:
; ------------------------------ jump
	jmp	L2693
; ------------------------------ label
L2689:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; mbase -28  
	cmp A0,20
	jnz L2694
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; e -64  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-232],W0	; T21  
; ------------------------------ widen
	movsx A0,word [Dframe-232]	; T21  
	mov dword[Dframe-240],A0	; T22  
; ------------------------------ move
	mov A0,[Dframe-240]	; T22  
	mov [Dframe-36],A0	; mm -36  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-36]	; mm -36  
	mov qword[Dframe-256],D0	; T24  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-256]	; T24  
	mov A0, [D0+D1*4]
	mov [Dframe-248],A0	; T23  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T23  
	cmp A0,19
	jnz L2695
; ------------------------------ widen
	movsx D0,dword[Dframe-36]	; mm -36  
	mov qword[Dframe-288],D0	; T28  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-288]	; T28  
	mov A0, [D0+D1*4]
	mov [Dframe-280],A0	; T27  
; ------------------------------ widen
	movsx D0,dword[Dframe-280]	; T27  
	mov qword[Dframe-272],D0	; T26  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-272]	; T26  
	mov A0, [D0+D1*4]
	mov [Dframe-264],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-264]	; T25  
	cmp A0,7
	jnz L2695
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-296],A0	; T29  
; ------------------------------ jumpcc
	mov A0,[Dframe-296]	; T29  
	cmp A0,[trefchar]
	jnz L2695
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2696
; ------------------------------ label
L2695:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; p -24  
	mov A11,[Dframe-36]	; mm -36  
	call coercemode
	mov [Dframe-304],D0	; T30  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-304]	; T30  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ label
L2696:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; e -64  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; e -64  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-64]	; e -64  
	cmp D0,0
	jnz L2697
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-320],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-320]	; T32  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-312],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-312]	; T31  
	mov dword[Dframe-328],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T33  
	cmp A0,8
	jnz L2698
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-344],D0	; T35  
; ------------------------------ index
	mov D0,[Dframe-344]	; T35  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T34  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T34  
	mov dword[Dframe-352],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-352]	; T36  
	cmp A0,17
	jz L2698
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK613
	call terror
	add Dstack, 32
; ------------------------------ label
L2698:
; ------------------------------ jump
	jmp	L2699
; ------------------------------ label
L2697:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; e -64  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-360],W0	; T37  
; ------------------------------ widen
	movsx A0,word [Dframe-360]	; T37  
	mov dword[Dframe-368],A0	; T38  
; ------------------------------ move
	mov A0,[Dframe-368]	; T38  
	mov [Dframe-32],A0	; melem -32  
; ------------------------------ label
L2699:
; ------------------------------ jump
	jmp	L2700
; ------------------------------ label
L2694:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; mbase -28  
	cmp A0,21
	jnz L2701
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; p -24  
	mov A11,[Dframe-32]	; melem -32  
	call coercemode
	mov [Dframe-376],D0	; T39  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-376]	; T39  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-24]	; p -24  
	mov [Dframe-16],D0	; ulistx -16  
; ------------------------------ move
	mov D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-8],D0	; ulist -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L101
; ------------------------------ label
L2701:
; ------------------------------ label
L2700:
; ------------------------------ label
L2693:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; ulist -8  
	mov [Dframe-384],D0	; T40  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-392],D0	; T41  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-384]	; T40  
	mov D11,[Dframe-392]	; T41  
	mov D12,[Dframe-24]	; p -24  
	call addlistunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-408],D0	; T43  
; ------------------------------ index
	mov D0,[Dframe-408]	; T43  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-400],B0	; T42  
; ------------------------------ widen
	movzx A0,byte [Dframe-400]	; T42  
	mov dword[Dframe-416],A0	; T44  
; ------------------------------ jumpcc
	mov A0,[Dframe-416]	; T44  
	cmp A0,8
	jz L2702
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L99
; ------------------------------ label
L2702:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-432],D0	; T46  
; ------------------------------ index
	mov D0,[Dframe-432]	; T46  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-424],B0	; T45  
; ------------------------------ widen
	movzx A0,byte [Dframe-424]	; T45  
	mov dword[Dframe-440],A0	; T47  
; ------------------------------ jumpcc
	mov A0,[Dframe-440]	; T47  
	cmp A0,17
	jnz L2703
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L99
; ------------------------------ label
L2703:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ label
L2686:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L2688
; ------------------------------ label
L2687:
; ------------------------------ stmt
; ------------------------------ label
L99: ;<L167>
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; mbase -28  
	cmp A0,19
	jnz L2704
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; dim -40  
	cmp A0,0
	jnz L2704
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-456],D0	; T49  
; ------------------------------ indexlv
	lea D0,[ttlength]
	mov D1,[Dframe-456]	; T49  
	lea D0, [D0+D1*4]
	mov [Dframe-448],D0	; T48  
; ------------------------------ move
	mov A0,[Dframe-44]	; count -44  
	mov D13,[Dframe-448]	; T48 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-472],D0	; T51  
; ------------------------------ indexlv
	lea D0,[ttsize]
	mov D1,[Dframe-472]	; T51  
	lea D0, [D0+D1*4]
	mov [Dframe-464],D0	; T50  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; melem -32  
	mov qword[Dframe-488],D0	; T53  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-488]	; T53  
	mov A0, [D0+D1*4]
	mov [Dframe-480],A0	; T52  
; ------------------------------ mul
	mov A0,[Dframe-44]	; count -44  
	mov A1,[Dframe-480]	; T52  
	mul A1
	mov [Dframe-496],A0	; T54  
; ------------------------------ move
	mov A0,[Dframe-496]	; T54  
	mov D13,[Dframe-464]	; T50 *
	mov dword[D13],A0
; ------------------------------ label
L2704:
; ------------------------------ stmt
; ------------------------------ label
L100: ;<donestruct>
; ------------------------------ stmt
; ------------------------------ label
L101: ;<L171>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,17
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,30
	mov D11,[Dframe-8]	; ulist -8  
	call createunit1
	mov [Dframe-504],D0	; T55  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-504]	; T55  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; p -24  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-512],D0	; T56  
; ------------------------------ move
	mov A0,[Dframe-44]	; count -44  
	mov D13,[Dframe-512]	; T56 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; p -24  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-520],D0	; T57  
; ------------------------------ move
	mov A0,[Dframe+24]	; m 24  
	mov D13,[Dframe-520]	; T57 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L2705
; ------------------------------ label
L2678:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; mbase -28  
	cmp A0,19
	jnz L2706
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-536],D0	; T59  
; ------------------------------ index
	mov D0,[Dframe-536]	; T59  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-528],B0	; T58  
; ------------------------------ widen
	movzx A0,byte [Dframe-528]	; T58  
	mov dword[Dframe-544],A0	; T60  
; ------------------------------ jumpcc
	mov A0,[Dframe-544]	; T60  
	cmp A0,61
	jz L2707
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-560],D0	; T62  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-560]	; T62  
	mov A0, [D0+D1*4]
	mov [Dframe-552],A0	; T61  
; ------------------------------ jumpcc
	mov A0,[Dframe-552]	; T61  
	cmp A0,7
	jz L2707
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK614
	call terror
	add Dstack, 32
; ------------------------------ label
L2707:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-568],D0	; T63  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-568]	; T63  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-576],A0	; T64  
; ------------------------------ jumpcc
	mov A0,[Dframe-576]	; T64  
	cmp A0,1
	jnz L2708
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; p -24  
	mov A1,59
	lea D0, [D0+D1]
	mov [Dframe-584],D0	; T65  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-584]	; T65 *
	mov byte [D13],B0
; ------------------------------ label
L2708:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-592],A0	; T66  
; ------------------------------ jumpcc
	mov A0,[Dframe-592]	; T66  
	cmp A0,[trefchar]
	jz L2709
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK615
	call terror
	add Dstack, 32
; ------------------------------ label
L2709:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-600],D0	; T67  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-600]	; T67  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; dim -40  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; dim -40  
	cmp A0,0
	jnz L2710
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-616],D0	; T69  
; ------------------------------ indexlv
	lea D0,[ttlength]
	mov D1,[Dframe-616]	; T69  
	lea D0, [D0+D1*4]
	mov [Dframe-608],D0	; T68  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-632],D0	; T71  
; ------------------------------ indexlv
	lea D0,[ttsize]
	mov D1,[Dframe-632]	; T71  
	lea D0, [D0+D1*4]
	mov [Dframe-624],D0	; T70  
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-640],A0	; T72  
; ------------------------------ add
	mov A0,[Dframe-640]	; T72  
	mov A1,1
	add A0,A1
	mov D13,[Dframe-624]	; T70 *
	mov dword[D13],A0
; ------------------------------ move
	mov D13,[Dframe-624]	; T70 *
	mov A0,dword[D13]
	mov D13,qword[Dframe-608]	; T68 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L2711
; ------------------------------ label
L2710:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-648],A0	; T73  
; ------------------------------ jumpcc
	mov A0,[Dframe-648]	; T73  
	cmp A0,[Dframe-40]	; dim -40  
	jle L2712
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK616
	call terror
	add Dstack, 32
; ------------------------------ label
L2712:
; ------------------------------ label
L2711:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; p -24  
	jmp L2677
; ------------------------------ label
L2706:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readassignexpr
	mov [Dframe-656],D0	; T74  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-656]	; T74  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; p -24  
	mov A11,[Dframe+24]	; m 24  
	call coercemode
	mov [Dframe-664],D0	; T75  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-664]	; T75  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ label
L2705:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; p -24  
	jmp L2677
; ------------------------------ label
L2677:
; ------------------------------ hardret
	add Dstack, 672
	pop Dframe
	ret
;	End

;	Proc:pushblock
pushblock:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[blocklevel]
	cmp A0,100
	jl L2714
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK617
	call serror
	add Dstack, 32
; ------------------------------ label
L2714:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nextblockno]
	cmp A0,2100
	jl L2715
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK618
	call serror
	add Dstack, 32
; ------------------------------ label
L2715:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[blocklevel]
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[nextblockno]
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[currblockno]
	mov [Dframe-4],A0	; n -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2716
; ------------------------------ label
L2718:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-4]	; n -4  
; ------------------------------ label
L2716:
; ------------------------------ jumpfalse
	mov A0,[Dframe-4]	; n -4  
	and A0,A0
	jz L2719
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; n -4  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[blockcounts]
	mov D1,[Dframe-24]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T1  
	cmp A0,0
	jz L2718
; ------------------------------ label
L2719:
; ------------------------------ label
L2717:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[nextblockno]
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ indexlv
	lea D0,[blockowner]
	mov D1,[Dframe-40]	; T4  
	lea D0, [D0+D1*4]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,[Dframe-4]	; n -4  
	mov D13,[Dframe-32]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[blocklevel]
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ indexlv
	lea D0,[blockstack]
	mov D1,[Dframe-56]	; T6  
	lea D0, [D0+D1*4]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,[nextblockno]
	mov D13,[Dframe-48]	; T5 *
	mov dword[D13],A0
; ------------------------------ move
	mov D13,[Dframe-48]	; T5 *
	mov A0,dword[D13]
	mov dword[currblockno],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[currblockno]
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,[Dframe-72]	; T8  
	lea D0, [D0+D1*4]
	mov [Dframe-64],D0	; T7  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-64]	; T7 *
	mov dword[D13],A0
; ------------------------------ label
L2713:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:popblock
popblock:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ predecrx
	dec dword[blocklevel]
	mov A0,dword[blocklevel]
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; T2  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ index
	lea D0,[blockstack]
	mov D1,[Dframe-8]	; T1  
	mov A0, [D0+D1*4]
	mov [currblockno],A0
; ------------------------------ label
L2720:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:readcompoundstmt
readcompoundstmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-16],D0	; ulistx -16  
; ------------------------------ move
	mov D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-8],D0	; ulist -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call pushblock
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+16]	; params 16  
	and A0,A0
	jz L2722
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,4
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T1  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-40]	; T1 *
	mov dword[D13],A0
; ------------------------------ label
L2722:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2723
; ------------------------------ label
L2725:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-48],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T2  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-24]	; p -24  
	cmp D0,0
	jnz L2726
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L102
; ------------------------------ label
L2726:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T3  
	cmp A0,8
	jnz L2727
; ------------------------------ stmt
; ------------------------------ label
L2730:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; q -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-72]	; T5  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T4  
; ------------------------------ jumpfalse
	mov D0,[Dframe-64]	; T4  
	and D0,D0
	jz L2731
; ------------------------------ index
	mov D0,[Dframe-24]	; p -24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-88]	; T7  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T6  
	mov dword[Dframe-96],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T8  
	cmp A0,7
	jz L2731
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; p -24  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T9  
; ------------------------------ move
	mov A0,9
	mov D13,[Dframe-104]	; T9 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; p -24  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T10  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-112]	; T10 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; ulist -8  
	mov [Dframe-120],D0	; T11  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-128],D0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-120]	; T11  
	mov D11,[Dframe-128]	; T12  
	mov D12,[Dframe-24]	; p -24  
	call addlistunit
	add Dstack, 32
; ------------------------------ label
L2731:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-32]	; q -32  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ label
L2728:
; ------------------------------ jumpcc
	mov D0,[Dframe-24]	; p -24  
	cmp D0,0
	jnz L2730
; ------------------------------ label
L2729:
; ------------------------------ jump
	jmp	L2732
; ------------------------------ label
L2727:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; ulist -8  
	mov [Dframe-136],D0	; T13  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-144],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-136]	; T13  
	mov D11,[Dframe-144]	; T14  
	mov D12,[Dframe-24]	; p -24  
	call addlistunit
	add Dstack, 32
; ------------------------------ label
L2732:
; ------------------------------ stmt
; ------------------------------ label
L102: ;<L177>
; ------------------------------ label
L2723:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-160],D0	; T16  
; ------------------------------ index
	mov D0,[Dframe-160]	; T16  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-152],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-152]	; T15  
	mov dword[Dframe-168],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T17  
	cmp A0,17
	jnz L2725
; ------------------------------ label
L2724:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call popblock
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,7
	mov D11,[Dframe-8]	; ulist -8  
	mov D12,0
	mov D13,[Dframe-16]	; ulistx -16  
	call createunit3
	mov [Dframe-176],D0	; T18  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-176]	; T18  
	jmp L2721
; ------------------------------ label
L2721:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:readstatement
readstatement:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 640

; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-56]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T1  
	mov dword[Dframe-64],A0	; T3  
; ------------------------------ switch
	mov A0,[Dframe-64]	; T3  
	sub A0, 9
	cmp A0, 89
	jae L2734
	jmp [A0*8+L2760]
	align 8
; ------------------------------ label
L2760:
; ------------------------------ jumplabel
	dq L2745	; 1
; ------------------------------ jumplabel
	dq L2734	; 2
; ------------------------------ jumplabel
	dq L2734	; 3
; ------------------------------ jumplabel
	dq L2734	; 4
; ------------------------------ jumplabel
	dq L2734	; 5
; ------------------------------ jumplabel
	dq L2734	; 6
; ------------------------------ jumplabel
	dq L2734	; 7
; ------------------------------ jumplabel
	dq L2753	; 8
; ------------------------------ jumplabel
	dq L2734	; 9
; ------------------------------ jumplabel
	dq L2734	; 10
; ------------------------------ jumplabel
	dq L2734	; 11
; ------------------------------ jumplabel
	dq L2734	; 12
; ------------------------------ jumplabel
	dq L2734	; 13
; ------------------------------ jumplabel
	dq L2734	; 14
; ------------------------------ jumplabel
	dq L2734	; 15
; ------------------------------ jumplabel
	dq L2734	; 16
; ------------------------------ jumplabel
	dq L2734	; 17
; ------------------------------ jumplabel
	dq L2734	; 18
; ------------------------------ jumplabel
	dq L2734	; 19
; ------------------------------ jumplabel
	dq L2734	; 20
; ------------------------------ jumplabel
	dq L2734	; 21
; ------------------------------ jumplabel
	dq L2734	; 22
; ------------------------------ jumplabel
	dq L2734	; 23
; ------------------------------ jumplabel
	dq L2734	; 24
; ------------------------------ jumplabel
	dq L2734	; 25
; ------------------------------ jumplabel
	dq L2734	; 26
; ------------------------------ jumplabel
	dq L2734	; 27
; ------------------------------ jumplabel
	dq L2734	; 28
; ------------------------------ jumplabel
	dq L2734	; 29
; ------------------------------ jumplabel
	dq L2734	; 30
; ------------------------------ jumplabel
	dq L2734	; 31
; ------------------------------ jumplabel
	dq L2734	; 32
; ------------------------------ jumplabel
	dq L2734	; 33
; ------------------------------ jumplabel
	dq L2734	; 34
; ------------------------------ jumplabel
	dq L2734	; 35
; ------------------------------ jumplabel
	dq L2734	; 36
; ------------------------------ jumplabel
	dq L2734	; 37
; ------------------------------ jumplabel
	dq L2734	; 38
; ------------------------------ jumplabel
	dq L2734	; 39
; ------------------------------ jumplabel
	dq L2734	; 40
; ------------------------------ jumplabel
	dq L2734	; 41
; ------------------------------ jumplabel
	dq L2734	; 42
; ------------------------------ jumplabel
	dq L2734	; 43
; ------------------------------ jumplabel
	dq L2734	; 44
; ------------------------------ jumplabel
	dq L2734	; 45
; ------------------------------ jumplabel
	dq L2734	; 46
; ------------------------------ jumplabel
	dq L2734	; 47
; ------------------------------ jumplabel
	dq L2734	; 48
; ------------------------------ jumplabel
	dq L2734	; 49
; ------------------------------ jumplabel
	dq L2734	; 50
; ------------------------------ jumplabel
	dq L2734	; 51
; ------------------------------ jumplabel
	dq L2734	; 52
; ------------------------------ jumplabel
	dq L2734	; 53
; ------------------------------ jumplabel
	dq L2734	; 54
; ------------------------------ jumplabel
	dq L2734	; 55
; ------------------------------ jumplabel
	dq L2734	; 56
; ------------------------------ jumplabel
	dq L2744	; 57
; ------------------------------ jumplabel
	dq L2734	; 58
; ------------------------------ jumplabel
	dq L2734	; 59
; ------------------------------ jumplabel
	dq L2736	; 60
; ------------------------------ jumplabel
	dq L2759	; 61
; ------------------------------ jumplabel
	dq L2734	; 62
; ------------------------------ jumplabel
	dq L2749	; 63
; ------------------------------ jumplabel
	dq L2748	; 64
; ------------------------------ jumplabel
	dq L2758	; 65
; ------------------------------ jumplabel
	dq L2757	; 66
; ------------------------------ jumplabel
	dq L2756	; 67
; ------------------------------ jumplabel
	dq L2755	; 68
; ------------------------------ jumplabel
	dq L2751	; 69
; ------------------------------ jumplabel
	dq L2750	; 70
; ------------------------------ jumplabel
	dq L2752	; 71
; ------------------------------ jumplabel
	dq L2754	; 72
; ------------------------------ jumplabel
	dq L2740	; 73
; ------------------------------ jumplabel
	dq L2741	; 74
; ------------------------------ jumplabel
	dq L2738	; 75
; ------------------------------ jumplabel
	dq L2737	; 76
; ------------------------------ jumplabel
	dq L2739	; 77
; ------------------------------ jumplabel
	dq L2734	; 78
; ------------------------------ jumplabel
	dq L2742	; 79
; ------------------------------ jumplabel
	dq L2734	; 80
; ------------------------------ jumplabel
	dq L2734	; 81
; ------------------------------ jumplabel
	dq L2734	; 82
; ------------------------------ jumplabel
	dq L2734	; 83
; ------------------------------ jumplabel
	dq L2734	; 84
; ------------------------------ jumplabel
	dq L2747	; 85
; ------------------------------ jumplabel
	dq L2734	; 86
; ------------------------------ jumplabel
	dq L2743	; 87
; ------------------------------ jumplabel
	dq L2734	; 88
; ------------------------------ jumplabel
	dq L2746	; 89
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L2759:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readifstmt
	mov [Dframe-72],D0	; T4  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-72]	; T4  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 73:
; ------------------------------ label
L2758:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readforstmt
	mov [Dframe-80],D0	; T5  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-80]	; T5  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 74:
; ------------------------------ label
L2757:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readwhilestmt
	mov [Dframe-88],D0	; T6  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-88]	; T6  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 75:
; ------------------------------ label
L2756:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readdostmt
	mov [Dframe-96],D0	; T7  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-96]	; T7  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L2755:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readreturnstmt
	mov [Dframe-104],D0	; T8  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-104]	; T8  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 80:
; ------------------------------ label
L2754:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readswitchstmt
	mov [Dframe-112],D0	; T9  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-112]	; T9  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 16:
; ------------------------------ label
L2753:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,0
	call readcompoundstmt
	mov [Dframe-120],D0	; T10  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-120]	; T10  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 79:
; ------------------------------ label
L2752:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readgotostmt
	mov [Dframe-128],D0	; T11  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-128]	; T11  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 77:
; ------------------------------ label
L2751:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[loopindex]
	and A0,A0
	jz L2761
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[loopindex]
	mov A1,1
	sub A0,A1
	mov [Dframe-160],A0	; T15  
; ------------------------------ widen
	movsx D0,dword[Dframe-160]	; T15  
	mov qword[Dframe-152],D0	; T14  
; ------------------------------ index
	lea D0,[looptypestack]
	mov D1,[Dframe-152]	; T14  
	mov B0, [D0+D1]
	mov [Dframe-144],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-144]	; T13  
	mov dword[Dframe-168],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T16  
	cmp A0,76
	jnz L2762
; ------------------------------ move
	mov A0,22
	mov [Dframe-136],A0	; T12  
; ------------------------------ jump
	jmp	L2763
; ------------------------------ label
L2762:
; ------------------------------ move
	mov A0,25
	mov [Dframe-136],A0	; T12  
; ------------------------------ label
L2763:
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-136]	; T12  
	call createunit0
	mov [Dframe-176],D0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T17  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L2764
; ------------------------------ label
L2761:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK619
	call serror
	add Dstack, 32
; ------------------------------ label
L2764:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 78:
; ------------------------------ label
L2750:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[loopindex]
	mov [Dframe-36],A0	; index -36  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2765
; ------------------------------ label
L2767:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-36]	; index -36  
; ------------------------------ label
L2765:
; ------------------------------ jumpfalse
	mov A0,[Dframe-36]	; index -36  
	and A0,A0
	jz L2768
; ------------------------------ sub
	mov A0,[Dframe-36]	; index -36  
	mov A1,1
	sub A0,A1
	mov [Dframe-200],A0	; T20  
; ------------------------------ widen
	movsx D0,dword[Dframe-200]	; T20  
	mov qword[Dframe-192],D0	; T19  
; ------------------------------ index
	lea D0,[looptypestack]
	mov D1,[Dframe-192]	; T19  
	mov B0, [D0+D1]
	mov [Dframe-184],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T18  
	mov dword[Dframe-208],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T21  
	cmp A0,76
	jnz L2767
; ------------------------------ label
L2768:
; ------------------------------ label
L2766:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-36]	; index -36  
	cmp A0,0
	jnz L2769
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK620
	call serror
	add Dstack, 32
; ------------------------------ label
L2769:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,23
	call createunit0
	mov [Dframe-216],D0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-216]	; T22  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 71:
; ------------------------------ label
L2749:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readcaselabel
	mov [Dframe-224],D0	; T23  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-224]	; T23  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 72:
; ------------------------------ label
L2748:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,10
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-232],D0	; T24  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,21
	mov D11,[Dframe-232]	; T24  
	call createunit1
	mov [Dframe-240],D0	; T25  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-240]	; T25  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 93:
; ------------------------------ label
L2747:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-248],D0	; T26  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-248]	; T26  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	call strexpr
	mov [Dframe-256],D0	; T27  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-256]	; T27  
	mov [Dframe-24],D0	; ss -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; ss -24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; T28  
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-272],A0	; T29  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-272]	; T29  
	mov A11,1
	call Strmode
	mov [Dframe-280],D0	; T30  
	add Dstack, 32
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-296],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-296]	; T32  
	mov A1,20
	mov A0, [D0+D1]
	mov [Dframe-288],A0	; T31  
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-320],A0	; T35  
; ------------------------------ widen
	movsx D0,dword[Dframe-320]	; T35  
	mov qword[Dframe-312],D0	; T34  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-312]	; T34  
	mov A0, [D0+D1*4]
	mov [Dframe-304],A0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe-304]	; T33  
	push D13
	push qword KK621
	mov A13,[Dframe-288]	; T31  
	push D13
	push qword KK622
	push qword [Dframe-280]	; T30  
	sub Dstack,32
	mov D10,KK623
	mov D11,KK624
	mov D12,[Dframe-264]	; T28  
	mov D13,KK625
	call printf
	add Dstack, 80
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-344],A0	; T38  
; ------------------------------ widen
	movsx D0,dword[Dframe-344]	; T38  
	mov qword[Dframe-336],D0	; T37  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-336]	; T37  
	mov B0, [D0+D1]
	mov [Dframe-328],B0	; T36  
; ------------------------------ widen
	movzx A0,byte [Dframe-328]	; T36  
	mov dword[Dframe-352],A0	; T39  
; ------------------------------ jumpfalse
	mov A0,[Dframe-352]	; T39  
	and A0,A0
	jz L2770
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; p -8  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-392],A0	; T44  
; ------------------------------ widen
	movsx D0,dword[Dframe-392]	; T44  
	mov qword[Dframe-384],D0	; T43  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-384]	; T43  
	mov A0, [D0+D1*4]
	mov [Dframe-376],A0	; T42  
; ------------------------------ widen
	movsx D0,dword[Dframe-376]	; T42  
	mov qword[Dframe-368],D0	; T41  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-368]	; T41  
	mov A0, [D0+D1*4]
	mov [Dframe-360],A0	; T40  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK626
	mov D11,KK627
	mov A12,[Dframe-360]	; T40  
	call printf
	add Dstack, 32
; ------------------------------ label
L2770:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK628
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 97:
; ------------------------------ label
L2746:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call dostaticassert
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L2745:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L2744:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextlx]
	mov [Dframe-408],D0	; T46  
; ------------------------------ index
	mov D0,[Dframe-408]	; T46  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-400],B0	; T45  
; ------------------------------ widen
	movzx A0,byte [Dframe-400]	; T45  
	mov dword[Dframe-416],A0	; T47  
; ------------------------------ jumpcc
	mov A0,[Dframe-416]	; T47  
	cmp A0,10
	jnz L2771
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,19
	mov D11,0
	call createunit1
	mov [Dframe-424],D0	; T48  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-424]	; T48  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-440],D0	; T50  
; ------------------------------ index
	mov D0,[Dframe-440]	; T50  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-432],D0	; T49  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-432]	; T49  
	mov A12,4
	mov A13,0
	call resolvename
	mov [Dframe-448],D0	; T51  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-448]	; T51  
	mov [Dframe-32],D0	; d -32  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-32]	; d -32  
	and D0,D0
	jz L2772
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; d -32  
	mov A1,100
	mov A0, [D0+D1]
	mov [Dframe-456],A0	; T52  
; ------------------------------ jumpfalse
	mov A0,[Dframe-456]	; T52  
	and A0,A0
	jz L2773
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-480],D0	; T55  
; ------------------------------ index
	mov D0,[Dframe-480]	; T55  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-472],D0	; T54  
; ------------------------------ index
	mov D0,[Dframe-472]	; T54  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-464],D0	; T53  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK629
	mov D11,[Dframe-464]	; T53  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK630
	call terror
	add Dstack, 32
; ------------------------------ jump
	jmp	L2774
; ------------------------------ label
L2773:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; d -32  
	mov A1,100
	lea D0, [D0+D1]
	mov [Dframe-488],D0	; T56  
; ------------------------------ preincrx
	inc dword[labelno]
	mov A0,dword[labelno]
	mov dword[Dframe-496],A0	; T57  
; ------------------------------ move
	mov A0,[Dframe-496]	; T57  
	mov D13,[Dframe-488]	; T56 *
	mov dword[D13],A0
; ------------------------------ label
L2774:
; ------------------------------ jump
	jmp	L2775
; ------------------------------ label
L2772:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-512],D0	; T59  
; ------------------------------ index
	mov D0,[Dframe-512]	; T59  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-504],D0	; T58  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-504]	; T58  
	mov A12,14
	call createdupldef
	mov [Dframe-520],D0	; T60  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-520]	; T60  
	mov [Dframe-32],D0	; d -32  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; d -32  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-528],D0	; T61  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-528]	; T61 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; d -32  
	mov A1,100
	lea D0, [D0+D1]
	mov [Dframe-536],D0	; T62  
; ------------------------------ preincrx
	inc dword[labelno]
	mov A0,dword[labelno]
	mov dword[Dframe-544],A0	; T63  
; ------------------------------ move
	mov A0,[Dframe-544]	; T63  
	mov D13,[Dframe-536]	; T62 *
	mov dword[D13],A0
; ------------------------------ label
L2775:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-552],D0	; T64  
; ------------------------------ move
	mov D0,[Dframe-32]	; d -32  
	mov D13,[Dframe-552]	; T64 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-568],D0	; T66  
; ------------------------------ index
	mov D0,[Dframe-568]	; T66  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-560],B0	; T65  
; ------------------------------ widen
	movzx A0,byte [Dframe-560]	; T65  
	mov dword[Dframe-576],A0	; T67  
; ------------------------------ jumpcc
	mov A0,[Dframe-576]	; T67  
	cmp A0,17
	jnz L2776
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK631
	call serror
	add Dstack, 32
; ------------------------------ label
L2776:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-584],D0	; T68  
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-592],D0	; T69  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-592]	; T69  
	mov D13,[Dframe-584]	; T68 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2733
; ------------------------------ jump
	jmp	L2777
; ------------------------------ label
L2771:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [ist_symptr],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	call isusertype
	mov [Dframe-600],A0	; T70  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-600]	; T70  
	and A0,A0
	jz L2778
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L104
; ------------------------------ label
L2778:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[ist_symptr]
	and D0,D0
	jz L2779
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-616],D0	; T72  
; ------------------------------ indexlv
	mov D0,[Dframe-616]	; T72  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-608],D0	; T71  
; ------------------------------ move
	mov D0,[ist_symptr]
	mov D13,[Dframe-608]	; T71 *
	mov qword[D13],D0
; ------------------------------ label
L2779:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-624],D0	; T73  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-624]	; T73  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2777:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L2736:
; ------------------------------ stmt
; ------------------------------ comment
;case 84:
; ------------------------------ label
L2737:
; ------------------------------ stmt
; ------------------------------ comment
;case 83:
; ------------------------------ label
L2738:
; ------------------------------ stmt
; ------------------------------ comment
;case 85:
; ------------------------------ label
L2739:
; ------------------------------ stmt
; ------------------------------ comment
;case 81:
; ------------------------------ label
L2740:
; ------------------------------ stmt
; ------------------------------ comment
;case 82:
; ------------------------------ label
L2741:
; ------------------------------ stmt
; ------------------------------ comment
;case 87:
; ------------------------------ label
L2742:
; ------------------------------ stmt
; ------------------------------ comment
;case 95:
; ------------------------------ label
L2743:
; ------------------------------ stmt
; ------------------------------ label
L103: ;<doreaddecl>
; ------------------------------ stmt
; ------------------------------ label
L104: ;<L185>
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readlocaldecl
	mov [Dframe-632],D0	; T74  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-632]	; T74  
	jmp L2733
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2735
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2734:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-640],D0	; T75  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-640]	; T75  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ label
L2735:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2733
; ------------------------------ label
L2733:
; ------------------------------ hardret
	add Dstack, 640
	pop Dframe
	ret
;	End

;	Proc:readifstmt
readifstmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readcond
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; pcond -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; pcond -8  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; pbody -16  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-24],D0	; pelse -24  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-56]	; T4  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T3  
	mov dword[Dframe-64],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T5  
	cmp A0,70
	jnz L2781
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-72],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-72]	; T6  
	mov [Dframe-24],D0	; pelse -24  
; ------------------------------ label
L2781:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,14
	mov D11,[Dframe-8]	; pcond -8  
	mov D12,[Dframe-16]	; pbody -16  
	mov D13,[Dframe-24]	; pelse -24  
	call createunit3
	mov [Dframe-80],D0	; T7  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-80]	; T7  
	jmp L2780
; ------------------------------ label
L2780:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:readforstmt
readforstmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 432

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,12
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-64],A0	; hasblock -64  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-104],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-104]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T1  
	mov dword[Dframe-112],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T3  
	cmp A0,9
	jz L2783
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call istypestarter
	mov [Dframe-120],A0	; T4  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-120]	; T4  
	and A0,A0
	jz L2784
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-64],A0	; hasblock -64  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call pushblock
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-60]	; linkage -60  
	mov [Dframe-128],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-128]	; T5  
	call readdeclspec
	mov [Dframe-136],A0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-136]	; T6  
	mov [Dframe-72],A0	; mbase -72  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-48],D0	; ulistx -48  
; ------------------------------ move
	mov D0,[Dframe-48]	; ulistx -48  
	mov [Dframe-40],D0	; ulist -40  
; ------------------------------ stmt
; ------------------------------ label
L105: ;<L186>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-152],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-152]	; T8  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-144],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-144]	; T7  
	mov dword[Dframe-160],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T9  
	cmp A0,65
	jz L2786
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-176],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-176]	; T11  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T10  
	mov dword[Dframe-184],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T12  
	cmp A0,23
	jz L2786
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-200],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-200]	; T14  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-192],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T13  
	mov dword[Dframe-208],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T15  
	cmp A0,12
	jnz L2785
; ------------------------------ label
L2786:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-88]	; d -88  
	mov [Dframe-216],D0	; T16  
; ------------------------------ getaddr
	lea D0,[Dframe-80]	; pm -80  
	mov [Dframe-224],D0	; T17  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-216]	; T16  
	mov A12,[Dframe-72]	; mbase -72  
	mov D13,[Dframe-224]	; T17  
	call readtype
	mov [Dframe-232],A0	; T18  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-232]	; T18  
	mov [Dframe-68],A0	; m -68  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-88]	; d -88  
	cmp D0,0
	jnz L2787
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK632
	call serror
	add Dstack, 32
; ------------------------------ label
L2787:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-60]	; linkage -60  
	cmp A0,5
	jz L2789
; ------------------------------ jumpfalse
	mov D0,[Dframe-80]	; pm -80  
	and D0,D0
	jz L2788
; ------------------------------ label
L2789:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK633
	call serror
	add Dstack, 32
; ------------------------------ label
L2788:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-88]	; d -88  
	mov A11,[Dframe-68]	; m -68  
	mov A12,[Dframe-60]	; linkage -60  
	call readframevar
	mov [Dframe-240],D0	; T19  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-240]	; T19  
	mov [Dframe-88],D0	; d -88  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-88]	; d -88  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-248],D0	; T20  
; ------------------------------ jumpfalse
	mov D0,[Dframe-248]	; T20  
	and D0,D0
	jz L2790
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,9
	call createunit0
	mov [Dframe-256],D0	; T21  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-256]	; T21  
	mov [Dframe-56],D0	; p -56  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-56]	; p -56  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-264],D0	; T22  
; ------------------------------ move
	mov D0,[Dframe-88]	; d -88  
	mov D13,[Dframe-264]	; T22 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; ulist -40  
	mov [Dframe-272],D0	; T23  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; ulistx -48  
	mov [Dframe-280],D0	; T24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-272]	; T23  
	mov D11,[Dframe-280]	; T24  
	mov D12,[Dframe-56]	; p -56  
	call addlistunit
	add Dstack, 32
; ------------------------------ label
L2790:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-296],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe-296]	; T26  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-288],B0	; T25  
; ------------------------------ widen
	movzx A0,byte [Dframe-288]	; T25  
	mov dword[Dframe-304],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-304]	; T27  
	cmp A0,8
	jnz L2791
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L2792
; ------------------------------ label
L2791:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L106
; ------------------------------ label
L2792:
; ------------------------------ jump
	jmp	L2793
; ------------------------------ label
L2785:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK634
	call serror
	add Dstack, 32
; ------------------------------ label
L2793:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L105
; ------------------------------ stmt
; ------------------------------ label
L106: ;<L187>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,7
	mov D11,[Dframe-40]	; ulist -40  
	mov D12,0
	mov D13,[Dframe-48]	; ulistx -48  
	call createunit3
	mov [Dframe-312],D0	; T28  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-312]	; T28  
	mov [Dframe-8],D0	; pinit -8  
; ------------------------------ jump
	jmp	L2794
; ------------------------------ label
L2784:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-320],D0	; T29  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-320]	; T29  
	mov [Dframe-8],D0	; pinit -8  
; ------------------------------ label
L2794:
; ------------------------------ jump
	jmp	L2795
; ------------------------------ label
L2783:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,2
	call createunit0
	mov [Dframe-328],D0	; T30  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-328]	; T30  
	mov [Dframe-8],D0	; pinit -8  
; ------------------------------ label
L2795:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-344],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-344]	; T32  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T31  
	mov dword[Dframe-352],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-352]	; T33  
	cmp A0,9
	jz L2796
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-360],D0	; T34  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-360]	; T34  
	mov [Dframe-16],D0	; pcond -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; pcond -16  
	call coercecond
	add Dstack, 32
; ------------------------------ jump
	jmp	L2797
; ------------------------------ label
L2796:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,2
	call createunit0
	mov [Dframe-368],D0	; T35  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-368]	; T35  
	mov [Dframe-16],D0	; pcond -16  
; ------------------------------ label
L2797:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-384],D0	; T37  
; ------------------------------ index
	mov D0,[Dframe-384]	; T37  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-376],B0	; T36  
; ------------------------------ widen
	movzx A0,byte [Dframe-376]	; T36  
	mov dword[Dframe-392],A0	; T38  
; ------------------------------ jumpcc
	mov A0,[Dframe-392]	; T38  
	cmp A0,13
	jz L2798
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexprstmt
	mov [Dframe-400],D0	; T39  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-400]	; T39  
	mov [Dframe-24],D0	; pincr -24  
; ------------------------------ jump
	jmp	L2799
; ------------------------------ label
L2798:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-24],D0	; pincr -24  
; ------------------------------ label
L2799:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,76
	call pushloop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-408],D0	; T40  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-408]	; T40  
	mov [Dframe-32],D0	; pbody -32  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call poploop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; hasblock -64  
	and A0,A0
	jz L2800
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call popblock
	add Dstack, 32
; ------------------------------ label
L2800:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; pinit -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-416],D0	; T41  
; ------------------------------ move
	mov D0,[Dframe-16]	; pcond -16  
	mov D13,[Dframe-416]	; T41 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; pcond -16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-424],D0	; T42  
; ------------------------------ move
	mov D0,[Dframe-24]	; pincr -24  
	mov D13,[Dframe-424]	; T42 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,15
	mov D11,[Dframe-8]	; pinit -8  
	mov D12,[Dframe-32]	; pbody -32  
	call createunit2
	mov [Dframe-432],D0	; T43  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-432]	; T43  
	jmp L2782
; ------------------------------ label
L2782:
; ------------------------------ hardret
	add Dstack, 432
	pop Dframe
	ret
;	End

;	Proc:readwhilestmt
readwhilestmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readcond
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; pcond -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; pcond -8  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,76
	call pushloop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-16],D0	; pbody -16  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call poploop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	mov D11,[Dframe-8]	; pcond -8  
	mov D12,[Dframe-16]	; pbody -16  
	call createunit2
	mov [Dframe-40],D0	; T3  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-40]	; T3  
	jmp L2801
; ------------------------------ label
L2801:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:readdostmt
readdostmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,76
	call pushloop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; pbody -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call poploop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,74
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readcond
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-16],D0	; pcond -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; pcond -16  
	call coercecond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,17
	mov D11,[Dframe-8]	; pbody -8  
	mov D12,[Dframe-16]	; pcond -16  
	call createunit2
	mov [Dframe-40],D0	; T3  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-40]	; T3  
	jmp L2802
; ------------------------------ label
L2802:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:readreturnstmt
readreturnstmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-24],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-24]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T3  
	cmp A0,9
	jz L2804
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-40],W0	; T4  
; ------------------------------ widen
	movsx A0,word [Dframe-40]	; T4  
	mov dword[Dframe-48],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T5  
	cmp A0,1
	jnz L2805
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK635
	call terror
	add Dstack, 32
; ------------------------------ label
L2805:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-56],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T6  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-64],W0	; T7  
; ------------------------------ widen
	movsx A0,word [Dframe-64]	; T7  
	mov dword[Dframe-72],A0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	mov A11,[Dframe-72]	; T8  
	call coercemode
	mov [Dframe-80],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T9  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call checksymbol
	add Dstack, 32
; ------------------------------ jump
	jmp	L2806
; ------------------------------ label
L2804:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-88],W0	; T10  
; ------------------------------ widen
	movsx A0,word [Dframe-88]	; T10  
	mov dword[Dframe-96],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T11  
	cmp A0,1
	jz L2807
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK636
	call terror
	add Dstack, 32
; ------------------------------ label
L2807:
; ------------------------------ label
L2806:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,11
	mov D11,[Dframe-8]	; p -8  
	call createunit1
	mov [Dframe-104],D0	; T12  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-104]	; T12  
	jmp L2803
; ------------------------------ label
L2803:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:readgotostmt
readgotostmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,65
	call checksymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-32]	; T2  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-24]	; T1  
	mov A12,4
	mov A13,0
	call resolvename
	mov [Dframe-40],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T3  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; d -8  
	cmp D0,0
	jnz L2809
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-56]	; T5  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-48]	; T4  
	mov A12,14
	call createdupldef
	mov [Dframe-64],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T6  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; d -8  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T7  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-72]	; T7 *
	mov word [D13],W0
; ------------------------------ label
L2809:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,18
	mov D11,0
	call createunit1
	mov [Dframe-80],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T8  
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; p -16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ move
	mov D0,[Dframe-8]	; d -8  
	mov D13,[Dframe-88]	; T9 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; p -16  
	jmp L2808
; ------------------------------ label
L2808:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:readswitchstmt
readswitchstmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readcond
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; pindex -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,83
	call pushloop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; pstmt -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,24
	mov D11,[Dframe-8]	; pindex -8  
	mov D12,[Dframe-16]	; pstmt -16  
	call createunit2
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-24],D0	; p -24  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; p -24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T4  
; ------------------------------ sub
	mov A0,[loopindex]
	mov A1,1
	sub A0,A1
	mov [Dframe-80],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T7  
	mov qword[Dframe-72],D0	; T6  
; ------------------------------ index
	lea D0,[casevaluestack]
	mov D1,[Dframe-72]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-64],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe-64]	; T5  
	mov D13,[Dframe-56]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call poploop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; p -24  
	jmp L2810
; ------------------------------ label
L2810:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:readcaselabel
readcaselabel:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readconstintexpr
	mov [Dframe-32],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-32]	; T1  
	mov [Dframe-20],A0	; value -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,10
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readstatement
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,20
	mov D11,[Dframe-40]	; T2  
	call createunit1
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T4  
; ------------------------------ move
	mov A0,[Dframe-20]	; value -20  
	mov D13,[Dframe-56]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-20]	; value -20  
	call addcasevalue
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L2811
; ------------------------------ label
L2811:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:readexprstmt
readexprstmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L2812
; ------------------------------ label
L2812:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:readcond
readcond:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,12
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readexpression
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; pcond -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; pcond -8  
	jmp L2813
; ------------------------------ label
L2813:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:isusertype
isusertype:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-24],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-24]	; T2  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe-16]	; T1  
	mov A12,2
	mov A13,[currblockno]
	call resolvename
	mov [Dframe-32],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T3  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; d -8  
	and D0,D0
	jz L2815
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T4  
	mov dword[Dframe-48],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T5  
	cmp A0,5
	jnz L2816
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-56],W0	; T6  
; ------------------------------ widen
	movsx A0,word [Dframe-56]	; T6  
	mov dword[Dframe-64],A0	; T7  
; ------------------------------ returnx
	mov A0,[Dframe-64]	; T7  
	jmp L2814
; ------------------------------ label
L2816:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; d -8  
	mov [ist_symptr],D0
; ------------------------------ label
L2815:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L2814
; ------------------------------ label
L2814:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:readlocaldecl
readlocaldecl:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 320

; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-40],D0	; ulistx -40  
; ------------------------------ move
	mov D0,[Dframe-40]	; ulistx -40  
	mov [Dframe-32],D0	; ulist -32  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-12]	; linkage -12  
	mov [Dframe-64],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-64]	; T1  
	call readdeclspec
	mov [Dframe-72],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-72]	; T2  
	mov [Dframe-8],A0	; mbase -8  
; ------------------------------ stmt
; ------------------------------ label
L107: ;<L194>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-88],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-88]	; T4  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T3  
	mov dword[Dframe-96],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T5  
	cmp A0,65
	jz L2819
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-112],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-112]	; T7  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T6  
	mov dword[Dframe-120],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T8  
	cmp A0,23
	jz L2819
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-136],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-136]	; T10  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T9  
	mov dword[Dframe-144],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T11  
	cmp A0,12
	jnz L2818
; ------------------------------ label
L2819:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-24]	; d -24  
	mov [Dframe-152],D0	; T12  
; ------------------------------ getaddr
	lea D0,[Dframe-56]	; pm -56  
	mov [Dframe-160],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-152]	; T12  
	mov A12,[Dframe-8]	; mbase -8  
	mov D13,[Dframe-160]	; T13  
	call readtype
	mov [Dframe-168],A0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-168]	; T14  
	mov [Dframe-4],A0	; m -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-24]	; d -24  
	cmp D0,0
	jnz L2820
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK637
	call serror
	add Dstack, 32
; ------------------------------ label
L2820:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; linkage -12  
	cmp A0,5
	jnz L2821
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[currproc]
	mov D11,[Dframe-24]	; d -24  
	mov A12,[Dframe-4]	; m -4  
	call createtypedef
	mov [Dframe-176],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T15  
	mov [Dframe-24],D0	; d -24  
; ------------------------------ jump
	jmp	L2822
; ------------------------------ label
L2821:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-56]	; pm -56  
	and D0,D0
	jz L2823
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK638
	call serror
	add Dstack, 32
; ------------------------------ jump
	jmp	L2824
; ------------------------------ label
L2823:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; d -24  
	mov A11,[Dframe-4]	; m -4  
	mov A12,[Dframe-12]	; linkage -12  
	call readframevar
	mov [Dframe-184],D0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-184]	; T16  
	mov [Dframe-24],D0	; d -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,8
	call createunit0
	mov [Dframe-192],D0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-192]	; T17  
	mov [Dframe-48],D0	; p -48  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-48]	; p -48  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-200],D0	; T18  
; ------------------------------ move
	mov D0,[Dframe-24]	; d -24  
	mov D13,[Dframe-200]	; T18 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; ulist -32  
	mov [Dframe-208],D0	; T19  
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; ulistx -40  
	mov [Dframe-216],D0	; T20  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-208]	; T19  
	mov D11,[Dframe-216]	; T20  
	mov D12,[Dframe-48]	; p -48  
	call addlistunit
	add Dstack, 32
; ------------------------------ label
L2824:
; ------------------------------ label
L2822:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-232],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe-232]	; T22  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-224],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-224]	; T21  
	mov dword[Dframe-240],A0	; T23  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T23  
	cmp A0,8
	jnz L2825
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L2826
; ------------------------------ label
L2825:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L108
; ------------------------------ label
L2826:
; ------------------------------ jump
	jmp	L2827
; ------------------------------ label
L2818:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; mbase -8  
	mov qword[Dframe-256],D0	; T25  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-256]	; T25  
	mov A0, [D0+D1*4]
	mov [Dframe-248],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T24  
	cmp A0,15
	jz L2829
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; mbase -8  
	mov qword[Dframe-272],D0	; T27  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-272]	; T27  
	mov A0, [D0+D1*4]
	mov [Dframe-264],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-264]	; T26  
	cmp A0,20
	jz L2829
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; mbase -8  
	mov qword[Dframe-288],D0	; T29  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-288]	; T29  
	mov A0, [D0+D1*4]
	mov [Dframe-280],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-280]	; T28  
	cmp A0,21
	jnz L2828
; ------------------------------ label
L2829:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L108
; ------------------------------ jump
	jmp	L2830
; ------------------------------ label
L2828:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; mbase -8  
	mov qword[Dframe-304],D0	; T31  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-304]	; T31  
	mov A0, [D0+D1*4]
	mov [Dframe-296],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-296]	; T30  
	cmp A0,4
	jnz L2831
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L108
; ------------------------------ jump
	jmp	L2832
; ------------------------------ label
L2831:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4]	; m -4  
	call typename
	mov [Dframe-312],D0	; T32  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK639
	mov D11,[Dframe-312]	; T32  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2832:
; ------------------------------ label
L2830:
; ------------------------------ label
L2827:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L107
; ------------------------------ stmt
; ------------------------------ label
L108: ;<L195>
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-32]	; ulist -32  
	jmp L2817
; ------------------------------ label
L2817:
; ------------------------------ hardret
	add Dstack, 320
	pop Dframe
	ret
;	End

;	Proc:createtypedef
createtypedef:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe+24]	; symptr 24  
	mov A12,2
	mov A13,[currblockno]
	call checkdupl
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; d -8  
	and D0,D0
	jz L2834
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T3  
	cmp A0,5
	jz L2835
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK640
	mov D11,[Dframe-40]	; T4  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2835:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-48],W0	; T5  
; ------------------------------ widen
	movsx A0,word [Dframe-48]	; T5  
	mov dword[Dframe-56],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T6  
	cmp A0,[Dframe+32]	; mode 32  
	jz L2836
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-64],W0	; T7  
; ------------------------------ widen
	movsx A0,word [Dframe-64]	; T7  
	mov dword[Dframe-72],A0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-72]	; T8  
	mov A11,[Dframe+32]	; mode 32  
	call comparemode
	mov [Dframe-80],A0	; T9  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-80]	; T9  
	and A0,A0
	jnz L2837
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T10  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK641
	mov D11,[Dframe-88]	; T10  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2837:
; ------------------------------ label
L2836:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; d -8  
	jmp L2833
; ------------------------------ label
L2834:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe+24]	; symptr 24  
	mov A12,5
	call createdupldef
	mov [Dframe-96],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-96]	; T11  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; d -8  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T12  
; ------------------------------ move
	mov A0,[Dframe+32]	; mode 32  
	mov D13,[Dframe-104]	; T12 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; d -8  
	mov A1,104
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T13  
; ------------------------------ move
	mov A0,[currblockno]
	mov D13,[Dframe-112]	; T13 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[currblockno]
	mov qword[Dframe-128],D0	; T15  
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,[Dframe-128]	; T15  
	lea D0, [D0+D1*4]
	mov [Dframe-120],D0	; T14  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-120]	; T14 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; d -8  
	jmp L2833
; ------------------------------ label
L2833:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:readparams
readparams:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 384

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-16],D0	; ulistx -16  
; ------------------------------ move
	mov D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-8],D0	; ulist -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-52],A0	; nnames -52  
; ------------------------------ move
	mov A0,[Dframe-52]	; nnames -52  
	mov [Dframe-40],A0	; nparams -40  
; ------------------------------ move
	mov A0,[Dframe-40]	; nparams -40  
	mov [Dframe-44],A0	; variadic -44  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[callbackflag]
	and A0,A0
	jz L2839
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [iscallbackfn],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [callbackflag],A0
; ------------------------------ label
L2839:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2840
; ------------------------------ label
L2842:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-80],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-80]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T1  
	mov dword[Dframe-88],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T3  
	cmp A0,20
	jnz L2843
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-44],A0	; variadic -44  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L109
; ------------------------------ label
L2843:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-64]	; d -64  
	mov [Dframe-96],D0	; T4  
; ------------------------------ getaddr
	lea D0,[Dframe-24]	; pm -24  
	mov [Dframe-104],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-96]	; T4  
	mov A11,1
	mov D12,[Dframe-104]	; T5  
	call readcasttype
	mov [Dframe-112],A0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-112]	; T6  
	mov [Dframe-36],A0	; m -36  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-24]	; pm -24  
	and D0,D0
	jz L2844
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-36]	; m -36  
	mov D11,[Dframe-24]	; pm -24  
	call createprocmode
	mov [Dframe-120],A0	; T7  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-120]	; T7  
	call createrefmode
	mov [Dframe-128],A0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-128]	; T8  
	mov [Dframe-36],A0	; m -36  
; ------------------------------ label
L2844:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-36]	; m -36  
	mov qword[Dframe-144],D0	; T10  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-144]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-136],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T9  
	cmp A0,19
	jnz L2845
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-36]	; m -36  
	mov qword[Dframe-160],D0	; T12  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-160]	; T12  
	mov A0, [D0+D1*4]
	mov [Dframe-152],A0	; T11  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-152]	; T11  
	call createrefmode
	mov [Dframe-168],A0	; T13  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-168]	; T13  
	mov [Dframe-36],A0	; m -36  
; ------------------------------ label
L2845:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,24
	call pcm_allocz
	mov [Dframe-176],D0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T14  
	mov [Dframe-24],D0	; pm -24  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; pm -24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T15  
; ------------------------------ move
	mov D0,[Dframe-64]	; d -64  
	mov D13,[Dframe-184]	; T15 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; pm -24  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-192],D0	; T16  
; ------------------------------ move
	mov A0,[Dframe-36]	; m -36  
	mov D13,[Dframe-192]	; T16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-40]	; nparams -40  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-64]	; d -64  
	and D0,D0
	jz L2846
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-52]	; nnames -52  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; ulist -8  
	mov [Dframe-32],D0	; q -32  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2847
; ------------------------------ label
L2849:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; q -32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T17  
; ------------------------------ jumpcc
	mov D0,[Dframe-200]	; T17  
	cmp D0,[Dframe-64]	; d -64  
	jnz L2850
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; d -64  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-208],D0	; T18  
; ------------------------------ index
	mov D0,[Dframe-64]	; d -64  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-232],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T21  
	mov dword[Dframe-240],A0	; T22  
; ------------------------------ widen
	movsx D0,dword[Dframe-240]	; T22  
	mov qword[Dframe-224],D0	; T20  
; ------------------------------ index
	lea D0,[namenames]
	mov D1,[Dframe-224]	; T20  
	mov D0, [D0+D1*8]
	mov [Dframe-216],D0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK642
	mov D11,[Dframe-208]	; T18  
	mov D12,[Dframe-216]	; T19  
	call serror_ss
	add Dstack, 32
; ------------------------------ label
L2850:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; q -32  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; q -32  
; ------------------------------ label
L2847:
; ------------------------------ jumptrue
	mov D0,[Dframe-32]	; q -32  
	and D0,D0
	jnz L2849
; ------------------------------ label
L2848:
; ------------------------------ label
L2846:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; ulist -8  
	mov [Dframe-248],D0	; T23  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; ulistx -16  
	mov [Dframe-256],D0	; T24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-248]	; T23  
	mov D11,[Dframe-256]	; T24  
	mov D12,[Dframe-24]	; pm -24  
	call addlistparam
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-272],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe-272]	; T26  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-264],B0	; T25  
; ------------------------------ widen
	movzx A0,byte [Dframe-264]	; T25  
	mov dword[Dframe-280],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-280]	; T27  
	cmp A0,8
	jnz L2851
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L2852
; ------------------------------ label
L2851:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-296],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-296]	; T29  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-288],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-288]	; T28  
	mov dword[Dframe-304],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-304]	; T30  
	cmp A0,20
	jz L2854
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-320],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe-320]	; T32  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-312],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-312]	; T31  
	mov dword[Dframe-328],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T33  
	cmp A0,13
	jnz L2853
; ------------------------------ label
L2854:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2855
; ------------------------------ label
L2853:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK643
	call serror
	add Dstack, 32
; ------------------------------ label
L2855:
; ------------------------------ label
L2852:
; ------------------------------ label
L2840:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-344],D0	; T35  
; ------------------------------ index
	mov D0,[Dframe-344]	; T35  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T34  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T34  
	mov dword[Dframe-352],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-352]	; T36  
	cmp A0,13
	jnz L2842
; ------------------------------ label
L2841:
; ------------------------------ stmt
; ------------------------------ label
L109: ;<L207>
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-48],A0	; flags -48  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-44]	; variadic -44  
	and A0,A0
	jz L2856
; ------------------------------ stmt
; ------------------------------ move
	mov A0,3
	mov [Dframe-48],A0	; flags -48  
; ------------------------------ jump
	jmp	L2857
; ------------------------------ label
L2856:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; nparams -40  
	cmp A0,0
	jnz L2858
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-48],A0	; flags -48  
; ------------------------------ jump
	jmp	L2859
; ------------------------------ label
L2858:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; nparams -40  
	cmp A0,1
	jnz L2860
; ------------------------------ jumpcc
	mov A0,[Dframe-36]	; m -36  
	cmp A0,1
	jnz L2860
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-48],A0	; flags -48  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-40],A0	; nparams -40  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ulist -8  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-360],D0	; T37  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-360]	; T37 *
	mov dword[D13],A0
; ------------------------------ label
L2860:
; ------------------------------ label
L2859:
; ------------------------------ label
L2857:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; ulist -8  
	cmp D0,0
	jnz L2861
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,24
	call pcm_allocz
	mov [Dframe-368],D0	; T38  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-368]	; T38  
	mov [Dframe-8],D0	; ulist -8  
; ------------------------------ label
L2861:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ulist -8  
	mov A1,20
	lea D0, [D0+D1]
	mov [Dframe-376],D0	; T39  
; ------------------------------ move
	mov A0,[Dframe-40]	; nparams -40  
	mov D13,[Dframe-376]	; T39 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ulist -8  
	mov A1,22
	lea D0, [D0+D1]
	mov [Dframe-384],D0	; T40  
; ------------------------------ move
	mov A0,[Dframe-48]	; flags -48  
	mov D13,[Dframe-384]	; T40 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ulist -8  
	jmp L2838
; ------------------------------ label
L2838:
; ------------------------------ hardret
	add Dstack, 384
	pop Dframe
	ret
;	End

;	Proc:readcasttype
readcasttype:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[currproc]
	and D0,D0
	jz L2863
; ------------------------------ move
	mov D0,[currproc]
	mov [Dframe-24],D0	; T1  
; ------------------------------ jump
	jmp	L2864
; ------------------------------ label
L2863:
; ------------------------------ move
	mov D0,[stmodule]
	mov [Dframe-24],D0	; T1  
; ------------------------------ label
L2864:
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; owner -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; linkage -16  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe+16]	; d 16 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; linkage -16  
	mov [Dframe-32],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; owner -8  
	mov D11,[Dframe-32]	; T2  
	call readdeclspec
	mov [Dframe-40],A0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [Dframe-12],A0	; m -12  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe+32]	; pm 32 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-56]	; T5  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T4  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T6  
	cmp A0,65
	jz L2866
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-80],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-80]	; T8  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T9  
	cmp A0,23
	jz L2866
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-104],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-104]	; T11  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T10  
	mov dword[Dframe-112],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T12  
	cmp A0,12
	jz L2866
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-128],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-128]	; T14  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T13  
	mov dword[Dframe-136],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T15  
	cmp A0,14
	jnz L2865
; ------------------------------ label
L2866:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; owner -8  
	mov D11,[Dframe+16]	; d 16  
	mov A12,[Dframe-12]	; m -12  
	mov D13,[Dframe+32]	; pm 32  
	call readtype
	mov [Dframe-144],A0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-144]	; T16  
	mov [Dframe-12],A0	; m -12  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; d 16  
	mov D0, [D0]
	mov [Dframe-152],D0	; T17  
; ------------------------------ jumpfalse
	mov D0,[Dframe-152]	; T17  
	and D0,D0
	jz L2867
; ------------------------------ jumptrue
	mov A0,[Dframe+24]	; allowname 24  
	and A0,A0
	jnz L2867
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; d 16  
	mov D0, [D0]
	mov [Dframe-168],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe-168]	; T19  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-160],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK644
	mov D11,[Dframe-160]	; T18  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2867:
; ------------------------------ label
L2865:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe-12]	; m -12  
	jmp L2862
; ------------------------------ label
L2862:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:readfunction
readfunction:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[stmodule]
	mov [Dframe-16],D0	; owner -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe+48]	; wasdef 48 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; owner -16  
	mov D11,[Dframe+16]	; d 16  
	mov A12,2
	mov A13,0
	call checkdupl
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; f -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; f -8  
	and D0,D0
	jz L2869
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; f -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-40],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T2  
	mov dword[Dframe-48],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T3  
	cmp A0,6
	jz L2870
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK645
	mov D11,[Dframe-56]	; T4  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2870:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; f -8  
	mov [Dframe+16],D0	; d 16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T5  
	mov dword[Dframe-72],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-72]	; T6  
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,2
	jnz L2873
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,0
	jz L2872
; ------------------------------ label
L2873:
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,4
	jnz L2874
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jz L2872
; ------------------------------ label
L2874:
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,3
	jnz L2871
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jnz L2871
; ------------------------------ label
L2872:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2875
; ------------------------------ label
L2871:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,3
	jnz L2876
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,0
	jnz L2876
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ label
L2876:
; ------------------------------ label
L2875:
; ------------------------------ jump
	jmp	L2877
; ------------------------------ label
L2869:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; owner -16  
	mov D11,[Dframe+16]	; d 16  
	mov A12,6
	call createdupldef
	mov [Dframe-80],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T7  
	mov [Dframe+16],D0	; d 16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T8  
; ------------------------------ move
	mov A0,[Dframe+24]	; m 24  
	mov D13,[Dframe-88]	; T8 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,1
	jnz L2878
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ jump
	jmp	L2879
; ------------------------------ label
L2878:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; linkage 32  
	cmp A0,4
	jnz L2880
; ------------------------------ stmt
; ------------------------------ move
	mov A0,3
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ jump
	jmp	L2881
; ------------------------------ label
L2880:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-20],A0	; scope -20  
; ------------------------------ label
L2881:
; ------------------------------ label
L2879:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [iscallbackfn]
	mov dword[Dframe-96],A0	; T9  
; ------------------------------ jumpfalse
	mov A0,[Dframe-96]	; T9  
	and A0,A0
	jz L2882
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,124
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T10  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-104]	; T10 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [iscallbackfn],B0
; ------------------------------ label
L2882:
; ------------------------------ label
L2877:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,80
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T11  
; ------------------------------ move
	mov D0,[Dframe+40]	; pm 40  
	mov D13,[Dframe-112]	; T11 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T12  
; ------------------------------ move
	mov A0,[Dframe-20]	; scope -20  
	mov D13,[Dframe-120]	; T12 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-136],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-136]	; T14  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T13  
	mov dword[Dframe-144],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T15  
	cmp A0,16
	jnz L2883
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe+48]	; wasdef 48 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T16  
; ------------------------------ jumpfalse
	mov D0,[Dframe-152]	; T16  
	and D0,D0
	jz L2884
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-160],D0	; T17  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK646
	mov D11,[Dframe-160]	; T17  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L2884:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; scope -20  
	cmp A0,3
	jnz L2885
; ------------------------------ stmt
; ------------------------------ label
L2885:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; d 16  
	call readfunctionbody
	add Dstack, 32
; ------------------------------ label
L2883:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; d 16  
	jmp L2868
; ------------------------------ label
L2868:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

;	Proc:readfunctionbody
readfunctionbody:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; f 16  
	mov [currproc],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [currblockno],A0
; ------------------------------ move
	mov A0,[currblockno]
	mov [nextblockno],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-28],A0	; pmcount -28  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; f 16  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; pm -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; pm -24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T1  
; ------------------------------ jumpfalse
	mov D0,[Dframe-40]	; T1  
	and D0,D0
	jz L2887
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; pm -24  
	mov A1,20
	mov W0, [D0+D1]
	mov [Dframe-48],W0	; T2  
; ------------------------------ widen
	movsx A0,word [Dframe-48]	; T2  
	mov dword[Dframe-56],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-56]	; T3  
	mov [Dframe-32],A0	; av_2 -32  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2888
; ------------------------------ label
L2890:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; pm -24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; f 16  
	mov D11,[Dframe-64]	; T4  
	mov A12,9
	call createdupldef
	mov [Dframe-72],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-72]	; T5  
	mov [Dframe-8],D0	; e -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; e -8  
	mov A1,104
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T6  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-80]	; T6 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; e -8  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-24]	; pm -24  
	mov A1,16
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-96]	; T8  
	mov D13,[Dframe-88]	; T7 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; pm -24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; pm -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-28],A0	; pmcount -28  
; ------------------------------ label
L2888:
; ------------------------------ postdecrx
	mov A0,[Dframe-32]	; av_2 -32  
	dec dword[Dframe-32]	; av_2 -32  
	mov dword[Dframe-104],A0	; T9  
; ------------------------------ jumptrue
	mov A0,[Dframe-104]	; T9  
	and A0,A0
	jnz L2890
; ------------------------------ label
L2889:
; ------------------------------ jump
	jmp	L2891
; ------------------------------ label
L2887:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; pm -24  
	mov A1,20
	mov W0, [D0+D1]
	mov [Dframe-112],W0	; T10  
; ------------------------------ widen
	movsx A0,word [Dframe-112]	; T10  
	mov dword[Dframe-120],A0	; T11  
; ------------------------------ jumpfalse
	mov A0,[Dframe-120]	; T11  
	and A0,A0
	jz L2892
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK647
	call serror
	add Dstack, 32
; ------------------------------ label
L2892:
; ------------------------------ label
L2891:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-28]	; pmcount -28  
	call readcompoundstmt
	mov [Dframe-128],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-128]	; T12  
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[currproc]
	mov A1,72
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T13  
; ------------------------------ move
	mov D0,[Dframe-16]	; p -16  
	mov D13,[Dframe-136]	; T13 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [currproc],D0
; ------------------------------ label
L2886:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

;	Proc:createnegop
createnegop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; t -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T1  
	cmp A0,1
	jnz L2894
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,4
	jz L2896
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,5
	jz L2896
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,10
	jnz L2895
; ------------------------------ label
L2896:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ neg
	mov D0,[Dframe-40]	; T3  
	neg D0
	mov [Dframe-48],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-48]	; T4  
	mov D13,[Dframe-32]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2893
; ------------------------------ jump
	jmp	L2897
; ------------------------------ label
L2895:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,9
	jnz L2898
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ neg
	mov D0,[Dframe-64]	; T6  
	neg D0
	mov [Dframe-72],D0	; T7  
; ------------------------------ iand
	mov D0,[Dframe-72]	; T7  
	mov D1,[RR15]
	and D0,D1
	mov [Dframe-80],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-80]	; T8  
	mov D13,[Dframe-56]	; T5 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2893
; ------------------------------ jump
	jmp	L2899
; ------------------------------ label
L2898:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,12
	jnz L2900
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-96],D0	; T10  
; ------------------------------ neg
	movq XMM0,[Dframe-96]	; T10  
	xorpd XMM0,[fchsmask_pd]
	movq [Dframe-104],XMM0	; T11  
; ------------------------------ move
	mov D0,[Dframe-104]	; T11  
	mov D13,[Dframe-88]	; T9 *
	mov qword[D13],D0
; ------------------------------ label
L2900:
; ------------------------------ label
L2899:
; ------------------------------ label
L2897:
; ------------------------------ label
L2894:
; ------------------------------ stmt
; ------------------------------ label
L110: ;<retry>
; ------------------------------ stmt
; ------------------------------ label
L111: ;<L235>
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,2
	jl L2901
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,13
	jg L2901
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call coercebasetype
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,60
	mov D11,[Dframe+16]	; p 16  
	call createunit1
	mov [Dframe-112],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T12  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ jump
	jmp	L2902
; ------------------------------ label
L2901:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-128]	; T14  
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T13  
	mov dword[Dframe-136],A0	; T15  
; ------------------------------ jumpfalse
	mov A0,[Dframe-136]	; T15  
	and A0,A0
	jz L2903
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-144],D0	; T16  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-144]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; t -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L111
; ------------------------------ jump
	jmp	L2904
; ------------------------------ label
L2903:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-12]	; t -12  
	mov A11,1
	call Strmode
	mov [Dframe-152],D0	; T17  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK648
	mov D11,[Dframe-152]	; T17  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK649
	call terror
	add Dstack, 32
; ------------------------------ label
L2904:
; ------------------------------ label
L2902:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T18  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-168],A0	; T19  
; ------------------------------ move
	mov A0,[Dframe-168]	; T19  
	mov D13,[Dframe-160]	; T18 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L2893
; ------------------------------ label
L2893:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:createabsop
createabsop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; t -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T1  
	cmp A0,1
	jnz L2906
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,4
	jz L2908
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,5
	jnz L2907
; ------------------------------ label
L2908:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ abs
	mov D0,[Dframe-40]	; T3  
	cmp D0, 0
	jge L4757
	neg D0
L4757:
	mov [Dframe-48],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-48]	; T4  
	mov D13,[Dframe-32]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2905
; ------------------------------ label
L2907:
; ------------------------------ label
L2906:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,2
	jl L2909
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,10
	jg L2909
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call coercebasetype
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,61
	mov D11,[Dframe+16]	; p 16  
	call createunit1
	mov [Dframe-56],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ jump
	jmp	L2910
; ------------------------------ label
L2909:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK650
	call terror
	add Dstack, 32
; ------------------------------ label
L2910:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T7  
; ------------------------------ move
	mov A0,[Dframe-72]	; T7  
	mov D13,[Dframe-64]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L2905
; ------------------------------ label
L2905:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:createinotop
createinotop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T2  
	mov qword[Dframe-24],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-24]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; t -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,1
	jnz L2912
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,4
	jz L2914
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,5
	jz L2914
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,9
	jz L2914
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,10
	jnz L2913
; ------------------------------ label
L2914:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ inot
	mov D0,[Dframe-56]	; T5  
	not D0
	mov [Dframe-64],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-64]	; T6  
	mov D13,[Dframe-48]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2911
; ------------------------------ label
L2913:
; ------------------------------ label
L2912:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,2
	jle L2915
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,10
	jg L2915
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call coercebasetype
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,62
	mov D11,[Dframe+16]	; p 16  
	call createunit1
	mov [Dframe-72],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-72]	; T7  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ jump
	jmp	L2916
; ------------------------------ label
L2915:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-12]	; t -12  
	mov A11,1
	call Strmode
	mov [Dframe-80],D0	; T8  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK651
	mov D11,[Dframe-80]	; T8  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK652
	call terror
	add Dstack, 32
; ------------------------------ label
L2916:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-96]	; T10  
	mov D13,[Dframe-88]	; T9 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L2911
; ------------------------------ label
L2911:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:createderefop
createderefop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; t -12  
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-32]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ jumptrue
	mov A0,[Dframe-40]	; T3  
	and A0,A0
	jnz L2918
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK653
	call terror
	add Dstack, 32
; ------------------------------ label
L2918:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-48],D0	; T4  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-48]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; m -16  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; m -16  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-64]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T5  
	cmp A0,17
	jnz L2919
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2917
; ------------------------------ label
L2919:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T7  
	cmp A0,4
	jnz L2920
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T8  
; ------------------------------ move
	mov A0,3
	mov D13,[Dframe-80]	; T8 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-104],D0	; T11  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-104]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-96],A0	; T10  
; ------------------------------ move
	mov A0,[Dframe-96]	; T10  
	mov D13,[Dframe-88]	; T9 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call fixmemopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2917
; ------------------------------ jump
	jmp	L2921
; ------------------------------ label
L2920:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-112],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T12  
	cmp A0,57
	jnz L2922
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T13  
; ------------------------------ move
	mov A0,56
	mov D13,[Dframe-120]	; T13 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-128],D0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-144],D0	; T16  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-144]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-136],A0	; T15  
; ------------------------------ move
	mov A0,[Dframe-136]	; T15  
	mov D13,[Dframe-128]	; T14 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call fixmemopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2917
; ------------------------------ label
L2922:
; ------------------------------ label
L2921:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,55
	mov D11,[Dframe+16]	; p 16  
	call createunit1
	mov [Dframe-152],D0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-152]	; T17  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T18  
; ------------------------------ move
	mov A0,[Dframe-16]	; m -16  
	mov D13,[Dframe-160]	; T18 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; q -8  
	call arraytopointer
	mov [Dframe-168],D0	; T19  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-168]	; T19  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; q -8  
	call fixmemopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L2917
; ------------------------------ label
L2917:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:createincrop
createincrop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; t -12  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; p 24  
	call checklvalue
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,2
	jl L2925
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,10
	jg L2925
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,6
	jnz L2924
; ------------------------------ label
L2925:
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-32]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ jumptrue
	mov A0,[Dframe-40]	; T3  
	and A0,A0
	jnz L2924
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK654
	call terror
	add Dstack, 32
; ------------------------------ label
L2924:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe+24]	; p 24  
	call createunit1
	mov [Dframe-48],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T4  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-64]	; T6  
	mov D13,[Dframe-56]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L2923
; ------------------------------ label
L2923:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:createsizeofop
createsizeofop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; t -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T1  
; ------------------------------ switch
	mov A0,[Dframe-24]	; T1  
	sub A0, 1
	cmp A0, 55
	jae L2927
	jmp [A0*8+L2933]
	align 8
; ------------------------------ label
L2933:
; ------------------------------ jumplabel
	dq L2930	; 1
; ------------------------------ jumplabel
	dq L2927	; 2
; ------------------------------ jumplabel
	dq L2931	; 3
; ------------------------------ jumplabel
	dq L2932	; 4
; ------------------------------ jumplabel
	dq L2927	; 5
; ------------------------------ jumplabel
	dq L2927	; 6
; ------------------------------ jumplabel
	dq L2927	; 7
; ------------------------------ jumplabel
	dq L2927	; 8
; ------------------------------ jumplabel
	dq L2927	; 9
; ------------------------------ jumplabel
	dq L2927	; 10
; ------------------------------ jumplabel
	dq L2927	; 11
; ------------------------------ jumplabel
	dq L2927	; 12
; ------------------------------ jumplabel
	dq L2927	; 13
; ------------------------------ jumplabel
	dq L2927	; 14
; ------------------------------ jumplabel
	dq L2927	; 15
; ------------------------------ jumplabel
	dq L2927	; 16
; ------------------------------ jumplabel
	dq L2927	; 17
; ------------------------------ jumplabel
	dq L2927	; 18
; ------------------------------ jumplabel
	dq L2927	; 19
; ------------------------------ jumplabel
	dq L2927	; 20
; ------------------------------ jumplabel
	dq L2927	; 21
; ------------------------------ jumplabel
	dq L2927	; 22
; ------------------------------ jumplabel
	dq L2927	; 23
; ------------------------------ jumplabel
	dq L2927	; 24
; ------------------------------ jumplabel
	dq L2927	; 25
; ------------------------------ jumplabel
	dq L2927	; 26
; ------------------------------ jumplabel
	dq L2927	; 27
; ------------------------------ jumplabel
	dq L2927	; 28
; ------------------------------ jumplabel
	dq L2927	; 29
; ------------------------------ jumplabel
	dq L2927	; 30
; ------------------------------ jumplabel
	dq L2927	; 31
; ------------------------------ jumplabel
	dq L2927	; 32
; ------------------------------ jumplabel
	dq L2927	; 33
; ------------------------------ jumplabel
	dq L2927	; 34
; ------------------------------ jumplabel
	dq L2927	; 35
; ------------------------------ jumplabel
	dq L2927	; 36
; ------------------------------ jumplabel
	dq L2927	; 37
; ------------------------------ jumplabel
	dq L2927	; 38
; ------------------------------ jumplabel
	dq L2927	; 39
; ------------------------------ jumplabel
	dq L2927	; 40
; ------------------------------ jumplabel
	dq L2927	; 41
; ------------------------------ jumplabel
	dq L2927	; 42
; ------------------------------ jumplabel
	dq L2927	; 43
; ------------------------------ jumplabel
	dq L2927	; 44
; ------------------------------ jumplabel
	dq L2927	; 45
; ------------------------------ jumplabel
	dq L2927	; 46
; ------------------------------ jumplabel
	dq L2927	; 47
; ------------------------------ jumplabel
	dq L2927	; 48
; ------------------------------ jumplabel
	dq L2927	; 49
; ------------------------------ jumplabel
	dq L2927	; 50
; ------------------------------ jumplabel
	dq L2927	; 51
; ------------------------------ jumplabel
	dq L2927	; 52
; ------------------------------ jumplabel
	dq L2927	; 53
; ------------------------------ jumplabel
	dq L2927	; 54
; ------------------------------ jumplabel
	dq L2929	; 55
; ------------------------------ stmt
; ------------------------------ comment
;case 3:
; ------------------------------ label
L2931:
; ------------------------------ stmt
; ------------------------------ comment
;case 4:
; ------------------------------ label
L2932:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-48]	; T4  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-40],W0	; T3  
; ------------------------------ widen
	movsx A0,word [Dframe-40]	; T3  
	mov dword[Dframe-56],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T5  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-32]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; size -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2928
; ------------------------------ stmt
; ------------------------------ comment
;case 1:
; ------------------------------ label
L2930:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,[trefchar]
	jnz L2934
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T6  
; ------------------------------ add
	mov A0,[Dframe-64]	; T6  
	mov A1,1
	add A0,A1
	mov [Dframe-16],A0	; size -16  
; ------------------------------ jump
	jmp	L2935
; ------------------------------ label
L2934:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-72]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; size -16  
; ------------------------------ label
L2935:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2928
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L2929:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-88],D0	; T9  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-88]	; T9  
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T8  
	mov dword[Dframe-96],A0	; T10  
; ------------------------------ jumpfalse
	mov A0,[Dframe-96]	; T10  
	and A0,A0
	jz L2936
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-104],A0	; T11  
; ------------------------------ jumpfalse
	mov A0,[Dframe-104]	; T11  
	and A0,A0
	jz L2936
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-136],D0	; T15  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-136]	; T15  
	mov A0, [D0+D1*4]
	mov [Dframe-128],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T14  
	mov qword[Dframe-120],D0	; T13  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-120]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-112],A0	; T12  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-144],A0	; T16  
; ------------------------------ mul
	mov A0,[Dframe-112]	; T12  
	mov A1,[Dframe-144]	; T16  
	mul A1
	mov [Dframe-16],A0	; size -16  
; ------------------------------ jump
	jmp	L2937
; ------------------------------ label
L2936:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-152],D0	; T17  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-152]	; T17  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; size -16  
; ------------------------------ label
L2937:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2928
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2927:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; t -12  
	mov qword[Dframe-160],D0	; T18  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-160]	; T18  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; size -16  
; ------------------------------ label
L2928:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; size -16  
	mov qword[Dframe-168],D0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-168]	; T19  
	mov A11,4
	call createconstunit
	mov [Dframe-176],D0	; T20  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T20  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L2926
; ------------------------------ label
L2926:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:createaddrofop
createaddrofop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 336

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ label
L112: ;<restartx>
; ------------------------------ stmt
; ------------------------------ label
L113: ;<L245>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-20],A0	; t -20  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T1  
; ------------------------------ switch
	mov A0,[Dframe-32]	; T1  
	sub A0, 3
	cmp A0, 56
	jae L2939
	jmp [A0*8+L2949]
	align 8
; ------------------------------ label
L2949:
; ------------------------------ jumplabel
	dq L2948	; 1
; ------------------------------ jumplabel
	dq L2947	; 2
; ------------------------------ jumplabel
	dq L2941	; 3
; ------------------------------ jumplabel
	dq L2946	; 4
; ------------------------------ jumplabel
	dq L2939	; 5
; ------------------------------ jumplabel
	dq L2939	; 6
; ------------------------------ jumplabel
	dq L2939	; 7
; ------------------------------ jumplabel
	dq L2939	; 8
; ------------------------------ jumplabel
	dq L2939	; 9
; ------------------------------ jumplabel
	dq L2939	; 10
; ------------------------------ jumplabel
	dq L2939	; 11
; ------------------------------ jumplabel
	dq L2939	; 12
; ------------------------------ jumplabel
	dq L2939	; 13
; ------------------------------ jumplabel
	dq L2939	; 14
; ------------------------------ jumplabel
	dq L2939	; 15
; ------------------------------ jumplabel
	dq L2939	; 16
; ------------------------------ jumplabel
	dq L2939	; 17
; ------------------------------ jumplabel
	dq L2939	; 18
; ------------------------------ jumplabel
	dq L2939	; 19
; ------------------------------ jumplabel
	dq L2939	; 20
; ------------------------------ jumplabel
	dq L2939	; 21
; ------------------------------ jumplabel
	dq L2939	; 22
; ------------------------------ jumplabel
	dq L2939	; 23
; ------------------------------ jumplabel
	dq L2939	; 24
; ------------------------------ jumplabel
	dq L2939	; 25
; ------------------------------ jumplabel
	dq L2939	; 26
; ------------------------------ jumplabel
	dq L2939	; 27
; ------------------------------ jumplabel
	dq L2939	; 28
; ------------------------------ jumplabel
	dq L2939	; 29
; ------------------------------ jumplabel
	dq L2939	; 30
; ------------------------------ jumplabel
	dq L2939	; 31
; ------------------------------ jumplabel
	dq L2939	; 32
; ------------------------------ jumplabel
	dq L2939	; 33
; ------------------------------ jumplabel
	dq L2939	; 34
; ------------------------------ jumplabel
	dq L2939	; 35
; ------------------------------ jumplabel
	dq L2939	; 36
; ------------------------------ jumplabel
	dq L2939	; 37
; ------------------------------ jumplabel
	dq L2939	; 38
; ------------------------------ jumplabel
	dq L2939	; 39
; ------------------------------ jumplabel
	dq L2939	; 40
; ------------------------------ jumplabel
	dq L2939	; 41
; ------------------------------ jumplabel
	dq L2939	; 42
; ------------------------------ jumplabel
	dq L2939	; 43
; ------------------------------ jumplabel
	dq L2939	; 44
; ------------------------------ jumplabel
	dq L2939	; 45
; ------------------------------ jumplabel
	dq L2939	; 46
; ------------------------------ jumplabel
	dq L2939	; 47
; ------------------------------ jumplabel
	dq L2939	; 48
; ------------------------------ jumplabel
	dq L2939	; 49
; ------------------------------ jumplabel
	dq L2939	; 50
; ------------------------------ jumplabel
	dq L2939	; 51
; ------------------------------ jumplabel
	dq L2939	; 52
; ------------------------------ jumplabel
	dq L2945	; 53
; ------------------------------ jumplabel
	dq L2944	; 54
; ------------------------------ jumplabel
	dq L2943	; 55
; ------------------------------ jumplabel
	dq L2942	; 56
; ------------------------------ stmt
; ------------------------------ comment
;case 3:
; ------------------------------ label
L2948:
; ------------------------------ stmt
; ------------------------------ label
L114: ;<doname>
; ------------------------------ stmt
; ------------------------------ label
L115: ;<L246>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-48],W0	; T3  
; ------------------------------ widen
	movsx A0,word [Dframe-48]	; T3  
	mov dword[Dframe-56],A0	; T4  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-56]	; T4  
	call createrefmode
	mov [Dframe-64],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-64]	; T5  
	mov D13,[Dframe-40]	; T2 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-72]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2938
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2940
; ------------------------------ stmt
; ------------------------------ comment
;case 4:
; ------------------------------ label
L2947:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-80],W0	; T7  
; ------------------------------ widen
	movsx A0,word [Dframe-80]	; T7  
	mov dword[Dframe-88],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-88]	; T8  
	mov [Dframe-24],A0	; u -24  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-104],D0	; T10  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-104]	; T10  
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T9  
	mov dword[Dframe-112],A0	; T11  
; ------------------------------ jumpfalse
	mov A0,[Dframe-112]	; T11  
	and A0,A0
	jz L2950
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; u -24  
	mov qword[Dframe-128],D0	; T13  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-128]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-120],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T12  
	cmp A0,19
	jnz L2950
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T14  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; u -24  
	call createrefmode
	mov [Dframe-144],A0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-144]	; T15  
	mov D13,[Dframe-136]	; T14 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2938
; ------------------------------ label
L2950:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK655
	mov D11,[Dframe-152]	; T16  
	call serror_s
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2940
; ------------------------------ stmt
; ------------------------------ comment
;case 6:
; ------------------------------ label
L2946:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-168],D0	; T18  
; ------------------------------ index
	mov D0,[Dframe-168]	; T18  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-160],W0	; T17  
; ------------------------------ widen
	movsx A0,word [Dframe-160]	; T17  
	mov dword[Dframe-176],A0	; T19  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-192],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe-192]	; T21  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-184],D0	; T20  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-176]	; T19  
	mov D11,[Dframe-184]	; T20  
	call createprocmode
	mov [Dframe-200],A0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-200]	; T22  
	mov [Dframe-20],A0	; t -20  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2940
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L2945:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-208],D0	; T23  
; ------------------------------ returnx
	mov D0,[Dframe-208]	; T23  
	jmp L2938
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2940
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L2944:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-216],D0	; T24  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-216]	; T24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T25  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-232],A0	; T26  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-232]	; T26  
	call createrefmode
	mov [Dframe-240],A0	; T27  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-240]	; T27  
	mov D13,[Dframe-224]	; T25 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2940
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L2943:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-248],A0	; T28  
; ------------------------------ jumpfalse
	mov A0,[Dframe-248]	; T28  
	and A0,A0
	jz L2951
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T29  
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-272],D0	; T31  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-272]	; T31  
	mov A0, [D0+D1*4]
	mov [Dframe-264],A0	; T30  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-280],A0	; T32  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-264]	; T30  
	mov A11,[Dframe-280]	; T32  
	call createarraymode
	mov [Dframe-288],A0	; T33  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-288]	; T33  
	call createrefmode
	mov [Dframe-296],A0	; T34  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-296]	; T34  
	mov D13,[Dframe-256]	; T29 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2938
; ------------------------------ jump
	jmp	L2952
; ------------------------------ label
L2951:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L117
; ------------------------------ label
L2952:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2940
; ------------------------------ stmt
; ------------------------------ comment
;case 58:
; ------------------------------ label
L2942:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-312],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe-312]	; T36  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-304],A0	; T35  
; ------------------------------ jumpcc
	mov A0,[Dframe-304]	; T35  
	cmp A0,3
	jnz L2953
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; p 16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L115
; ------------------------------ label
L2953:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L117
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2940
; ------------------------------ stmt
; ------------------------------ comment
;case 5:
; ------------------------------ label
L2941:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; p 16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L113
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L2940
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L2939:
; ------------------------------ stmt
; ------------------------------ label
L116: ;<cad1>
; ------------------------------ stmt
; ------------------------------ label
L117: ;<L247>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call checklvalue
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-20],A0	; t -20  
; ------------------------------ label
L2940:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-320],D0	; T37  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; t -20  
	call createrefmode
	mov [Dframe-328],A0	; T38  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-328]	; T38  
	mov D13,[Dframe-320]	; T37 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L2938
; ------------------------------ label
L2938:
; ------------------------------ hardret
	add Dstack, 336
	pop Dframe
	ret
;	End

;	Proc:createaddop
createaddop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 272

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T2  
	mov qword[Dframe-48],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-48]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; s -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T4  
	mov qword[Dframe-64],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-64]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; t -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,41
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-96],D0	; T7  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-96]	; T7  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; t -16  
	mov qword[Dframe-104],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-88]	; T6  
	mov D1,[Dframe-104]	; T8  
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T5  
	mov dword[Dframe-112],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-112]	; T9  
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; u -20  
	and A0,A0
	jz L2955
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; x 16  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-120],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-120]	; T10  
	mov [Dframe+16],D0	; x 16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; y 24  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-128],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-128]	; T11  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ jump
	jmp	L2956
; ------------------------------ label
L2955:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; s -12  
	cmp A0,16
	jnz L2957
; ------------------------------ stmt
; ------------------------------ label
L118: ;<doaddref>
; ------------------------------ stmt
; ------------------------------ label
L119: ;<L251>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-20],A0	; u -20  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; u -20  
	mov qword[Dframe-152],D0	; T14  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-152]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe-144],A0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-144]	; T13  
	mov qword[Dframe-136],D0	; T12  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-136]	; T12  
	mov A0, [D0+D1*4]
	mov [Dframe-28],A0	; elemsize -28  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T15  
	cmp A0,1
	jnz L2958
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-168],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T16  
	cmp A0,1
	jnz L2958
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-176],D0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-28]	; elemsize -28  
	mov qword[Dframe-184],D0	; T18  
; ------------------------------ mul
	mov D0,[Dframe-176]	; T17  
	mov D1,[Dframe-184]	; T18  
	mul D1
	mov [Dframe-192],D0	; T19  
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; x 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-200],D0	; T20  
; ------------------------------ addto
	mov D13,[Dframe-200]	; T20 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-192]	; T19  
	add D0,D1
	mov D13,qword[Dframe-200]	; T20 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; x 16  
	jmp L2954
; ------------------------------ label
L2958:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; y 24  
	mov A11,5
	call coercemode
	mov [Dframe-208],D0	; T21  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-208]	; T21  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,57
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	call createunit2
	mov [Dframe-216],D0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-216]	; T22  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T23  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-224]	; T23 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-232],D0	; T24  
; ------------------------------ move
	mov A0,[Dframe-28]	; elemsize -28  
	mov D13,[Dframe-232]	; T24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2954
; ------------------------------ jump
	jmp	L2959
; ------------------------------ label
L2957:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; t -16  
	cmp A0,16
	jnz L2960
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; x 16  
	mov [Dframe-40],D0	; temp -40  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; y 24  
	mov [Dframe+16],D0	; x 16  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-40]	; temp -40  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L119
; ------------------------------ jump
	jmp	L2961
; ------------------------------ label
L2960:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK656
	call terror
	add Dstack, 32
; ------------------------------ label
L2961:
; ------------------------------ label
L2959:
; ------------------------------ label
L2956:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-240],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T25  
	cmp A0,1
	jnz L2962
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-248],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T26  
	cmp A0,1
	jnz L2962
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	mov A13,[Dframe-20]	; u -20  
	call eval_add
	mov [Dframe-256],D0	; T27  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-256]	; T27  
	jmp L2954
; ------------------------------ label
L2962:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	call createunit2
	mov [Dframe-264],D0	; T28  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-264]	; T28  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T29  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-272]	; T29 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2954
; ------------------------------ label
L2954:
; ------------------------------ hardret
	add Dstack, 272
	pop Dframe
	ret
;	End

;	Proc:createsubop
createsubop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T2  
	mov qword[Dframe-32],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-32]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; s -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T4  
	mov qword[Dframe-48],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-48]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; t -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,42
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-80],D0	; T7  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-80]	; T7  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; t -16  
	mov qword[Dframe-88],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-72]	; T6  
	mov D1,[Dframe-88]	; T8  
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T5  
	mov dword[Dframe-96],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-96]	; T9  
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; u -20  
	and A0,A0
	jz L2964
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; x 16  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-104],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-104]	; T10  
	mov [Dframe+16],D0	; x 16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; y 24  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-112],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T11  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ jump
	jmp	L2965
; ------------------------------ label
L2964:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; s -12  
	cmp A0,16
	jnz L2966
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; t -16  
	cmp A0,16
	jz L2967
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; y 24  
	mov A11,5
	call coercemode
	mov [Dframe-120],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-120]	; T12  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jump
	jmp	L2968
; ------------------------------ label
L2967:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	call createunit2
	mov [Dframe-128],D0	; T13  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-128]	; T13  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T14  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-136]	; T14 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-160]	; T17  
	mov qword[Dframe-152],D0	; T16  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-152]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-144],A0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; z -8  
	mov A11,[Dframe-144]	; T15  
	call divunit
	mov [Dframe-168],D0	; T18  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-168]	; T18  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T19  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-176]	; T19 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2963
; ------------------------------ label
L2968:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-200],A0	; T22  
; ------------------------------ widen
	movsx D0,dword[Dframe-200]	; T22  
	mov qword[Dframe-192],D0	; T21  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-192]	; T21  
	mov A0, [D0+D1*4]
	mov [Dframe-184],A0	; T20  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; y 24  
	mov A11,[Dframe-184]	; T20  
	call mulunit
	mov [Dframe-208],D0	; T23  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-208]	; T23  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ jump
	jmp	L2969
; ------------------------------ label
L2966:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK657
	call terror
	add Dstack, 32
; ------------------------------ label
L2969:
; ------------------------------ label
L2965:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T24  
	cmp A0,1
	jnz L2970
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-224],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T25  
	cmp A0,1
	jnz L2970
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	mov A13,[Dframe-20]	; u -20  
	call eval_sub
	mov [Dframe-232],D0	; T26  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-232]	; T26  
	jmp L2963
; ------------------------------ label
L2970:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	call createunit2
	mov [Dframe-240],D0	; T27  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-240]	; T27  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-248],D0	; T28  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-248]	; T28 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2963
; ------------------------------ label
L2963:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

;	Proc:createmulop
createmulop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T2  
	mov qword[Dframe-32],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-32]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; s -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T4  
	mov qword[Dframe-48],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-48]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; t -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,43
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-80],D0	; T7  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-80]	; T7  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; t -16  
	mov qword[Dframe-88],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-72]	; T6  
	mov D1,[Dframe-88]	; T8  
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T5  
	mov dword[Dframe-96],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-96]	; T9  
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; u -20  
	and A0,A0
	jz L2972
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; x 16  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-104],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-104]	; T10  
	mov [Dframe+16],D0	; x 16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; y 24  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-112],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T11  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ jump
	jmp	L2973
; ------------------------------ label
L2972:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK658
	call terror
	add Dstack, 32
; ------------------------------ label
L2973:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T12  
	cmp A0,1
	jnz L2974
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T13  
	cmp A0,1
	jnz L2974
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	mov A13,[Dframe-20]	; u -20  
	call eval_mul
	mov [Dframe-136],D0	; T14  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-136]	; T14  
	jmp L2971
; ------------------------------ label
L2974:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	call createunit2
	mov [Dframe-144],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T15  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T16  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-152]	; T16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2971
; ------------------------------ label
L2971:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

;	Proc:createdivop
createdivop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T2  
	mov qword[Dframe-32],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-32]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; s -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T4  
	mov qword[Dframe-48],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-48]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; t -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,44
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-80],D0	; T7  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-80]	; T7  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; t -16  
	mov qword[Dframe-88],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-72]	; T6  
	mov D1,[Dframe-88]	; T8  
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T5  
	mov dword[Dframe-96],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-96]	; T9  
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; u -20  
	and A0,A0
	jz L2976
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; x 16  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-104],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-104]	; T10  
	mov [Dframe+16],D0	; x 16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; y 24  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-112],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T11  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ jump
	jmp	L2977
; ------------------------------ label
L2976:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK659
	call terror
	add Dstack, 32
; ------------------------------ label
L2977:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T12  
	cmp A0,1
	jnz L2978
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T13  
	cmp A0,1
	jnz L2978
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	mov A13,[Dframe-20]	; u -20  
	call eval_div
	mov [Dframe-136],D0	; T14  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-136]	; T14  
	jmp L2975
; ------------------------------ label
L2978:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	call createunit2
	mov [Dframe-144],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T15  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T16  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-152]	; T16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2975
; ------------------------------ label
L2975:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

;	Proc:createremop
createremop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T2  
	mov qword[Dframe-32],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-32]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; s -12  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T4  
	mov qword[Dframe-48],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-48]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; t -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,45
	mov [Dframe-24],A0	; opc -24  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-80],D0	; T7  
; ------------------------------ indexref
	lea D0,[dominantmode]
	mov D1,[Dframe-80]	; T7  
	imul D1,32
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; t -16  
	mov qword[Dframe-88],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-72]	; T6  
	mov D1,[Dframe-88]	; T8  
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T5  
	mov dword[Dframe-96],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-96]	; T9  
	mov [Dframe-20],A0	; u -20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-20]	; u -20  
	and A0,A0
	jz L2980
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,12
	jz L2982
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; u -20  
	cmp A0,11
	jnz L2981
; ------------------------------ label
L2982:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-20],A0	; u -20  
; ------------------------------ label
L2981:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; x 16  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-104],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-104]	; T10  
	mov [Dframe+16],D0	; x 16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; y 24  
	mov A11,[Dframe-20]	; u -20  
	call coercemode
	mov [Dframe-112],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T11  
	mov [Dframe+24],D0	; y 24  
; ------------------------------ jump
	jmp	L2983
; ------------------------------ label
L2980:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK660
	call terror
	add Dstack, 32
; ------------------------------ label
L2983:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; x 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-120],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T12  
	cmp A0,1
	jnz L2984
; ------------------------------ index
	mov D0,[Dframe+24]	; y 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T13  
	cmp A0,1
	jnz L2984
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	mov A13,[Dframe-20]	; u -20  
	call eval_rem
	mov [Dframe-136],D0	; T14  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-136]	; T14  
	jmp L2979
; ------------------------------ label
L2984:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-24]	; opc -24  
	mov D11,[Dframe+16]	; x 16  
	mov D12,[Dframe+24]	; y 24  
	call createunit2
	mov [Dframe-144],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T15  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T16  
; ------------------------------ move
	mov A0,[Dframe-20]	; u -20  
	mov D13,[Dframe-152]	; T16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2979
; ------------------------------ label
L2979:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

;	Proc:insertunit
insertunit:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,0
	call createunit0
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ getptr
	lea D10,[Dframe-80]	; T2  
	mov D11,[Dframe+16]	; p 16  
	mov D12,62
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-8]	; q -8  
	lea D11,[Dframe-80]	; T2  
	mov D12,62
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T3  
; ------------------------------ move
	mov A0,[Dframe+24]	; tag 24  
	mov D13,[Dframe-88]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-8]	; q -8  
	mov D13,[Dframe-96]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T5  
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T6  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-112]	; T6 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe-112]	; T6 *
	mov D0,qword[D13]
	mov D13,qword[Dframe-104]	; T5 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,44
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-128]	; T8  
	mov D13,[Dframe-120]	; T7 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,56
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T9  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-136]	; T9 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-144],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T11  
; ------------------------------ move
	mov D0,[Dframe-152]	; T11  
	mov D13,[Dframe-144]	; T10 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-160],D0	; T12  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-160]	; T12 *
	mov qword[D13],D0
; ------------------------------ label
L2985:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

;	Proc:eval_add
eval_add:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,4
	jz L2988
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,5
	jz L2988
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,9
	jz L2988
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,10
	jnz L2987
; ------------------------------ label
L2988:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ addto
	mov D13,[Dframe-24]	; T2 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-16]	; T1  
	add D0,D1
	mov D13,qword[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L2986
; ------------------------------ jump
	jmp	L2989
; ------------------------------ label
L2987:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,12
	jnz L2990
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ addto
	mov D13,[Dframe-40]	; T4 *
	movq XMM0,qword[D13]
	movq XMM1,qword[Dframe-32]	; T3  
	addsd XMM0,XMM1
	mov D13,qword[Dframe-40]	; T4 *
	movq qword[D13],XMM0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L2986
; ------------------------------ jump
	jmp	L2991
; ------------------------------ label
L2990:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; t 40  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-56]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T5  
	cmp A0,16
	jnz L2992
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; t 40  
	mov qword[Dframe-104],D0	; T12  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-104]	; T12  
	mov A0, [D0+D1*4]
	mov [Dframe-96],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T11  
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-88]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-80],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T9  
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ mul
	mov D0,[Dframe-64]	; T7  
	mov D1,[Dframe-72]	; T8  
	mul D1
	mov [Dframe-112],D0	; T13  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T14  
; ------------------------------ addto
	mov D13,[Dframe-120]	; T14 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-112]	; T13  
	add D0,D1
	mov D13,qword[Dframe-120]	; T14 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L2986
; ------------------------------ label
L2992:
; ------------------------------ label
L2991:
; ------------------------------ label
L2989:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe+24]	; x 24  
	mov D12,[Dframe+32]	; y 32  
	call createunit2
	mov [Dframe-128],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-128]	; T15  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T16  
; ------------------------------ move
	mov A0,[Dframe+40]	; t 40  
	mov D13,[Dframe-136]	; T16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2986
; ------------------------------ label
L2986:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

;	Proc:eval_sub
eval_sub:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,4
	jz L2995
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,5
	jnz L2994
; ------------------------------ label
L2995:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ subto
	mov D13,[Dframe-24]	; T2 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-16]	; T1  
	sub D0,D1
	mov D13,qword[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L2993
; ------------------------------ jump
	jmp	L2996
; ------------------------------ label
L2994:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,12
	jnz L2997
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ subto
	mov D13,[Dframe-40]	; T4 *
	movq XMM0,qword[D13]
	movq XMM1,qword[Dframe-32]	; T3  
	subsd XMM0,XMM1
	mov D13,qword[Dframe-40]	; T4 *
	movq qword[D13],XMM0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L2993
; ------------------------------ jump
	jmp	L2998
; ------------------------------ label
L2997:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; t 40  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-56]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T5  
	cmp A0,16
	jnz L2999
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T9  
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-72]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-64],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T7  
	cmp A0,16
	jnz L3000
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK661
	call terror
	add Dstack, 32
; ------------------------------ label
L3000:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L2993
; ------------------------------ label
L2999:
; ------------------------------ label
L2998:
; ------------------------------ label
L2996:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe+24]	; x 24  
	mov D12,[Dframe+32]	; y 32  
	call createunit2
	mov [Dframe-88],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-88]	; T10  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ move
	mov A0,[Dframe+40]	; t 40  
	mov D13,[Dframe-96]	; T11 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L2993
; ------------------------------ label
L2993:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:eval_mul
eval_mul:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,4
	jz L3003
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,5
	jz L3003
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,3
	jz L3003
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,2
	jnz L3002
; ------------------------------ label
L3003:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ multo
	mov D13,[Dframe-24]	; T2 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-16]	; T1  
	mul D1
	mov D13,qword[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L3001
; ------------------------------ jump
	jmp	L3004
; ------------------------------ label
L3002:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,9
	jz L3006
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,10
	jz L3006
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,8
	jz L3006
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,7
	jnz L3005
; ------------------------------ label
L3006:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ mul
	mov D0,[Dframe-40]	; T4  
	mov D1,[Dframe-48]	; T5  
	mul D1
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-56]	; T6  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L3001
; ------------------------------ jump
	jmp	L3007
; ------------------------------ label
L3005:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,12
	jnz L3008
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ multo
	mov D13,[Dframe-72]	; T8 *
	movq XMM0,qword[D13]
	movq XMM1,qword[Dframe-64]	; T7  
	mulsd XMM0,XMM1
	mov D13,qword[Dframe-72]	; T8 *
	movq qword[D13],XMM0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L3001
; ------------------------------ label
L3008:
; ------------------------------ label
L3007:
; ------------------------------ label
L3004:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe+24]	; x 24  
	mov D12,[Dframe+32]	; y 32  
	call createunit2
	mov [Dframe-80],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T9  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov A0,[Dframe+40]	; t 40  
	mov D13,[Dframe-88]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L3001
; ------------------------------ label
L3001:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:eval_div
eval_div:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,4
	jz L3011
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,5
	jnz L3010
; ------------------------------ label
L3011:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; T1  
	cmp D0,0
	jnz L3012
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK662
	call serror
	add Dstack, 32
; ------------------------------ label
L3012:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ div
	mov D0,[Dframe-32]	; T3  
	mov D1,[Dframe-40]	; T4  
	cqo
	idiv D1
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe-48]	; T5  
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L3009
; ------------------------------ jump
	jmp	L3013
; ------------------------------ label
L3010:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,12
	jnz L3014
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ divto
	mov D13,[Dframe-64]	; T7 *
	movq XMM0,qword[D13]
	movq XMM1,qword[Dframe-56]	; T6  
	divsd XMM0,XMM1
	mov D13,qword[Dframe-64]	; T7 *
	movq qword[D13],XMM0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L3009
; ------------------------------ label
L3014:
; ------------------------------ label
L3013:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe+24]	; x 24  
	mov D12,[Dframe+32]	; y 32  
	call createunit2
	mov [Dframe-72],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-72]	; T8  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ move
	mov A0,[Dframe+40]	; t 40  
	mov D13,[Dframe-80]	; T9 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L3009
; ------------------------------ label
L3009:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:eval_rem
eval_rem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,4
	jz L3017
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; t 40  
	cmp A0,5
	jnz L3016
; ------------------------------ label
L3017:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ jumpcc
	mov D0,[Dframe-16]	; T1  
	cmp D0,0
	jnz L3018
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK663
	call serror
	add Dstack, 32
; ------------------------------ label
L3018:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe+24]	; x 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+32]	; y 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ rem
	mov D0,[Dframe-32]	; T3  
	mov D1,[Dframe-40]	; T4  
	cqo
	idiv D1
	xchg D0,D11
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe-48]	; T5  
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+24]	; x 24  
	jmp L3015
; ------------------------------ label
L3016:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe+24]	; x 24  
	mov D12,[Dframe+32]	; y 32  
	call createunit2
	mov [Dframe-56],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T6  
	mov [Dframe-8],D0	; z -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; z -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ move
	mov A0,[Dframe+40]	; t 40  
	mov D13,[Dframe-64]	; T7 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; z -8  
	jmp L3015
; ------------------------------ label
L3015:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:eval_convert
eval_convert:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 336

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,1
	jnz L3020
; ------------------------------ stmt
; ------------------------------ label
L120: ;<dosoft>
; ------------------------------ stmt
; ------------------------------ label
L121: ;<L272>
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-16]	; T1 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ label
L3020:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; s -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,[Dframe+24]	; t 24  
	jnz L3021
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ label
L3021:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,4
	jz L3023
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,3
	jz L3023
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,2
	jz L3023
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,5
	jnz L3022
; ------------------------------ label
L3023:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,12
	jz L3025
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,11
	jnz L3024
; ------------------------------ label
L3025:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ float
	cvtsi2sd XMM0,qword[Dframe-40]	; T4  
	movq [Dframe-32],XMM0	; T3  
; ------------------------------ move
	mov D0,[Dframe-32]	; T3  
	mov D13,[Dframe-24]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-48]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ jump
	jmp	L3026
; ------------------------------ label
L3024:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,10
	jz L3028
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,5
	jz L3028
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,9
	jz L3028
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,4
	jz L3028
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,3
	jz L3028
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,2
	jz L3028
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,7
	jz L3028
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,8
	jnz L3027
; ------------------------------ label
L3028:
; ------------------------------ stmt
; ------------------------------ label
L122: ;<dotrunc>
; ------------------------------ stmt
; ------------------------------ label
L123: ;<L279>
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-64]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T6  
	cmp A0,1
	jnz L3029
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ iandto
	mov D13,[Dframe-72]	; T8 *
	mov D0,qword[D13]
	mov D1,255
	and D0,D1
	mov D13,qword[Dframe-72]	; T8 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3030
; ------------------------------ label
L3029:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-88]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-80],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T9  
	cmp A0,2
	jnz L3031
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ iandto
	mov D13,[Dframe-96]	; T11 *
	mov D0,qword[D13]
	mov D1,65535
	and D0,D1
	mov D13,qword[Dframe-96]	; T11 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3032
; ------------------------------ label
L3031:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-112],D0	; T13  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-112]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-104],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T12  
	cmp A0,4
	jnz L3033
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T14  
; ------------------------------ iandto
	mov D13,[Dframe-120]	; T14 *
	mov D0,qword[D13]
	mov D1,[RR16]
	and D0,D1
	mov D13,qword[Dframe-120]	; T14 *
	mov qword[D13],D0
; ------------------------------ label
L3033:
; ------------------------------ label
L3032:
; ------------------------------ label
L3030:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L121
; ------------------------------ label
L3027:
; ------------------------------ label
L3026:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-136],D0	; T16  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-136]	; T16  
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T15  
	mov dword[Dframe-144],A0	; T17  
; ------------------------------ jumpfalse
	mov A0,[Dframe-144]	; T17  
	and A0,A0
	jz L3034
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T18  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-152]	; T18 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ label
L3034:
; ------------------------------ jump
	jmp	L3035
; ------------------------------ label
L3022:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,9
	jz L3037
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,7
	jz L3037
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,8
	jz L3037
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,10
	jnz L3036
; ------------------------------ label
L3037:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,12
	jz L3039
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,11
	jnz L3038
; ------------------------------ label
L3039:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-160],D0	; T19  
; ------------------------------ jumpcc
	mov D0,[Dframe-160]	; T19  
	cmp D0,0
	jl L3040
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-184],D0	; T22  
; ------------------------------ float
	cvtsi2sd XMM0,qword[Dframe-184]	; T22  
	movq [Dframe-176],XMM0	; T21  
; ------------------------------ move
	mov D0,[Dframe-176]	; T21  
	mov D13,[Dframe-168]	; T20 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3041
; ------------------------------ label
L3040:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-192],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-208],D0	; T25  
; ------------------------------ neg
	mov D0,[Dframe-208]	; T25  
	neg D0
	mov [Dframe-216],D0	; T26  
; ------------------------------ float
	cvtsi2sd XMM0,qword[Dframe-216]	; T26  
	movq [Dframe-200],XMM0	; T24  
; ------------------------------ move
	mov D0,[Dframe-200]	; T24  
	mov D13,[Dframe-192]	; T23 *
	mov qword[D13],D0
; ------------------------------ label
L3041:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T27  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-224]	; T27 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ jump
	jmp	L3042
; ------------------------------ label
L3038:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,10
	jz L3044
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,5
	jz L3044
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,4
	jz L3044
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,9
	jz L3044
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,10
	jz L3044
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,8
	jz L3044
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,2
	jz L3044
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,7
	jz L3044
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,3
	jnz L3043
; ------------------------------ label
L3044:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L123
; ------------------------------ label
L3043:
; ------------------------------ label
L3042:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-240],D0	; T29  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-240]	; T29  
	mov B0, [D0+D1]
	mov [Dframe-232],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-232]	; T28  
	mov dword[Dframe-248],A0	; T30  
; ------------------------------ jumpfalse
	mov A0,[Dframe-248]	; T30  
	and A0,A0
	jz L3045
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T31  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-256]	; T31 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ label
L3045:
; ------------------------------ jump
	jmp	L3046
; ------------------------------ label
L3036:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; s -4  
	cmp A0,12
	jnz L3047
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,4
	jnz L3048
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-264],D0	; T32  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-280],D0	; T34  
; ------------------------------ fix
	movq XMM0,[Dframe-280]	; T34  
	cvtsd2si D0, XMM0
	mov [Dframe-272],D0	; T33  
; ------------------------------ move
	mov D0,[Dframe-272]	; T33  
	mov D13,[Dframe-264]	; T32 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-288],D0	; T35  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-288]	; T35 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ jump
	jmp	L3049
; ------------------------------ label
L3048:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,11
	jnz L3050
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T36  
; ------------------------------ move
	mov A0,11
	mov D13,[Dframe-296]	; T36 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ label
L3050:
; ------------------------------ label
L3049:
; ------------------------------ jump
	jmp	L3051
; ------------------------------ label
L3047:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-320],A0	; T39  
; ------------------------------ widen
	movsx D0,dword[Dframe-320]	; T39  
	mov qword[Dframe-312],D0	; T38  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-312]	; T38  
	mov B0, [D0+D1]
	mov [Dframe-304],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-304]	; T37  
	mov dword[Dframe-328],A0	; T40  
; ------------------------------ jumpfalse
	mov A0,[Dframe-328]	; T40  
	and A0,A0
	jz L3052
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,4
	jz L3054
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,5
	jz L3054
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,9
	jz L3054
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,10
	jnz L3053
; ------------------------------ label
L3054:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-336],D0	; T41  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-336]	; T41 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3019
; ------------------------------ label
L3053:
; ------------------------------ label
L3052:
; ------------------------------ label
L3051:
; ------------------------------ label
L3046:
; ------------------------------ label
L3035:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L3019
; ------------------------------ label
L3019:
; ------------------------------ hardret
	add Dstack, 336
	pop Dframe
	ret
;	End

;	Proc:coercecond
coercecond:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; t -4  
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,4
	jnz L3056
; ------------------------------ stmt
; ------------------------------ return
	jmp L3055
; ------------------------------ label
L3056:
; ------------------------------ stmt
; ------------------------------ label
L124: ;<retry>
; ------------------------------ stmt
; ------------------------------ label
L125: ;<L294>
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-24]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T1  
	cmp A0,11
	jz L3058
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-40]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-32],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T3  
	cmp A0,12
	jz L3058
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-56]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T5  
	cmp A0,16
	jnz L3057
; ------------------------------ label
L3058:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L127
; ------------------------------ jump
	jmp	L3059
; ------------------------------ label
L3057:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,2
	jl L3060
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,10
	jg L3060
; ------------------------------ stmt
; ------------------------------ label
L126: ;<doint>
; ------------------------------ stmt
; ------------------------------ label
L127: ;<L297>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T7  
	cmp A0,1
	jnz L3061
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ jumpfalse
	mov D0,[Dframe-72]	; T8  
	and D0,D0
	jz L3061
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ move
	mov D0,1
	mov D13,[Dframe-80]	; T9 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3062
; ------------------------------ label
L3061:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,29
	call insertunit
	add Dstack, 32
; ------------------------------ label
L3062:
; ------------------------------ jump
	jmp	L3063
; ------------------------------ label
L3060:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-96],D0	; T11  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-96]	; T11  
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T10  
	mov dword[Dframe-104],A0	; T12  
; ------------------------------ jumpfalse
	mov A0,[Dframe-104]	; T12  
	and A0,A0
	jz L3064
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-112],D0	; T13  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-112]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-4],A0	; t -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L125
; ------------------------------ jump
	jmp	L3065
; ------------------------------ label
L3064:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4]	; t -4  
	mov A11,1
	call Strmode
	mov [Dframe-120],D0	; T14  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK664
	mov D11,[Dframe-120]	; T14  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3065:
; ------------------------------ label
L3063:
; ------------------------------ label
L3059:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-128],D0	; T15  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-128]	; T15 *
	mov dword[D13],A0
; ------------------------------ label
L3055:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:coercebasetype
coercebasetype:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; t -4  
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,2
	jl L3067
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,3
	jg L3067
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,4
	call coercemode
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe+16],D0	; p 16  
; ------------------------------ jump
	jmp	L3068
; ------------------------------ label
L3067:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,6
	jl L3069
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,8
	jg L3069
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,9
	call coercemode
	mov [Dframe-24],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T2  
	mov [Dframe+16],D0	; p 16  
; ------------------------------ label
L3069:
; ------------------------------ label
L3068:
; ------------------------------ label
L3066:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:checklvalue
checklvalue:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 320

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,3
	jz L3072
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,55
	jnz L3071
; ------------------------------ label
L3072:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3073
; ------------------------------ label
L3071:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,5
	jnz L3074
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-40]	; T5  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T4  
	cmp A0,3
	jz L3076
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-56]	; T7  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T6  
	cmp A0,55
	jz L3076
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-72]	; T9  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T8  
	cmp A0,56
	jnz L3075
; ------------------------------ label
L3076:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T11  
; ------------------------------ getptr
	lea D10,[Dframe-136]	; T10  
	mov D11,[Dframe-144]	; T11  
	mov D12,62
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe+16]	; p 16  
	lea D11,[Dframe-136]	; T10  
	mov D12,62
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ jump
	jmp	L3077
; ------------------------------ label
L3075:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK665
	mov D11,KK666
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,0
	mov D11,[Dframe-152]	; T12  
	mov A12,0
	mov D13,KK667
	call printunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK668
	call terror
	add Dstack, 32
; ------------------------------ label
L3077:
; ------------------------------ jump
	jmp	L3078
; ------------------------------ label
L3074:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T13  
	cmp A0,56
	jnz L3079
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3080
; ------------------------------ label
L3079:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-168],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T14  
	cmp A0,1
	jnz L3081
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-192],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-192]	; T17  
	mov qword[Dframe-184],D0	; T16  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-184]	; T16  
	mov B0, [D0+D1]
	mov [Dframe-176],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-176]	; T15  
	mov dword[Dframe-200],A0	; T18  
; ------------------------------ jumptrue
	mov A0,[Dframe-200]	; T18  
	and A0,A0
	jnz L3082
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L129
; ------------------------------ label
L3082:
; ------------------------------ jump
	jmp	L3083
; ------------------------------ label
L3081:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-208],A0	; T19  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T19  
	cmp A0,58
	jnz L3084
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-224],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe-224]	; T21  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T20  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T20  
	cmp A0,3
	jnz L3085
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-296],D0	; T23  
; ------------------------------ getptr
	lea D10,[Dframe-288]	; T22  
	mov D11,[Dframe-296]	; T23  
	mov D12,62
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe+16]	; p 16  
	lea D11,[Dframe-288]	; T22  
	mov D12,62
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ return
	jmp L3070
; ------------------------------ label
L3085:
; ------------------------------ jump
	jmp	L3086
; ------------------------------ label
L3084:
; ------------------------------ stmt
; ------------------------------ label
L128: ;<notlv>
; ------------------------------ stmt
; ------------------------------ label
L129: ;<L311>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,0
	mov D11,[Dframe+16]	; p 16  
	mov A12,0
	mov D13,KK669
	call printunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-320],A0	; T26  
; ------------------------------ widen
	movsx D0,dword[Dframe-320]	; T26  
	mov qword[Dframe-312],D0	; T25  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-312]	; T25  
	mov D0, [D0+D1*8]
	mov [Dframe-304],D0	; T24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK670
	mov D11,[Dframe-304]	; T24  
	call terror_s
	add Dstack, 32
; ------------------------------ label
L3086:
; ------------------------------ label
L3083:
; ------------------------------ label
L3080:
; ------------------------------ label
L3078:
; ------------------------------ label
L3073:
; ------------------------------ label
L3070:
; ------------------------------ hardret
	add Dstack, 320
	pop Dframe
	ret
;	End

;	Proc:createcall
createcall:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T1  
	cmp A0,3
	jnz L3089
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe-80]	; T3  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T2  
	mov dword[Dframe-88],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T4  
	cmp A0,6
	jz L3088
; ------------------------------ label
L3089:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; m -48  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; m -48  
	mov qword[Dframe-96],D0	; T5  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-96]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; mproc -56  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; m -48  
	mov qword[Dframe-112],D0	; T7  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-112]	; T7  
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T6  
	mov dword[Dframe-120],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-120]	; T8  
	and A0,A0
	jz L3091
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; mproc -56  
	mov qword[Dframe-136],D0	; T10  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-136]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-128],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T9  
	cmp A0,17
	jz L3090
; ------------------------------ label
L3091:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-48]	; m -48  
	call typename
	mov [Dframe-144],D0	; T11  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-56]	; mproc -56  
	call typename
	mov [Dframe-152],D0	; T12  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK671
	mov D11,[Dframe-144]	; T11  
	mov D12,[Dframe-152]	; T12  
	call serror_ss
	add Dstack, 32
; ------------------------------ label
L3090:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; mproc -56  
	mov qword[Dframe-160],D0	; T13  
; ------------------------------ index
	lea D0,[ttparams]
	mov D1,[Dframe-160]	; T13  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; pm -32  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; mproc -56  
	mov qword[Dframe-168],D0	; T14  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-168]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe-52],A0	; retmode -52  
; ------------------------------ jump
	jmp	L3092
; ------------------------------ label
L3088:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; d -24  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T15  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-176]	; T15 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; d -24  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; pm -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; d -24  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-184],W0	; T16  
; ------------------------------ widen
	movsx A0,word [Dframe-184]	; T16  
	mov dword[Dframe-192],A0	; T17  
; ------------------------------ move
	mov A0,[Dframe-192]	; T17  
	mov [Dframe-52],A0	; retmode -52  
; ------------------------------ label
L3092:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; pm -32  
	mov A1,20
	mov W0, [D0+D1]
	mov [Dframe-200],W0	; T18  
; ------------------------------ widen
	movsx A0,word [Dframe-200]	; T18  
	mov dword[Dframe-208],A0	; T19  
; ------------------------------ move
	mov A0,[Dframe-208]	; T19  
	mov [Dframe-40],A0	; nparams -40  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-44],A0	; aparams -44  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; q 24  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3093
; ------------------------------ label
L3095:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-44]	; aparams -44  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; s -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; s -16  
; ------------------------------ label
L3093:
; ------------------------------ jumptrue
	mov D0,[Dframe-16]	; s -16  
	and D0,D0
	jnz L3095
; ------------------------------ label
L3094:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-44]	; aparams -44  
	cmp A0,[Dframe-40]	; nparams -40  
	jge L3096
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK672
	call terror
	add Dstack, 32
; ------------------------------ jump
	jmp	L3097
; ------------------------------ label
L3096:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-44]	; aparams -44  
	cmp A0,[Dframe-40]	; nparams -40  
	jle L3098
; ------------------------------ index
	mov D0,[Dframe-32]	; pm -32  
	mov A1,22
	mov W0, [D0+D1]
	mov [Dframe-216],W0	; T20  
; ------------------------------ widen
	movsx A0,word [Dframe-216]	; T20  
	mov dword[Dframe-224],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T21  
	cmp A0,3
	jz L3098
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK673
	call terror
	add Dstack, 32
; ------------------------------ label
L3098:
; ------------------------------ label
L3097:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; q 24  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-36],A0	; i -36  
; ------------------------------ jump
	jmp	L3101
; ------------------------------ label
L3102:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-36]	; i -36  
	cmp A0,[Dframe-40]	; nparams -40  
	jg L3103
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; pm -32  
	mov A1,16
	mov A0, [D0+D1]
	mov [Dframe-232],A0	; T22  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; s -16  
	mov A11,[Dframe-232]	; T22  
	call coercemode_inplace
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; pm -32  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; pm -32  
; ------------------------------ jump
	jmp	L3104
; ------------------------------ label
L3103:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; s -16  
	call coercebasetype
	add Dstack, 32
; ------------------------------ label
L3104:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; s -16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; s -16  
; ------------------------------ label
L3099:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-36]	; i -36  
; ------------------------------ label
L3101:
; ------------------------------ jumpcc
	mov A0,[Dframe-36]	; i -36  
	cmp A0,[Dframe-44]	; aparams -44  
	jle L3102
; ------------------------------ label
L3100:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,32
	mov D11,[Dframe+16]	; p 16  
	mov D12,[Dframe+24]	; q 24  
	call createunit2
	mov [Dframe-240],D0	; T23  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-240]	; T23  
	mov [Dframe-8],D0	; r -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; r -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-248],D0	; T24  
; ------------------------------ move
	mov A0,[Dframe-52]	; retmode -52  
	mov D13,[Dframe-248]	; T24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; r -8  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T25  
; ------------------------------ move
	mov A0,[Dframe-44]	; aparams -44  
	mov D13,[Dframe-256]	; T25 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; r -8  
	jmp L3087
; ------------------------------ label
L3087:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

;	Proc:arraytopointer
arraytopointer:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-32],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-32]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,19
	jnz L3106
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,56
	jnz L3107
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,57
	mov D13,[Dframe-48]	; T5 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L3108
; ------------------------------ label
L3107:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T6  
	cmp A0,55
	jnz L3109
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe+16],D0	; p 16  
; ------------------------------ jump
	jmp	L3110
; ------------------------------ label
L3109:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK674
	mov D11,KK675
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,0
	mov D11,[Dframe+16]	; p 16  
	mov A12,0
	mov D13,KK676
	call printunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK677
	call terror
	add Dstack, 32
; ------------------------------ label
L3110:
; ------------------------------ label
L3108:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-80]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T8  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-72]	; T8  
	call createrefmode
	mov [Dframe-88],A0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-88]	; T10  
	mov D13,[Dframe-64]	; T7 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-112],D0	; T13  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-112]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-104],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-104]	; T12  
	mov D13,[Dframe-96]	; T11 *
	mov dword[D13],A0
; ------------------------------ label
L3106:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3105
; ------------------------------ label
L3105:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:createindexop
createindexop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 416

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-20],A0	; t -20  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-56],D0	; T2  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-56]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T1  
	mov dword[Dframe-64],A0	; T3  
; ------------------------------ jumptrue
	mov A0,[Dframe-64]	; T3  
	and A0,A0
	jnz L3112
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov [Dframe-40],D0	; temp -40  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; q 24  
	mov [Dframe+16],D0	; p 16  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-40]	; temp -40  
	mov [Dframe+24],D0	; q 24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-20],A0	; t -20  
; ------------------------------ label
L3112:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-80],D0	; T5  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-80]	; T5  
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T4  
	mov dword[Dframe-88],A0	; T6  
; ------------------------------ jumptrue
	mov A0,[Dframe-88]	; T6  
	and A0,A0
	jnz L3113
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; t -20  
	mov A11,1
	call Strmode
	mov [Dframe-96],D0	; T7  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK678
	mov D11,[Dframe-96]	; T7  
	call terror_s
	add Dstack, 32
; ------------------------------ label
L3113:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; q 24  
	mov A11,5
	call coercemode
	mov [Dframe-104],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-104]	; T8  
	mov [Dframe+24],D0	; q 24  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; t -20  
	mov qword[Dframe-120],D0	; T10  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-120]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; elemtype -24  
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; elemtype -24  
	mov qword[Dframe-112],D0	; T9  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-112]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-32],A0	; scale -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; q 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T11  
	cmp A0,1
	jnz L3114
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; q 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe+24]	; q 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; scale -32  
	mov qword[Dframe-152],D0	; T14  
; ------------------------------ mul
	mov D0,[Dframe-144]	; T13  
	mov D1,[Dframe-152]	; T14  
	mul D1
	mov [Dframe-160],D0	; T15  
; ------------------------------ move
	mov D0,[Dframe-160]	; T15  
	mov D13,[Dframe-136]	; T12 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-32],A0	; scale -32  
; ------------------------------ label
L3114:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-168],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T16  
	cmp A0,1
	jz L3116
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-176],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T17  
	cmp A0,4
	jz L3116
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-184],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T18  
	cmp A0,3
	jnz L3115
; ------------------------------ label
L3116:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,56
	mov D11,[Dframe+16]	; p 16  
	mov D12,[Dframe+24]	; q 24  
	call createunit2
	mov [Dframe-192],D0	; T19  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-192]	; T19  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; s -16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-200],D0	; T20  
; ------------------------------ move
	mov A0,[Dframe-32]	; scale -32  
	mov D13,[Dframe-200]	; T20 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L3117
; ------------------------------ label
L3115:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-208],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T21  
	cmp A0,57
	jnz L3118
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-224],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-224]	; T23  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T22  
	cmp A0,1
	jnz L3119
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-232],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-232]	; T24  
	cmp A0,1
	jle L3119
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK679
	call terror
	add Dstack, 32
; ------------------------------ label
L3119:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-248],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe-248]	; T26  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-240],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T25  
	cmp A0,1
	jnz L3120
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; q 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-256],A0	; T27  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T27  
	cmp A0,1
	jnz L3121
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; q 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; T28  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-280],D0	; T30  
; ------------------------------ indexlv
	mov D0,[Dframe-280]	; T30  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T29  
; ------------------------------ addto
	mov D13,[Dframe-272]	; T29 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-264]	; T28  
	add D0,D1
	mov D13,qword[Dframe-272]	; T29 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3122
; ------------------------------ label
L3121:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-288],D0	; T31  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-296],D0	; T32  
; ------------------------------ move
	mov D0,[Dframe-296]	; T32  
	mov D13,[Dframe-288]	; T31 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T33  
; ------------------------------ move
	mov D0,[Dframe+24]	; q 24  
	mov D13,[Dframe-304]	; T33 *
	mov qword[D13],D0
; ------------------------------ label
L3122:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-312],D0	; T34  
; ------------------------------ move
	mov A0,[Dframe-32]	; scale -32  
	mov D13,[Dframe-312]	; T34 *
	mov dword[D13],A0
; ------------------------------ jump
	jmp	L3123
; ------------------------------ label
L3120:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; q 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-320],A0	; T35  
; ------------------------------ jumpcc
	mov A0,[Dframe-320]	; T35  
	cmp A0,1
	jnz L3124
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-328],D0	; T36  
; ------------------------------ jumpfalse
	mov D0,[Dframe-328]	; T36  
	and D0,D0
	jz L3125
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; q 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-336],D0	; T37  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-352],D0	; T39  
; ------------------------------ indexlv
	mov D0,[Dframe-352]	; T39  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-344],D0	; T38  
; ------------------------------ addto
	mov D13,[Dframe-344]	; T38 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-336]	; T37  
	add D0,D1
	mov D13,qword[Dframe-344]	; T38 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3126
; ------------------------------ label
L3125:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-360],D0	; T40  
; ------------------------------ move
	mov D0,[Dframe+24]	; q 24  
	mov D13,[Dframe-360]	; T40 *
	mov qword[D13],D0
; ------------------------------ label
L3126:
; ------------------------------ jump
	jmp	L3127
; ------------------------------ label
L3124:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,56
	mov D11,[Dframe+16]	; p 16  
	mov D12,[Dframe+24]	; q 24  
	call createunit2
	mov [Dframe-368],D0	; T41  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-368]	; T41  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; s -16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-376],D0	; T42  
; ------------------------------ move
	mov A0,[Dframe-32]	; scale -32  
	mov D13,[Dframe-376]	; T42 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L131
; ------------------------------ label
L3127:
; ------------------------------ label
L3123:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-384],D0	; T43  
; ------------------------------ move
	mov A0,56
	mov D13,[Dframe-384]	; T43 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ jump
	jmp	L3128
; ------------------------------ label
L3118:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,56
	mov D11,[Dframe+16]	; p 16  
	mov D12,[Dframe+24]	; q 24  
	call createunit2
	mov [Dframe-392],D0	; T44  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-392]	; T44  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; s -16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-400],D0	; T45  
; ------------------------------ move
	mov A0,[Dframe-32]	; scale -32  
	mov D13,[Dframe-400]	; T45 *
	mov dword[D13],A0
; ------------------------------ label
L3128:
; ------------------------------ label
L3117:
; ------------------------------ stmt
; ------------------------------ label
L130: ;<done>
; ------------------------------ stmt
; ------------------------------ label
L131: ;<L331>
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; s -16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-408],D0	; T46  
; ------------------------------ move
	mov A0,[Dframe-24]	; elemtype -24  
	mov D13,[Dframe-408]	; T46 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; s -16  
	call arraytopointer
	mov [Dframe-416],D0	; T47  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-416]	; T47  
	mov [Dframe-16],D0	; s -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; s -16  
	call fixmemopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; s -16  
	jmp L3111
; ------------------------------ label
L3111:
; ------------------------------ hardret
	add Dstack, 416
	pop Dframe
	ret
;	End

;	Proc:readstructdecl
readstructdecl:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1008

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-128],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-128]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T1  
	mov dword[Dframe-136],A0	; T3  
; ------------------------------ setcc
	mov A0,[Dframe-136]	; T3  
	cmp A0,82
	setz B0
	movzx A0,B0
	mov [Dframe-144],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-144]	; T4  
	mov [Dframe-52],A0	; funion -52  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[currproc]
	and D0,D0
	jz L3130
; ------------------------------ move
	mov D0,[currproc]
	mov [Dframe-152],D0	; T5  
; ------------------------------ jump
	jmp	L3131
; ------------------------------ label
L3130:
; ------------------------------ move
	mov D0,[stmodule]
	mov [Dframe-152],D0	; T5  
; ------------------------------ label
L3131:
; ------------------------------ move
	mov D0,[Dframe-152]	; T5  
	mov [Dframe-48],D0	; tagowner -48  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-168],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-168]	; T7  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-160],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T6  
	mov dword[Dframe-176],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T8  
	cmp A0,16
	jnz L3132
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call nextautotype
	mov [Dframe-184],D0	; T9  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-184]	; T9  
	call addnamestr
	mov [Dframe-192],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-192]	; T10  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ jump
	jmp	L3133
; ------------------------------ label
L3132:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,65
	call checksymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-200],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe-200]	; T11  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-216],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-216]	; T13  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-208],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-208]	; T12  
	mov dword[Dframe-224],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T14  
	cmp A0,16
	jz L3134
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-48]	; tagowner -48  
	mov D11,[Dframe-8]	; d -8  
	mov A12,3
	mov A13,[currblockno]
	call resolvename
	mov [Dframe-232],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-232]	; T15  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; e -16  
	and D0,D0
	jz L3135
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-240],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-240]	; T16  
	mov dword[Dframe-248],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-248]	; T17  
	cmp A0,13
	jz L3136
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-256],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK680
	mov D11,[Dframe-256]	; T18  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3136:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-264],W0	; T19  
; ------------------------------ widen
	movsx A0,word [Dframe-264]	; T19  
	mov dword[Dframe-272],A0	; T20  
; ------------------------------ returnx
	mov A0,[Dframe-272]	; T20  
	jmp L3129
; ------------------------------ label
L3135:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-48]	; tagowner -48  
	mov D11,[Dframe-8]	; d -8  
	mov A12,13
	call createdupldef
	mov [Dframe-280],D0	; T21  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-280]	; T21  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-288],D0	; T22  
; ------------------------------ jumpfalse
	mov A0,[Dframe-52]	; funion -52  
	and A0,A0
	jz L3137
; ------------------------------ move
	mov A0,21
	mov [Dframe-296],A0	; T23  
; ------------------------------ jump
	jmp	L3138
; ------------------------------ label
L3137:
; ------------------------------ move
	mov A0,20
	mov [Dframe-296],A0	; T23  
; ------------------------------ label
L3138:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; e -16  
	mov A11,[Dframe-296]	; T23  
	call createstructmode
	mov [Dframe-304],A0	; T24  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-304]	; T24  
	mov D13,[Dframe-288]	; T22 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; e -16  
	mov A1,104
	lea D0, [D0+D1]
	mov [Dframe-312],D0	; T25  
; ------------------------------ move
	mov A0,[currblockno]
	mov D13,[Dframe-312]	; T25 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[currblockno]
	mov qword[Dframe-328],D0	; T27  
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,[Dframe-328]	; T27  
	lea D0, [D0+D1*4]
	mov [Dframe-320],D0	; T26  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-320]	; T26 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-336],W0	; T28  
; ------------------------------ widen
	movsx A0,word [Dframe-336]	; T28  
	mov dword[Dframe-344],A0	; T29  
; ------------------------------ returnx
	mov A0,[Dframe-344]	; T29  
	jmp L3129
; ------------------------------ label
L3134:
; ------------------------------ label
L3133:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-48]	; tagowner -48  
	mov D11,[Dframe-8]	; d -8  
	mov A12,3
	mov A13,[currblockno]
	call checkdupl
	mov [Dframe-352],D0	; T30  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-352]	; T30  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; e -16  
	and D0,D0
	jz L3139
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-360],B0	; T31  
; ------------------------------ widen
	movzx A0,byte [Dframe-360]	; T31  
	mov dword[Dframe-368],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-368]	; T32  
	cmp A0,13
	jz L3140
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-376],D0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK681
	mov D11,[Dframe-376]	; T33  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3140:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-384],D0	; T34  
; ------------------------------ jumpfalse
	mov D0,[Dframe-384]	; T34  
	and D0,D0
	jz L3141
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,96
	mov A0, [D0+D1]
	mov [Dframe-392],A0	; T35  
; ------------------------------ iand
	mov A0,[Dframe-392]	; T35  
	mov A1,1677215
	and A0,A1
	mov [Dframe-400],A0	; T36  
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,96
	mov A0, [D0+D1]
	mov [Dframe-424],A0	; T39  
; ------------------------------ shr
	mov A0,[Dframe-424]	; T39  
	mov B10,24
	sar A0, cl
	mov [Dframe-432],A0	; T40  
; ------------------------------ widen
	movsx D0,dword[Dframe-432]	; T40  
	mov qword[Dframe-416],D0	; T38  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-416]	; T38  
	mov D0, [D0+D1*8]
	mov [Dframe-408],D0	; T37  
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,96
	mov A0, [D0+D1]
	mov [Dframe-456],A0	; T43  
; ------------------------------ shr
	mov A0,[Dframe-456]	; T43  
	mov B10,24
	sar A0, cl
	mov [Dframe-464],A0	; T44  
; ------------------------------ widen
	movsx D0,dword[Dframe-464]	; T44  
	mov qword[Dframe-448],D0	; T42  
; ------------------------------ index
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-448]	; T42  
	mov D0, [D0+D1*8]
	mov [Dframe-440],D0	; T41  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe-440]	; T41  
	sub Dstack,32
	mov D10,KK682
	mov D11,KK683
	mov A12,[Dframe-400]	; T36  
	mov D13,[Dframe-408]	; T37  
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-472],D0	; T45  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK684
	mov D11,[Dframe-472]	; T45  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3141:
; ------------------------------ jump
	jmp	L3142
; ------------------------------ label
L3139:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-48]	; tagowner -48  
	mov D11,[Dframe-8]	; d -8  
	mov A12,13
	call createdupldef
	mov [Dframe-480],D0	; T46  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-480]	; T46  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-488],D0	; T47  
; ------------------------------ jumpfalse
	mov A0,[Dframe-52]	; funion -52  
	and A0,A0
	jz L3143
; ------------------------------ move
	mov A0,21
	mov [Dframe-496],A0	; T48  
; ------------------------------ jump
	jmp	L3144
; ------------------------------ label
L3143:
; ------------------------------ move
	mov A0,20
	mov [Dframe-496],A0	; T48  
; ------------------------------ label
L3144:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; e -16  
	mov A11,[Dframe-496]	; T48  
	call createstructmode
	mov [Dframe-504],A0	; T49  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-504]	; T49  
	mov D13,[Dframe-488]	; T47 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; e -16  
	mov A1,104
	lea D0, [D0+D1]
	mov [Dframe-512],D0	; T50  
; ------------------------------ move
	mov A0,[currblockno]
	mov D13,[Dframe-512]	; T50 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[currblockno]
	mov qword[Dframe-528],D0	; T52  
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,[Dframe-528]	; T52  
	lea D0, [D0+D1*4]
	mov [Dframe-520],D0	; T51  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-520]	; T51 *
	mov dword[D13],A0
; ------------------------------ label
L3142:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; e -16  
	mov [Dframe-24],D0	; currrecord -24  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-40],D0	; ulistx -40  
; ------------------------------ move
	mov D0,[Dframe-40]	; ulistx -40  
	mov [Dframe-32],D0	; ulist -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-72],A0	; recsize -72  
; ------------------------------ move
	mov A0,[Dframe-72]	; recsize -72  
	mov [Dframe-76],A0	; maxsize -76  
; ------------------------------ move
	mov A0,[Dframe-76]	; maxsize -76  
	mov [Dframe-68],A0	; offset -68  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-80],A0	; maxalignment -80  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-104],D0	; fieldlist -104  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3145
; ------------------------------ label
L3147:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-56]	; linkage -56  
	mov [Dframe-536],D0	; T53  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; currrecord -24  
	mov D11,[Dframe-536]	; T53  
	call readdeclspec
	mov [Dframe-544],A0	; T54  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-544]	; T54  
	mov [Dframe-60],A0	; mbase -60  
; ------------------------------ stmt
; ------------------------------ label
L132: ;<L335>
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-560],D0	; T56  
; ------------------------------ index
	mov D0,[Dframe-560]	; T56  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-552],B0	; T55  
; ------------------------------ widen
	movzx A0,byte [Dframe-552]	; T55  
	mov dword[Dframe-568],A0	; T57  
; ------------------------------ jumpcc
	mov A0,[Dframe-568]	; T57  
	cmp A0,65
	jz L3149
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-584],D0	; T59  
; ------------------------------ index
	mov D0,[Dframe-584]	; T59  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-576],B0	; T58  
; ------------------------------ widen
	movzx A0,byte [Dframe-576]	; T58  
	mov dword[Dframe-592],A0	; T60  
; ------------------------------ jumpcc
	mov A0,[Dframe-592]	; T60  
	cmp A0,23
	jz L3149
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-608],D0	; T62  
; ------------------------------ index
	mov D0,[Dframe-608]	; T62  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-600],B0	; T61  
; ------------------------------ widen
	movzx A0,byte [Dframe-600]	; T61  
	mov dword[Dframe-616],A0	; T63  
; ------------------------------ jumpcc
	mov A0,[Dframe-616]	; T63  
	cmp A0,12
	jnz L3148
; ------------------------------ label
L3149:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-8]	; d -8  
	mov [Dframe-624],D0	; T64  
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; pm -96  
	mov [Dframe-632],D0	; T65  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; currrecord -24  
	mov D11,[Dframe-624]	; T64  
	mov A12,[Dframe-60]	; mbase -60  
	mov D13,[Dframe-632]	; T65  
	call readtype
	mov [Dframe-640],A0	; T66  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-640]	; T66  
	mov [Dframe-64],A0	; m -64  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; d -8  
	cmp D0,0
	jnz L3150
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK685
	call serror
	add Dstack, 32
; ------------------------------ label
L3150:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; linkage -56  
	cmp A0,5
	jz L3152
; ------------------------------ jumpfalse
	mov D0,[Dframe-96]	; pm -96  
	and D0,D0
	jz L3151
; ------------------------------ label
L3152:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK686
	call serror
	add Dstack, 32
; ------------------------------ label
L3151:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; currrecord -24  
	mov D11,[Dframe-8]	; d -8  
	mov A12,5
	mov A13,0
	call checkdupl
	mov [Dframe-648],D0	; T67  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-648]	; T67  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; e -16  
	and D0,D0
	jz L3153
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-656],D0	; T68  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK687
	mov D11,[Dframe-656]	; T68  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3153:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; linkage -56  
	cmp A0,0
	jz L3154
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK688
	call serror
	add Dstack, 32
; ------------------------------ label
L3154:
; ------------------------------ stmt
; ------------------------------ label
L133: ;<addanonfield>
; ------------------------------ stmt
; ------------------------------ label
L134: ;<L339>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,0
	mov D11,[Dframe-8]	; d -8  
	mov A12,10
	call createdupldef
	mov [Dframe-664],D0	; T69  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-664]	; T69  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; d -8  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-672],D0	; T70  
; ------------------------------ move
	mov A0,[Dframe-64]	; m -64  
	mov D13,[Dframe-672]	; T70 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; ulist -32  
	mov [Dframe-680],D0	; T71  
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; ulistx -40  
	mov [Dframe-688],D0	; T72  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-680]	; T71  
	mov D11,[Dframe-688]	; T72  
	mov D12,[Dframe-8]	; d -8  
	call addlistdef
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; currrecord -24  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-696],D0	; T73  
; ------------------------------ move
	mov D0,[Dframe-32]	; ulist -32  
	mov D13,[Dframe-696]	; T73 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; currrecord -24  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-704],D0	; T74  
; ------------------------------ move
	mov D0,[Dframe-40]	; ulistx -40  
	mov D13,[Dframe-704]	; T74 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; d -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-712],D0	; T75  
; ------------------------------ move
	mov D0,[Dframe-24]	; currrecord -24  
	mov D13,[Dframe-712]	; T75 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-64]	; m -64  
	call getalignment
	mov [Dframe-720],A0	; T76  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-720]	; T76  
	mov [Dframe-84],A0	; alignment -84  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-84]	; alignment -84  
	cmp A0,[Dframe-80]	; maxalignment -80  
	jle L3155
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-84]	; alignment -84  
	mov [Dframe-80],A0	; maxalignment -80  
; ------------------------------ label
L3155:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; d -8  
	mov A1,88
	lea D0, [D0+D1]
	mov [Dframe-728],D0	; T77  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-68]	; offset -68  
	mov A11,[Dframe-84]	; alignment -84  
	call roundoffset
	mov [Dframe-736],A0	; T78  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-736]	; T78  
	mov D13,[Dframe-728]	; T77 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; m -64  
	mov qword[Dframe-744],D0	; T79  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-744]	; T79  
	mov A0, [D0+D1*4]
	mov [Dframe-88],A0	; size -88  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-752],A0	; T80  
; ------------------------------ sub
	mov A0,[Dframe-752]	; T80  
	mov A1,[Dframe-68]	; offset -68  
	sub A0,A1
	mov [Dframe-760],A0	; T81  
; ------------------------------ addto
	mov A0,[Dframe-72]	; recsize -72  
	mov A1,[Dframe-760]	; T81  
	add A0,A1
	mov [Dframe-72],A0	; recsize -72  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-68],A0	; offset -68  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-104]	; fieldlist -104  
	mov [Dframe-768],D0	; T82  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-768]	; T82  
	mov D11,[Dframe-8]	; d -8  
	mov A12,[Dframe-68]	; offset -68  
	call addnewfield
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-52]	; funion -52  
	and A0,A0
	jz L3156
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-76]	; maxsize -76  
	cmp A0,[Dframe-88]	; size -88  
	jle L3157
; ------------------------------ move
	mov A0,[Dframe-76]	; maxsize -76  
	mov [Dframe-776],A0	; T83  
; ------------------------------ jump
	jmp	L3158
; ------------------------------ label
L3157:
; ------------------------------ move
	mov A0,[Dframe-88]	; size -88  
	mov [Dframe-776],A0	; T83  
; ------------------------------ label
L3158:
; ------------------------------ move
	mov A0,[Dframe-776]	; T83  
	mov [Dframe-76],A0	; maxsize -76  
; ------------------------------ jump
	jmp	L3159
; ------------------------------ label
L3156:
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-68]	; offset -68  
	mov A1,[Dframe-88]	; size -88  
	add A0,A1
	mov [Dframe-68],A0	; offset -68  
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-72]	; recsize -72  
	mov A1,[Dframe-88]	; size -88  
	add A0,A1
	mov [Dframe-72],A0	; recsize -72  
; ------------------------------ label
L3159:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-792],D0	; T85  
; ------------------------------ index
	mov D0,[Dframe-792]	; T85  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-784],B0	; T84  
; ------------------------------ widen
	movzx A0,byte [Dframe-784]	; T84  
	mov dword[Dframe-800],A0	; T86  
; ------------------------------ jumpcc
	mov A0,[Dframe-800]	; T86  
	cmp A0,10
	jnz L3160
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call readassignexpr
	add Dstack, 32
; ------------------------------ label
L3160:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-816],D0	; T88  
; ------------------------------ index
	mov D0,[Dframe-816]	; T88  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-808],B0	; T87  
; ------------------------------ widen
	movzx A0,byte [Dframe-808]	; T87  
	mov dword[Dframe-824],A0	; T89  
; ------------------------------ jumpcc
	mov A0,[Dframe-824]	; T89  
	cmp A0,8
	jnz L3161
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ jump
	jmp	L3162
; ------------------------------ label
L3161:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L135
; ------------------------------ label
L3162:
; ------------------------------ jump
	jmp	L3163
; ------------------------------ label
L3148:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-840],D0	; T91  
; ------------------------------ index
	mov D0,[Dframe-840]	; T91  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-832],B0	; T90  
; ------------------------------ widen
	movzx A0,byte [Dframe-832]	; T90  
	mov dword[Dframe-848],A0	; T92  
; ------------------------------ jumpcc
	mov A0,[Dframe-848]	; T92  
	cmp A0,10
	jnz L3164
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call readassignexpr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L135
; ------------------------------ jump
	jmp	L3165
; ------------------------------ label
L3164:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-60]	; mbase -60  
	mov qword[Dframe-864],D0	; T94  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-864]	; T94  
	mov A0, [D0+D1*4]
	mov [Dframe-856],A0	; T93  
; ------------------------------ jumpcc
	mov A0,[Dframe-856]	; T93  
	cmp A0,20
	jz L3167
; ------------------------------ widen
	movsx D0,dword[Dframe-60]	; mbase -60  
	mov qword[Dframe-880],D0	; T96  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-880]	; T96  
	mov A0, [D0+D1*4]
	mov [Dframe-872],A0	; T95  
; ------------------------------ jumpcc
	mov A0,[Dframe-872]	; T95  
	cmp A0,21
	jnz L3166
; ------------------------------ label
L3167:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getautofieldname
	mov [Dframe-888],D0	; T97  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-888]	; T97  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-60]	; mbase -60  
	mov [Dframe-64],A0	; m -64  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L134
; ------------------------------ jump
	jmp	L3168
; ------------------------------ label
L3166:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-64]	; m -64  
	call typename
	mov [Dframe-896],D0	; T98  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK689
	mov D11,[Dframe-896]	; T98  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3168:
; ------------------------------ label
L3165:
; ------------------------------ label
L3163:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L132
; ------------------------------ stmt
; ------------------------------ label
L135: ;<L336>
; ------------------------------ label
L3145:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-912],D0	; T100  
; ------------------------------ index
	mov D0,[Dframe-912]	; T100  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-904],B0	; T99  
; ------------------------------ widen
	movzx A0,byte [Dframe-904]	; T99  
	mov dword[Dframe-920],A0	; T101  
; ------------------------------ jumpcc
	mov A0,[Dframe-920]	; T101  
	cmp A0,17
	jnz L3147
; ------------------------------ label
L3146:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,17
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; currrecord -24  
	mov A1,64
	lea D0, [D0+D1]
	mov [Dframe-928],D0	; T102  
; ------------------------------ move
	mov D0,[Dframe-104]	; fieldlist -104  
	mov D13,[Dframe-928]	; T102 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; currrecord -24  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-952],W0	; T105  
; ------------------------------ widen
	movsx A0,word [Dframe-952]	; T105  
	mov dword[Dframe-960],A0	; T106  
; ------------------------------ widen
	movsx D0,dword[Dframe-960]	; T106  
	mov qword[Dframe-944],D0	; T104  
; ------------------------------ indexlv
	lea D0,[ttsize]
	mov D1,[Dframe-944]	; T104  
	lea D0, [D0+D1*4]
	mov [Dframe-936],D0	; T103  
; ------------------------------ jumpfalse
	mov A0,[Dframe-52]	; funion -52  
	and A0,A0
	jz L3169
; ------------------------------ move
	mov A0,[Dframe-76]	; maxsize -76  
	mov [Dframe-968],A0	; T107  
; ------------------------------ jump
	jmp	L3170
; ------------------------------ label
L3169:
; ------------------------------ move
	mov A0,[Dframe-72]	; recsize -72  
	mov [Dframe-968],A0	; T107  
; ------------------------------ label
L3170:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-968]	; T107  
	mov A11,[Dframe-80]	; maxalignment -80  
	call roundoffset
	mov [Dframe-976],A0	; T108  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-976]	; T108  
	mov D13,[Dframe-936]	; T103 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; currrecord -24  
	mov A1,127
	lea D0, [D0+D1]
	mov [Dframe-984],D0	; T109  
; ------------------------------ move
	mov A0,[Dframe-80]	; maxalignment -80  
	mov D13,[Dframe-984]	; T109 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; currrecord -24  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-992],W0	; T110  
; ------------------------------ widen
	movsx A0,word [Dframe-992]	; T110  
	mov dword[Dframe-1000],A0	; T111  
; ------------------------------ returnx
	mov A0,[Dframe-1000]	; T111  
	jmp L3129
; ------------------------------ label
L3129:
; ------------------------------ hardret
	add Dstack, 1008
	pop Dframe
	ret
;	End

;	Proc:checkpointertypes
checkpointertypes:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 384

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-32]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [Dframe-4],A0	; starget -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-48],D0	; T4  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-48]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [Dframe-8],A0	; ttarget -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-12],A0	; sconst -12  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; tconst -16  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; starget -4  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-64]	; T6  
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-72],A0	; T7  
; ------------------------------ jumpfalse
	mov A0,[Dframe-72]	; T7  
	and A0,A0
	jz L3172
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; starget -4  
	mov qword[Dframe-80],D0	; T8  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-80]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-4],A0	; starget -4  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-12],A0	; sconst -12  
; ------------------------------ label
L3172:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; ttarget -8  
	mov qword[Dframe-96],D0	; T10  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-96]	; T10  
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T9  
	mov dword[Dframe-104],A0	; T11  
; ------------------------------ jumpfalse
	mov A0,[Dframe-104]	; T11  
	and A0,A0
	jz L3173
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; ttarget -8  
	mov qword[Dframe-112],D0	; T12  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-112]	; T12  
	mov A0, [D0+D1*4]
	mov [Dframe-8],A0	; ttarget -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-16],A0	; tconst -16  
; ------------------------------ label
L3173:
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[Dframe+32]	; hard 32  
	and A0,A0
	jnz L3174
; ------------------------------ jumpfalse
	mov A0,[Dframe-12]	; sconst -12  
	and A0,A0
	jz L3174
; ------------------------------ jumptrue
	mov A0,[Dframe-16]	; tconst -16  
	and A0,A0
	jnz L3174
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; s 16  
	mov A11,1
	call Strmode
	mov [Dframe-120],D0	; T13  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK690
	mov D11,[Dframe-120]	; T13  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+24]	; t 24  
	mov A11,1
	call Strmode
	mov [Dframe-128],D0	; T14  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK691
	mov D11,[Dframe-128]	; T14  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK692
	call terror
	add Dstack, 32
; ------------------------------ label
L3174:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; starget -4  
	cmp A0,[Dframe-8]	; ttarget -8  
	jnz L3175
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3171
; ------------------------------ label
L3175:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4]	; starget -4  
	mov [Dframe+16],A0	; s 16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-8]	; ttarget -8  
	mov [Dframe+24],A0	; t 24  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-144],D0	; T16  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-144]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-136],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T15  
	cmp A0,1
	jz L3177
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-160],D0	; T18  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-160]	; T18  
	mov A0, [D0+D1*4]
	mov [Dframe-152],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T17  
	cmp A0,1
	jnz L3176
; ------------------------------ label
L3177:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3171
; ------------------------------ label
L3176:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-176],D0	; T20  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-176]	; T20  
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T19  
	mov dword[Dframe-184],A0	; T21  
; ------------------------------ jumpfalse
	mov A0,[Dframe-184]	; T21  
	and A0,A0
	jz L3178
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-200],D0	; T23  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-200]	; T23  
	mov B0, [D0+D1]
	mov [Dframe-192],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T22  
	mov dword[Dframe-208],A0	; T24  
; ------------------------------ jumpfalse
	mov A0,[Dframe-208]	; T24  
	and A0,A0
	jz L3178
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; s 16  
	mov A11,[Dframe+24]	; t 24  
	mov A12,[Dframe+32]	; hard 32  
	call checkpointertypes
	mov [Dframe-216],A0	; T25  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-216]	; T25  
	jmp L3171
; ------------------------------ jump
	jmp	L3179
; ------------------------------ label
L3178:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-232],D0	; T27  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-232]	; T27  
	mov A0, [D0+D1*4]
	mov [Dframe-224],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-224]	; T26  
	cmp A0,19
	jnz L3180
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-248],D0	; T29  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-248]	; T29  
	mov A0, [D0+D1*4]
	mov [Dframe-240],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T28  
	cmp A0,19
	jnz L3180
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-264],D0	; T31  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-264]	; T31  
	mov A0, [D0+D1*4]
	mov [Dframe-256],A0	; T30  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-280],D0	; T33  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-280]	; T33  
	mov A0, [D0+D1*4]
	mov [Dframe-272],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-256]	; T30  
	cmp A0,[Dframe-272]	; T32  
	jz L3181
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L3171
; ------------------------------ label
L3181:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-288],D0	; T34  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-288]	; T34  
	mov A0, [D0+D1*4]
	mov [Dframe-4],A0	; starget -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-296],D0	; T35  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-296]	; T35  
	mov A0, [D0+D1*4]
	mov [Dframe-8],A0	; ttarget -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; starget -4  
	cmp A0,[Dframe-8]	; ttarget -8  
	jnz L3182
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3171
; ------------------------------ label
L3182:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; starget -4  
	mov qword[Dframe-312],D0	; T37  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-312]	; T37  
	mov B0, [D0+D1]
	mov [Dframe-304],B0	; T36  
; ------------------------------ widen
	movzx A0,byte [Dframe-304]	; T36  
	mov dword[Dframe-320],A0	; T38  
; ------------------------------ jumpfalse
	mov A0,[Dframe-320]	; T38  
	and A0,A0
	jz L3183
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; ttarget -8  
	mov qword[Dframe-336],D0	; T40  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-336]	; T40  
	mov B0, [D0+D1]
	mov [Dframe-328],B0	; T39  
; ------------------------------ widen
	movzx A0,byte [Dframe-328]	; T39  
	mov dword[Dframe-344],A0	; T41  
; ------------------------------ jumpfalse
	mov A0,[Dframe-344]	; T41  
	and A0,A0
	jz L3183
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4]	; starget -4  
	mov A11,[Dframe-8]	; ttarget -8  
	mov A12,[Dframe+32]	; hard 32  
	call checkpointertypes
	mov [Dframe-352],A0	; T42  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-352]	; T42  
	jmp L3171
; ------------------------------ label
L3183:
; ------------------------------ jump
	jmp	L3184
; ------------------------------ label
L3180:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-368],D0	; T44  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-368]	; T44  
	mov A0, [D0+D1*4]
	mov [Dframe-360],A0	; T43  
; ------------------------------ jumpcc
	mov A0,[Dframe-360]	; T43  
	cmp A0,17
	jnz L3185
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-384],D0	; T46  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-384]	; T46  
	mov A0, [D0+D1*4]
	mov [Dframe-376],A0	; T45  
; ------------------------------ jumpcc
	mov A0,[Dframe-376]	; T45  
	cmp A0,17
	jnz L3185
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3171
; ------------------------------ label
L3185:
; ------------------------------ label
L3184:
; ------------------------------ label
L3179:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L3171
; ------------------------------ label
L3171:
; ------------------------------ hardret
	add Dstack, 384
	pop Dframe
	ret
;	End

;	Proc:comparemode
comparemode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; s 16  
	cmp A0,[Dframe+24]	; t 24  
	jnz L3187
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3186
; ------------------------------ label
L3187:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-16]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,19
	jnz L3188
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-32]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,19
	jnz L3188
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-48]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-40],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-64],D0	; T8  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-64]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-40]	; T5  
	mov A11,[Dframe-56]	; T7  
	call comparemode
	mov [Dframe-72],A0	; T9  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T9  
	cmp A0,0
	jnz L3189
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L3186
; ------------------------------ label
L3189:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-88],D0	; T11  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-88]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-80],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T10  
	cmp A0,0
	jz L3191
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-104],D0	; T13  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-104]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-96],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T12  
	cmp A0,0
	jz L3191
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; s 16  
	mov qword[Dframe-120],D0	; T15  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-120]	; T15  
	mov A0, [D0+D1*4]
	mov [Dframe-112],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-136],D0	; T17  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-136]	; T17  
	mov A0, [D0+D1*4]
	mov [Dframe-128],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T14  
	cmp A0,[Dframe-128]	; T16  
	jnz L3190
; ------------------------------ label
L3191:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3186
; ------------------------------ label
L3190:
; ------------------------------ label
L3188:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L3186
; ------------------------------ label
L3186:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

;	Proc:readenumdecl
readenumdecl:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 320

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-32],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-32]	; T2  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,16
	jnz L3193
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	call readenumnames
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,15
	jmp L3192
; ------------------------------ label
L3193:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,65
	call checksymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-48],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-48]	; T4  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-64],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-64]	; T6  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-72],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T7  
	cmp A0,16
	jz L3194
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe-8]	; d -8  
	mov A12,3
	mov A13,[currblockno]
	call checkdupl
	mov [Dframe-80],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T8  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; e -16  
	and D0,D0
	jz L3195
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T9  
	mov dword[Dframe-96],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T10  
	cmp A0,12
	jz L3196
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-104],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK693
	mov D11,[Dframe-104]	; T11  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3196:
; ------------------------------ label
L3195:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe-8]	; d -8  
	mov A12,12
	call createdupldef
	mov [Dframe-112],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T12  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T13  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; e -16  
	call createenummode
	mov [Dframe-128],A0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-128]	; T14  
	mov D13,[Dframe-120]	; T13 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; e -16  
	mov A1,104
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T15  
; ------------------------------ move
	mov A0,[currblockno]
	mov D13,[Dframe-136]	; T15 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[currblockno]
	mov qword[Dframe-152],D0	; T17  
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,[Dframe-152]	; T17  
	lea D0, [D0+D1*4]
	mov [Dframe-144],D0	; T16  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-144]	; T16 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-160],W0	; T18  
; ------------------------------ widen
	movsx A0,word [Dframe-160]	; T18  
	mov dword[Dframe-168],A0	; T19  
; ------------------------------ returnx
	mov A0,[Dframe-168]	; T19  
	jmp L3192
; ------------------------------ label
L3194:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe-8]	; d -8  
	mov A12,3
	mov A13,[currblockno]
	call checkdupl
	mov [Dframe-176],D0	; T20  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T20  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-16]	; e -16  
	and D0,D0
	jz L3197
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-184],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T21  
	mov dword[Dframe-192],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T22  
	cmp A0,12
	jz L3198
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T23  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK694
	mov D11,[Dframe-200]	; T23  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3198:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-208],D0	; T24  
; ------------------------------ jumpfalse
	mov D0,[Dframe-208]	; T24  
	and D0,D0
	jz L3199
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-216],D0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK695
	mov D11,[Dframe-216]	; T25  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3199:
; ------------------------------ jump
	jmp	L3200
; ------------------------------ label
L3197:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe-8]	; d -8  
	mov A12,12
	call createdupldef
	mov [Dframe-224],D0	; T26  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-224]	; T26  
	mov [Dframe-16],D0	; e -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	lea D0, [D0+D1]
	mov [Dframe-232],D0	; T27  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; e -16  
	call createenummode
	mov [Dframe-240],A0	; T28  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-240]	; T28  
	mov D13,[Dframe-232]	; T27 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; e -16  
	mov A1,104
	lea D0, [D0+D1]
	mov [Dframe-248],D0	; T29  
; ------------------------------ move
	mov A0,[currblockno]
	mov D13,[Dframe-248]	; T29 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[currblockno]
	mov qword[Dframe-264],D0	; T31  
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,[Dframe-264]	; T31  
	lea D0, [D0+D1*4]
	mov [Dframe-256],D0	; T30  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-256]	; T30 *
	mov dword[D13],A0
; ------------------------------ label
L3200:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	call readenumnames
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-288],W0	; T34  
; ------------------------------ widen
	movsx A0,word [Dframe-288]	; T34  
	mov dword[Dframe-296],A0	; T35  
; ------------------------------ widen
	movsx D0,dword[Dframe-296]	; T35  
	mov qword[Dframe-280],D0	; T33  
; ------------------------------ indexlv
	lea D0,[ttnamedef]
	mov D1,[Dframe-280]	; T33  
	lea D0, [D0+D1*8]
	mov [Dframe-272],D0	; T32  
; ------------------------------ move
	mov D0,[Dframe-16]	; e -16  
	mov D13,[Dframe-272]	; T32 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; e -16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-304],W0	; T36  
; ------------------------------ widen
	movsx A0,word [Dframe-304]	; T36  
	mov dword[Dframe-312],A0	; T37  
; ------------------------------ returnx
	mov A0,[Dframe-312]	; T37  
	jmp L3192
; ------------------------------ label
L3192:
; ------------------------------ hardret
	add Dstack, 320
	pop Dframe
	ret
;	End

;	Proc:readenumnames
readenumnames:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 208

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe-32],D0	; ulistx -32  
; ------------------------------ move
	mov D0,[Dframe-32]	; ulistx -32  
	mov [Dframe-24],D0	; ulist -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-36],A0	; enumseq -36  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3202
; ------------------------------ label
L3204:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-56],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-56]	; T2  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe-48]	; T1  
	mov A12,2
	mov A13,[currblockno]
	call checkdupl
	mov [Dframe-64],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T3  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; d -8  
	and D0,D0
	jz L3205
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK696
	mov D11,[Dframe-72]	; T4  
	call serror_s
	add Dstack, 32
; ------------------------------ label
L3205:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-88],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe-88]	; T6  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; owner 16  
	mov D11,[Dframe-80]	; T5  
	mov A12,11
	call createdupldef
	mov [Dframe-96],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-96]	; T7  
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-112],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-112]	; T9  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T8  
	mov dword[Dframe-120],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T10  
	cmp A0,11
	jnz L3206
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readconstintexpr
	mov [Dframe-128],A0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-128]	; T11  
	mov [Dframe-36],A0	; enumseq -36  
; ------------------------------ label
L3206:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; d -8  
	mov A1,100
	lea D0, [D0+D1]
	mov [Dframe-136],D0	; T12  
; ------------------------------ move
	mov A0,[Dframe-36]	; enumseq -36  
	mov D13,[Dframe-136]	; T12 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; d -8  
	mov A1,104
	lea D0, [D0+D1]
	mov [Dframe-144],D0	; T13  
; ------------------------------ move
	mov A0,[currblockno]
	mov D13,[Dframe-144]	; T13 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[currblockno]
	mov qword[Dframe-160],D0	; T15  
; ------------------------------ indexlv
	lea D0,[blockcounts]
	mov D1,[Dframe-160]	; T15  
	lea D0, [D0+D1*4]
	mov [Dframe-152],D0	; T14  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-152]	; T14 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-36]	; enumseq -36  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-176],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-176]	; T17  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-168],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T16  
	mov dword[Dframe-184],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T18  
	cmp A0,8
	jnz L3207
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ label
L3207:
; ------------------------------ label
L3202:
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-200],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-200]	; T20  
	mov A1,18
	mov B0, [D0+D1]
	mov [Dframe-192],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T19  
	mov dword[Dframe-208],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T21  
	cmp A0,65
	jz L3204
; ------------------------------ label
L3203:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,17
	call skipsymbol
	add Dstack, 32
; ------------------------------ label
L3201:
; ------------------------------ hardret
	add Dstack, 208
	pop Dframe
	ret
;	End

;	Proc:createdotop
createdotop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 448

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-92],A0	; m -92  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,52
	jnz L3209
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-92]	; m -92  
	mov qword[Dframe-120],D0	; T2  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-120]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T1  
	mov dword[Dframe-128],A0	; T3  
; ------------------------------ jumptrue
	mov A0,[Dframe-128]	; T3  
	and A0,A0
	jnz L3210
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK697
	call serror
	add Dstack, 32
; ------------------------------ label
L3210:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-92]	; m -92  
	mov qword[Dframe-136],D0	; T4  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-136]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-92],A0	; m -92  
; ------------------------------ label
L3209:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-92]	; m -92  
	mov qword[Dframe-152],D0	; T6  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-152]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-144],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T5  
	cmp A0,20
	jz L3212
; ------------------------------ widen
	movsx D0,dword[Dframe-92]	; m -92  
	mov qword[Dframe-168],D0	; T8  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-168]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-160],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-160]	; T7  
	cmp A0,21
	jnz L3211
; ------------------------------ label
L3212:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3213
; ------------------------------ label
L3211:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK698
	call serror
	add Dstack, 32
; ------------------------------ label
L3213:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-92]	; m -92  
	mov qword[Dframe-176],D0	; T9  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-176]	; T9  
	mov D0, [D0+D1*8]
	mov [Dframe-64],D0	; prec -64  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; d 32  
	mov [Dframe-56],D0	; f -56  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3214
; ------------------------------ label
L3216:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; f -56  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-184],D0	; T10  
; ------------------------------ jumpcc
	mov D0,[Dframe-184]	; T10  
	cmp D0,[Dframe-64]	; prec -64  
	jnz L3217
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; f -56  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; offset -96  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L136
; ------------------------------ label
L3217:
; ------------------------------ label
L3214:
; ------------------------------ index
	mov D0,[Dframe-56]	; f -56  
	mov A1,40
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; f -56  
; ------------------------------ jumptrue
	mov D0,[Dframe-56]	; f -56  
	and D0,D0
	jnz L3216
; ------------------------------ label
L3215:
; ------------------------------ stmt
; ------------------------------ label
L136: ;<L355>
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov D0,[Dframe-56]	; f -56  
	and D0,D0
	jnz L3218
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; d 32  
	mov [Dframe-88],D0	; gend -88  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3219
; ------------------------------ label
L3221:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-88]	; gend -88  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; gend -88  
; ------------------------------ label
L3219:
; ------------------------------ index
	mov D0,[Dframe-88]	; gend -88  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-192],D0	; T11  
; ------------------------------ jumptrue
	mov D0,[Dframe-192]	; T11  
	and D0,D0
	jnz L3221
; ------------------------------ label
L3220:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; prec -64  
	mov A1,64
	mov D0, [D0+D1]
	mov [Dframe-104],D0	; fl -104  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3222
; ------------------------------ label
L3224:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-104]	; fl -104  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T12  
; ------------------------------ jumpcc
	mov D0,[Dframe-200]	; T12  
	cmp D0,[Dframe-88]	; gend -88  
	jnz L3225
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-104]	; fl -104  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; f -56  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-104]	; fl -104  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; offset -96  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L137
; ------------------------------ label
L3225:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-104]	; fl -104  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-104],D0	; fl -104  
; ------------------------------ label
L3222:
; ------------------------------ jumptrue
	mov D0,[Dframe-104]	; fl -104  
	and D0,D0
	jnz L3224
; ------------------------------ label
L3223:
; ------------------------------ stmt
; ------------------------------ label
L137: ;<L361>
; ------------------------------ label
L3218:
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov D0,[Dframe-56]	; f -56  
	and D0,D0
	jnz L3226
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; d 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-208],D0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-92]	; m -92  
	mov A11,1
	call Strmode
	mov [Dframe-216],D0	; T14  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK699
	mov D11,[Dframe-208]	; T13  
	mov D12,[Dframe-216]	; T14  
	call terror_ss
	add Dstack, 32
; ------------------------------ label
L3226:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; offset -96  
	mov qword[Dframe-224],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-224]	; T15  
	mov A11,4
	call createconstunit
	mov [Dframe-232],D0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-232]	; T16  
	mov [Dframe-24],D0	; poffset -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,51
	jnz L3227
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-240],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T17  
	cmp A0,3
	jnz L3228
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-248],D0	; T18  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-248]	; T18 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-256],D0	; T19  
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-264],A0	; T20  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-264]	; T20  
	call createrefmode
	mov [Dframe-272],A0	; T21  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-272]	; T21  
	mov D13,[Dframe-256]	; T19 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,56
	mov D11,[Dframe+24]	; p 24  
	mov D12,[Dframe-24]	; poffset -24  
	call createunit2
	mov [Dframe-280],D0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-280]	; T22  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ jump
	jmp	L3229
; ------------------------------ label
L3228:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-288],A0	; T23  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T23  
	cmp A0,55
	jnz L3230
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T24  
; ------------------------------ move
	mov A0,56
	mov D13,[Dframe-296]	; T24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-304],D0	; T25  
; ------------------------------ move
	mov D0,[Dframe-24]	; poffset -24  
	mov D13,[Dframe-304]	; T25 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; p 24  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ jump
	jmp	L3231
; ------------------------------ label
L3230:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-312],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-312]	; T26  
	cmp A0,56
	jnz L3232
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; pb -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; pc -40  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-40]	; pc -40  
	and D0,D0
	jz L3233
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; offset -96  
	mov qword[Dframe-320],D0	; T27  
; ------------------------------ indexlv
	mov D0,[Dframe-40]	; pc -40  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-328],D0	; T28  
; ------------------------------ addto
	mov D13,[Dframe-328]	; T28 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-320]	; T27  
	add D0,D1
	mov D13,qword[Dframe-328]	; T28 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3234
; ------------------------------ label
L3233:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; pb -32  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-336],A0	; T29  
; ------------------------------ jumpcc
	mov A0,[Dframe-336]	; T29  
	cmp A0,1
	jnz L3235
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; offset -96  
	mov qword[Dframe-344],D0	; T30  
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; pb -32  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-352],D0	; T31  
; ------------------------------ addto
	mov D13,[Dframe-352]	; T31 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-344]	; T30  
	add D0,D1
	mov D13,qword[Dframe-352]	; T31 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3236
; ------------------------------ label
L3235:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; p 24  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-360],D0	; T32  
; ------------------------------ move
	mov D0,[Dframe-24]	; poffset -24  
	mov D13,[Dframe-360]	; T32 *
	mov qword[D13],D0
; ------------------------------ label
L3236:
; ------------------------------ label
L3234:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+24]	; p 24  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ jump
	jmp	L3237
; ------------------------------ label
L3232:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,56
	mov D11,[Dframe+24]	; p 24  
	mov D12,[Dframe-24]	; poffset -24  
	call createunit2
	mov [Dframe-368],D0	; T33  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-368]	; T33  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ label
L3237:
; ------------------------------ label
L3231:
; ------------------------------ label
L3229:
; ------------------------------ jump
	jmp	L3238
; ------------------------------ label
L3227:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-376],A0	; T34  
; ------------------------------ jumpcc
	mov A0,[Dframe-376]	; T34  
	cmp A0,1
	jnz L3239
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; offset -96  
	mov qword[Dframe-384],D0	; T35  
; ------------------------------ indexlv
	mov D0,[Dframe+24]	; p 24  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-392],D0	; T36  
; ------------------------------ addto
	mov D13,[Dframe-392]	; T36 *
	mov D0,qword[D13]
	mov D1,qword[Dframe-384]	; T35  
	add D0,D1
	mov D13,qword[Dframe-392]	; T36 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,55
	mov D11,[Dframe+24]	; p 24  
	call createunit1
	mov [Dframe-400],D0	; T37  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-400]	; T37  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ jump
	jmp	L3240
; ------------------------------ label
L3239:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,56
	mov D11,[Dframe+24]	; p 24  
	mov D12,[Dframe-24]	; poffset -24  
	call createunit2
	mov [Dframe-408],D0	; T38  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-408]	; T38  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ label
L3240:
; ------------------------------ label
L3238:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-416],D0	; T39  
; ------------------------------ index
	mov D0,[Dframe-56]	; f -56  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-424],W0	; T40  
; ------------------------------ widen
	movsx A0,word [Dframe-424]	; T40  
	mov dword[Dframe-432],A0	; T41  
; ------------------------------ move
	mov A0,[Dframe-432]	; T41  
	mov D13,[Dframe-416]	; T39 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; q -8  
	call arraytopointer
	mov [Dframe-440],D0	; T42  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-440]	; T42  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; q -8  
	call fixmemopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L3208
; ------------------------------ label
L3208:
; ------------------------------ hardret
	add Dstack, 448
	pop Dframe
	ret
;	End

;	Proc:mulunit
mulunit:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; elemtype 24  
	mov qword[Dframe-16],D0	; T1  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-16]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-4],A0	; elemsize -4  
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; elemsize -4  
	cmp A0,1
	jz L3242
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,1
	jnz L3243
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; elemsize -4  
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ mul
	mov D0,[Dframe-40]	; T4  
	mov D1,[Dframe-48]	; T5  
	mul D1
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-56]	; T6  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3244
; ------------------------------ label
L3243:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,59
	mov D11,[Dframe+16]	; p 16  
	call createunit1
	mov [Dframe-64],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T7  
	mov [Dframe+16],D0	; p 16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ move
	mov A0,[Dframe-4]	; elemsize -4  
	mov D13,[Dframe-72]	; T8 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-80]	; T9 *
	mov dword[D13],A0
; ------------------------------ label
L3244:
; ------------------------------ label
L3242:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3241
; ------------------------------ label
L3241:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:divunit
divunit:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; elemtype 24  
	mov qword[Dframe-16],D0	; T1  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-16]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-4],A0	; elemsize -4  
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; elemsize -4  
	cmp A0,1
	jz L3246
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,1
	jnz L3247
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; elemsize -4  
	mov qword[Dframe-48],D0	; T5  
; ------------------------------ div
	mov D0,[Dframe-40]	; T4  
	mov D1,[Dframe-48]	; T5  
	cqo
	idiv D1
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-56]	; T6  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3248
; ------------------------------ label
L3247:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,59
	mov D11,[Dframe+16]	; p 16  
	call createunit1
	mov [Dframe-64],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T7  
	mov [Dframe+16],D0	; p 16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ neg
	mov A0,[Dframe-4]	; elemsize -4  
	neg A0
	mov [Dframe-80],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-80]	; T9  
	mov D13,[Dframe-72]	; T8 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T10  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-88]	; T10 *
	mov dword[D13],A0
; ------------------------------ label
L3248:
; ------------------------------ label
L3246:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3245
; ------------------------------ label
L3245:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:createassignopref
createassignopref:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; rmode -12  
; ------------------------------ move
	mov A0,[Dframe-12]	; rmode -12  
	mov [Dframe-4],A0	; pmode -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; pmode -4  
	mov qword[Dframe-32],D0	; T1  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-32]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; elemmode -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; q 32  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; qmode -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,11
	jnz L3250
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; q 32  
	mov A11,[Dframe-4]	; pmode -4  
	call coercemode
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe+32],D0	; q 32  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,13
	mov D11,[Dframe+24]	; p 24  
	mov D12,[Dframe+32]	; q 32  
	call createunit2
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-24],D0	; r -24  
; ------------------------------ jump
	jmp	L3251
; ------------------------------ label
L3250:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,44
	jnz L3252
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; qmode -8  
	mov qword[Dframe-64],D0	; T5  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-64]	; T5  
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T4  
	mov dword[Dframe-72],A0	; T6  
; ------------------------------ jumpfalse
	mov A0,[Dframe-72]	; T6  
	and A0,A0
	jz L3253
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK700
	call serror
	add Dstack, 32
; ------------------------------ label
L3253:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; q 32  
	mov A11,5
	call coercemode
	mov [Dframe-80],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T7  
	mov [Dframe+32],D0	; q 32  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; q 32  
	mov A11,[Dframe-16]	; elemmode -16  
	call mulunit
	mov [Dframe-88],D0	; T8  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,67
	mov D11,[Dframe+24]	; p 24  
	mov D12,[Dframe-88]	; T8  
	call createunit2
	mov [Dframe-96],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-96]	; T9  
	mov [Dframe-24],D0	; r -24  
; ------------------------------ jump
	jmp	L3254
; ------------------------------ label
L3252:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,45
	jnz L3255
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; qmode -8  
	mov qword[Dframe-112],D0	; T11  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-112]	; T11  
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T10  
	mov dword[Dframe-120],A0	; T12  
; ------------------------------ jumpfalse
	mov A0,[Dframe-120]	; T12  
	and A0,A0
	jz L3256
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4]	; pmode -4  
	mov A11,[Dframe-8]	; qmode -8  
	call comparemode
	mov [Dframe-128],A0	; T13  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-128]	; T13  
	and A0,A0
	jnz L3257
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK701
	call serror
	add Dstack, 32
; ------------------------------ label
L3257:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,42
	mov D11,[Dframe+24]	; p 24  
	mov D12,[Dframe+32]	; q 32  
	call createunit2
	mov [Dframe-136],D0	; T14  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-136]	; T14  
	mov A11,[Dframe-16]	; elemmode -16  
	call divunit
	mov [Dframe-144],D0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T15  
	mov [Dframe-24],D0	; r -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-12],A0	; rmode -12  
; ------------------------------ jump
	jmp	L3258
; ------------------------------ label
L3256:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; q 32  
	mov A11,[Dframe-16]	; elemmode -16  
	call mulunit
	mov [Dframe-152],D0	; T16  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,68
	mov D11,[Dframe+24]	; p 24  
	mov D12,[Dframe-152]	; T16  
	call createunit2
	mov [Dframe-160],D0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-160]	; T17  
	mov [Dframe-24],D0	; r -24  
; ------------------------------ label
L3258:
; ------------------------------ jump
	jmp	L3259
; ------------------------------ label
L3255:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK702
	call serror
	add Dstack, 32
; ------------------------------ label
L3259:
; ------------------------------ label
L3254:
; ------------------------------ label
L3251:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-24]	; r -24  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-168],D0	; T18  
; ------------------------------ move
	mov A0,[Dframe-12]	; rmode -12  
	mov D13,[Dframe-168]	; T18 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; r -24  
	jmp L3249
; ------------------------------ label
L3249:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:addnewfield
addnewfield:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; d 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ getptr
	mov D0,[Dframe-48]	; T4  
	mov B0, [D0]
	mov [Dframe-40],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T3  
	mov dword[Dframe-56],A0	; T5  
; ------------------------------ truncate
	mov A0,[Dframe-56]	; T5  
	and D0,255
	mov [Dframe-32],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T2  
	mov dword[Dframe-24],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T1  
	cmp A0,36
	jz L3261
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,28
	call pcm_allocz
	mov [Dframe-64],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T6  
	mov [Dframe-16],D0	; f -16  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; f -16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T7  
; ------------------------------ move
	mov D0,[Dframe+24]	; d 24  
	mov D13,[Dframe-72]	; T7 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3262
; ------------------------------ label
L3264:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; d 24  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe+24],D0	; d 24  
; ------------------------------ label
L3262:
; ------------------------------ index
	mov D0,[Dframe+24]	; d 24  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; T8  
; ------------------------------ jumptrue
	mov D0,[Dframe-80]	; T8  
	and D0,D0
	jnz L3264
; ------------------------------ label
L3263:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; f -16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ move
	mov D0,[Dframe+24]	; d 24  
	mov D13,[Dframe-88]	; T9 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; f -16  
	mov A1,24
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T10  
; ------------------------------ move
	mov A0,[Dframe+32]	; offset 32  
	mov D13,[Dframe-96]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-16]	; f -16  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T11  
; ------------------------------ getptr
	mov D0,[Dframe+16]	; flist 16  
	mov D0, [D0]
	mov [Dframe-112],D0	; T12  
; ------------------------------ move
	mov D0,[Dframe-112]	; T12  
	mov D13,[Dframe-104]	; T11 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; f -16  
	mov D13,[Dframe+16]	; flist 16 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3265
; ------------------------------ label
L3261:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; d 24  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-136],W0	; T15  
; ------------------------------ widen
	movsx A0,word [Dframe-136]	; T15  
	mov dword[Dframe-144],A0	; T16  
; ------------------------------ widen
	movsx D0,dword[Dframe-144]	; T16  
	mov qword[Dframe-128],D0	; T14  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-128]	; T14  
	mov D0, [D0+D1*8]
	mov [Dframe-120],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-120]	; T13  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; e -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3266
; ------------------------------ label
L3268:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; e -8  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-152],A0	; T17  
; ------------------------------ add
	mov A0,[Dframe+32]	; offset 32  
	mov A1,[Dframe-152]	; T17  
	add A0,A1
	mov [Dframe-160],A0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; flist 16  
	mov D11,[Dframe-8]	; e -8  
	mov A12,[Dframe-160]	; T18  
	call addnewfield
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; e -8  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; e -8  
; ------------------------------ label
L3266:
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; e -8  
	and D0,D0
	jnz L3268
; ------------------------------ label
L3267:
; ------------------------------ label
L3265:
; ------------------------------ label
L3260:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

;	Proc:pushloop
pushloop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[loopindex]
	cmp A0,100
	jl L3270
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK703
	call serror
	add Dstack, 32
; ------------------------------ label
L3270:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[loopindex]
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[loopindex]
	mov A1,1
	sub A0,A1
	mov [Dframe-24],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; T3  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ indexlv
	lea D0,[looptypestack]
	mov D1,[Dframe-16]	; T2  
	lea D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ move
	mov A0,[Dframe+16]	; looptype 16  
	mov D13,[Dframe-8]	; T1 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[loopindex]
	mov A1,1
	sub A0,A1
	mov [Dframe-48],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T6  
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ indexlv
	lea D0,[casevaluestack]
	mov D1,[Dframe-40]	; T5  
	lea D0, [D0+D1*8]
	mov [Dframe-32],D0	; T4  
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe-32]	; T4 *
	mov qword[D13],D0
; ------------------------------ label
L3269:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:poploop
poploop:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[loopindex]
	and A0,A0
	jz L3272
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[loopindex]
; ------------------------------ jump
	jmp	L3273
; ------------------------------ label
L3272:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK704
	call serror
	add Dstack, 32
; ------------------------------ label
L3273:
; ------------------------------ label
L3271:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

;	Proc:addcasevalue
addcasevalue:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[loopindex]
	mov [Dframe-12],A0	; index -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3275
; ------------------------------ label
L3277:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-12]	; index -12  
; ------------------------------ label
L3275:
; ------------------------------ jumpfalse
	mov A0,[Dframe-12]	; index -12  
	and A0,A0
	jz L3278
; ------------------------------ sub
	mov A0,[Dframe-12]	; index -12  
	mov A1,1
	sub A0,A1
	mov [Dframe-40],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T3  
	mov qword[Dframe-32],D0	; T2  
; ------------------------------ index
	lea D0,[looptypestack]
	mov D1,[Dframe-32]	; T2  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-48],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T4  
	cmp A0,83
	jnz L3277
; ------------------------------ label
L3278:
; ------------------------------ label
L3276:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; index -12  
	cmp A0,0
	jnz L3279
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK705
	call serror
	add Dstack, 32
; ------------------------------ label
L3279:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,12
	call pcm_alloc
	mov [Dframe-56],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ move
	mov A0,[Dframe+16]	; value 16  
	mov D13,[Dframe-64]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T7  
; ------------------------------ sub
	mov A0,[Dframe-12]	; index -12  
	mov A1,1
	sub A0,A1
	mov [Dframe-96],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T10  
	mov qword[Dframe-88],D0	; T9  
; ------------------------------ index
	lea D0,[casevaluestack]
	mov D1,[Dframe-88]	; T9  
	mov D0, [D0+D1*8]
	mov [Dframe-80],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-80]	; T8  
	mov D13,[Dframe-72]	; T7 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-12]	; index -12  
	mov A1,1
	sub A0,A1
	mov [Dframe-120],A0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T13  
	mov qword[Dframe-112],D0	; T12  
; ------------------------------ indexlv
	lea D0,[casevaluestack]
	mov D1,[Dframe-112]	; T12  
	lea D0, [D0+D1*8]
	mov [Dframe-104],D0	; T11  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-104]	; T11 *
	mov qword[D13],D0
; ------------------------------ label
L3274:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:roundoffset
roundoffset:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[structpadding]
	and A0,A0
	jz L3281
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; alignment 24  
	cmp A0,1
	jnz L3282
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; offset 16  
	jmp L3280
; ------------------------------ label
L3282:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+24]	; alignment 24  
	mov A1,1
	sub A0,A1
	mov [Dframe-4],A0	; mask -4  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3283
; ------------------------------ label
L3285:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe+16]	; offset 16  
; ------------------------------ label
L3283:
; ------------------------------ iand
	mov A0,[Dframe+16]	; offset 16  
	mov A1,[Dframe-4]	; mask -4  
	and A0,A1
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumptrue
	mov A0,[Dframe-16]	; T1  
	and A0,A0
	jnz L3285
; ------------------------------ label
L3284:
; ------------------------------ label
L3281:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; offset 16  
	jmp L3280
; ------------------------------ label
L3280:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:fixmemopnd
fixmemopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T3  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-24]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; T1  
; ------------------------------ setcc
	mov A0,[Dframe-16]	; T1  
	cmp A0,2
	setz B0
	movzx A0,B0
	mov [Dframe-40],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-40]	; T4  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ jumptrue
	mov A0,[Dframe-4]	; t -4  
	and A0,A0
	jnz L3288
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T7  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-56]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T5  
; ------------------------------ setcc
	mov A0,[Dframe-48]	; T5  
	cmp A0,3
	setz B0
	movzx A0,B0
	mov [Dframe-72],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-72]	; T8  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ jumptrue
	mov A0,[Dframe-4]	; t -4  
	and A0,A0
	jnz L3288
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T11  
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-88]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-80],A0	; T9  
; ------------------------------ setcc
	mov A0,[Dframe-80]	; T9  
	cmp A0,7
	setz B0
	movzx A0,B0
	mov [Dframe-104],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-104]	; T12  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ jumptrue
	mov A0,[Dframe-4]	; t -4  
	and A0,A0
	jnz L3288
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-128],A0	; T15  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T15  
	mov qword[Dframe-120],D0	; T14  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-120]	; T14  
	mov A0, [D0+D1*4]
	mov [Dframe-112],A0	; T13  
; ------------------------------ setcc
	mov A0,[Dframe-112]	; T13  
	cmp A0,8
	setz B0
	movzx A0,B0
	mov [Dframe-136],A0	; T16  
; ------------------------------ move
	mov A0,[Dframe-136]	; T16  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ jumptrue
	mov A0,[Dframe-4]	; t -4  
	and A0,A0
	jnz L3288
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-160]	; T19  
	mov qword[Dframe-152],D0	; T18  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-152]	; T18  
	mov A0, [D0+D1*4]
	mov [Dframe-144],A0	; T17  
; ------------------------------ setcc
	mov A0,[Dframe-144]	; T17  
	cmp A0,6
	setz B0
	movzx A0,B0
	mov [Dframe-168],A0	; T20  
; ------------------------------ move
	mov A0,[Dframe-168]	; T20  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ jumpfalse
	mov A0,[Dframe-4]	; t -4  
	and A0,A0
	jz L3287
; ------------------------------ label
L3288:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,5
	call insertunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T21  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-176]	; T21 *
	mov dword[D13],A0
; ------------------------------ label
L3287:
; ------------------------------ label
L3286:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:docast
docast:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 448

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; s -12  
; ------------------------------ stmt
; ------------------------------ label
L138: ;<retry>
; ------------------------------ stmt
; ------------------------------ label
L139: ;<L385>
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; s -12  
	cmp A0,[Dframe+24]	; t 24  
	jnz L3290
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3289
; ------------------------------ label
L3290:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-16],A0	; opc -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; s -12  
	cmp A0,16
	jge L3291
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,16
	jge L3291
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-40],D0	; T3  
; ------------------------------ indexref
	lea D0,[conversionops]
	mov D1,[Dframe-40]	; T3  
	imul D1,16
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-48],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-32]	; T2  
	mov D1,[Dframe-48]	; T4  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T1  
	mov dword[Dframe-56],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-56]	; T5  
	mov [Dframe-16],A0	; opc -16  
; ------------------------------ jump
	jmp	L3292
; ------------------------------ label
L3291:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-72]	; T7  
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T6  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-80]	; T8  
	and A0,A0
	jz L3293
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-96],D0	; T10  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-96]	; T10  
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T9  
	mov dword[Dframe-104],A0	; T11  
; ------------------------------ jumpfalse
	mov A0,[Dframe-104]	; T11  
	and A0,A0
	jz L3293
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-12]	; s -12  
	mov A11,[Dframe+24]	; t 24  
	mov A12,[Dframe+32]	; hard 32  
	call checkpointertypes
	mov [Dframe-112],A0	; T12  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-112]	; T12  
	and A0,A0
	jz L3294
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T13  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-120]	; T13 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3289
; ------------------------------ label
L3294:
; ------------------------------ jump
	jmp	L3295
; ------------------------------ label
L3293:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-136],D0	; T15  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-136]	; T15  
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T14  
	mov dword[Dframe-144],A0	; T16  
; ------------------------------ jumpfalse
	mov A0,[Dframe-144]	; T16  
	and A0,A0
	jz L3296
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; s -12  
	mov qword[Dframe-152],D0	; T17  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-152]	; T17  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; s -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L139
; ------------------------------ jump
	jmp	L3297
; ------------------------------ label
L3296:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-168],D0	; T19  
; ------------------------------ index
	lea D0,[ttconst]
	mov D1,[Dframe-168]	; T19  
	mov B0, [D0+D1]
	mov [Dframe-160],B0	; T18  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T18  
	mov dword[Dframe-176],A0	; T20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-176]	; T20  
	and A0,A0
	jz L3298
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-184],D0	; T21  
; ------------------------------ index
	lea D0,[ttconsttype]
	mov D1,[Dframe-184]	; T21  
	mov A0, [D0+D1*4]
	mov [Dframe+24],A0	; t 24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L139
; ------------------------------ jump
	jmp	L3299
; ------------------------------ label
L3298:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-200],D0	; T23  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-200]	; T23  
	mov B0, [D0+D1]
	mov [Dframe-192],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T22  
	mov dword[Dframe-208],A0	; T24  
; ------------------------------ jumpfalse
	mov A0,[Dframe-208]	; T24  
	and A0,A0
	jz L3300
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; s -12  
	cmp A0,2
	jl L3300
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; s -12  
	cmp A0,10
	jg L3300
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T25  
	cmp A0,1
	jnz L3300
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-224],D0	; T26  
; ------------------------------ jumpcc
	mov D0,[Dframe-224]	; T26  
	cmp D0,0
	jnz L3300
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-16],A0	; opc -16  
; ------------------------------ label
L3300:
; ------------------------------ label
L3299:
; ------------------------------ label
L3297:
; ------------------------------ label
L3295:
; ------------------------------ label
L3292:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; opc -16  
	cmp A0,0
	jnz L3301
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[Dframe+32]	; hard 32  
	and A0,A0
	jnz L3302
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-12]	; s -12  
	mov A11,1
	call Strmode
	mov [Dframe-232],D0	; T27  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK706
	mov D11,[Dframe-232]	; T27  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+24]	; t 24  
	mov A11,1
	call Strmode
	mov [Dframe-240],D0	; T28  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK707
	mov D11,[Dframe-240]	; T28  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-12]	; s -12  
	call typename
	mov [Dframe-248],D0	; T29  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+24]	; t 24  
	call typename
	mov [Dframe-256],D0	; T30  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK708
	mov D11,[Dframe-248]	; T29  
	mov D12,[Dframe-256]	; T30  
	call terror_ss
	add Dstack, 32
; ------------------------------ label
L3302:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-16],A0	; opc -16  
; ------------------------------ label
L3301:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-264],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-264]	; T31  
	cmp A0,1
	jnz L3303
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,[Dframe+24]	; t 24  
	mov A12,[Dframe-16]	; opc -16  
	call eval_convert
	mov [Dframe-272],A0	; T32  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-272]	; T32  
	and A0,A0
	jz L3304
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3289
; ------------------------------ label
L3304:
; ------------------------------ jump
	jmp	L3305
; ------------------------------ label
L3303:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-280],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-280]	; T33  
	cmp A0,4
	jz L3307
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-288],A0	; T34  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T34  
	cmp A0,6
	jnz L3306
; ------------------------------ label
L3307:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T35  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-296]	; T35 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3289
; ------------------------------ jump
	jmp	L3308
; ------------------------------ label
L3306:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-304],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-304]	; T36  
	cmp A0,41
	jnz L3309
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-320],D0	; T38  
; ------------------------------ index
	mov D0,[Dframe-320]	; T38  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-312],A0	; T37  
; ------------------------------ jumpcc
	mov A0,[Dframe-312]	; T37  
	cmp A0,1
	jnz L3310
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-336],D0	; T40  
; ------------------------------ index
	mov D0,[Dframe-336]	; T40  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-328],A0	; T39  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T39  
	cmp A0,1
	jnz L3310
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-344],D0	; T41  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-360],D0	; T43  
; ------------------------------ index
	mov D0,[Dframe-360]	; T43  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-352],D0	; T42  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-376],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe-376]	; T45  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-368],D0	; T44  
; ------------------------------ add
	mov D0,[Dframe-352]	; T42  
	mov D1,[Dframe-368]	; T44  
	add D0,D1
	mov [Dframe-384],D0	; T46  
; ------------------------------ move
	mov D0,[Dframe-384]	; T46  
	mov D13,[Dframe-344]	; T41 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-392],D0	; T47  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-392]	; T47 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	lea D0, [D0+D1]
	mov [Dframe-400],D0	; T48  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-400]	; T48 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3289
; ------------------------------ label
L3310:
; ------------------------------ label
L3309:
; ------------------------------ label
L3308:
; ------------------------------ label
L3305:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; inplace 40  
	and A0,A0
	jz L3311
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,58
	call insertunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-408],D0	; T49  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-408]	; T49 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-416],D0	; T50  
; ------------------------------ move
	mov A0,[Dframe-16]	; opc -16  
	mov D13,[Dframe-416]	; T50 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L3289
; ------------------------------ jump
	jmp	L3312
; ------------------------------ label
L3311:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,58
	mov D11,[Dframe+16]	; p 16  
	call createunit1
	mov [Dframe-424],D0	; T51  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-424]	; T51  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-432],D0	; T52  
; ------------------------------ move
	mov A0,[Dframe-16]	; opc -16  
	mov D13,[Dframe-432]	; T52 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; q -8  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-440],D0	; T53  
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov D13,[Dframe-440]	; T53 *
	mov dword[D13],A0
; ------------------------------ label
L3312:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; q -8  
	jmp L3289
; ------------------------------ label
L3289:
; ------------------------------ hardret
	add Dstack, 448
	pop Dframe
	ret
;	End

;	Proc:coercemode
coercemode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T1  
	cmp A0,[Dframe+24]	; t 24  
	jnz L3314
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3313
; ------------------------------ label
L3314:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,[Dframe+24]	; t 24  
	mov A12,0
	mov A13,1
	call docast
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; p 16  
	jmp L3313
; ------------------------------ label
L3313:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:coercemode_inplace
coercemode_inplace:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T1  
	cmp A0,[Dframe+24]	; t 24  
	jnz L3316
; ------------------------------ stmt
; ------------------------------ return
	jmp L3315
; ------------------------------ label
L3316:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov A11,[Dframe+24]	; t 24  
	mov A12,0
	mov A13,1
	call docast
	add Dstack, 32
; ------------------------------ label
L3315:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dostaticassert
dostaticassert:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 384

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,12
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call readconstintexpr
	mov [Dframe-272],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-272]	; T1  
	mov [Dframe-4],A0	; x -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,8
	call skipsymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,61
	call checksymbol
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov A0,[Dframe-4]	; x -4  
	and A0,A0
	jnz L3318
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-260]	; str -260  
	mov [Dframe-280],D0	; T2  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-304],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-304]	; T5  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-296],D0	; T4  
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-328],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-328]	; T8  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-320],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-320]	; T7  
	mov qword[Dframe-312],D0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-280]	; T2  
	mov D11,[Dframe-296]	; T4  
	mov D12,[Dframe-312]	; T6  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[lx]
	mov [Dframe-360],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-360]	; T12  
	mov A1,24
	mov A0, [D0+D1]
	mov [Dframe-352],A0	; T11  
; ------------------------------ add
	mov A0,[Dframe-352]	; T11  
	mov A1,1
	add A0,A1
	mov [Dframe-368],A0	; T13  
; ------------------------------ sub
	mov A0,[Dframe-368]	; T13  
	mov A1,1
	sub A0,A1
	mov [Dframe-376],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-376]	; T14  
	mov qword[Dframe-344],D0	; T10  
; ------------------------------ indexlv
	lea D0,[Dframe-260]	; str -260  
	mov D1,[Dframe-344]	; T10  
	lea D0, [D0+D1]
	mov [Dframe-336],D0	; T9  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-336]	; T9 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-260]	; str -260  
	mov [Dframe-384],D0	; T15  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-384]	; T15  
	call serror
	add Dstack, 32
; ------------------------------ label
L3318:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lex
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,13
	call skipsymbol
	add Dstack, 32
; ------------------------------ label
L3317:
; ------------------------------ hardret
	add Dstack, 384
	pop Dframe
	ret
;	End

;	Proc:printtcl
printtcl:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; tc 16  
	call writetclinstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,0
	call gs_println
	add Dstack, 32
; ------------------------------ label
L3319:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global settcdest
;	Proc:settcdest
settcdest:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ label
L3320:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

	global inittc
;	Proc:inittc
inittc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,KK709
	mov D11,KK710
	call fopen
	mov [Dframe-40],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T1  
	mov [Dframe-32],D0	; f -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L3324
; ------------------------------ label
L3325:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-64],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T4  
	mov qword[Dframe-56],D0	; T3  
; ------------------------------ index
	lea D0,[tclnames]
	mov D1,[Dframe-56]	; T3  
	mov D0, [D0+D1*8]
	mov [Dframe-48],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; f -32  
	mov D11,KK711
	mov D12,[Dframe-48]	; T2  
	call fprintf
	add Dstack, 32
; ------------------------------ label
L3322:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L3324:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,78
	jle L3325
; ------------------------------ label
L3323:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; f -32  
	call fclose
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call inittccode
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[zerotcl]
	mov [Dframe-72],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-72]	; T5  
	mov A11,0
	mov D12,64
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[zeroopnd]
	mov [Dframe-80],D0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-80]	; T6  
	mov A11,0
	mov D12,16
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L3328
; ------------------------------ label
L3329:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-104],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T9  
	mov qword[Dframe-96],D0	; T8  
; ------------------------------ indexlv
	lea D0,[opndtable]
	mov D1,[Dframe-96]	; T8  
	lea D0, [D0+D1*8]
	mov [Dframe-88],D0	; T7  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call pcm_allocz
	mov [Dframe-112],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T10  
	mov D13,[Dframe-88]	; T7 *
	mov qword[D13],D0
; ------------------------------ label
L3326:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L3328:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,1000
	jle L3329
; ------------------------------ label
L3327:
; ------------------------------ label
L3321:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global inittccode
;	Proc:inittccode
inittccode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [tccodex],D0
; ------------------------------ move
	mov D0,[tccodex]
	mov [tccode],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,5
	call newtclrec
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-8]	; T1  
	mov [tccodex],D0
; ------------------------------ move
	mov D0,[tccodex]
	mov [tccode],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [currtempno],A0
; ------------------------------ move
	mov A0,[currtempno]
	mov [topopnd],A0
; ------------------------------ label
L3330:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global gentc
;	Proc:gentc
gentc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opcode 16  
	cmp A0,7
	jnz L3332
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[tccodex]
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,7
	jnz L3333
; ------------------------------ stmt
; ------------------------------ return
	jmp L3331
; ------------------------------ label
L3333:
; ------------------------------ label
L3332:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opcode 16  
	call newtclrec
	mov [Dframe-32],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T3  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-40]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [tccodex],D0
; ------------------------------ label
L3331:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global gentc1
;	Proc:gentc1
gentc1:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opcode 16  
	call newtclrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ getptr
	lea D10,[Dframe-40]	; T3  
	mov D11,[Dframe+24]	; a 24  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-24]	; T2  
	lea D11,[Dframe-40]	; T3  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-48]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [tccodex],D0
; ------------------------------ label
L3334:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global gentc2
;	Proc:gentc2
gentc2:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opcode 16  
	call newtclrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ getptr
	lea D10,[Dframe-40]	; T3  
	mov D11,[Dframe+24]	; a 24  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-24]	; T2  
	lea D11,[Dframe-40]	; T3  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ getptr
	lea D10,[Dframe-64]	; T5  
	mov D11,[Dframe+32]	; b 32  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-48]	; T4  
	lea D11,[Dframe-64]	; T5  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-72]	; T6 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [tccodex],D0
; ------------------------------ label
L3335:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

	global gentc3
;	Proc:gentc3
gentc3:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opcode 16  
	call newtclrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ getptr
	lea D10,[Dframe-40]	; T3  
	mov D11,[Dframe+24]	; a 24  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-24]	; T2  
	lea D11,[Dframe-40]	; T3  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ getptr
	lea D10,[Dframe-64]	; T5  
	mov D11,[Dframe+32]	; b 32  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-48]	; T4  
	lea D11,[Dframe-64]	; T5  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T6  
; ------------------------------ getptr
	lea D10,[Dframe-88]	; T7  
	mov D11,[Dframe+40]	; c 40  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-72]	; T6  
	lea D11,[Dframe-88]	; T7  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T8  
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe-96]	; T8 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [tccodex],D0
; ------------------------------ label
L3336:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global gentc_label
;	Proc:gentc_label
gentc_label:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opcode 16  
	call newtclrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,9
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,[Dframe+24]	; labno 24  
	mov D13,[Dframe-32]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	call addtclrec
	add Dstack, 32
; ------------------------------ label
L3337:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global gentc_int
;	Proc:gentc_int
gentc_int:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; opcode 16  
	call newtclrec
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,3
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; value 24  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe-40]	; T4  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-48]	; T5 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-56]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; p -8  
	call addtclrec
	add Dstack, 32
; ------------------------------ label
L3338:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:newtclrec
newtclrec:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,64
	call pcm_alloc
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ move
	mov D10,[Dframe-8]	; p -8  
	lea D11,[zerotcl]
	mov D12,64
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,60
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,[Dframe+16]	; opcode 16  
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; p -8  
	mov A1,56
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,[clineno]
	mov D13,[Dframe-32]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[ntclinstructions]
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; p -8  
	jmp L3339
; ------------------------------ label
L3339:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:addtclrec
addtclrec:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[tccode]
	cmp D0,0
	jnz L3341
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov [tccodex],D0
; ------------------------------ move
	mov D0,[tccodex]
	mov [tccode],D0
; ------------------------------ jump
	jmp	L3342
; ------------------------------ label
L3341:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,48
	lea D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov D13,[Dframe-8]	; T1 *
	mov qword[D13],D0
; ------------------------------ label
L3342:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov [tccodex],D0
; ------------------------------ label
L3340:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:getnextopnd
getnextopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[topopnd]
	cmp A0,1000
	jge L3344
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[topopnd]
	mov A0,dword[topopnd]
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ sub
	mov A0,[Dframe-24]	; T3  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T4  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[opndtable]
	mov D1,[Dframe-16]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-8],D0	; T1  
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L3343
; ------------------------------ label
L3344:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call pcm_allocz
	mov [Dframe-40],D0	; T5  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-40]	; T5  
	jmp L3343
; ------------------------------ label
L3343:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global gen_int
;	Proc:gen_int
gen_int:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,3
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-32]	; T3 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe+16]	; a 16  
	mov D13,[Dframe-40]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,[Dframe+24]	; size 24  
	mov D13,[Dframe-48]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3345
; ------------------------------ label
L3345:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global gen_real
;	Proc:gen_real
gen_real:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	movq [Dframe+16], XMM0
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,3
	mov D13,[Dframe-32]	; T3 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov D0,[Dframe+16]	; x 16  
	mov D13,[Dframe-40]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,[Dframe+24]	; size 24  
	mov D13,[Dframe-48]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3346
; ------------------------------ label
L3346:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global gen_label
;	Proc:gen_label
gen_label:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,9
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,[Dframe+16]	; lab 16  
	mov D13,[Dframe-32]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3347
; ------------------------------ label
L3347:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global gen_string
;	Proc:gen_string
gen_string:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+16]	; s 16  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov A0,8
	mov D13,[Dframe-40]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-48]	; T5 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,10
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; length 24  
	cmp A0,255
	jge L3349
; ------------------------------ move
	mov A0,[Dframe+24]	; length 24  
	mov [Dframe-64],A0	; T7  
; ------------------------------ jump
	jmp	L3350
; ------------------------------ label
L3349:
; ------------------------------ move
	mov A0,255
	mov [Dframe-64],A0	; T7  
; ------------------------------ label
L3350:
; ------------------------------ move
	mov A0,[Dframe-64]	; T7  
	mov D13,[Dframe-56]	; T6 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3348
; ------------------------------ label
L3348:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

	global gen_mem
;	Proc:gen_mem
gen_mem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; m 24  
	cmp A0,0
	jnz L3352
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-32],W0	; T2  
; ------------------------------ widen
	movsx A0,word [Dframe-32]	; T2  
	mov dword[Dframe-40],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [Dframe+24],A0	; m 24  
; ------------------------------ label
L3352:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-48]	; T4 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T5  
; ------------------------------ move
	mov D0,[Dframe+16]	; d 16  
	mov D13,[Dframe-56]	; T5 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-80],D0	; T8  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-80]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T7  
; ------------------------------ move
	mov A0,[Dframe-72]	; T7  
	mov D13,[Dframe-64]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T9  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+24]	; m 24  
	call gettypecode
	mov [Dframe-96],A0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-96]	; T10  
	mov D13,[Dframe-88]	; T9 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3351
; ------------------------------ label
L3351:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global gen_addr
;	Proc:gen_addr
gen_addr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,11
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov D0,[Dframe+16]	; d 16  
	mov D13,[Dframe-32]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov A0,8
	mov D13,[Dframe-40]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,4
	mov D13,[Dframe-48]	; T5 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3353
; ------------------------------ label
L3353:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global gen_dest
;	Proc:gen_dest
gen_dest:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+16]	; dest 16  
	and D0,D0
	jz L3355
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; dest 16  
	jmp L3354
; ------------------------------ label
L3355:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+24]	; m 24  
	call gen_temp
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L3354
; ------------------------------ label
L3354:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global gen_destax
;	Proc:gen_destax
gen_destax:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+16]	; dest 16  
	and D0,D0
	jz L3357
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; dest 16  
	jmp L3356
; ------------------------------ label
L3357:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; ax 24  
	call gen_tempax
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-8]	; T1  
	jmp L3356
; ------------------------------ label
L3356:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global gen_temp
;	Proc:gen_temp
gen_temp:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[currtempno]
	cmp A0,2000
	jl L3359
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK712
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3359:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[currtempno]
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,2
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,[currtempno]
	mov D13,[Dframe-32]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-56]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-48]	; T5  
	mov D13,[Dframe-40]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call gettypecode
	mov [Dframe-72],A0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-72]	; T8  
	mov D13,[Dframe-64]	; T7 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[currtempno]
	mov A1,1
	sub A0,A1
	mov [Dframe-96],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T11  
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ indexlv
	lea D0,[opndsizes]
	mov D1,[Dframe-88]	; T10  
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-104],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-104]	; T12  
	mov D13,[Dframe-80]	; T9 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[currtempno]
	mov A1,1
	sub A0,A1
	mov [Dframe-128],A0	; T15  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T15  
	mov qword[Dframe-120],D0	; T14  
; ------------------------------ indexlv
	lea D0,[opndtypes]
	mov D1,[Dframe-120]	; T14  
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T13  
; ------------------------------ index
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T16  
; ------------------------------ move
	mov B0,[Dframe-136]	; T16  
	mov D13,[Dframe-112]	; T13 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3358
; ------------------------------ label
L3358:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

	global gen_tempax
;	Proc:gen_tempax
gen_tempax:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[currtempno]
	cmp A0,2000
	jl L3361
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK713
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3361:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[currtempno]
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,2
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,[currtempno]
	mov D13,[Dframe-32]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe+16]	; px 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-48]	; T5  
	mov D13,[Dframe-40]	; T4 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ index
	mov D0,[Dframe+16]	; px 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T7  
; ------------------------------ move
	mov B0,[Dframe-64]	; T7  
	mov D13,[Dframe-56]	; T6 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[currtempno]
	mov A1,1
	sub A0,A1
	mov [Dframe-88],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T10  
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ indexlv
	lea D0,[opndsizes]
	mov D1,[Dframe-80]	; T9  
	lea D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; T11  
; ------------------------------ move
	mov A0,[Dframe-96]	; T11  
	mov D13,[Dframe-72]	; T8 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[currtempno]
	mov A1,1
	sub A0,A1
	mov [Dframe-120],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T14  
	mov qword[Dframe-112],D0	; T13  
; ------------------------------ indexlv
	lea D0,[opndtypes]
	mov D1,[Dframe-112]	; T13  
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T12  
; ------------------------------ index
	mov D0,[Dframe-8]	; ax -8  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T15  
; ------------------------------ move
	mov B0,[Dframe-128]	; T15  
	mov D13,[Dframe-104]	; T12 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3360
; ------------------------------ label
L3360:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

	global gen_imem
;	Proc:gen_imem
gen_imem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; d 16  
	mov A11,[Dframe+24]	; m 24  
	call gen_mem
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,7
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3362
; ------------------------------ label
L3362:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global gen_itemp
;	Proc:gen_itemp
gen_itemp:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; m 16  
	call gen_temp
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ move
	mov A0,8
	mov D13,[Dframe-24]	; T2 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L3363
; ------------------------------ label
L3363:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global makeindirect
;	Proc:makeindirect
makeindirect:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call getnextopnd
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; bx -8  
; ------------------------------ stmt
; ------------------------------ getptr
	lea D10,[Dframe-32]	; T2  
	mov D11,[Dframe+16]	; ax 16  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-8]	; bx -8  
	lea D11,[Dframe-32]	; T2  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; bx -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-56],D0	; T5  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-56]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-48]	; T4  
	mov D13,[Dframe-40]	; T3 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; bx -8  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T6  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+24]	; m 24  
	call gettypecode
	mov [Dframe-72],A0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-72]	; T7  
	mov D13,[Dframe-64]	; T6 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; bx -8  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T8  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T9  
	cmp A0,1
	jnz L3365
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; bx -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T10  
; ------------------------------ move
	mov A0,7
	mov D13,[Dframe-96]	; T10 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3366
; ------------------------------ label
L3365:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; bx -8  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T11  
	mov dword[Dframe-112],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T12  
	cmp A0,2
	jnz L3367
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; bx -8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T13  
; ------------------------------ move
	mov A0,8
	mov D13,[Dframe-120]	; T13 *
	mov byte [D13],B0
; ------------------------------ label
L3367:
; ------------------------------ label
L3366:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; bx -8  
	jmp L3364
; ------------------------------ label
L3364:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

	global gencomment
;	Proc:gencomment
gencomment:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; s 16  
	cmp D0,0
	jz L3370
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ truncate
	mov A0,[Dframe-32]	; T4  
	and D0,255
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,0
	jnz L3369
; ------------------------------ label
L3370:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	call gentc
	add Dstack, 32
; ------------------------------ jump
	jmp	L3371
; ------------------------------ label
L3369:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call gentc
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T5  
; ------------------------------ move
	mov A0,5
	mov D13,[Dframe-40]	; T5 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T6  
; ------------------------------ move
	mov D0,[Dframe+16]	; s 16  
	mov D13,[Dframe-48]	; T6 *
	mov qword[D13],D0
; ------------------------------ label
L3371:
; ------------------------------ label
L3368:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global make_int_opnd
;	Proc:make_int_opnd
make_int_opnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ move
	mov A0,3
	mov D13,[Dframe-8]	; T1 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+24]	; value 24  
	mov D13,[Dframe-16]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T3  
; ------------------------------ move
	mov A0,[Dframe+32]	; size 32  
	mov D13,[Dframe-24]	; T3 *
	mov dword[D13],A0
; ------------------------------ label
L3372:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:writetclproc
writetclproc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK714
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-120],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-120]	; T1  
	call gs_strln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,56
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; m -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-12],A0	; n -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3374
; ------------------------------ label
L3376:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-112]	; str -112  
	mov [Dframe-128],D0	; T2  
; ------------------------------ preincrx
	inc dword[Dframe-12]	; n -12  
	mov A0,dword[Dframe-12]	; n -12  
	mov dword[Dframe-136],A0	; T3  
; ------------------------------ index
	mov D0,[Dframe-8]	; m -8  
	mov A1,56
	mov A0, [D0+D1]
	mov [Dframe-144],A0	; T4  
; ------------------------------ iand
	mov A0,[Dframe-144]	; T4  
	mov A1,16777215
	and A0,A1
	mov [Dframe-152],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-128]	; T2  
	mov D11,KK715
	mov A12,[Dframe-136]	; T3  
	mov A13,[Dframe-152]	; T5  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-112]	; str -112  
	mov [Dframe-160],D0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-160]	; T6  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; m -8  
	call writetclinstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; m -8  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; m -8  
; ------------------------------ label
L3374:
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; m -8  
	and D0,D0
	jnz L3376
; ------------------------------ label
L3375:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_line
	add Dstack, 32
; ------------------------------ label
L3373:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

;	Proc:writetclinstr
writetclinstr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 4912

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4176],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-4176]	; T1  
	mov dword[Dframe-4184],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-4184]	; T2  
	cmp A0,7
	jnz L3378
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK716
	call gs_strln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L3377
; ------------------------------ jump
	jmp	L3379
; ------------------------------ label
L3378:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4192],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-4192]	; T3  
	mov dword[Dframe-4200],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-4200]	; T4  
	cmp A0,20
	jnz L3380
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK717
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-4216],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-4216]	; T6  
	mov qword[Dframe-4208],D0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4208]	; T5  
	call gs_strint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-4224],D0	; T7  
; ------------------------------ jumpfalse
	mov D0,[Dframe-4224]	; T7  
	and D0,D0
	jz L3381
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK718
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-4240],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-4240]	; T9  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-4232],D0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4232]	; T8  
	call gs_str
	add Dstack, 32
; ------------------------------ label
L3381:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK719
	call gs_strln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3382
; ------------------------------ label
L3380:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4248],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-4248]	; T10  
	mov dword[Dframe-4256],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-4256]	; T11  
	cmp A0,5
	jnz L3383
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-4264],W0	; T12  
; ------------------------------ widen
	movzx A0,word [Dframe-4264]	; T12  
	mov dword[Dframe-4272],A0	; T13  
; ------------------------------ move
	mov A0,[Dframe-4272]	; T13  
	mov [Dframe-4168],A0	; n -4168  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK720
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4168]	; n -4168  
	mov qword[Dframe-4280],D0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4280]	; T14  
	call gs_strint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_line
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4164],A0	; i -4164  
; ------------------------------ jump
	jmp	L3386
; ------------------------------ label
L3387:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK721
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4164]	; i -4164  
	mov qword[Dframe-4288],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4288]	; T15  
	call gs_strint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK722
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-4304],D0	; T17  
; ------------------------------ sub
	mov A0,[Dframe-4164]	; i -4164  
	mov A1,1
	sub A0,A1
	mov [Dframe-4320],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-4320]	; T19  
	mov qword[Dframe-4312],D0	; T18  
; ------------------------------ index
	mov D0,[Dframe-4304]	; T17  
	mov D1,[Dframe-4312]	; T18  
	mov B0, [D0+D1]
	mov [Dframe-4296],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-4296]	; T16  
	mov dword[Dframe-4328],A0	; T20  
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-4344],D0	; T22  
; ------------------------------ sub
	mov A0,[Dframe-4164]	; i -4164  
	mov A1,1
	sub A0,A1
	mov [Dframe-4360],A0	; T24  
; ------------------------------ widen
	movsx D0,dword[Dframe-4360]	; T24  
	mov qword[Dframe-4352],D0	; T23  
; ------------------------------ index
	mov D0,[Dframe-4344]	; T22  
	mov D1,[Dframe-4352]	; T23  
	mov B0, [D0+D1]
	mov [Dframe-4336],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-4336]	; T21  
	mov dword[Dframe-4368],A0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4328]	; T20  
	mov A11,[Dframe-4368]	; T25  
	call getshorttypecode
	mov [Dframe-4376],D0	; T26  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4376]	; T26  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_line
	add Dstack, 32
; ------------------------------ label
L3384:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4164]	; i -4164  
; ------------------------------ label
L3386:
; ------------------------------ jumpcc
	mov A0,[Dframe-4164]	; i -4164  
	cmp A0,[Dframe-4168]	; n -4168  
	jle L3387
; ------------------------------ label
L3385:
; ------------------------------ stmt
; ------------------------------ return
	jmp L3377
; ------------------------------ label
L3383:
; ------------------------------ label
L3382:
; ------------------------------ label
L3379:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK723
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4384],B0	; T27  
; ------------------------------ widen
	movzx A0,byte [Dframe-4384]	; T27  
	mov dword[Dframe-4392],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-4392]	; T28  
	cmp A0,1
	jnz L3388
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK724
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-4400],D0	; T29  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4400]	; T29  
	call gs_strln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3389
; ------------------------------ label
L3388:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4408],B0	; T30  
; ------------------------------ widen
	movzx A0,byte [Dframe-4408]	; T30  
	mov dword[Dframe-4416],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-4416]	; T31  
	cmp A0,20
	jnz L3390
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_line
	add Dstack, 32
; ------------------------------ jump
	jmp	L3391
; ------------------------------ label
L3390:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4424],B0	; T32  
; ------------------------------ widen
	movzx A0,byte [Dframe-4424]	; T32  
	mov dword[Dframe-4432],A0	; T33  
; ------------------------------ jumpcc
	mov A0,[Dframe-4432]	; T33  
	cmp A0,22
	jnz L3392
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK725
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-4448],D0	; T35  
; ------------------------------ index
	mov D0,[Dframe-4448]	; T35  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-4440],D0	; T34  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4440]	; T34  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK726
	call gs_strln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3393
; ------------------------------ label
L3392:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4456],B0	; T36  
; ------------------------------ widen
	movzx A0,byte [Dframe-4456]	; T36  
	mov dword[Dframe-4464],A0	; T37  
; ------------------------------ jumpcc
	mov A0,[Dframe-4464]	; T37  
	cmp A0,2
	jnz L3394
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_line
	add Dstack, 32
; ------------------------------ jump
	jmp	L3395
; ------------------------------ label
L3394:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; m 16  
	call getsizestr
	mov [Dframe-4472],D0	; T38  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4472]	; T38  
	mov A12,14
	mov A13,45
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4128]	; str2 -4128  
	mov [Dframe-4480],D0	; T39  
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4512],B0	; T43  
; ------------------------------ widen
	movzx A0,byte [Dframe-4512]	; T43  
	mov dword[Dframe-4520],A0	; T44  
; ------------------------------ sub
	mov A0,[Dframe-4520]	; T44  
	mov A1,1
	sub A0,A1
	mov [Dframe-4528],A0	; T45  
; ------------------------------ widen
	movsx D0,dword[Dframe-4528]	; T45  
	mov qword[Dframe-4504],D0	; T42  
; ------------------------------ index
	lea D0,[tclnames]
	mov D1,[Dframe-4504]	; T42  
	mov D0, [D0+D1*8]
	mov [Dframe-4496],D0	; T41  
; ------------------------------ indexref
	mov D0,[Dframe-4496]	; T41  
	mov D1,2
	lea D0, [D0+D1]
	mov [Dframe-4488],D0	; T40  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4480]	; T39  
	mov D11,[Dframe-4488]	; T40  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4536],B0	; T46  
; ------------------------------ widen
	movzx A0,byte [Dframe-4536]	; T46  
	mov dword[Dframe-4544],A0	; T47  
; ------------------------------ jumpcc
	mov A0,[Dframe-4544]	; T47  
	cmp A0,25
	jz L3397
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4552],B0	; T48  
; ------------------------------ widen
	movzx A0,byte [Dframe-4552]	; T48  
	mov dword[Dframe-4560],A0	; T49  
; ------------------------------ jumpcc
	mov A0,[Dframe-4560]	; T49  
	cmp A0,29
	jnz L3396
; ------------------------------ label
L3397:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4128]	; str2 -4128  
	mov [Dframe-4568],D0	; T50  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4568]	; T50  
	mov D11,KK727
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4128]	; str2 -4128  
	mov [Dframe-4576],D0	; T51  
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-4600],W0	; T54  
; ------------------------------ widen
	movzx A0,word [Dframe-4600]	; T54  
	mov dword[Dframe-4608],A0	; T55  
; ------------------------------ widen
	movsx D0,dword[Dframe-4608]	; T55  
	mov qword[Dframe-4592],D0	; T53  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-4592]	; T53  
	mov D0, [D0+D1*8]
	mov [Dframe-4584],D0	; T52  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4576]	; T51  
	mov D11,[Dframe-4584]	; T52  
	call strcat
	add Dstack, 32
; ------------------------------ jump
	jmp	L3398
; ------------------------------ label
L3396:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-4616],W0	; T56  
; ------------------------------ widen
	movzx A0,word [Dframe-4616]	; T56  
	mov dword[Dframe-4624],A0	; T57  
; ------------------------------ jumpfalse
	mov A0,[Dframe-4624]	; T57  
	and A0,A0
	jz L3399
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4160]	; str3 -4160  
	mov [Dframe-4632],D0	; T58  
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-4640],W0	; T59  
; ------------------------------ widen
	movzx A0,word [Dframe-4640]	; T59  
	mov dword[Dframe-4648],A0	; T60  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4632]	; T58  
	mov D11,KK728
	mov A12,[Dframe-4648]	; T60  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4128]	; str2 -4128  
	mov [Dframe-4656],D0	; T61  
; ------------------------------ getaddr
	lea D0,[Dframe-4160]	; str3 -4160  
	mov [Dframe-4664],D0	; T62  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4656]	; T61  
	mov D11,[Dframe-4664]	; T62  
	call strcat
	add Dstack, 32
; ------------------------------ label
L3399:
; ------------------------------ label
L3398:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4128]	; str2 -4128  
	mov [Dframe-4672],D0	; T63  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4672]	; T63  
	mov A12,12
	mov A13,32
	call gs_leftstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-4680],B0	; T64  
; ------------------------------ widen
	movzx A0,byte [Dframe-4680]	; T64  
	mov dword[Dframe-4688],A0	; T65  
; ------------------------------ jumpfalse
	mov A0,[Dframe-4688]	; T65  
	and A0,A0
	jz L3400
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4096]	; str -4096  
	mov [Dframe-4696],D0	; T66  
; ------------------------------ indexref
	mov D0,[Dframe+16]	; m 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-4704],D0	; T67  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-4704]	; T67  
	call strtclopnd
	mov [Dframe-4712],D0	; T68  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4696]	; T66  
	mov D11,[Dframe-4712]	; T68  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,24
	mov B0, [D0+D1]
	mov [Dframe-4720],B0	; T69  
; ------------------------------ widen
	movzx A0,byte [Dframe-4720]	; T69  
	mov dword[Dframe-4728],A0	; T70  
; ------------------------------ jumpfalse
	mov A0,[Dframe-4728]	; T70  
	and A0,A0
	jz L3401
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4096]	; str -4096  
	mov [Dframe-4736],D0	; T71  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4736]	; T71  
	mov D11,KK729
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4096]	; str -4096  
	mov [Dframe-4744],D0	; T72  
; ------------------------------ indexref
	mov D0,[Dframe+16]	; m 16  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-4752],D0	; T73  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-4752]	; T73  
	call strtclopnd
	mov [Dframe-4760],D0	; T74  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4744]	; T72  
	mov D11,[Dframe-4760]	; T74  
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,40
	mov B0, [D0+D1]
	mov [Dframe-4768],B0	; T75  
; ------------------------------ widen
	movzx A0,byte [Dframe-4768]	; T75  
	mov dword[Dframe-4776],A0	; T76  
; ------------------------------ jumpfalse
	mov A0,[Dframe-4776]	; T76  
	and A0,A0
	jz L3402
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4096]	; str -4096  
	mov [Dframe-4784],D0	; T77  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4784]	; T77  
	mov D11,KK730
	call strcat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4096]	; str -4096  
	mov [Dframe-4792],D0	; T78  
; ------------------------------ indexref
	mov D0,[Dframe+16]	; m 16  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-4800],D0	; T79  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-4800]	; T79  
	call strtclopnd
	mov [Dframe-4808],D0	; T80  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4792]	; T78  
	mov D11,[Dframe-4808]	; T80  
	call strcat
	add Dstack, 32
; ------------------------------ label
L3402:
; ------------------------------ label
L3401:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4096]	; str -4096  
	mov [Dframe-4816],D0	; T81  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4816]	; T81  
	call gs_str
	add Dstack, 32
; ------------------------------ label
L3400:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4824],B0	; T82  
; ------------------------------ widen
	movzx A0,byte [Dframe-4824]	; T82  
	mov dword[Dframe-4832],A0	; T83  
; ------------------------------ jumpcc
	mov A0,[Dframe-4832]	; T83  
	cmp A0,16
	jz L3404
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4840],B0	; T84  
; ------------------------------ widen
	movzx A0,byte [Dframe-4840]	; T84  
	mov dword[Dframe-4848],A0	; T85  
; ------------------------------ jumpcc
	mov A0,[Dframe-4848]	; T85  
	cmp A0,18
	jz L3404
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-4856],B0	; T86  
; ------------------------------ widen
	movzx A0,byte [Dframe-4856]	; T86  
	mov dword[Dframe-4864],A0	; T87  
; ------------------------------ jumpcc
	mov A0,[Dframe-4864]	; T87  
	cmp A0,17
	jnz L3403
; ------------------------------ label
L3404:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,42
	mov W0, [D0+D1]
	mov [Dframe-4872],W0	; T88  
; ------------------------------ widen
	movsx A0,word [Dframe-4872]	; T88  
	mov dword[Dframe-4880],A0	; T89  
; ------------------------------ jumpfalse
	mov A0,[Dframe-4880]	; T89  
	and A0,A0
	jz L3405
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK731
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,42
	mov W0, [D0+D1]
	mov [Dframe-4896],W0	; T91  
; ------------------------------ widen
	movsx A0,word [Dframe-4896]	; T91  
	mov dword[Dframe-4904],A0	; T92  
; ------------------------------ widen
	movsx D0,dword[Dframe-4904]	; T92  
	mov qword[Dframe-4888],D0	; T90  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-4888]	; T90  
	call gs_strint
	add Dstack, 32
; ------------------------------ label
L3405:
; ------------------------------ label
L3403:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_line
	add Dstack, 32
; ------------------------------ label
L3395:
; ------------------------------ label
L3393:
; ------------------------------ label
L3391:
; ------------------------------ label
L3389:
; ------------------------------ label
L3377:
; ------------------------------ hardret
	add Dstack, 4912
	pop Dframe
	ret
;	End

	global strtclopnd
;	Proc:strtclopnd
	segment .bss
strtclopnd.str:	resb 1024
	segment .data
	align 4
strtclopnd.maxlen:
	dd 0
	align 4
strtclopnd.newmaxlen:
	dd 0
	segment .text
strtclopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 736

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-336],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T1  
	mov dword[Dframe-344],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-344]	; T2  
	cmp A0,3
	jnz L3407
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-352],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-360],D0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-352]	; T3  
	mov D11,KK732
	mov D12,[Dframe-360]	; T4  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L3408
; ------------------------------ label
L3407:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-368],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-368]	; T5  
	mov dword[Dframe-376],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-376]	; T6  
	cmp A0,4
	jnz L3409
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-384],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-392],D0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-384]	; T7  
	mov D11,KK733
	mov D12,[Dframe-392]	; T8  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L3410
; ------------------------------ label
L3409:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-400],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-400]	; T9  
	mov dword[Dframe-408],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-408]	; T10  
	cmp A0,5
	jnz L3411
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-416],D0	; T11  
; ------------------------------ jumpcc
	mov D0,[Dframe-416]	; T11  
	cmp D0,0
	jnz L3412
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK734
	jmp L3406
; ------------------------------ label
L3412:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-432],D0	; T13  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-432]	; T13  
	call strlen
	mov [Dframe-440],D0	; T14  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-440]	; T14  
	mov A0,A0
	mov [Dframe-424],A0	; T12  
; ------------------------------ move
	mov A0,[Dframe-424]	; T12  
	mov [Dframe-328],A0	; length -328  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; length -328  
	cmp A0,256
	jle L3413
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-448],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-448]	; T15  
	mov D11,KK735
	call strcpy
	add Dstack, 32
; ------------------------------ jump
	jmp	L3414
; ------------------------------ label
L3413:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-456],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-456]	; T16  
	mov D11,KK736
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-464],D0	; T17  
; ------------------------------ indexref
	lea D0,[strtclopnd.str]
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-472],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-464]	; T17  
	mov D11,[Dframe-472]	; T18  
	mov A12,-1
	call convertstring
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-480],D0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-480]	; T19  
	mov D11,KK737
	call strcat
	add Dstack, 32
; ------------------------------ label
L3414:
; ------------------------------ jump
	jmp	L3415
; ------------------------------ label
L3411:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-488],B0	; T20  
; ------------------------------ widen
	movzx A0,byte [Dframe-488]	; T20  
	mov dword[Dframe-496],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-496]	; T21  
	cmp A0,9
	jnz L3416
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-504],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-512],A0	; T23  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-504]	; T22  
	mov D11,KK738
	mov A12,[Dframe-512]	; T23  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L3417
; ------------------------------ label
L3416:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-520],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-520]	; T24  
	mov dword[Dframe-528],A0	; T25  
; ------------------------------ jumpcc
	mov A0,[Dframe-528]	; T25  
	cmp A0,1
	jnz L3418
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-536],D0	; T26  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-552],D0	; T28  
; ------------------------------ index
	mov D0,[Dframe-552]	; T28  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-544],D0	; T27  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-536]	; T26  
	mov D11,KK739
	mov D12,[Dframe-544]	; T27  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L3419
; ------------------------------ label
L3418:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-560],B0	; T29  
; ------------------------------ widen
	movzx A0,byte [Dframe-560]	; T29  
	mov dword[Dframe-568],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-568]	; T30  
	cmp A0,7
	jnz L3420
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-576],D0	; T31  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-592],D0	; T33  
; ------------------------------ index
	mov D0,[Dframe-592]	; T33  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-584],D0	; T32  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-576]	; T31  
	mov D11,KK740
	mov D12,[Dframe-584]	; T32  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L3421
; ------------------------------ label
L3420:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-600],B0	; T34  
; ------------------------------ widen
	movzx A0,byte [Dframe-600]	; T34  
	mov dword[Dframe-608],A0	; T35  
; ------------------------------ jumpcc
	mov A0,[Dframe-608]	; T35  
	cmp A0,11
	jnz L3422
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-616],D0	; T36  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-632],D0	; T38  
; ------------------------------ index
	mov D0,[Dframe-632]	; T38  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-624],D0	; T37  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-616]	; T36  
	mov D11,KK741
	mov D12,[Dframe-624]	; T37  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L3423
; ------------------------------ label
L3422:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-640],B0	; T39  
; ------------------------------ widen
	movzx A0,byte [Dframe-640]	; T39  
	mov dword[Dframe-648],A0	; T40  
; ------------------------------ jumpcc
	mov A0,[Dframe-648]	; T40  
	cmp A0,2
	jnz L3424
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-656],D0	; T41  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-664],A0	; T42  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-656]	; T41  
	mov D11,KK742
	mov A12,[Dframe-664]	; T42  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L3425
; ------------------------------ label
L3424:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-672],B0	; T43  
; ------------------------------ widen
	movzx A0,byte [Dframe-672]	; T43  
	mov dword[Dframe-680],A0	; T44  
; ------------------------------ jumpcc
	mov A0,[Dframe-680]	; T44  
	cmp A0,8
	jnz L3426
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-688],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-696],A0	; T46  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-688]	; T45  
	mov D11,KK743
	mov A12,[Dframe-696]	; T46  
	call sprintf
	add Dstack, 32
; ------------------------------ jump
	jmp	L3427
; ------------------------------ label
L3426:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-704],D0	; T47  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-704]	; T47  
	mov D11,KK744
	call strcpy
	add Dstack, 32
; ------------------------------ label
L3427:
; ------------------------------ label
L3425:
; ------------------------------ label
L3423:
; ------------------------------ label
L3421:
; ------------------------------ label
L3419:
; ------------------------------ label
L3417:
; ------------------------------ label
L3415:
; ------------------------------ label
L3410:
; ------------------------------ label
L3408:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-712],A0	; T48  
; ------------------------------ jumpcc
	mov A0,[Dframe-712]	; T48  
	cmp A0,8
	jle L3428
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-720],D0	; T49  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-720]	; T49  
	mov D11,KK745
	call strcat
	add Dstack, 32
; ------------------------------ label
L3428:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[strtclopnd.str]
	mov [Dframe-728],D0	; T50  
; ------------------------------ returnx
	mov D0,[Dframe-728]	; T50  
	jmp L3406
; ------------------------------ label
L3406:
; ------------------------------ hardret
	add Dstack, 736
	pop Dframe
	ret
;	End

;	Proc:getsizestr
	segment .bss
getsizestr.str:	resb 32
	segment .text
getsizestr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 288

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[Dframe-16]	; astr -16  
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T1  
; ------------------------------ indexlv
	lea D0,[Dframe-32]	; bstr -32  
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T4  
; ------------------------------ indexlv
	lea D0,[Dframe-48]	; cstr -48  
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T7  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-104]	; T7 *
	mov byte [D13],B0
; ------------------------------ truncate
	mov D13,[Dframe-104]	; T7 *
	mov B0,byte [D13]
	and D0,255
	mov byte [Dframe-96],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T6  
	mov dword[Dframe-88],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-88]	; T5  
	mov D13,[Dframe-80]	; T4 *
	mov byte [D13],B0
; ------------------------------ truncate
	mov D13,[Dframe-80]	; T4 *
	mov B0,byte [D13]
	and D0,255
	mov byte [Dframe-72],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T3  
	mov dword[Dframe-64],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-64]	; T2  
	mov D13,[Dframe-56]	; T1 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-112],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-112]	; T8  
	and A0,A0
	jz L3430
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; astr -16  
	mov [Dframe-120],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T10  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T10  
	mov dword[Dframe-136],A0	; T11  
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-144],A0	; T12  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-136]	; T11  
	mov A11,[Dframe-144]	; T12  
	call getshorttypecode
	mov [Dframe-152],D0	; T13  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-120]	; T9  
	mov D11,[Dframe-152]	; T13  
	call strcpy
	add Dstack, 32
; ------------------------------ label
L3430:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,28
	mov A0, [D0+D1]
	mov [Dframe-160],A0	; T14  
; ------------------------------ jumpfalse
	mov A0,[Dframe-160]	; T14  
	and A0,A0
	jz L3431
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; bstr -32  
	mov [Dframe-168],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,25
	mov B0, [D0+D1]
	mov [Dframe-176],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-176]	; T16  
	mov dword[Dframe-184],A0	; T17  
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,28
	mov A0, [D0+D1]
	mov [Dframe-192],A0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-184]	; T17  
	mov A11,[Dframe-192]	; T18  
	call getshorttypecode
	mov [Dframe-200],D0	; T19  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-168]	; T15  
	mov D11,[Dframe-200]	; T19  
	call strcpy
	add Dstack, 32
; ------------------------------ label
L3431:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-208],A0	; T20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-208]	; T20  
	and A0,A0
	jz L3432
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; cstr -48  
	mov [Dframe-216],D0	; T21  
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,41
	mov B0, [D0+D1]
	mov [Dframe-224],B0	; T22  
; ------------------------------ widen
	movzx A0,byte [Dframe-224]	; T22  
	mov dword[Dframe-232],A0	; T23  
; ------------------------------ index
	mov D0,[Dframe+16]	; tc 16  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-240],A0	; T24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-232]	; T23  
	mov A11,[Dframe-240]	; T24  
	call getshorttypecode
	mov [Dframe-248],D0	; T25  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-216]	; T21  
	mov D11,[Dframe-248]	; T25  
	call strcpy
	add Dstack, 32
; ------------------------------ label
L3432:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getsizestr.str]
	mov [Dframe-256],D0	; T26  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; astr -16  
	mov [Dframe-264],D0	; T27  
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; bstr -32  
	mov [Dframe-272],D0	; T28  
; ------------------------------ getaddr
	lea D0,[Dframe-48]	; cstr -48  
	mov [Dframe-280],D0	; T29  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe-280]	; T29  
	sub Dstack,32
	mov D10,[Dframe-256]	; T26  
	mov D11,KK746
	mov D12,[Dframe-264]	; T27  
	mov D13,[Dframe-272]	; T28  
	call sprintf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getsizestr.str]
	mov [Dframe-288],D0	; T30  
; ------------------------------ returnx
	mov D0,[Dframe-288]	; T30  
	jmp L3429
; ------------------------------ label
L3429:
; ------------------------------ hardret
	add Dstack, 288
	pop Dframe
	ret
;	End

	global writetccode
;	Proc:writetccode
writetccode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK747
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe+16]	; caption 16  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK748
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; n 24  
	mov qword[Dframe-64],D0	; T2  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-64]	; T2  
	imul D1,78
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-56]	; T1  
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK749
	call gs_str
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; n 24  
	mov qword[Dframe-72],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,[Dframe-72]	; T3  
	call gs_strint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	mov D11,KK750
	call gs_strln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[tcl]
	call gs_line
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; n 24  
	mov qword[Dframe-80],D0	; T4  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-80]	; T4  
	imul D1,78
	mov D0, [D0+D1+8]
	mov [Dframe-32],D0	; stm -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; stm -32  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; d -40  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3434
; ------------------------------ label
L3436:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; d -40  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T5  
	mov dword[Dframe-96],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T6  
	cmp A0,6
	jnz L3437
; ------------------------------ index
	mov D0,[Dframe-40]	; d -40  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-104],D0	; T7  
; ------------------------------ jumpfalse
	mov D0,[Dframe-104]	; T7  
	and D0,D0
	jz L3437
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-40]	; d -40  
	call writetclproc
	add Dstack, 32
; ------------------------------ label
L3437:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-40]	; d -40  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; d -40  
; ------------------------------ label
L3434:
; ------------------------------ jumptrue
	mov D0,[Dframe-40]	; d -40  
	and D0,D0
	jnz L3436
; ------------------------------ label
L3435:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[tcl]
	jmp L3433
; ------------------------------ label
L3433:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

	global checkblockreturn
;	Proc:checkblockreturn
checkblockreturn:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; p 16  
	cmp D0,0
	jnz L3439
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L3438
; ------------------------------ label
L3439:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T1  
	cmp A0,7
	jnz L3440
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; q -8  
	cmp D0,0
	jnz L3441
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L3438
; ------------------------------ label
L3441:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,11
	jnz L3442
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3438
; ------------------------------ label
L3442:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; q -8  
	call checkblockreturn
	mov [Dframe-32],A0	; T3  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-32]	; T3  
	jmp L3438
; ------------------------------ jump
	jmp	L3443
; ------------------------------ label
L3440:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,11
	jnz L3444
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3438
; ------------------------------ jump
	jmp	L3445
; ------------------------------ label
L3444:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T5  
	cmp A0,14
	jnz L3446
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-56]	; T6  
	call checkblockreturn
	mov [Dframe-64],A0	; T7  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; T7  
	and A0,A0
	jz L3447
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-72]	; T8  
	call checkblockreturn
	mov [Dframe-80],A0	; T9  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-80]	; T9  
	and A0,A0
	jz L3447
; ------------------------------ move
	mov A0,1
	mov [Dframe-88],A0	; T10  
; ------------------------------ jump
	jmp	L3448
; ------------------------------ label
L3447:
; ------------------------------ move
	mov A0,0
	mov [Dframe-88],A0	; T10  
; ------------------------------ label
L3448:
; ------------------------------ returnx
	mov A0,[Dframe-88]	; T10  
	jmp L3438
; ------------------------------ label
L3446:
; ------------------------------ label
L3445:
; ------------------------------ label
L3443:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L3438
; ------------------------------ label
L3438:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

	global gettypecode
;	Proc:gettypecode
gettypecode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-8]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe+16],A0	; m 16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; m 16  
	cmp A0,2
	jl L3450
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; m 16  
	cmp A0,10
	jg L3450
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ index
	lea D0,[stdtypesigned]
	mov D1,[Dframe-32]	; T4  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-40],A0	; T5  
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; T5  
	and A0,A0
	jz L3451
; ------------------------------ move
	mov A0,1
	mov [Dframe-16],A0	; T2  
; ------------------------------ jump
	jmp	L3452
; ------------------------------ label
L3451:
; ------------------------------ move
	mov A0,2
	mov [Dframe-16],A0	; T2  
; ------------------------------ label
L3452:
; ------------------------------ returnx
	mov A0,[Dframe-16]	; T2  
	jmp L3449
; ------------------------------ jump
	jmp	L3453
; ------------------------------ label
L3450:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; m 16  
	cmp A0,11
	jl L3454
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; m 16  
	cmp A0,13
	jg L3454
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,3
	jmp L3449
; ------------------------------ jump
	jmp	L3455
; ------------------------------ label
L3454:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; m 16  
	cmp A0,16
	jnz L3456
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,4
	jmp L3449
; ------------------------------ jump
	jmp	L3457
; ------------------------------ label
L3456:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,5
	jmp L3449
; ------------------------------ label
L3457:
; ------------------------------ label
L3455:
; ------------------------------ label
L3453:
; ------------------------------ label
L3449:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global fixopnd
;	Proc:fixopnd
fixopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,7
	jz L3460
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,8
	jnz L3459
; ------------------------------ label
L3460:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call gen_tempax
	mov [Dframe-48],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T5  
	mov [Dframe-8],D0	; tx -8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,15
	mov D11,[Dframe-8]	; tx -8  
	mov D12,[Dframe+16]	; ax 16  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; tx -8  
	jmp L3458
; ------------------------------ label
L3459:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; ax 16  
	jmp L3458
; ------------------------------ label
L3458:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

	global getshorttypecode
;	Proc:getshorttypecode
	segment .bss
getshorttypecode.str:	resb 20
	segment .text
getshorttypecode:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getshorttypecode.str]
	mov [Dframe-8],D0	; T1  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; t 16  
	mov qword[Dframe-24],D0	; T3  
; ------------------------------ index
	lea D0,[shorttypenames]
	mov D1,[Dframe-24]	; T3  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	mov D11,KK751
	mov D12,[Dframe-16]	; T2  
	mov A13,[Dframe+24]	; size 24  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getshorttypecode.str]
	mov [Dframe-32],D0	; T4  
; ------------------------------ returnx
	mov D0,[Dframe-32]	; T4  
	jmp L3461
; ------------------------------ label
L3461:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

	global roundoffsetdown
;	Proc:roundoffsetdown
roundoffsetdown:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-24]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T1  
	cmp A0,19
	jnz L3463
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-40]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-32],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; a 16  
	mov A11,[Dframe-32]	; T3  
	call roundoffsetdown
	mov [Dframe-48],A0	; T5  
	add Dstack, 32
; ------------------------------ returnx
	mov A0,[Dframe-48]	; T5  
	jmp L3462
; ------------------------------ jump
	jmp	L3464
; ------------------------------ label
L3463:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-64]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T6  
	cmp A0,2
	jz L3466
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-80],D0	; T9  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-80]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-72],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T8  
	cmp A0,7
	jnz L3465
; ------------------------------ label
L3466:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; a 16  
	jmp L3462
; ------------------------------ jump
	jmp	L3467
; ------------------------------ label
L3465:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-96],D0	; T11  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-96]	; T11  
	mov A0, [D0+D1*4]
	mov [Dframe-88],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T10  
	cmp A0,3
	jz L3469
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-112],D0	; T13  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-112]	; T13  
	mov A0, [D0+D1*4]
	mov [Dframe-104],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T12  
	cmp A0,8
	jnz L3468
; ------------------------------ label
L3469:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; mask -4  
; ------------------------------ jump
	jmp	L3470
; ------------------------------ label
L3468:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-128],D0	; T15  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-128]	; T15  
	mov A0, [D0+D1*4]
	mov [Dframe-120],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T14  
	cmp A0,4
	jz L3472
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-144],D0	; T17  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-144]	; T17  
	mov A0, [D0+D1*4]
	mov [Dframe-136],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T16  
	cmp A0,9
	jnz L3471
; ------------------------------ label
L3472:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,3
	mov [Dframe-4],A0	; mask -4  
; ------------------------------ jump
	jmp	L3473
; ------------------------------ label
L3471:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,7
	mov [Dframe-4],A0	; mask -4  
; ------------------------------ label
L3473:
; ------------------------------ label
L3470:
; ------------------------------ label
L3467:
; ------------------------------ label
L3464:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3474
; ------------------------------ label
L3476:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe+16]	; a 16  
; ------------------------------ label
L3474:
; ------------------------------ iand
	mov A0,[Dframe+16]	; a 16  
	mov A1,[Dframe-4]	; mask -4  
	and A0,A1
	mov [Dframe-152],A0	; T18  
; ------------------------------ jumptrue
	mov A0,[Dframe-152]	; T18  
	and A0,A0
	jnz L3476
; ------------------------------ label
L3475:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; a 16  
	jmp L3462
; ------------------------------ label
L3462:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

	global codegen_asm
;	Proc:codegen_asm
codegen_asm:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 208

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[fverbose]
	and A0,A0
	jz L3478
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK752
	mov D11,KK753
	call printf
	add Dstack, 32
; ------------------------------ label
L3478:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-32]	; T2  
	mov A0,A0
	mov [Dframe-24],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [gen2start],A0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call initasmdest
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-40],D0	; T3  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-40]	; T3  
	imul D1,78
	mov D0, [D0+D1+8]
	mov [stmodule],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK754
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[stmodule]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T4  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; T4  
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK755
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,0
	and A0,A0
	jz L3479
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK756
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3479:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[stmodule]
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3480
; ------------------------------ label
L3482:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T5  
	mov dword[Dframe-64],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T6  
	cmp A0,6
	jnz L3483
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; d -8  
	call doprocdef
	add Dstack, 32
; ------------------------------ jump
	jmp	L3484
; ------------------------------ label
L3483:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T8  
	cmp A0,7
	jnz L3485
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; d -8  
	call dostaticvar
	add Dstack, 32
; ------------------------------ jump
	jmp	L3486
; ------------------------------ label
L3485:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-88],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T9  
	mov dword[Dframe-96],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T10  
	cmp A0,5
	jz L3488
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T11  
	mov dword[Dframe-112],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T12  
	cmp A0,13
	jz L3488
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T13  
	mov dword[Dframe-128],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T14  
	cmp A0,12
	jnz L3487
; ------------------------------ label
L3488:
; ------------------------------ stmt
; ------------------------------ label
L3487:
; ------------------------------ label
L3486:
; ------------------------------ label
L3484:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ label
L3480:
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; d -8  
	and D0,D0
	jnz L3482
; ------------------------------ label
L3481:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call writetables
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-144],D0	; T16  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-144]	; T16  
	mov A0,A0
	mov [Dframe-136],A0	; T15  
; ------------------------------ move
	mov A0,[Dframe-136]	; T15  
	mov [gen2end],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[asmptr]
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[fverbose]
	and A0,A0
	jz L3489
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK757
	mov D11,KK758
	mov D12,[Dframe+24]	; outfile 24  
	mov D13,KK759
	call printf
	add Dstack, 32
; ------------------------------ label
L3489:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-160],D0	; T18  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-160]	; T18  
	mov A0,A0
	mov [Dframe-152],A0	; T17  
; ------------------------------ move
	mov A0,[Dframe-152]	; T17  
	mov [asmwstart],A0
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[asmptr]
	mov D1,[asmstart]
	sub D0,D1
	mov [Dframe-176],D0	; T20  
; ------------------------------ truncate
	mov D0,[Dframe-176]	; T20  
	mov A0,A0
	mov [Dframe-168],A0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; outfile 24  
	mov D11,[asmstart]
	mov A12,[Dframe-168]	; T19  
	call writefile
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-192],D0	; T22  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-192]	; T22  
	mov A0,A0
	mov [Dframe-184],A0	; T21  
; ------------------------------ move
	mov A0,[Dframe-184]	; T21  
	mov [asmwend],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-208],D0	; T24  
; ------------------------------ indexlv
	lea D0,[moduletable]
	mov D1,[Dframe-208]	; T24  
	imul D1,78
	lea D0, [D0+D1+20]
	mov [Dframe-200],D0	; T23  
; ------------------------------ move
	mov D0,[asmstart]
	mov D13,[Dframe-200]	; T23 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L3477
; ------------------------------ label
L3477:
; ------------------------------ hardret
	add Dstack, 208
	pop Dframe
	ret
;	End

;	Proc:doprocdef
	segment .data
	align 4
doprocdef.fncount:
	dd 0
	segment .text
doprocdef:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 800

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1024
	call asmbuffercheck
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-96],D0	; T1  
; ------------------------------ jumpfalse
	mov D0,[Dframe-96]	; T1  
	and D0,D0
	jz L3491
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T2  
	mov dword[Dframe-112],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T3  
	cmp A0,3
	jz L3493
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T4  
	mov dword[Dframe-128],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-128]	; T5  
	cmp A0,4
	jnz L3492
; ------------------------------ label
L3493:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK760
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-136],D0	; T6  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-136]	; T6  
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3492:
; ------------------------------ jump
	jmp	L3494
; ------------------------------ label
L3491:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-144],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-144]	; T7  
	mov dword[Dframe-152],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T8  
	cmp A0,3
	jz L3496
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-160],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T9  
	mov dword[Dframe-168],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T10  
	cmp A0,4
	jnz L3495
; ------------------------------ label
L3496:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,119
	mov B0, [D0+D1]
	mov [Dframe-176],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-176]	; T11  
	mov dword[Dframe-184],A0	; T12  
; ------------------------------ jumpfalse
	mov A0,[Dframe-184]	; T12  
	and A0,A0
	jz L3497
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK761
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-192],D0	; T13  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-192]	; T13  
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3497:
; ------------------------------ jump
	jmp	L3498
; ------------------------------ label
L3495:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK762
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3498:
; ------------------------------ stmt
; ------------------------------ return
	jmp L3490
; ------------------------------ label
L3494:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov [currproc],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [txreturn],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK763
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T14  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-200]	; T14  
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,16
	mov [Dframe-24],A0	; paramoffset -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-20],A0	; frameoffset -20  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-32],A0	; parambytes -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-40],A0	; adjbytes -40  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-12],A0	; nlowparams -12  
; ------------------------------ move
	mov A0,[Dframe-12]	; nlowparams -12  
	mov [Dframe-8],A0	; nparams -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; d -56  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3499
; ------------------------------ label
L3501:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-208],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-208]	; T15  
	mov dword[Dframe-216],A0	; T16  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T16  
	cmp A0,7
	jnz L3502
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-56]	; d -56  
	call dostaticvar_fn
	add Dstack, 32
; ------------------------------ jump
	jmp	L3503
; ------------------------------ label
L3502:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-224],B0	; T17  
; ------------------------------ widen
	movzx A0,byte [Dframe-224]	; T17  
	mov dword[Dframe-232],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-232]	; T18  
	cmp A0,8
	jnz L3504
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-248],W0	; T20  
; ------------------------------ widen
	movsx A0,word [Dframe-248]	; T20  
	mov dword[Dframe-256],A0	; T21  
; ------------------------------ widen
	movsx D0,dword[Dframe-256]	; T21  
	mov qword[Dframe-240],D0	; T19  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-240]	; T19  
	mov A0, [D0+D1*4]
	mov [Dframe-44],A0	; size -44  
; ------------------------------ jumpcc
	mov A0,[Dframe-44]	; size -44  
	cmp A0,0
	jnz L3505
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; T22  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK764
	mov D11,[Dframe-264]	; T22  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK765
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3505:
; ------------------------------ stmt
; ------------------------------ subto
	mov A0,[Dframe-20]	; frameoffset -20  
	mov A1,[Dframe-44]	; size -44  
	sub A0,A1
	mov [Dframe-20],A0	; frameoffset -20  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-272],W0	; T23  
; ------------------------------ widen
	movsx A0,word [Dframe-272]	; T23  
	mov dword[Dframe-280],A0	; T24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; frameoffset -20  
	mov A11,[Dframe-280]	; T24  
	call roundoffsetdown
	mov [Dframe-288],A0	; T25  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-288]	; T25  
	mov [Dframe-20],A0	; frameoffset -20  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-56]	; d -56  
	mov A1,88
	lea D0, [D0+D1]
	mov [Dframe-296],D0	; T26  
; ------------------------------ move
	mov A0,[Dframe-20]	; frameoffset -20  
	mov D13,[Dframe-296]	; T26 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-304],D0	; T27  
; ------------------------------ jumpfalse
	mov D0,[Dframe-304]	; T27  
	and D0,D0
	jz L3506
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-320],D0	; T29  
; ------------------------------ index
	mov D0,[Dframe-320]	; T29  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-312],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-312]	; T28  
	cmp A0,30
	jz L3508
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-344],W0	; T32  
; ------------------------------ widen
	movsx A0,word [Dframe-344]	; T32  
	mov dword[Dframe-352],A0	; T33  
; ------------------------------ widen
	movsx D0,dword[Dframe-352]	; T33  
	mov qword[Dframe-336],D0	; T31  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-336]	; T31  
	mov A0, [D0+D1*4]
	mov [Dframe-328],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-328]	; T30  
	cmp A0,19
	jnz L3507
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-368],D0	; T35  
; ------------------------------ index
	mov D0,[Dframe-368]	; T35  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-360],A0	; T34  
; ------------------------------ jumpcc
	mov A0,[Dframe-360]	; T34  
	cmp A0,1
	jnz L3507
; ------------------------------ label
L3508:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-56]	; d -56  
	call dostaticvar_fn
	add Dstack, 32
; ------------------------------ label
L3507:
; ------------------------------ label
L3506:
; ------------------------------ jump
	jmp	L3509
; ------------------------------ label
L3504:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-376],B0	; T36  
; ------------------------------ widen
	movzx A0,byte [Dframe-376]	; T36  
	mov dword[Dframe-384],A0	; T37  
; ------------------------------ jumpcc
	mov A0,[Dframe-384]	; T37  
	cmp A0,9
	jnz L3510
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-56]	; d -56  
	mov A1,88
	lea D0, [D0+D1]
	mov [Dframe-392],D0	; T38  
; ------------------------------ addto
	mov D13,[Dframe-392]	; T38 *
	mov A0,dword[D13]
	mov A1,dword[Dframe-24]	; paramoffset -24  
	add A0,A1
	mov D13,qword[Dframe-392]	; T38 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-24]	; paramoffset -24  
	mov A1,8
	add A0,A1
	mov [Dframe-24],A0	; paramoffset -24  
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-8]	; nparams -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; nparams -8  
	cmp A0,4
	jg L3511
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[Dframe-12]	; nlowparams -12  
	mov A0,dword[Dframe-12]	; nlowparams -12  
	mov dword[Dframe-416],A0	; T41  
; ------------------------------ sub
	mov A0,[Dframe-416]	; T41  
	mov A1,1
	sub A0,A1
	mov [Dframe-424],A0	; T42  
; ------------------------------ widen
	movsx D0,dword[Dframe-424]	; T42  
	mov qword[Dframe-408],D0	; T40  
; ------------------------------ indexlv
	lea D0,[Dframe-80]	; paramtypes -80  
	mov D1,[Dframe-408]	; T40  
	lea D0, [D0+D1*4]
	mov [Dframe-400],D0	; T39  
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-432],W0	; T43  
; ------------------------------ widen
	movsx A0,word [Dframe-432]	; T43  
	mov dword[Dframe-440],A0	; T44  
; ------------------------------ move
	mov A0,[Dframe-440]	; T44  
	mov D13,[Dframe-400]	; T39 *
	mov dword[D13],A0
; ------------------------------ label
L3511:
; ------------------------------ label
L3510:
; ------------------------------ label
L3509:
; ------------------------------ label
L3503:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; d -56  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; d -56  
; ------------------------------ label
L3499:
; ------------------------------ jumptrue
	mov D0,[Dframe-56]	; d -56  
	and D0,D0
	jnz L3501
; ------------------------------ label
L3500:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,56
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; m -64  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; m -64  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-448],B0	; T45  
; ------------------------------ widen
	movzx A0,byte [Dframe-448]	; T45  
	mov dword[Dframe-456],A0	; T46  
; ------------------------------ jumpcc
	mov A0,[Dframe-456]	; T46  
	cmp A0,5
	jz L3512
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK766
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3512:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; m -64  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-464],W0	; T47  
; ------------------------------ widen
	movzx A0,word [Dframe-464]	; T47  
	mov dword[Dframe-472],A0	; T48  
; ------------------------------ move
	mov A0,[Dframe-472]	; T48  
	mov [ntemps],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; m -64  
	mov A1,0
	mov D0, [D0+D1]
	mov [temptypes],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; m -64  
	mov A1,16
	mov D0, [D0+D1]
	mov [tempsizes],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; m -64  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; m -64  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; m -64  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-480],B0	; T49  
; ------------------------------ widen
	movzx A0,byte [Dframe-480]	; T49  
	mov dword[Dframe-488],A0	; T50  
; ------------------------------ jumpcc
	mov A0,[Dframe-488]	; T50  
	cmp A0,6
	jnz L3513
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe-64]	; m -64  
	mov A1,0
	lea D0, [D0+D1]
	mov [txreturn],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; m -64  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; m -64  
; ------------------------------ label
L3513:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; frameoffset -20  
	mov A11,10
	call roundoffsetdown
	mov [Dframe-496],A0	; T51  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-496]	; T51  
	mov [Dframe-20],A0	; frameoffset -20  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L3516
; ------------------------------ label
L3517:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-536],A0	; T56  
; ------------------------------ widen
	movsx D0,dword[Dframe-536]	; T56  
	mov qword[Dframe-528],D0	; T55  
; ------------------------------ index
	mov D0,[tempsizes]
	mov D1,[Dframe-528]	; T55  
	mov B0, [D0+D1]
	mov [Dframe-520],B0	; T54  
; ------------------------------ widen
	movzx A0,byte [Dframe-520]	; T54  
	mov dword[Dframe-544],A0	; T57  
; ------------------------------ widen
	movsx D0,dword[Dframe-544]	; T57  
	mov qword[Dframe-512],D0	; T53  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-512]	; T53  
	mov D11,8
	call m_imax
	mov [Dframe-552],D0	; T58  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-552]	; T58  
	mov A0,A0
	mov [Dframe-504],A0	; T52  
; ------------------------------ move
	mov A0,[Dframe-504]	; T52  
	mov [Dframe-44],A0	; size -44  
; ------------------------------ subto
	mov A0,[Dframe-20]	; frameoffset -20  
	mov A1,[Dframe-44]	; size -44  
	sub A0,A1
	mov [Dframe-20],A0	; frameoffset -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; frameoffset -20  
	mov A11,[Dframe-44]	; size -44  
	call roundoffsetdown_size
	mov [Dframe-560],A0	; T59  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-560]	; T59  
	mov [Dframe-20],A0	; frameoffset -20  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-584],A0	; T62  
; ------------------------------ widen
	movsx D0,dword[Dframe-584]	; T62  
	mov qword[Dframe-576],D0	; T61  
; ------------------------------ indexlv
	lea D0,[tempoffsets]
	mov D1,[Dframe-576]	; T61  
	lea D0, [D0+D1*4]
	mov [Dframe-568],D0	; T60  
; ------------------------------ move
	mov A0,[Dframe-20]	; frameoffset -20  
	mov D13,[Dframe-568]	; T60 *
	mov dword[D13],A0
; ------------------------------ label
L3514:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L3516:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[ntemps]
	jle L3517
; ------------------------------ label
L3515:
; ------------------------------ stmt
; ------------------------------ neg
	mov A0,[Dframe-20]	; frameoffset -20  
	neg A0
	mov [Dframe-592],A0	; T63  
; ------------------------------ move
	mov A0,[Dframe-592]	; T63  
	mov [Dframe-28],A0	; framebytes -28  
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[Dframe-28]	; framebytes -28  
	mov A1,8
	and A0,A1
	mov [Dframe-600],A0	; T64  
; ------------------------------ jumpfalse
	mov A0,[Dframe-600]	; T64  
	and A0,A0
	jz L3518
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-28]	; framebytes -28  
	mov A1,8
	add A0,A1
	mov [Dframe-28],A0	; framebytes -28  
; ------------------------------ stmt
; ------------------------------ subto
	mov A0,[Dframe-20]	; frameoffset -20  
	mov A1,8
	sub A0,A1
	mov [Dframe-20],A0	; frameoffset -20  
; ------------------------------ label
L3518:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-24]	; paramoffset -24  
	mov A1,16
	sub A0,A1
	mov [Dframe-32],A0	; parambytes -32  
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call setcodeseg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-608],D0	; T65  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-608]	; T65  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,58
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-616],B0	; T66  
; ------------------------------ widen
	movzx A0,byte [Dframe-616]	; T66  
	mov dword[Dframe-624],A0	; T67  
; ------------------------------ jumpcc
	mov A0,[Dframe-624]	; T67  
	cmp A0,4
	jnz L3519
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-632],D0	; T68  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-632]	; T68  
	mov D11,KK767
	mov D12,4
	call memcmp
	mov [Dframe-640],A0	; T69  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-640]	; T69  
	cmp A0,0
	jnz L3519
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; parambytes -32  
	and A0,A0
	jz L3519
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call genmainprelude
	add Dstack, 32
; ------------------------------ label
L3519:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-28]	; framebytes -28  
	mov A1,[Dframe-32]	; parambytes -32  
	add A0,A1
	mov [Dframe-648],A0	; T70  
; ------------------------------ jumpfalse
	mov A0,[Dframe-648]	; T70  
	and A0,A0
	jz L3520
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK768
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK769
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-28]	; framebytes -28  
	and A0,A0
	jz L3521
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK770
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-28]	; framebytes -28  
	mov qword[Dframe-656],D0	; T71  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-656]	; T71  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3521:
; ------------------------------ jump
	jmp	L3522
; ------------------------------ label
L3520:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,8
	mov [Dframe-40],A0	; adjbytes -40  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK771
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3522:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,16
	mov [Dframe-36],A0	; offset -36  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-672],D0	; T73  
; ------------------------------ index
	mov D0,[Dframe-672]	; T73  
	mov A1,22
	mov W0, [D0+D1]
	mov [Dframe-664],W0	; T72  
; ------------------------------ widen
	movsx A0,word [Dframe-664]	; T72  
	mov dword[Dframe-680],A0	; T74  
; ------------------------------ jumpcc
	mov A0,[Dframe-680]	; T74  
	cmp A0,3
	jnz L3523
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-12],A0	; nlowparams -12  
; ------------------------------ label
L3523:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L3526
; ------------------------------ label
L3527:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-696],A0	; T76  
; ------------------------------ widen
	movsx D0,dword[Dframe-696]	; T76  
	mov qword[Dframe-688],D0	; T75  
; ------------------------------ index
	lea D0,[Dframe-80]	; paramtypes -80  
	mov D1,[Dframe-688]	; T75  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; t -16  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,11
	cmp A0,[Dframe-16]	; t -16  
	jg L3528
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; t -16  
	cmp A0,13
	jg L3528
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; t -16  
	cmp A0,11
	jnz L3529
; ------------------------------ move
	mov D0,KK772
	mov [Dframe-704],D0	; T77  
; ------------------------------ jump
	jmp	L3530
; ------------------------------ label
L3529:
; ------------------------------ move
	mov D0,KK773
	mov [Dframe-704],D0	; T77  
; ------------------------------ label
L3530:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-704]	; T77  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK774
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-36]	; offset -36  
	mov qword[Dframe-712],D0	; T78  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-712]	; T78  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK775
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ add
	mov A0,1
	mov A1,[Dframe-4]	; i -4  
	add A0,A1
	mov [Dframe-728],A0	; T80  
; ------------------------------ sub
	mov A0,[Dframe-728]	; T80  
	mov A1,2
	sub A0,A1
	mov [Dframe-736],A0	; T81  
; ------------------------------ widen
	movsx D0,dword[Dframe-736]	; T81  
	mov qword[Dframe-720],D0	; T79  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-720]	; T79  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ jump
	jmp	L3531
; ------------------------------ label
L3528:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK776
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-36]	; offset -36  
	mov qword[Dframe-744],D0	; T82  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-744]	; T82  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK777
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ add
	mov A0,11
	mov A1,[Dframe-4]	; i -4  
	add A0,A1
	mov [Dframe-760],A0	; T84  
; ------------------------------ sub
	mov A0,[Dframe-760]	; T84  
	mov A1,2
	sub A0,A1
	mov [Dframe-768],A0	; T85  
; ------------------------------ widen
	movsx D0,dword[Dframe-768]	; T85  
	mov qword[Dframe-752],D0	; T83  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-752]	; T83  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3531:
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-36]	; offset -36  
	mov A1,8
	add A0,A1
	mov [Dframe-36],A0	; offset -36  
; ------------------------------ label
L3524:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L3526:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[Dframe-12]	; nlowparams -12  
	jle L3527
; ------------------------------ label
L3525:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[txreturn]
	and D0,D0
	jz L3532
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[txreturn]
	mov A11,10
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L3532:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3533
; ------------------------------ label
L3535:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-64]	; m -64  
	call translate
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; m -64  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; m -64  
; ------------------------------ label
L3533:
; ------------------------------ jumptrue
	mov D0,[Dframe-64]	; m -64  
	and D0,D0
	jnz L3535
; ------------------------------ label
L3534:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-28]	; framebytes -28  
	and A0,A0
	jz L3536
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK778
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-28]	; framebytes -28  
	mov qword[Dframe-776],D0	; T86  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-776]	; T86  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3536:
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-28]	; framebytes -28  
	mov A1,[Dframe-32]	; parambytes -32  
	add A0,A1
	mov [Dframe-784],A0	; T87  
; ------------------------------ jumpfalse
	mov A0,[Dframe-784]	; T87  
	and A0,A0
	jz L3537
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK779
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3537:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; adjbytes -40  
	and A0,A0
	jz L3538
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK780
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3538:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-792],D0	; T88  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-792]	; T88  
	mov D11,KK781
	call strcmp
	mov [Dframe-800],A0	; T89  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-800]	; T89  
	cmp A0,0
	jnz L3539
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK782
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK783
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK784
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK785
	call asmstrln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3540
; ------------------------------ label
L3539:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK786
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3540:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK787
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3490:
; ------------------------------ hardret
	add Dstack, 800
	pop Dframe
	ret
;	End

;	Proc:writetables
writetables:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[nstrings]
	and A0,A0
	jz L3542
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,8
	call setidataseg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK788
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L3545
; ------------------------------ label
L3546:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK789
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-24],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; T1  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK790
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-48],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T4  
	mov qword[Dframe-40],D0	; T3  
; ------------------------------ index
	lea D0,[stringtable]
	mov D1,[Dframe-40]	; T3  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; T2  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-72],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T7  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ index
	lea D0,[stringlentable]
	mov D1,[Dframe-64]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T2  
	mov A11,[Dframe-56]	; T5  
	call genstrconst
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3543:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L3545:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[nstrings]
	jle L3546
; ------------------------------ label
L3544:
; ------------------------------ label
L3542:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[nreals]
	and A0,A0
	jz L3547
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,8
	call setidataseg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK791
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L3550
; ------------------------------ label
L3551:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK792
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-80],D0	; T8  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-80]	; T8  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK793
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-104],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T11  
	mov qword[Dframe-96],D0	; T10  
; ------------------------------ index
	lea D0,[realtable]
	mov D1,[Dframe-96]	; T10  
	mov D0, [D0+D1*8]
	mov [Dframe-88],D0	; T9  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-128],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T14  
	mov qword[Dframe-120],D0	; T13  
; ------------------------------ index
	lea D0,[realsizetable]
	mov D1,[Dframe-120]	; T13  
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T12  
	mov dword[Dframe-136],A0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-88]	; T9  
	mov A11,[Dframe-136]	; T15  
	call genrealconst
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3548:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L3550:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[nreals]
	jle L3551
; ------------------------------ label
L3549:
; ------------------------------ label
L3547:
; ------------------------------ label
L3541:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

;	Proc:translate
	segment .data
	align 4
translate.lastcline:
	dd 0
	segment .text
translate:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 608

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [doopndsize],B0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,56
	mov A0, [D0+D1]
	mov [clineno],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[opndcomment1]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T1  
; ------------------------------ indexlv
	lea D0,[opndcomment2]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T4  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-64]	; T4 *
	mov byte [D13],B0
; ------------------------------ truncate
	mov D13,[Dframe-64]	; T4 *
	mov B0,byte [D13]
	and D0,255
	mov byte [Dframe-56],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T3  
	mov dword[Dframe-48],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-48]	; T2  
	mov D13,[Dframe-40]	; T1 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[asmend]
	mov D1,[asmptr]
	sub D0,D1
	mov [Dframe-72],D0	; T5  
; ------------------------------ jumpcc
	mov D0,[Dframe-72]	; T5  
	cmp D0,1024
	jge L3553
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call expandasmdest
	add Dstack, 32
; ------------------------------ label
L3553:
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe+16]	; m 16  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-8],D0	; a -8  
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe+16]	; m 16  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; b -16  
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe+16]	; m 16  
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; c -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK794
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-104],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T9  
	mov dword[Dframe-112],A0	; T10  
; ------------------------------ sub
	mov A0,[Dframe-112]	; T10  
	mov A1,1
	sub A0,A1
	mov [Dframe-120],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-120]	; T11  
	mov qword[Dframe-96],D0	; T8  
; ------------------------------ index
	lea D0,[tclnames]
	mov D1,[Dframe-96]	; T8  
	mov D0, [D0+D1*8]
	mov [Dframe-88],D0	; T7  
; ------------------------------ indexref
	mov D0,[Dframe-88]	; T7  
	mov D1,2
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T6  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-80]	; T6  
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-128],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T12  
	mov dword[Dframe-136],A0	; T13  
; ------------------------------ switch
	mov A0,[Dframe-136]	; T13  
	sub A0, 1
	cmp A0, 76
	jae L3554
	jmp [A0*8+L3619]
	align 8
; ------------------------------ label
L3619:
; ------------------------------ jumplabel
	dq L3618	; 1
; ------------------------------ jumplabel
	dq L3617	; 2
; ------------------------------ jumplabel
	dq L3554	; 3
; ------------------------------ jumplabel
	dq L3554	; 4
; ------------------------------ jumplabel
	dq L3554	; 5
; ------------------------------ jumplabel
	dq L3554	; 6
; ------------------------------ jumplabel
	dq L3616	; 7
; ------------------------------ jumplabel
	dq L3554	; 8
; ------------------------------ jumplabel
	dq L3615	; 9
; ------------------------------ jumplabel
	dq L3614	; 10
; ------------------------------ jumplabel
	dq L3613	; 11
; ------------------------------ jumplabel
	dq L3612	; 12
; ------------------------------ jumplabel
	dq L3554	; 13
; ------------------------------ jumplabel
	dq L3554	; 14
; ------------------------------ jumplabel
	dq L3611	; 15
; ------------------------------ jumplabel
	dq L3610	; 16
; ------------------------------ jumplabel
	dq L3609	; 17
; ------------------------------ jumplabel
	dq L3608	; 18
; ------------------------------ jumplabel
	dq L3607	; 19
; ------------------------------ jumplabel
	dq L3606	; 20
; ------------------------------ jumplabel
	dq L3605	; 21
; ------------------------------ jumplabel
	dq L3554	; 22
; ------------------------------ jumplabel
	dq L3604	; 23
; ------------------------------ jumplabel
	dq L3603	; 24
; ------------------------------ jumplabel
	dq L3602	; 25
; ------------------------------ jumplabel
	dq L3601	; 26
; ------------------------------ jumplabel
	dq L3600	; 27
; ------------------------------ jumplabel
	dq L3554	; 28
; ------------------------------ jumplabel
	dq L3599	; 29
; ------------------------------ jumplabel
	dq L3598	; 30
; ------------------------------ jumplabel
	dq L3554	; 31
; ------------------------------ jumplabel
	dq L3554	; 32
; ------------------------------ jumplabel
	dq L3554	; 33
; ------------------------------ jumplabel
	dq L3554	; 34
; ------------------------------ jumplabel
	dq L3596	; 35
; ------------------------------ jumplabel
	dq L3597	; 36
; ------------------------------ jumplabel
	dq L3595	; 37
; ------------------------------ jumplabel
	dq L3594	; 38
; ------------------------------ jumplabel
	dq L3593	; 39
; ------------------------------ jumplabel
	dq L3592	; 40
; ------------------------------ jumplabel
	dq L3591	; 41
; ------------------------------ jumplabel
	dq L3590	; 42
; ------------------------------ jumplabel
	dq L3588	; 43
; ------------------------------ jumplabel
	dq L3589	; 44
; ------------------------------ jumplabel
	dq L3585	; 45
; ------------------------------ jumplabel
	dq L3586	; 46
; ------------------------------ jumplabel
	dq L3587	; 47
; ------------------------------ jumplabel
	dq L3583	; 48
; ------------------------------ jumplabel
	dq L3584	; 49
; ------------------------------ jumplabel
	dq L3582	; 50
; ------------------------------ jumplabel
	dq L3581	; 51
; ------------------------------ jumplabel
	dq L3580	; 52
; ------------------------------ jumplabel
	dq L3579	; 53
; ------------------------------ jumplabel
	dq L3578	; 54
; ------------------------------ jumplabel
	dq L3577	; 55
; ------------------------------ jumplabel
	dq L3575	; 56
; ------------------------------ jumplabel
	dq L3576	; 57
; ------------------------------ jumplabel
	dq L3573	; 58
; ------------------------------ jumplabel
	dq L3572	; 59
; ------------------------------ jumplabel
	dq L3574	; 60
; ------------------------------ jumplabel
	dq L3570	; 61
; ------------------------------ jumplabel
	dq L3571	; 62
; ------------------------------ jumplabel
	dq L3569	; 63
; ------------------------------ jumplabel
	dq L3568	; 64
; ------------------------------ jumplabel
	dq L3567	; 65
; ------------------------------ jumplabel
	dq L3566	; 66
; ------------------------------ jumplabel
	dq L3565	; 67
; ------------------------------ jumplabel
	dq L3564	; 68
; ------------------------------ jumplabel
	dq L3563	; 69
; ------------------------------ jumplabel
	dq L3562	; 70
; ------------------------------ jumplabel
	dq L3561	; 71
; ------------------------------ jumplabel
	dq L3556	; 72
; ------------------------------ jumplabel
	dq L3560	; 73
; ------------------------------ jumplabel
	dq L3559	; 74
; ------------------------------ jumplabel
	dq L3557	; 75
; ------------------------------ jumplabel
	dq L3558	; 76
; ------------------------------ stmt
; ------------------------------ comment
;case 1:
; ------------------------------ label
L3618:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,59
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; a -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T14  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-144]	; T14  
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 2:
; ------------------------------ label
L3617:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 7:
; ------------------------------ label
L3616:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L3615:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-152],W0	; T15  
; ------------------------------ widen
	movzx A0,word [Dframe-152]	; T15  
	mov dword[Dframe-160],A0	; T16  
; ------------------------------ move
	mov A0,[Dframe-160]	; T16  
	mov [ncallparams],A0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[ncallparams]
	mov A1,1
	sub A0,A1
	mov [Dframe-184],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-184]	; T19  
	mov qword[Dframe-176],D0	; T18  
; ------------------------------ indexlv
	lea D0,[paramlist]
	mov D1,[Dframe-176]	; T18  
	lea D0, [D0+D1*8]
	mov [Dframe-168],D0	; T17  
; ------------------------------ move
	mov D0,[Dframe-8]	; a -8  
	mov D13,[Dframe-168]	; T17 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ return
	jmp L3552
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L3614:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 11:
; ------------------------------ label
L3613:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call domove
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 12:
; ------------------------------ label
L3612:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	call docopylist
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 15:
; ------------------------------ label
L3611:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dogetptr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 16:
; ------------------------------ label
L3610:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-192],W0	; T20  
; ------------------------------ widen
	movzx A0,word [Dframe-192]	; T20  
	mov dword[Dframe-200],A0	; T21  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,0
	push D13
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	mov A13,[Dframe-200]	; T21  
	call doindex
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 17:
; ------------------------------ label
L3609:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-208],W0	; T22  
; ------------------------------ widen
	movzx A0,word [Dframe-208]	; T22  
	mov dword[Dframe-216],A0	; T23  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,1
	push D13
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	mov A13,[Dframe-216]	; T23  
	call doindex
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 18:
; ------------------------------ label
L3608:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-224],W0	; T24  
; ------------------------------ widen
	movzx A0,word [Dframe-224]	; T24  
	mov dword[Dframe-232],A0	; T25  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,1
	push D13
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	mov A13,[Dframe-232]	; T25  
	call doindex
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 19:
; ------------------------------ label
L3607:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dogetaddr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 20:
; ------------------------------ label
L3606:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,76
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; a -8  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-248],A0	; T27  
; ------------------------------ widen
	movsx D0,dword[Dframe-248]	; T27  
	mov qword[Dframe-240],D0	; T26  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-240]	; T26  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,58
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; b -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-256],D0	; T28  
; ------------------------------ jumpfalse
	mov D0,[Dframe-256]	; T28  
	and D0,D0
	jz L3620
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK795
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; b -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-272],D0	; T30  
; ------------------------------ index
	mov D0,[Dframe-272]	; T30  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; T29  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T29  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK796
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3620:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 21:
; ------------------------------ label
L3605:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK797
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,76
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; a -8  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-288],A0	; T32  
; ------------------------------ widen
	movsx D0,dword[Dframe-288]	; T32  
	mov qword[Dframe-280],D0	; T31  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-280]	; T31  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK798
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-304],W0	; T34  
; ------------------------------ widen
	movzx A0,word [Dframe-304]	; T34  
	mov dword[Dframe-312],A0	; T35  
; ------------------------------ widen
	movsx D0,dword[Dframe-312]	; T35  
	mov qword[Dframe-296],D0	; T33  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-296]	; T33  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 23:
; ------------------------------ label
L3604:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; m 16  
	mov D11,[Dframe-8]	; a -8  
	mov D12,[Dframe-16]	; b -16  
	mov D13,[Dframe-24]	; c -24  
	call doswitchop
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 24:
; ------------------------------ label
L3603:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK799
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 25:
; ------------------------------ label
L3602:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-320],W0	; T36  
; ------------------------------ widen
	movzx A0,word [Dframe-320]	; T36  
	mov dword[Dframe-328],A0	; T37  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-328]	; T37  
	mov D11,[Dframe-8]	; a -8  
	mov D12,[Dframe-16]	; b -16  
	mov D13,[Dframe-24]	; c -24  
	call dojumpcc
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 26:
; ------------------------------ label
L3601:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,1
	call dojumptrue
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 27:
; ------------------------------ label
L3600:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,0
	call dojumptrue
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 29:
; ------------------------------ label
L3599:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-336],W0	; T38  
; ------------------------------ widen
	movzx A0,word [Dframe-336]	; T38  
	mov dword[Dframe-344],A0	; T39  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-344]	; T39  
	mov D11,[Dframe-8]	; a -8  
	mov D12,[Dframe-16]	; b -16  
	mov D13,[Dframe-24]	; c -24  
	call dosetcc
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 30:
; ------------------------------ label
L3598:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 35:
; ------------------------------ label
L3596:
; ------------------------------ stmt
; ------------------------------ comment
;case 36:
; ------------------------------ label
L3597:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; m 16  
	mov D11,[Dframe-8]	; a -8  
	mov D12,[Dframe-16]	; b -16  
	call docallproc
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 37:
; ------------------------------ label
L3595:
; ------------------------------ stmt
; ------------------------------ label
L140: ;<doret>
; ------------------------------ stmt
; ------------------------------ label
L141: ;<L37>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK800
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 38:
; ------------------------------ label
L3594:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[txreturn]
	and D0,D0
	jz L3621
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; b -16  
	call saveretvalue
	add Dstack, 32
; ------------------------------ jump
	jmp	L3622
; ------------------------------ label
L3621:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; b -16  
	mov A11,1
	call gloadopnd
	add Dstack, 32
; ------------------------------ label
L3622:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L141
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L3593:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 40:
; ------------------------------ label
L3592:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	call doadd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 41:
; ------------------------------ label
L3591:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	call dosub
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 42:
; ------------------------------ label
L3590:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	call domul
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 43:
; ------------------------------ label
L3588:
; ------------------------------ stmt
; ------------------------------ comment
;case 44:
; ------------------------------ label
L3589:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-352],B0	; T40  
; ------------------------------ widen
	movzx A0,byte [Dframe-352]	; T40  
	mov dword[Dframe-360],A0	; T41  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	mov A13,[Dframe-360]	; T41  
	call dodiv
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 45:
; ------------------------------ label
L3585:
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L3586:
; ------------------------------ stmt
; ------------------------------ comment
;case 47:
; ------------------------------ label
L3587:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-368],B0	; T42  
; ------------------------------ widen
	movzx A0,byte [Dframe-368]	; T42  
	mov dword[Dframe-376],A0	; T43  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	mov A13,[Dframe-376]	; T43  
	call doiand
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L3583:
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L3584:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-384],B0	; T44  
; ------------------------------ widen
	movzx A0,byte [Dframe-384]	; T44  
	mov dword[Dframe-392],A0	; T45  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov D12,[Dframe-24]	; c -24  
	mov A13,[Dframe-392]	; T45  
	call doshl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L3582:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call doneg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 51:
; ------------------------------ label
L3581:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call doabs
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 52:
; ------------------------------ label
L3580:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call doinot
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 53:
; ------------------------------ label
L3579:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call doaddto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 54:
; ------------------------------ label
L3578:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dosubto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L3577:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call domulto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L3575:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L3576:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-400],B0	; T46  
; ------------------------------ widen
	movzx A0,byte [Dframe-400]	; T46  
	mov dword[Dframe-408],A0	; T47  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,[Dframe-408]	; T47  
	call dodivto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 59:
; ------------------------------ label
L3572:
; ------------------------------ stmt
; ------------------------------ comment
;case 58:
; ------------------------------ label
L3573:
; ------------------------------ stmt
; ------------------------------ comment
;case 60:
; ------------------------------ label
L3574:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-416],B0	; T48  
; ------------------------------ widen
	movzx A0,byte [Dframe-416]	; T48  
	mov dword[Dframe-424],A0	; T49  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,[Dframe-424]	; T49  
	call doiandto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 61:
; ------------------------------ label
L3570:
; ------------------------------ stmt
; ------------------------------ comment
;case 62:
; ------------------------------ label
L3571:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-432],B0	; T50  
; ------------------------------ widen
	movzx A0,byte [Dframe-432]	; T50  
	mov dword[Dframe-440],A0	; T51  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,[Dframe-440]	; T51  
	call doshlto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 63:
; ------------------------------ label
L3569:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov A11,1
	call doincr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 64:
; ------------------------------ label
L3568:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov A11,0
	call doincr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 65:
; ------------------------------ label
L3567:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-448],W0	; T52  
; ------------------------------ widen
	movzx A0,word [Dframe-448]	; T52  
	mov dword[Dframe-456],A0	; T53  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,1
	mov A13,[Dframe-456]	; T53  
	call dopreincrx
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 66:
; ------------------------------ label
L3566:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-464],W0	; T54  
; ------------------------------ widen
	movzx A0,word [Dframe-464]	; T54  
	mov dword[Dframe-472],A0	; T55  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,0
	mov A13,[Dframe-472]	; T55  
	call dopreincrx
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 67:
; ------------------------------ label
L3565:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-480],W0	; T56  
; ------------------------------ widen
	movzx A0,word [Dframe-480]	; T56  
	mov dword[Dframe-488],A0	; T57  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,1
	mov A13,[Dframe-488]	; T57  
	call dopostincrx
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L3564:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-496],W0	; T58  
; ------------------------------ widen
	movzx A0,word [Dframe-496]	; T58  
	mov dword[Dframe-504],A0	; T59  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	mov A12,0
	mov A13,[Dframe-504]	; T59  
	call dopostincrx
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L3563:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dosoftconv
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 70:
; ------------------------------ label
L3562:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dofloat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 71:
; ------------------------------ label
L3561:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dofix
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 73:
; ------------------------------ label
L3560:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dowiden
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 74:
; ------------------------------ label
L3559:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dofwiden
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L3558:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dofnarrow
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 75:
; ------------------------------ label
L3557:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call donarrow
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;case 72:
; ------------------------------ label
L3556:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; a -8  
	mov D11,[Dframe-16]	; b -16  
	call dotruncate
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3555
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L3554:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-528],B0	; T62  
; ------------------------------ widen
	movzx A0,byte [Dframe-528]	; T62  
	mov dword[Dframe-536],A0	; T63  
; ------------------------------ sub
	mov A0,[Dframe-536]	; T63  
	mov A1,1
	sub A0,A1
	mov [Dframe-544],A0	; T64  
; ------------------------------ widen
	movsx D0,dword[Dframe-544]	; T64  
	mov qword[Dframe-520],D0	; T61  
; ------------------------------ index
	lea D0,[tclnames]
	mov D1,[Dframe-520]	; T61  
	mov D0, [D0+D1*8]
	mov [Dframe-512],D0	; T60  
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,56
	mov A0, [D0+D1]
	mov [Dframe-552],A0	; T65  
; ------------------------------ iand
	mov A0,[Dframe-552]	; T65  
	mov A1,16777215
	and A0,A1
	mov [Dframe-560],A0	; T66  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe-560]	; T66  
	push D13
	sub Dstack,32
	mov D10,KK801
	mov D11,KK802
	mov D12,[Dframe-512]	; T60  
	mov D13,KK803
	call printf
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK804
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-584],B0	; T69  
; ------------------------------ widen
	movzx A0,byte [Dframe-584]	; T69  
	mov dword[Dframe-592],A0	; T70  
; ------------------------------ sub
	mov A0,[Dframe-592]	; T70  
	mov A1,1
	sub A0,A1
	mov [Dframe-600],A0	; T71  
; ------------------------------ widen
	movsx D0,dword[Dframe-600]	; T71  
	mov qword[Dframe-576],D0	; T68  
; ------------------------------ index
	lea D0,[tclnames]
	mov D1,[Dframe-576]	; T68  
	mov D0, [D0+D1*8]
	mov [Dframe-568],D0	; T67  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-568]	; T67  
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3555:
; ------------------------------ label
L3552:
; ------------------------------ hardret
	add Dstack, 608
	pop Dframe
	ret
;	End

;	Proc:nextstringindex
nextstringindex:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nstrings]
	cmp A0,5000
	jle L3624
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK805
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3624:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[nstrings]
	mov A0,dword[nstrings]
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ sub
	mov A0,[Dframe-24]	; T3  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T4  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ indexlv
	lea D0,[stringtable]
	mov D1,[Dframe-16]	; T2  
	lea D0, [D0+D1*8]
	mov [Dframe-8],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe+16]	; s 16  
	mov D13,[Dframe-8]	; T1 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[nstrings]
	mov A1,1
	sub A0,A1
	mov [Dframe-56],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T7  
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ indexlv
	lea D0,[stringlentable]
	mov D1,[Dframe-48]	; T6  
	lea D0, [D0+D1*4]
	mov [Dframe-40],D0	; T5  
; ------------------------------ move
	mov A0,[Dframe+24]	; length 24  
	mov D13,[Dframe-40]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[nstrings]
	jmp L3623
; ------------------------------ label
L3623:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:nextrealindex
nextrealindex:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	movq [Dframe+16], XMM0
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nreals]
	cmp A0,2000
	jle L3626
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK806
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3626:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; size 24  
	cmp A0,8
	jnz L3627
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[nreals]
	mov A0,dword[nreals]
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ sub
	mov A0,[Dframe-32]	; T3  
	mov A1,1
	sub A0,A1
	mov [Dframe-40],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T4  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ indexlv
	lea D0,[realtable]
	mov D1,[Dframe-24]	; T2  
	lea D0, [D0+D1*8]
	mov [Dframe-16],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe+16]	; x 16  
	mov D13,[Dframe-16]	; T1 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L3628
; ------------------------------ label
L3627:
; ------------------------------ stmt
; ------------------------------ fnarrow
	cvtsd2ss XMM0, [Dframe+16]
	movd [Dframe-48],XMM0	; x 16  ,T5  
; ------------------------------ move
	mov A0,[Dframe-48]	; T5  
	mov [Dframe-8],A0	; sx -8  
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[nreals]
	mov A0,dword[nreals]
	mov dword[Dframe-72],A0	; T8  
; ------------------------------ sub
	mov A0,[Dframe-72]	; T8  
	mov A1,1
	sub A0,A1
	mov [Dframe-80],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T9  
	mov qword[Dframe-64],D0	; T7  
; ------------------------------ indexlv
	lea D0,[realtable]
	mov D1,[Dframe-64]	; T7  
	lea D0, [D0+D1*8]
	mov [Dframe-56],D0	; T6  
; ------------------------------ widen
	mov A0,dword[Dframe-8]	; sx -8  
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ move
	mov D0,[Dframe-88]	; T10  
	mov D13,[Dframe-56]	; T6 *
	mov qword[D13],D0
; ------------------------------ label
L3628:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[nreals]
	mov A1,1
	sub A0,A1
	mov [Dframe-112],A0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-112]	; T13  
	mov qword[Dframe-104],D0	; T12  
; ------------------------------ indexlv
	lea D0,[realsizetable]
	mov D1,[Dframe-104]	; T12  
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ move
	mov A0,[Dframe+24]	; size 24  
	mov D13,[Dframe-96]	; T11 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[nreals]
	jmp L3625
; ------------------------------ label
L3625:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:genstrconst
	segment .data
	align 4
genstrconst.k:
	dd 100
	segment .text
genstrconst:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-40],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T3  
	mov dword[Dframe-48],A0	; T4  
; ------------------------------ truncate
	mov A0,[Dframe-48]	; T4  
	and D0,255
	mov [Dframe-32],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T2  
	mov dword[Dframe-24],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T1  
	cmp A0,0
	jz L3631
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; length 24  
	cmp A0,0
	jnz L3630
; ------------------------------ label
L3631:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK807
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L3629
; ------------------------------ label
L3630:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK808
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; state -4  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+24]	; length 24  
	mov [Dframe-12],A0	; av_1 -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3632
; ------------------------------ label
L3634:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe+16]	; s 16  
	inc qword[Dframe+16]	; s 16  
	mov qword[Dframe-80],D0	; T8  
; ------------------------------ getptr
	mov D0,[Dframe-80]	; T8  
	mov B0, [D0]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-88],A0	; T9  
; ------------------------------ truncate
	mov A0,[Dframe-88]	; T9  
	and D0,255
	mov [Dframe-64],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T6  
	mov dword[Dframe-56],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-56]	; T5  
	mov [Dframe-5],B0	; c -5  
; ------------------------------ stmt
; ------------------------------ predecrx
	dec dword[genstrconst.k]
	mov A0,dword[genstrconst.k]
	mov dword[Dframe-96],A0	; T10  
; ------------------------------ jumptrue
	mov A0,[Dframe-96]	; T10  
	and A0,A0
	jnz L3635
; ------------------------------ stmt
; ------------------------------ move
	mov A0,100
	mov [genstrconst.k],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1024
	call asmbuffercheck
	add Dstack, 32
; ------------------------------ label
L3635:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-5]	; c -5  
	mov dword[Dframe-112],A0	; T12  
; ------------------------------ truncate
	mov A0,[Dframe-112]	; T12  
	and D0,255
	mov [Dframe-104],B0	; T11  
; ------------------------------ switch
	mov B0,[Dframe-104]	; T11  
	sub A0, 0
	cmp A0, 128
	jae L3636
	jmp [A0*8+L3672]
	align 8
; ------------------------------ label
L3672:
; ------------------------------ jumplabel
	dq L3638	; 1
; ------------------------------ jumplabel
	dq L3639	; 2
; ------------------------------ jumplabel
	dq L3640	; 3
; ------------------------------ jumplabel
	dq L3641	; 4
; ------------------------------ jumplabel
	dq L3642	; 5
; ------------------------------ jumplabel
	dq L3643	; 6
; ------------------------------ jumplabel
	dq L3644	; 7
; ------------------------------ jumplabel
	dq L3645	; 8
; ------------------------------ jumplabel
	dq L3646	; 9
; ------------------------------ jumplabel
	dq L3647	; 10
; ------------------------------ jumplabel
	dq L3648	; 11
; ------------------------------ jumplabel
	dq L3649	; 12
; ------------------------------ jumplabel
	dq L3650	; 13
; ------------------------------ jumplabel
	dq L3651	; 14
; ------------------------------ jumplabel
	dq L3652	; 15
; ------------------------------ jumplabel
	dq L3653	; 16
; ------------------------------ jumplabel
	dq L3654	; 17
; ------------------------------ jumplabel
	dq L3655	; 18
; ------------------------------ jumplabel
	dq L3656	; 19
; ------------------------------ jumplabel
	dq L3657	; 20
; ------------------------------ jumplabel
	dq L3658	; 21
; ------------------------------ jumplabel
	dq L3659	; 22
; ------------------------------ jumplabel
	dq L3660	; 23
; ------------------------------ jumplabel
	dq L3661	; 24
; ------------------------------ jumplabel
	dq L3662	; 25
; ------------------------------ jumplabel
	dq L3663	; 26
; ------------------------------ jumplabel
	dq L3664	; 27
; ------------------------------ jumplabel
	dq L3665	; 28
; ------------------------------ jumplabel
	dq L3666	; 29
; ------------------------------ jumplabel
	dq L3667	; 30
; ------------------------------ jumplabel
	dq L3668	; 31
; ------------------------------ jumplabel
	dq L3669	; 32
; ------------------------------ jumplabel
	dq L3636	; 33
; ------------------------------ jumplabel
	dq L3636	; 34
; ------------------------------ jumplabel
	dq L3636	; 35
; ------------------------------ jumplabel
	dq L3636	; 36
; ------------------------------ jumplabel
	dq L3636	; 37
; ------------------------------ jumplabel
	dq L3636	; 38
; ------------------------------ jumplabel
	dq L3636	; 39
; ------------------------------ jumplabel
	dq L3670	; 40
; ------------------------------ jumplabel
	dq L3636	; 41
; ------------------------------ jumplabel
	dq L3636	; 42
; ------------------------------ jumplabel
	dq L3636	; 43
; ------------------------------ jumplabel
	dq L3636	; 44
; ------------------------------ jumplabel
	dq L3636	; 45
; ------------------------------ jumplabel
	dq L3636	; 46
; ------------------------------ jumplabel
	dq L3636	; 47
; ------------------------------ jumplabel
	dq L3636	; 48
; ------------------------------ jumplabel
	dq L3636	; 49
; ------------------------------ jumplabel
	dq L3636	; 50
; ------------------------------ jumplabel
	dq L3636	; 51
; ------------------------------ jumplabel
	dq L3636	; 52
; ------------------------------ jumplabel
	dq L3636	; 53
; ------------------------------ jumplabel
	dq L3636	; 54
; ------------------------------ jumplabel
	dq L3636	; 55
; ------------------------------ jumplabel
	dq L3636	; 56
; ------------------------------ jumplabel
	dq L3636	; 57
; ------------------------------ jumplabel
	dq L3636	; 58
; ------------------------------ jumplabel
	dq L3636	; 59
; ------------------------------ jumplabel
	dq L3636	; 60
; ------------------------------ jumplabel
	dq L3636	; 61
; ------------------------------ jumplabel
	dq L3636	; 62
; ------------------------------ jumplabel
	dq L3636	; 63
; ------------------------------ jumplabel
	dq L3636	; 64
; ------------------------------ jumplabel
	dq L3636	; 65
; ------------------------------ jumplabel
	dq L3636	; 66
; ------------------------------ jumplabel
	dq L3636	; 67
; ------------------------------ jumplabel
	dq L3636	; 68
; ------------------------------ jumplabel
	dq L3636	; 69
; ------------------------------ jumplabel
	dq L3636	; 70
; ------------------------------ jumplabel
	dq L3636	; 71
; ------------------------------ jumplabel
	dq L3636	; 72
; ------------------------------ jumplabel
	dq L3636	; 73
; ------------------------------ jumplabel
	dq L3636	; 74
; ------------------------------ jumplabel
	dq L3636	; 75
; ------------------------------ jumplabel
	dq L3636	; 76
; ------------------------------ jumplabel
	dq L3636	; 77
; ------------------------------ jumplabel
	dq L3636	; 78
; ------------------------------ jumplabel
	dq L3636	; 79
; ------------------------------ jumplabel
	dq L3636	; 80
; ------------------------------ jumplabel
	dq L3636	; 81
; ------------------------------ jumplabel
	dq L3636	; 82
; ------------------------------ jumplabel
	dq L3636	; 83
; ------------------------------ jumplabel
	dq L3636	; 84
; ------------------------------ jumplabel
	dq L3636	; 85
; ------------------------------ jumplabel
	dq L3636	; 86
; ------------------------------ jumplabel
	dq L3636	; 87
; ------------------------------ jumplabel
	dq L3636	; 88
; ------------------------------ jumplabel
	dq L3636	; 89
; ------------------------------ jumplabel
	dq L3636	; 90
; ------------------------------ jumplabel
	dq L3636	; 91
; ------------------------------ jumplabel
	dq L3636	; 92
; ------------------------------ jumplabel
	dq L3636	; 93
; ------------------------------ jumplabel
	dq L3636	; 94
; ------------------------------ jumplabel
	dq L3636	; 95
; ------------------------------ jumplabel
	dq L3636	; 96
; ------------------------------ jumplabel
	dq L3636	; 97
; ------------------------------ jumplabel
	dq L3636	; 98
; ------------------------------ jumplabel
	dq L3636	; 99
; ------------------------------ jumplabel
	dq L3636	; 100
; ------------------------------ jumplabel
	dq L3636	; 101
; ------------------------------ jumplabel
	dq L3636	; 102
; ------------------------------ jumplabel
	dq L3636	; 103
; ------------------------------ jumplabel
	dq L3636	; 104
; ------------------------------ jumplabel
	dq L3636	; 105
; ------------------------------ jumplabel
	dq L3636	; 106
; ------------------------------ jumplabel
	dq L3636	; 107
; ------------------------------ jumplabel
	dq L3636	; 108
; ------------------------------ jumplabel
	dq L3636	; 109
; ------------------------------ jumplabel
	dq L3636	; 110
; ------------------------------ jumplabel
	dq L3636	; 111
; ------------------------------ jumplabel
	dq L3636	; 112
; ------------------------------ jumplabel
	dq L3636	; 113
; ------------------------------ jumplabel
	dq L3636	; 114
; ------------------------------ jumplabel
	dq L3636	; 115
; ------------------------------ jumplabel
	dq L3636	; 116
; ------------------------------ jumplabel
	dq L3636	; 117
; ------------------------------ jumplabel
	dq L3636	; 118
; ------------------------------ jumplabel
	dq L3636	; 119
; ------------------------------ jumplabel
	dq L3636	; 120
; ------------------------------ jumplabel
	dq L3636	; 121
; ------------------------------ jumplabel
	dq L3636	; 122
; ------------------------------ jumplabel
	dq L3636	; 123
; ------------------------------ jumplabel
	dq L3636	; 124
; ------------------------------ jumplabel
	dq L3636	; 125
; ------------------------------ jumplabel
	dq L3636	; 126
; ------------------------------ jumplabel
	dq L3636	; 127
; ------------------------------ jumplabel
	dq L3671	; 128
; ------------------------------ stmt
; ------------------------------ comment
;case 0:
; ------------------------------ label
L3638:
; ------------------------------ stmt
; ------------------------------ comment
;case 1:
; ------------------------------ label
L3639:
; ------------------------------ stmt
; ------------------------------ comment
;case 2:
; ------------------------------ label
L3640:
; ------------------------------ stmt
; ------------------------------ comment
;case 3:
; ------------------------------ label
L3641:
; ------------------------------ stmt
; ------------------------------ comment
;case 4:
; ------------------------------ label
L3642:
; ------------------------------ stmt
; ------------------------------ comment
;case 5:
; ------------------------------ label
L3643:
; ------------------------------ stmt
; ------------------------------ comment
;case 6:
; ------------------------------ label
L3644:
; ------------------------------ stmt
; ------------------------------ comment
;case 7:
; ------------------------------ label
L3645:
; ------------------------------ stmt
; ------------------------------ comment
;case 8:
; ------------------------------ label
L3646:
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L3647:
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L3648:
; ------------------------------ stmt
; ------------------------------ comment
;case 11:
; ------------------------------ label
L3649:
; ------------------------------ stmt
; ------------------------------ comment
;case 12:
; ------------------------------ label
L3650:
; ------------------------------ stmt
; ------------------------------ comment
;case 13:
; ------------------------------ label
L3651:
; ------------------------------ stmt
; ------------------------------ comment
;case 14:
; ------------------------------ label
L3652:
; ------------------------------ stmt
; ------------------------------ comment
;case 15:
; ------------------------------ label
L3653:
; ------------------------------ stmt
; ------------------------------ comment
;case 16:
; ------------------------------ label
L3654:
; ------------------------------ stmt
; ------------------------------ comment
;case 17:
; ------------------------------ label
L3655:
; ------------------------------ stmt
; ------------------------------ comment
;case 18:
; ------------------------------ label
L3656:
; ------------------------------ stmt
; ------------------------------ comment
;case 19:
; ------------------------------ label
L3657:
; ------------------------------ stmt
; ------------------------------ comment
;case 20:
; ------------------------------ label
L3658:
; ------------------------------ stmt
; ------------------------------ comment
;case 21:
; ------------------------------ label
L3659:
; ------------------------------ stmt
; ------------------------------ comment
;case 22:
; ------------------------------ label
L3660:
; ------------------------------ stmt
; ------------------------------ comment
;case 23:
; ------------------------------ label
L3661:
; ------------------------------ stmt
; ------------------------------ comment
;case 24:
; ------------------------------ label
L3662:
; ------------------------------ stmt
; ------------------------------ comment
;case 25:
; ------------------------------ label
L3663:
; ------------------------------ stmt
; ------------------------------ comment
;case 26:
; ------------------------------ label
L3664:
; ------------------------------ stmt
; ------------------------------ comment
;case 27:
; ------------------------------ label
L3665:
; ------------------------------ stmt
; ------------------------------ comment
;case 28:
; ------------------------------ label
L3666:
; ------------------------------ stmt
; ------------------------------ comment
;case 29:
; ------------------------------ label
L3667:
; ------------------------------ stmt
; ------------------------------ comment
;case 30:
; ------------------------------ label
L3668:
; ------------------------------ stmt
; ------------------------------ comment
;case 31:
; ------------------------------ label
L3669:
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L3670:
; ------------------------------ stmt
; ------------------------------ comment
;case 127:
; ------------------------------ label
L3671:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; state -4  
	cmp A0,1
	jnz L3673
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK809
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4],A0	; state -4  
; ------------------------------ label
L3673:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-5]	; c -5  
	mov dword[Dframe-136],A0	; T15  
; ------------------------------ truncate
	mov A0,[Dframe-136]	; T15  
	and D0,255
	mov [Dframe-128],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T14  
	mov qword[Dframe-120],D0	; T13  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-120]	; T13  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3637
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L3636:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; state -4  
	cmp A0,0
	jnz L3674
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,39
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; state -4  
; ------------------------------ label
L3674:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-5]	; c -5  
	mov dword[Dframe-160],A0	; T18  
; ------------------------------ truncate
	mov A0,[Dframe-160]	; T18  
	and D0,255
	mov [Dframe-152],B0	; T17  
; ------------------------------ widen
	movzx A0,byte [Dframe-152]	; T17  
	mov dword[Dframe-144],A0	; T16  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-144]	; T16  
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3637:
; ------------------------------ label
L3632:
; ------------------------------ postdecrx
	mov A0,[Dframe-12]	; av_1 -12  
	dec dword[Dframe-12]	; av_1 -12  
	mov dword[Dframe-168],A0	; T19  
; ------------------------------ jumptrue
	mov A0,[Dframe-168]	; T19  
	and A0,A0
	jnz L3634
; ------------------------------ label
L3633:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; state -4  
	cmp A0,1
	jnz L3675
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK810
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3676
; ------------------------------ label
L3675:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,48
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3676:
; ------------------------------ label
L3629:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:genrealconst
genrealconst:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; size 24  
	cmp A0,8
	jnz L3678
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK811
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[asmptr]
	mov D11,KK812
	mov D12,[Dframe+16]	; x 16  
	call sprintf
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; n -4  
; ------------------------------ jump
	jmp	L3679
; ------------------------------ label
L3678:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK813
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[asmptr]
	mov D11,KK814
	mov D12,[Dframe+16]	; x 16  
	call sprintf
	mov [Dframe-24],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-4],A0	; n -4  
; ------------------------------ label
L3679:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; n -4  
	mov qword[Dframe-32],D0	; T3  
; ------------------------------ addto
	mov D0,[asmptr]
	mov D1,[Dframe-32]	; T3  
	add D0,D1
	mov [asmptr],D0
; ------------------------------ label
L3677:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:asmstr
asmstr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3681
; ------------------------------ label
L3683:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[asmptr]
	inc qword[asmptr]
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe-16]	; T2  
	mov [Dframe-8],D0	; T1  
; ------------------------------ postincrx
	mov D0,[Dframe+16]	; s 16  
	inc qword[Dframe+16]	; s 16  
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ getptr
	mov D0,[Dframe-48]	; T6  
	mov B0, [D0]
	mov [Dframe-40],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-40]	; T5  
	mov dword[Dframe-56],A0	; T7  
; ------------------------------ truncate
	mov A0,[Dframe-56]	; T7  
	and D0,255
	mov [Dframe-32],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T4  
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-24]	; T3  
	mov D13,[Dframe-8]	; T1 *
	mov byte [D13],B0
; ------------------------------ label
L3681:
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-72],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T9  
	mov dword[Dframe-80],A0	; T10  
; ------------------------------ truncate
	mov A0,[Dframe-80]	; T10  
	and D0,255
	mov [Dframe-64],B0	; T8  
; ------------------------------ jumptrue
	mov B0,[Dframe-64]	; T8  
	and B0,B0
	jnz L3683
; ------------------------------ label
L3682:
; ------------------------------ label
L3680:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:asmstrln
asmstrln:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3685
; ------------------------------ label
L3687:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-1]	; c -1  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ truncate
	mov A0,[Dframe-32]	; T3  
	and D0,255
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-16],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov D13,[asmptr]
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[asmptr]
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe+16]	; s 16  
; ------------------------------ label
L3685:
; ------------------------------ getptr
	mov D0,[Dframe+16]	; s 16  
	mov B0, [D0]
	mov [Dframe-56],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T6  
	mov dword[Dframe-64],A0	; T7  
; ------------------------------ truncate
	mov A0,[Dframe-64]	; T7  
	and D0,255
	mov [Dframe-48],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T5  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-40]	; T4  
	mov [Dframe-1],B0	; c -1  
; ------------------------------ jumptrue
	mov B0,[Dframe-1]	; c -1  
	and B0,B0
	jnz L3687
; ------------------------------ label
L3686:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,10
	mov D13,[asmptr]
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[asmptr]
; ------------------------------ label
L3684:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:asmline
asmline:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ move
	mov A0,10
	mov D13,[asmptr]
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[asmptr]
; ------------------------------ label
L3688:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

;	Proc:asmln
asmln:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ index
	lea D0,[opndcomment1]
	mov D1,0
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ truncate
	mov A0,[Dframe-24]	; T3  
	and D0,255
	mov [Dframe-8],B0	; T1  
; ------------------------------ jumpfalse
	mov B0,[Dframe-8]	; T1  
	and B0,B0
	jz L3690
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK815
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[opndcomment1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T4  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[opndcomment1]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T5  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-40]	; T5 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[opndcomment2]
	mov D1,0
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T7  
	mov dword[Dframe-64],A0	; T8  
; ------------------------------ truncate
	mov A0,[Dframe-64]	; T8  
	and D0,255
	mov [Dframe-48],B0	; T6  
; ------------------------------ jumpfalse
	mov B0,[Dframe-48]	; T6  
	and B0,B0
	jz L3691
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[opndcomment2]
	mov [Dframe-72],D0	; T9  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-72]	; T9  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[opndcomment2]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T10  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-80]	; T10 *
	mov byte [D13],B0
; ------------------------------ label
L3691:
; ------------------------------ label
L3690:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3689:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:asmint
asmint:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[asmptr]
	mov D11,KK816
	mov D12,[Dframe+16]	; a 16  
	call sprintf
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; n -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; n -4  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ addto
	mov D0,[asmptr]
	mov D1,[Dframe-24]	; T2  
	add D0,D1
	mov [asmptr],D0
; ------------------------------ label
L3692:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:asmchar
asmchar:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+16]	; c 16  
	mov D13,[asmptr]
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[asmptr]
; ------------------------------ label
L3693:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:initasmdest
initasmdest:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ move
	mov A0,4096
	mov [asmalloc],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[asmalloc]
	call pcm_alloc
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-8]	; T1  
	mov [asmptr],D0
; ------------------------------ move
	mov D0,[asmptr]
	mov [asmstart],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[asmalloc]
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ indexref
	mov D0,[asmstart]
	mov D1,[Dframe-16]	; T2  
	lea D0, [D0+D1]
	mov [asmend],D0
; ------------------------------ label
L3694:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:expandasmdest
expandasmdest:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ mul
	mov A0,[asmalloc]
	mov A1,2
	mul A1
	mov [Dframe-4],A0	; newalloc -4  
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[asmptr]
	mov D1,[asmstart]
	sub D0,D1
	mov [Dframe-32],D0	; T2  
; ------------------------------ truncate
	mov D0,[Dframe-32]	; T2  
	mov A0,A0
	mov [Dframe-24],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [Dframe-8],A0	; usedbytes -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; usedbytes -8  
	cmp A0,[asmalloc]
	jle L3696
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK817
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3696:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4]	; newalloc -4  
	call pcm_alloc
	mov [Dframe-40],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T3  
	mov [Dframe-16],D0	; p -16  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; usedbytes -8  
	mov qword[Dframe-64],D0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; p -16  
	mov D11,[asmstart]
	mov D12,[Dframe-64]	; T6  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; p -16  
	mov [asmstart],D0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; usedbytes -8  
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ indexref
	mov D0,[asmstart]
	mov D1,[Dframe-72]	; T7  
	lea D0, [D0+D1]
	mov [asmptr],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4]	; newalloc -4  
	mov [asmalloc],A0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[asmalloc]
	mov qword[Dframe-80],D0	; T8  
; ------------------------------ indexref
	mov D0,[asmstart]
	mov D1,[Dframe-80]	; T8  
	lea D0, [D0+D1]
	mov [asmend],D0
; ------------------------------ label
L3695:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:setcodeseg
setcodeseg:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[currseg]
	cmp A0,67
	jz L3698
; ------------------------------ stmt
; ------------------------------ move
	mov A0,67
	mov [currseg],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK818
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3698:
; ------------------------------ label
L3697:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

;	Proc:setzdataseg
setzdataseg:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[currseg]
	cmp A0,90
	jz L3700
; ------------------------------ stmt
; ------------------------------ move
	mov A0,90
	mov [currseg],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK819
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3700:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; align 16  
	cmp A0,1
	jz L3701
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK820
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; align 16  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK821
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3701:
; ------------------------------ label
L3699:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:setidataseg
setidataseg:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[currseg]
	cmp A0,73
	jz L3703
; ------------------------------ stmt
; ------------------------------ move
	mov A0,73
	mov [currseg],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK822
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3703:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; align 16  
	cmp A0,1
	jz L3704
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK823
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; align 16  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3704:
; ------------------------------ label
L3702:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:genidata
genidata:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 768

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; t -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1024
	call asmbuffercheck
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-104],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T1  
	cmp A0,30
	jnz L3706
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; n -12  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-120],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-120]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-112],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T2  
	cmp A0,19
	jnz L3707
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-128],D0	; T4  
; ------------------------------ index
	lea D0,[ttlength]
	mov D1,[Dframe-128]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-8],A0	; length -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; q -56  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-16],A0	; i -16  
; ------------------------------ jump
	jmp	L3710
; ------------------------------ label
L3711:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-56]	; q -56  
	call genidata
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; q -56  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; q -56  
; ------------------------------ label
L3708:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-16]	; i -16  
; ------------------------------ label
L3710:
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; i -16  
	cmp A0,[Dframe-12]	; n -12  
	jle L3711
; ------------------------------ label
L3709:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; n -12  
	cmp A0,[Dframe-8]	; length -8  
	jge L3712
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-8]	; length -8  
	mov A1,[Dframe-12]	; n -12  
	sub A0,A1
	mov [Dframe-136],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-168],D0	; T9  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-168]	; T9  
	mov A0, [D0+D1*4]
	mov [Dframe-160],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-160]	; T8  
	mov qword[Dframe-152],D0	; T7  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-152]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-144],A0	; T6  
; ------------------------------ mul
	mov A0,[Dframe-136]	; T5  
	mov A1,[Dframe-144]	; T6  
	mul A1
	mov [Dframe-12],A0	; n -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3713
; ------------------------------ label
L3715:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1024
	call asmbuffercheck
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK824
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ subto
	mov A0,[Dframe-12]	; n -12  
	mov A1,8
	sub A0,A1
	mov [Dframe-12],A0	; n -12  
; ------------------------------ label
L3713:
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; n -12  
	cmp A0,8
	jge L3715
; ------------------------------ label
L3714:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-12]	; n -12  
	mov [Dframe-92],A0	; av_2 -92  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3716
; ------------------------------ label
L3718:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK825
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3716:
; ------------------------------ postdecrx
	mov A0,[Dframe-92]	; av_2 -92  
	dec dword[Dframe-92]	; av_2 -92  
	mov dword[Dframe-176],A0	; T10  
; ------------------------------ jumptrue
	mov A0,[Dframe-176]	; T10  
	and A0,A0
	jnz L3718
; ------------------------------ label
L3717:
; ------------------------------ label
L3712:
; ------------------------------ jump
	jmp	L3719
; ------------------------------ label
L3707:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-192],D0	; T12  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-192]	; T12  
	mov A0, [D0+D1*4]
	mov [Dframe-184],A0	; T11  
; ------------------------------ setcc
	mov A0,[Dframe-184]	; T11  
	cmp A0,21
	setz B0
	movzx A0,B0
	mov [Dframe-200],A0	; T13  
; ------------------------------ move
	mov A0,[Dframe-200]	; T13  
	mov [Dframe-44],A0	; isunion -44  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-216],D0	; T15  
; ------------------------------ index
	lea D0,[ttnamedef]
	mov D1,[Dframe-216]	; T15  
	mov D0, [D0+D1*8]
	mov [Dframe-208],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-208]	; T14  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; d -80  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-224],D0	; T16  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-224]	; T16  
	mov A0, [D0+D1*4]
	mov [Dframe-36],A0	; size -36  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-32],A0	; offset2 -32  
; ------------------------------ move
	mov A0,[Dframe-32]	; offset2 -32  
	mov [Dframe-28],A0	; offset1 -28  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; q -56  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-16],A0	; i -16  
; ------------------------------ jump
	jmp	L3722
; ------------------------------ label
L3723:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-56]	; q -56  
	call genidata
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; q -56  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-248],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-248]	; T19  
	mov qword[Dframe-240],D0	; T18  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-240]	; T18  
	mov A0, [D0+D1*4]
	mov [Dframe-232],A0	; T17  
; ------------------------------ addto
	mov A0,[Dframe-28]	; offset1 -28  
	mov A1,[Dframe-232]	; T17  
	add A0,A1
	mov [Dframe-28],A0	; offset1 -28  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; d -80  
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-80]	; d -80  
	and D0,D0
	jz L3724
; ------------------------------ jumptrue
	mov A0,[Dframe-44]	; isunion -44  
	and A0,A0
	jnz L3724
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; offset2 -32  
; ------------------------------ jump
	jmp	L3725
; ------------------------------ label
L3724:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-36]	; size -36  
	mov [Dframe-32],A0	; offset2 -32  
; ------------------------------ label
L3725:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-28]	; offset1 -28  
	cmp A0,[Dframe-32]	; offset2 -32  
	jz L3726
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-32]	; offset2 -32  
	mov A1,[Dframe-28]	; offset1 -28  
	sub A0,A1
	mov [Dframe-40],A0	; padding -40  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK826
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-20],A0	; j -20  
; ------------------------------ jump
	jmp	L3729
; ------------------------------ label
L3730:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,48
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; j -20  
	cmp A0,[Dframe-40]	; padding -40  
	jge L3731
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3731:
; ------------------------------ label
L3727:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-20]	; j -20  
; ------------------------------ label
L3729:
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; j -20  
	cmp A0,[Dframe-40]	; padding -40  
	jle L3730
; ------------------------------ label
L3728:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-32]	; offset2 -32  
	mov [Dframe-28],A0	; offset1 -28  
; ------------------------------ label
L3726:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-56]	; q -56  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; q -56  
; ------------------------------ label
L3720:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-16]	; i -16  
; ------------------------------ label
L3722:
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; i -16  
	cmp A0,[Dframe-12]	; n -12  
	jle L3723
; ------------------------------ label
L3721:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; offset2 -32  
	cmp A0,[Dframe-36]	; size -36  
	jge L3732
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-36]	; size -36  
	mov A1,[Dframe-32]	; offset2 -32  
	sub A0,A1
	mov [Dframe-12],A0	; n -12  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3733
; ------------------------------ label
L3735:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK827
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ subto
	mov A0,[Dframe-12]	; n -12  
	mov A1,8
	sub A0,A1
	mov [Dframe-12],A0	; n -12  
; ------------------------------ label
L3733:
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; n -12  
	cmp A0,8
	jge L3735
; ------------------------------ label
L3734:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-12]	; n -12  
	mov [Dframe-96],A0	; av_3 -96  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3736
; ------------------------------ label
L3738:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK828
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3736:
; ------------------------------ postdecrx
	mov A0,[Dframe-96]	; av_3 -96  
	dec dword[Dframe-96]	; av_3 -96  
	mov dword[Dframe-256],A0	; T20  
; ------------------------------ jumptrue
	mov A0,[Dframe-256]	; T20  
	and A0,A0
	jnz L3738
; ------------------------------ label
L3737:
; ------------------------------ label
L3732:
; ------------------------------ label
L3719:
; ------------------------------ stmt
; ------------------------------ return
	jmp L3705
; ------------------------------ jump
	jmp	L3739
; ------------------------------ label
L3706:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-264],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-264]	; T21  
	cmp A0,1
	jnz L3740
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,2
	jl L3741
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,13
	jg L3741
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-280],D0	; T23  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-280]	; T23  
	mov A0, [D0+D1*4]
	mov [Dframe-272],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-272]	; T22  
	cmp A0,1
	jnz L3742
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK829
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3743
; ------------------------------ label
L3742:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-296],D0	; T25  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-296]	; T25  
	mov A0, [D0+D1*4]
	mov [Dframe-288],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T24  
	cmp A0,2
	jnz L3744
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK830
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3745
; ------------------------------ label
L3744:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-312],D0	; T27  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-312]	; T27  
	mov A0, [D0+D1*4]
	mov [Dframe-304],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-304]	; T26  
	cmp A0,4
	jnz L3746
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK831
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3747
; ------------------------------ label
L3746:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-328],D0	; T29  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-328]	; T29  
	mov A0, [D0+D1*4]
	mov [Dframe-320],A0	; T28  
; ------------------------------ jumpcc
	mov A0,[Dframe-320]	; T28  
	cmp A0,8
	jnz L3748
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK832
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3748:
; ------------------------------ label
L3747:
; ------------------------------ label
L3745:
; ------------------------------ label
L3743:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,11
	jnz L3749
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-344],D0	; T31  
; ------------------------------ fnarrow
	cvtsd2ss XMM0, [Dframe-344]
	movd [Dframe-336],XMM0	; T31  ,T30  
; ------------------------------ move
	mov A0,[Dframe-336]	; T30  
	mov [Dframe-88],A0	; sx -88  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; sx -88  
	mov qword[Dframe-352],D0	; T32  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-352]	; T32  
	call asmint
	add Dstack, 32
; ------------------------------ jump
	jmp	L3750
; ------------------------------ label
L3749:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-360],D0	; T33  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-360]	; T33  
	call asmint
	add Dstack, 32
; ------------------------------ label
L3750:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ jump
	jmp	L3751
; ------------------------------ label
L3741:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-376],D0	; T35  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-376]	; T35  
	mov A0, [D0+D1*4]
	mov [Dframe-368],A0	; T34  
; ------------------------------ jumpcc
	mov A0,[Dframe-368]	; T34  
	cmp A0,16
	jnz L3752
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-384],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-384]	; T36  
	cmp A0,100
	jle L3753
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-392],A0	; T37  
; ------------------------------ add
	mov A0,[Dframe-392]	; T37  
	mov A1,100
	add A0,A1
	mov [Dframe-400],A0	; T38  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-400]	; T38  
	call asmbuffercheck
	add Dstack, 32
; ------------------------------ label
L3753:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-408],D0	; T39  
; ------------------------------ jumpcc
	mov D0,[Dframe-408]	; T39  
	cmp D0,0
	jnz L3754
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK833
	call asmstrln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3755
; ------------------------------ label
L3754:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,59
	mov B0, [D0+D1]
	mov [Dframe-416],B0	; T40  
; ------------------------------ widen
	movzx A0,byte [Dframe-416]	; T40  
	mov dword[Dframe-424],A0	; T41  
; ------------------------------ jumpfalse
	mov A0,[Dframe-424]	; T41  
	and A0,A0
	jz L3756
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-432],D0	; T42  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-440],A0	; T43  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-432]	; T42  
	mov A11,[Dframe-440]	; T43  
	call genstrconst
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ jump
	jmp	L3757
; ------------------------------ label
L3756:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK834
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-456],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-464],A0	; T46  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-456]	; T45  
	mov A11,[Dframe-464]	; T46  
	call nextstringindex
	mov [Dframe-472],A0	; T47  
	add Dstack, 32
; ------------------------------ widen
	movsx D0,dword[Dframe-472]	; T47  
	mov qword[Dframe-448],D0	; T44  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-448]	; T44  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3757:
; ------------------------------ label
L3755:
; ------------------------------ jump
	jmp	L3758
; ------------------------------ label
L3752:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4]	; t -4  
	mov A11,1
	call Strmode
	mov [Dframe-480],D0	; T48  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK835
	mov D11,[Dframe-480]	; T48  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK836
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3758:
; ------------------------------ label
L3751:
; ------------------------------ stmt
; ------------------------------ return
	jmp L3705
; ------------------------------ jump
	jmp	L3759
; ------------------------------ label
L3740:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-488],A0	; T49  
; ------------------------------ jumpcc
	mov A0,[Dframe-488]	; T49  
	cmp A0,4
	jz L3761
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-496],A0	; T50  
; ------------------------------ jumpcc
	mov A0,[Dframe-496]	; T50  
	cmp A0,6
	jnz L3760
; ------------------------------ label
L3761:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; d -80  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-504],B0	; T51  
; ------------------------------ widen
	movzx A0,byte [Dframe-504]	; T51  
	mov dword[Dframe-512],A0	; T52  
; ------------------------------ jumpcc
	mov A0,[Dframe-512]	; T52  
	cmp A0,7
	jz L3763
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-520],B0	; T53  
; ------------------------------ widen
	movzx A0,byte [Dframe-520]	; T53  
	mov dword[Dframe-528],A0	; T54  
; ------------------------------ jumpcc
	mov A0,[Dframe-528]	; T54  
	cmp A0,6
	jnz L3762
; ------------------------------ label
L3763:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-560],A0	; T58  
; ------------------------------ widen
	movsx D0,dword[Dframe-560]	; T58  
	mov qword[Dframe-552],D0	; T57  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-552]	; T57  
	mov A0, [D0+D1*4]
	mov [Dframe-544],A0	; T56  
; ------------------------------ jumpcc
	mov A0,[Dframe-544]	; T56  
	cmp A0,8
	jnz L3764
; ------------------------------ move
	mov D0,KK837
	mov [Dframe-536],D0	; T55  
; ------------------------------ jump
	jmp	L3765
; ------------------------------ label
L3764:
; ------------------------------ move
	mov D0,KK838
	mov [Dframe-536],D0	; T55  
; ------------------------------ label
L3765:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-536]	; T55  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-568],B0	; T59  
; ------------------------------ widen
	movzx A0,byte [Dframe-568]	; T59  
	mov dword[Dframe-576],A0	; T60  
; ------------------------------ jumpcc
	mov A0,[Dframe-576]	; T60  
	cmp A0,1
	jnz L3766
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-584],D0	; T61  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-584]	; T61  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,46
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3766:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-592],D0	; T62  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-592]	; T62  
	call asmstrln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3767
; ------------------------------ label
L3762:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK839
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3767:
; ------------------------------ stmt
; ------------------------------ return
	jmp L3705
; ------------------------------ jump
	jmp	L3768
; ------------------------------ label
L3760:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-600],A0	; T63  
; ------------------------------ jumpcc
	mov A0,[Dframe-600]	; T63  
	cmp A0,41
	jnz L3769
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; a -64  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; b -72  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; a -64  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-608],A0	; T64  
; ------------------------------ jumpcc
	mov A0,[Dframe-608]	; T64  
	cmp A0,4
	jnz L3770
; ------------------------------ index
	mov D0,[Dframe-72]	; b -72  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-616],A0	; T65  
; ------------------------------ jumpcc
	mov A0,[Dframe-616]	; T65  
	cmp A0,1
	jnz L3770
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; a -64  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; d -80  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-624],B0	; T66  
; ------------------------------ widen
	movzx A0,byte [Dframe-624]	; T66  
	mov dword[Dframe-632],A0	; T67  
; ------------------------------ jumpcc
	mov A0,[Dframe-632]	; T67  
	cmp A0,7
	jnz L3771
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK840
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-640],B0	; T68  
; ------------------------------ widen
	movzx A0,byte [Dframe-640]	; T68  
	mov dword[Dframe-648],A0	; T69  
; ------------------------------ jumpcc
	mov A0,[Dframe-648]	; T69  
	cmp A0,1
	jnz L3772
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-656],D0	; T70  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-656]	; T70  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,46
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3772:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-664],D0	; T71  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-664]	; T71  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,43
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-72]	; b -72  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-672],D0	; T72  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-672]	; T72  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ jump
	jmp	L3773
; ------------------------------ label
L3771:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK841
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3773:
; ------------------------------ jump
	jmp	L3774
; ------------------------------ label
L3770:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; a -64  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-680],A0	; T73  
; ------------------------------ jumpcc
	mov A0,[Dframe-680]	; T73  
	cmp A0,1
	jnz L3775
; ------------------------------ index
	mov D0,[Dframe-72]	; b -72  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-688],A0	; T74  
; ------------------------------ jumpcc
	mov A0,[Dframe-688]	; T74  
	cmp A0,1
	jnz L3775
; ------------------------------ index
	mov D0,[Dframe-64]	; a -64  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-712],A0	; T77  
; ------------------------------ widen
	movsx D0,dword[Dframe-712]	; T77  
	mov qword[Dframe-704],D0	; T76  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-704]	; T76  
	mov A0, [D0+D1*4]
	mov [Dframe-696],A0	; T75  
; ------------------------------ jumpcc
	mov A0,[Dframe-696]	; T75  
	cmp A0,16
	jnz L3775
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK842
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-64]	; a -64  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-720],D0	; T78  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-720]	; T78  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,43
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-72]	; b -72  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-728],D0	; T79  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-728]	; T79  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ jump
	jmp	L3776
; ------------------------------ label
L3775:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,0
	mov D11,[Dframe+16]	; p 16  
	mov A12,0
	mov D13,KK843
	call printunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK844
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3776:
; ------------------------------ label
L3774:
; ------------------------------ stmt
; ------------------------------ return
	jmp L3705
; ------------------------------ label
L3769:
; ------------------------------ label
L3768:
; ------------------------------ label
L3759:
; ------------------------------ label
L3739:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-752],A0	; T82  
; ------------------------------ widen
	movsx D0,dword[Dframe-752]	; T82  
	mov qword[Dframe-744],D0	; T81  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-744]	; T81  
	mov D0, [D0+D1*8]
	mov [Dframe-736],D0	; T80  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-760],A0	; T83  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK845
	mov D11,[Dframe-736]	; T80  
	mov A12,[Dframe-760]	; T83  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,0
	mov D11,[Dframe+16]	; p 16  
	mov A12,0
	mov D13,KK846
	call printunit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK847
	mov D11,[Dframe+16]	; p 16  
	call gerror
	add Dstack, 32
; ------------------------------ label
L3705:
; ------------------------------ hardret
	add Dstack, 768
	pop Dframe
	ret
;	End

;	Proc:dostaticvar
dostaticvar:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1024
	call asmbuffercheck
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jnz L3778
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,119
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; T4  
	and A0,A0
	jz L3779
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK848
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; T5  
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3779:
; ------------------------------ stmt
; ------------------------------ return
	jmp L3777
; ------------------------------ jump
	jmp	L3780
; ------------------------------ label
L3778:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T6  
	mov dword[Dframe-64],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T7  
	cmp A0,4
	jnz L3781
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK849
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-72]	; T8  
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3781:
; ------------------------------ label
L3780:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-80],W0	; T9  
; ------------------------------ widen
	movsx A0,word [Dframe-80]	; T9  
	mov dword[Dframe-88],A0	; T10  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-88]	; T10  
	call getalignment
	mov [Dframe-96],A0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-96]	; T11  
	mov [Dframe-4],A0	; align -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-104],D0	; T12  
; ------------------------------ jumpfalse
	mov D0,[Dframe-104]	; T12  
	and D0,D0
	jz L3782
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; align -4  
	call setidataseg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-112],D0	; T13  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-112]	; T13  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,58
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-120],D0	; T14  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-120]	; T14  
	call genidata
	add Dstack, 32
; ------------------------------ jump
	jmp	L3783
; ------------------------------ label
L3782:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; align -4  
	call setzdataseg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-128],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-128]	; T15  
	mov D11,KK850
	call strcmp
	mov [Dframe-136],A0	; T16  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-136]	; T16  
	cmp A0,0
	jnz L3784
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK851
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3785
; ------------------------------ label
L3784:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-144],D0	; T17  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-144]	; T17  
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3785:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK852
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-176],W0	; T21  
; ------------------------------ widen
	movsx A0,word [Dframe-176]	; T21  
	mov dword[Dframe-184],A0	; T22  
; ------------------------------ widen
	movsx D0,dword[Dframe-184]	; T22  
	mov qword[Dframe-168],D0	; T20  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-168]	; T20  
	mov A0, [D0+D1*4]
	mov [Dframe-160],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-160]	; T19  
	mov qword[Dframe-152],D0	; T18  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-152]	; T18  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3783:
; ------------------------------ label
L3777:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

;	Proc:dostaticvar_fn
dostaticvar_fn:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jnz L3787
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; d 16  
	call dostaticvar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L3786
; ------------------------------ label
L3787:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-32],W0	; T3  
; ------------------------------ widen
	movsx A0,word [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-40]	; T4  
	call getalignment
	mov [Dframe-48],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T5  
	mov [Dframe-4],A0	; align -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ jumpfalse
	mov D0,[Dframe-56]	; T6  
	and D0,D0
	jz L3788
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; align -4  
	call setidataseg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T7  
	mov dword[Dframe-72],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T8  
	cmp A0,8
	jnz L3789
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,36
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3789:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-88]	; T10  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-80]	; T9  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,46
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-96]	; T11  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,58
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-104],D0	; T12  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-104]	; T12  
	call genidata
	add Dstack, 32
; ------------------------------ jump
	jmp	L3790
; ------------------------------ label
L3788:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; align -4  
	call setzdataseg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-120],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe-120]	; T14  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-112],D0	; T13  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-112]	; T13  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,46
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-128],D0	; T15  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-128]	; T15  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK853
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-160],W0	; T19  
; ------------------------------ widen
	movsx A0,word [Dframe-160]	; T19  
	mov dword[Dframe-168],A0	; T20  
; ------------------------------ widen
	movsx D0,dword[Dframe-168]	; T20  
	mov qword[Dframe-152],D0	; T18  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-152]	; T18  
	mov A0, [D0+D1*4]
	mov [Dframe-144],A0	; T17  
; ------------------------------ widen
	movsx D0,dword[Dframe-144]	; T17  
	mov qword[Dframe-136],D0	; T16  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-136]	; T16  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3790:
; ------------------------------ label
L3786:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:addvarcomment
addvarcomment:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[opndcomment1]
	mov D1,0
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ truncate
	mov A0,[Dframe-40]	; T4  
	and D0,255
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-16],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T1  
	cmp A0,0
	jnz L3792
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[opndcomment1]
	mov [Dframe-8],D0	; s -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[opndcomment2]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-48]	; T5 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3793
; ------------------------------ label
L3792:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[opndcomment2]
	mov [Dframe-8],D0	; s -8  
; ------------------------------ label
L3793:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,112
	mov B0, [D0+D1]
	mov [Dframe-56],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T6  
	mov dword[Dframe-64],A0	; T7  
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T9  
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; wasind 24  
	and A0,A0
	jz L3794
; ------------------------------ move
	mov A0,42
	mov [Dframe-88],A0	; T10  
; ------------------------------ jump
	jmp	L3795
; ------------------------------ label
L3794:
; ------------------------------ move
	mov A0,32
	mov [Dframe-88],A0	; T10  
; ------------------------------ label
L3795:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	mov A13,[Dframe-88]	; T10  
	push D13
	mov A13,[Dframe-80]	; T9  
	push D13
	sub Dstack,32
	mov D10,[Dframe-8]	; s -8  
	mov D11,KK854
	mov A12,[Dframe-64]	; T7  
	mov D13,[Dframe-72]	; T8  
	call sprintf
	add Dstack, 48
; ------------------------------ label
L3791:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:addtempcomment
addtempcomment:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[opndcomment1]
	mov D1,0
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ truncate
	mov A0,[Dframe-40]	; T4  
	and D0,255
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-16],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T1  
	cmp A0,0
	jnz L3797
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[opndcomment1]
	mov [Dframe-8],D0	; s -8  
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[opndcomment2]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-48]	; T5 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3798
; ------------------------------ label
L3797:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[opndcomment2]
	mov [Dframe-8],D0	; s -8  
; ------------------------------ label
L3798:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; wasind 24  
	and A0,A0
	jz L3799
; ------------------------------ move
	mov A0,42
	mov [Dframe-56],A0	; T6  
; ------------------------------ jump
	jmp	L3800
; ------------------------------ label
L3799:
; ------------------------------ move
	mov A0,32
	mov [Dframe-56],A0	; T6  
; ------------------------------ label
L3800:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; s -8  
	mov D11,KK855
	mov A12,[Dframe+16]	; temp 16  
	mov A13,[Dframe-56]	; T6  
	call sprintf
	add Dstack, 32
; ------------------------------ label
L3796:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:asmreg
asmreg:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+24]	; size 24  
	mov A1,1
	sub A0,A1
	mov [Dframe-40],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T5  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ index
	lea D0,[regnameprefix]
	mov D1,[Dframe-32]	; T4  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-48],A0	; T6  
; ------------------------------ truncate
	mov A0,[Dframe-48]	; T6  
	and D0,255
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; T1  
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; reg 16  
	cmp A0,11
	jge L3802
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+16]	; reg 16  
	mov A1,1
	sub A0,A1
	mov [Dframe-88],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T11  
	mov qword[Dframe-80],D0	; T10  
; ------------------------------ index
	lea D0,[regname1]
	mov D1,[Dframe-80]	; T10  
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T9  
	mov dword[Dframe-96],A0	; T12  
; ------------------------------ truncate
	mov A0,[Dframe-96]	; T12  
	and D0,255
	mov [Dframe-64],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T8  
	mov dword[Dframe-56],A0	; T7  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-56]	; T7  
	call asmchar
	add Dstack, 32
; ------------------------------ jump
	jmp	L3803
; ------------------------------ label
L3802:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; reg 16  
	cmp A0,16
	jz L3804
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,49
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+16]	; reg 16  
	mov A1,11
	sub A0,A1
	mov [Dframe-136],A0	; T17  
; ------------------------------ add
	mov A0,[Dframe-136]	; T17  
	mov A1,1
	add A0,A1
	mov [Dframe-144],A0	; T18  
; ------------------------------ sub
	mov A0,[Dframe-144]	; T18  
	mov A1,1
	sub A0,A1
	mov [Dframe-152],A0	; T19  
; ------------------------------ widen
	movsx D0,dword[Dframe-152]	; T19  
	mov qword[Dframe-128],D0	; T16  
; ------------------------------ index
	lea D0,[regname1]
	mov D1,[Dframe-128]	; T16  
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T15  
	mov dword[Dframe-160],A0	; T20  
; ------------------------------ truncate
	mov A0,[Dframe-160]	; T20  
	and D0,255
	mov [Dframe-112],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T14  
	mov dword[Dframe-104],A0	; T13  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-104]	; T13  
	call asmchar
	add Dstack, 32
; ------------------------------ jump
	jmp	L3805
; ------------------------------ label
L3804:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK856
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3805:
; ------------------------------ label
L3803:
; ------------------------------ label
L3801:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

;	Proc:asmxreg
asmxreg:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK857
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; reg 16  
	cmp A0,11
	jge L3807
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+16]	; reg 16  
	mov A1,1
	sub A0,A1
	mov [Dframe-40],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T5  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ index
	lea D0,[regname1]
	mov D1,[Dframe-32]	; T4  
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-48],A0	; T6  
; ------------------------------ truncate
	mov A0,[Dframe-48]	; T6  
	and D0,255
	mov [Dframe-16],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T2  
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; T1  
	call asmchar
	add Dstack, 32
; ------------------------------ jump
	jmp	L3808
; ------------------------------ label
L3807:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,49
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+16]	; reg 16  
	mov A1,11
	sub A0,A1
	mov [Dframe-88],A0	; T11  
; ------------------------------ add
	mov A0,[Dframe-88]	; T11  
	mov A1,1
	add A0,A1
	mov [Dframe-96],A0	; T12  
; ------------------------------ sub
	mov A0,[Dframe-96]	; T12  
	mov A1,1
	sub A0,A1
	mov [Dframe-104],A0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T13  
	mov qword[Dframe-80],D0	; T10  
; ------------------------------ index
	lea D0,[regname1]
	mov D1,[Dframe-80]	; T10  
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T9  
	mov dword[Dframe-112],A0	; T14  
; ------------------------------ truncate
	mov A0,[Dframe-112]	; T14  
	and D0,255
	mov [Dframe-64],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T8  
	mov dword[Dframe-56],A0	; T7  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-56]	; T7  
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3808:
; ------------------------------ label
L3806:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:asmxmove
asmxmove:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,4
	jnz L3810
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK858
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3811
; ------------------------------ label
L3810:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK859
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3811:
; ------------------------------ label
L3809:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:asmexch
asmexch:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK860
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+16]	; reg1 16  
	mov A11,[Dframe+32]	; size 32  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; reg2 24  
	mov A11,[Dframe+32]	; size 32  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L3812:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:asmbuffercheck
asmbuffercheck:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[asmend]
	mov D1,[asmptr]
	sub D0,D1
	mov [Dframe-8],D0	; T1  
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; T1  
	cmp D0,[Dframe-16]	; T2  
	jge L3814
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call expandasmdest
	add Dstack, 32
; ------------------------------ label
L3814:
; ------------------------------ label
L3813:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:genmainprelude
genmainprelude:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call setcodeseg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK861
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK862
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK863
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK864
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK865
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK866
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK867
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK868
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK869
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK870
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK871
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK872
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK873
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK874
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK875
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK876
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK877
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK878
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK879
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK880
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK881
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK882
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK883
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK884
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK885
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK886
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK887
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK888
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK889
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3815:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

;	Proc:roundoffsetdown_size
roundoffsetdown_size:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; size 24  
	cmp A0,1
	jnz L3817
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; a 16  
	jmp L3816
; ------------------------------ jump
	jmp	L3818
; ------------------------------ label
L3817:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; size 24  
	cmp A0,2
	jz L3820
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; size 24  
	cmp A0,4
	jz L3820
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; size 24  
	cmp A0,8
	jnz L3819
; ------------------------------ label
L3820:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe+24]	; size 24  
	mov A1,1
	sub A0,A1
	mov [Dframe-4],A0	; mask -4  
; ------------------------------ jump
	jmp	L3821
; ------------------------------ label
L3819:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,7
	mov [Dframe-4],A0	; mask -4  
; ------------------------------ label
L3821:
; ------------------------------ label
L3818:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3822
; ------------------------------ label
L3824:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe+16]	; a 16  
; ------------------------------ label
L3822:
; ------------------------------ iand
	mov A0,[Dframe+16]	; a 16  
	mov A1,[Dframe-4]	; mask -4  
	and A0,A1
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumptrue
	mov A0,[Dframe-16]	; T1  
	and A0,A0
	jnz L3824
; ------------------------------ label
L3823:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[Dframe+16]	; a 16  
	jmp L3816
; ------------------------------ label
L3816:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:asmopnd
	segment .data
	align 4
asmopnd.maxlen:
	dd 0
	align 4
asmopnd.newmaxlen:
	dd 0
	segment .text
asmopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 688

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T1  
	mov dword[Dframe-40],A0	; T2  
; ------------------------------ switch
	mov A0,[Dframe-40]	; T2  
	sub A0, 1
	cmp A0, 11
	jae L3826
	jmp [A0*8+L3839]
	align 8
; ------------------------------ label
L3839:
; ------------------------------ jumplabel
	dq L3837	; 1
; ------------------------------ jumplabel
	dq L3835	; 2
; ------------------------------ jumplabel
	dq L3834	; 3
; ------------------------------ jumplabel
	dq L3833	; 4
; ------------------------------ jumplabel
	dq L3832	; 5
; ------------------------------ jumplabel
	dq L3828	; 6
; ------------------------------ jumplabel
	dq L3838	; 7
; ------------------------------ jumplabel
	dq L3836	; 8
; ------------------------------ jumplabel
	dq L3831	; 9
; ------------------------------ jumplabel
	dq L3829	; 10
; ------------------------------ jumplabel
	dq L3830	; 11
; ------------------------------ stmt
; ------------------------------ comment
;case 1:
; ------------------------------ label
L3837:
; ------------------------------ stmt
; ------------------------------ comment
;case 7:
; ------------------------------ label
L3838:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [doopndsize]
	mov dword[Dframe-48],A0	; T3  
; ------------------------------ jumpfalse
	mov A0,[Dframe-48]	; T3  
	and A0,A0
	jz L3840
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T4  
	cmp A0,8
	jg L3840
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T7  
; ------------------------------ sub
	mov A0,[Dframe-80]	; T7  
	mov A1,1
	sub A0,A1
	mov [Dframe-88],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T8  
	mov qword[Dframe-72],D0	; T6  
; ------------------------------ index
	lea D0,[sizeprefixes]
	mov D1,[Dframe-72]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-64],D0	; T5  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-64]	; T5  
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3840:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,91
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-96],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T9  
	mov dword[Dframe-104],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T10  
	cmp A0,8
	jz L3842
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-112],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T11  
	mov dword[Dframe-120],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T12  
	cmp A0,9
	jnz L3841
; ------------------------------ label
L3842:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK890
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; offset -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; offset -24  
	cmp A0,0
	jl L3843
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,43
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3843:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; offset -24  
	mov qword[Dframe-128],D0	; T13  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-128]	; T13  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T14  
	mov dword[Dframe-144],A0	; T15  
; ------------------------------ setcc
	mov A0,[Dframe-144]	; T15  
	cmp A0,7
	setz B0
	movzx A0,B0
	mov [Dframe-152],A0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; d -16  
	mov A11,[Dframe-152]	; T16  
	call addvarcomment
	add Dstack, 32
; ------------------------------ jump
	jmp	L3844
; ------------------------------ label
L3841:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-160],B0	; T17  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T17  
	mov dword[Dframe-168],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-168]	; T18  
	cmp A0,1
	jnz L3845
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-176],D0	; T19  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-176]	; T19  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,46
	call asmchar
	add Dstack, 32
; ------------------------------ jump
	jmp	L3846
; ------------------------------ label
L3845:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-184],D0	; T20  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-184]	; T20  
	mov D11,KK891
	call strcmp
	mov [Dframe-192],A0	; T21  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T21  
	cmp A0,0
	jnz L3847
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK892
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L143
; ------------------------------ label
L3847:
; ------------------------------ label
L3846:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-200],D0	; T22  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-200]	; T22  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ label
L142: ;<skipname>
; ------------------------------ stmt
; ------------------------------ label
L143: ;<L109>
; ------------------------------ label
L3844:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,93
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;case 2:
; ------------------------------ label
L3835:
; ------------------------------ stmt
; ------------------------------ comment
;case 8:
; ------------------------------ label
L3836:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [doopndsize]
	mov dword[Dframe-208],A0	; T23  
; ------------------------------ jumpfalse
	mov A0,[Dframe-208]	; T23  
	and A0,A0
	jz L3848
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T24  
	cmp A0,8
	jg L3848
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-240],A0	; T27  
; ------------------------------ sub
	mov A0,[Dframe-240]	; T27  
	mov A1,1
	sub A0,A1
	mov [Dframe-248],A0	; T28  
; ------------------------------ widen
	movsx D0,dword[Dframe-248]	; T28  
	mov qword[Dframe-232],D0	; T26  
; ------------------------------ index
	lea D0,[sizeprefixes]
	mov D1,[Dframe-232]	; T26  
	mov D0, [D0+D1*8]
	mov [Dframe-224],D0	; T25  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-224]	; T25  
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3848:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK893
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-280],A0	; T32  
; ------------------------------ sub
	mov A0,[Dframe-280]	; T32  
	mov A1,1
	sub A0,A1
	mov [Dframe-288],A0	; T33  
; ------------------------------ widen
	movsx D0,dword[Dframe-288]	; T33  
	mov qword[Dframe-272],D0	; T31  
; ------------------------------ index
	lea D0,[tempoffsets]
	mov D1,[Dframe-272]	; T31  
	mov A0, [D0+D1*4]
	mov [Dframe-264],A0	; T30  
; ------------------------------ widen
	movsx D0,dword[Dframe-264]	; T30  
	mov qword[Dframe-256],D0	; T29  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-256]	; T29  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,93
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-296],A0	; T34  
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-304],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-304]	; T35  
	mov dword[Dframe-312],A0	; T36  
; ------------------------------ setcc
	mov A0,[Dframe-312]	; T36  
	cmp A0,8
	setz B0
	movzx A0,B0
	mov [Dframe-320],A0	; T37  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-296]	; T34  
	mov A11,[Dframe-320]	; T37  
	call addtempcomment
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;case 3:
; ------------------------------ label
L3834:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-328],D0	; T38  
; ------------------------------ jumpcc
	mov D0,[Dframe-328]	; T38  
	cmp D0,-2000000000
	jl L3850
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-336],D0	; T39  
; ------------------------------ jumpcc
	mov D0,[Dframe-336]	; T39  
	cmp D0,2000000000
	jle L3849
; ------------------------------ label
L3850:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,91
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK894
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-352],D0	; T41  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	movq XMM0,[Dframe-352]	; T41  
	mov A11,8
	call nextrealindex
	mov [Dframe-360],A0	; T42  
	add Dstack, 32
; ------------------------------ widen
	movsx D0,dword[Dframe-360]	; T42  
	mov qword[Dframe-344],D0	; T40  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-344]	; T40  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,93
	call asmchar
	add Dstack, 32
; ------------------------------ jump
	jmp	L3851
; ------------------------------ label
L3849:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-368],D0	; T43  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-368]	; T43  
	call asmint
	add Dstack, 32
; ------------------------------ label
L3851:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;case 4:
; ------------------------------ label
L3833:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,91
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK895
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-384],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-392],A0	; T46  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	movq XMM0,[Dframe-384]	; T45  
	mov A11,[Dframe-392]	; T46  
	call nextrealindex
	mov [Dframe-400],A0	; T47  
	add Dstack, 32
; ------------------------------ widen
	movsx D0,dword[Dframe-400]	; T47  
	mov qword[Dframe-376],D0	; T44  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-376]	; T44  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,93
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;case 5:
; ------------------------------ label
L3832:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-408],D0	; T48  
; ------------------------------ jumpcc
	mov D0,[Dframe-408]	; T48  
	cmp D0,0
	jnz L3852
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,48
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L3825
; ------------------------------ label
L3852:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK896
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-424],D0	; T50  
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,10
	mov W0, [D0+D1]
	mov [Dframe-432],W0	; T51  
; ------------------------------ widen
	movzx A0,word [Dframe-432]	; T51  
	mov dword[Dframe-440],A0	; T52  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-424]	; T50  
	mov A11,[Dframe-440]	; T52  
	call nextstringindex
	mov [Dframe-448],A0	; T53  
	add Dstack, 32
; ------------------------------ widen
	movsx D0,dword[Dframe-448]	; T53  
	mov qword[Dframe-416],D0	; T49  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-416]	; T49  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L3831:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,76
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-464],A0	; T55  
; ------------------------------ widen
	movsx D0,dword[Dframe-464]	; T55  
	mov qword[Dframe-456],D0	; T54  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-456]	; T54  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;case 11:
; ------------------------------ label
L3830:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; d -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-472],B0	; T56  
; ------------------------------ widen
	movzx A0,byte [Dframe-472]	; T56  
	mov dword[Dframe-480],A0	; T57  
; ------------------------------ jumpcc
	mov A0,[Dframe-480]	; T57  
	cmp A0,8
	jz L3854
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-488],B0	; T58  
; ------------------------------ widen
	movzx A0,byte [Dframe-488]	; T58  
	mov dword[Dframe-496],A0	; T59  
; ------------------------------ jumpcc
	mov A0,[Dframe-496]	; T59  
	cmp A0,9
	jnz L3853
; ------------------------------ label
L3854:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK897
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,88
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; offset -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; offset -24  
	cmp A0,0
	jl L3855
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,43
	call asmchar
	add Dstack, 32
; ------------------------------ label
L3855:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; offset -24  
	mov qword[Dframe-504],D0	; T60  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-504]	; T60  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; d -16  
	mov A11,0
	call addvarcomment
	add Dstack, 32
; ------------------------------ jump
	jmp	L3856
; ------------------------------ label
L3853:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,115
	mov B0, [D0+D1]
	mov [Dframe-512],B0	; T61  
; ------------------------------ widen
	movzx A0,byte [Dframe-512]	; T61  
	mov dword[Dframe-520],A0	; T62  
; ------------------------------ jumpcc
	mov A0,[Dframe-520]	; T62  
	cmp A0,1
	jnz L3857
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-528],D0	; T63  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-528]	; T63  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,46
	call asmchar
	add Dstack, 32
; ------------------------------ jump
	jmp	L3858
; ------------------------------ label
L3857:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-536],D0	; T64  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-536]	; T64  
	mov D11,KK898
	call strcmp
	mov [Dframe-544],A0	; T65  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-544]	; T65  
	cmp A0,0
	jnz L3859
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK899
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L145
; ------------------------------ label
L3859:
; ------------------------------ label
L3858:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-16]	; d -16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-552],D0	; T66  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-552]	; T66  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ label
L144: ;<skipname2>
; ------------------------------ stmt
; ------------------------------ label
L145: ;<L115>
; ------------------------------ label
L3856:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;case 10:
; ------------------------------ label
L3829:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [doopndsize]
	mov dword[Dframe-560],A0	; T67  
; ------------------------------ jumpfalse
	mov A0,[Dframe-560]	; T67  
	and A0,A0
	jz L3860
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-584],A0	; T70  
; ------------------------------ sub
	mov A0,[Dframe-584]	; T70  
	mov A1,1
	sub A0,A1
	mov [Dframe-592],A0	; T71  
; ------------------------------ widen
	movsx D0,dword[Dframe-592]	; T71  
	mov qword[Dframe-576],D0	; T69  
; ------------------------------ index
	lea D0,[sizeprefixes]
	mov D1,[Dframe-576]	; T69  
	mov D0, [D0+D1*8]
	mov [Dframe-568],D0	; T68  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-568]	; T68  
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3860:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,91
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-600],A0	; T72  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-600]	; T72  
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,93
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;case 6:
; ------------------------------ label
L3828:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-608],A0	; T73  
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-616],A0	; T74  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-608]	; T73  
	mov A11,[Dframe-616]	; T74  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L3827
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L3826:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-640],B0	; T77  
; ------------------------------ widen
	movzx A0,byte [Dframe-640]	; T77  
	mov dword[Dframe-648],A0	; T78  
; ------------------------------ widen
	movsx D0,dword[Dframe-648]	; T78  
	mov qword[Dframe-632],D0	; T76  
; ------------------------------ index
	lea D0,[opndnames]
	mov D1,[Dframe-632]	; T76  
	mov D0, [D0+D1*8]
	mov [Dframe-624],D0	; T75  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK900
	mov D11,KK901
	mov D12,[Dframe-624]	; T75  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK902
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK903
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-672],B0	; T81  
; ------------------------------ widen
	movzx A0,byte [Dframe-672]	; T81  
	mov dword[Dframe-680],A0	; T82  
; ------------------------------ widen
	movsx D0,dword[Dframe-680]	; T82  
	mov qword[Dframe-664],D0	; T80  
; ------------------------------ index
	lea D0,[opndnames]
	mov D1,[Dframe-664]	; T80  
	mov D0, [D0+D1*8]
	mov [Dframe-656],D0	; T79  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-656]	; T79  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK904
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3827:
; ------------------------------ label
L3825:
; ------------------------------ hardret
	add Dstack, 688
	pop Dframe
	ret
;	End

;	Proc:pushopnd
pushopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,8
	jnz L3862
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK905
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3863
; ------------------------------ label
L3862:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,4
	jnz L3864
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,14
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK906
	call asmstrln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3865
; ------------------------------ label
L3864:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK907
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3865:
; ------------------------------ label
L3863:
; ------------------------------ label
L3861:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:loadopnd
loadopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-4],A0	; oldfmt -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; oldfmt -4  
	cmp A0,11
	jnz L3867
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK908
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-32]	; T3 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3868
; ------------------------------ label
L3867:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; oldfmt -4  
	cmp A0,12
	jnz L3869
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK909
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov A0,2
	mov D13,[Dframe-40]	; T4 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3870
; ------------------------------ label
L3869:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T5  
	mov dword[Dframe-56],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T6  
	cmp A0,7
	jz L3872
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-64],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T7  
	mov dword[Dframe-72],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T8  
	cmp A0,8
	jnz L3871
; ------------------------------ label
L3872:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,14
	call getlvopnd
	mov [Dframe-80],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T9  
	mov [Dframe+16],D0	; ax 16  
; ------------------------------ label
L3871:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK910
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3870:
; ------------------------------ label
L3868:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-88],A0	; T10  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; reg 24  
	mov A11,[Dframe-88]	; T10  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ move
	mov A0,[Dframe-4]	; oldfmt -4  
	mov D13,[Dframe-96]	; T11 *
	mov byte [D13],B0
; ------------------------------ label
L3866:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:storeopnd
storeopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,8
	jz L3875
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T4  
	cmp A0,7
	jnz L3874
; ------------------------------ label
L3875:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,14
	call getlvopnd
	mov [Dframe-40],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T5  
	mov [Dframe+16],D0	; ax 16  
; ------------------------------ label
L3874:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK911
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; reg 24  
	mov A11,[Dframe-48]	; T6  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ label
L3873:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:floadopnd
floadopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,14
	call getlvopnd
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-8]	; T1  
	mov [Dframe+16],D0	; ax 16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,4
	jnz L3877
; ------------------------------ move
	mov D0,KK912
	mov [Dframe-16],D0	; T2  
; ------------------------------ jump
	jmp	L3878
; ------------------------------ label
L3877:
; ------------------------------ move
	mov D0,KK913
	mov [Dframe-16],D0	; T2  
; ------------------------------ label
L3878:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; reg 24  
	call asmxreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ label
L3876:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:fstoreopnd
fstoreopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,14
	call getlvopnd
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-8]	; T1  
	mov [Dframe+16],D0	; ax 16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,4
	jnz L3880
; ------------------------------ move
	mov D0,KK914
	mov [Dframe-16],D0	; T2  
; ------------------------------ jump
	jmp	L3881
; ------------------------------ label
L3880:
; ------------------------------ move
	mov D0,KK915
	mov [Dframe-16],D0	; T2  
; ------------------------------ label
L3881:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; reg 24  
	call asmxreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ label
L3879:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:gloadopnd
gloadopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,3
	jnz L3883
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,[Dframe+24]	; reg 24  
	call floadopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L3884
; ------------------------------ label
L3883:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,[Dframe+24]	; reg 24  
	call loadopnd
	add Dstack, 32
; ------------------------------ label
L3884:
; ------------------------------ label
L3882:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:gstoreopnd
gstoreopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,3
	jnz L3886
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,[Dframe+24]	; reg 24  
	call fstoreopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L3887
; ------------------------------ label
L3886:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T3  
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T4  
	cmp A0,5
	jnz L3888
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK916
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ jump
	jmp	L3889
; ------------------------------ label
L3888:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,[Dframe+24]	; reg 24  
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L3889:
; ------------------------------ label
L3887:
; ------------------------------ label
L3885:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:loadaddr
loadaddr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-4],A0	; oldfmt -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; oldsize -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; oldfmt -4  
	cmp A0,8
	jnz L3891
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-32],D0	; T3  
; ------------------------------ move
	mov A0,2
	mov D13,[Dframe-32]	; T3 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3892
; ------------------------------ label
L3891:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; oldfmt -4  
	cmp A0,7
	jnz L3893
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-40]	; T4 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3894
; ------------------------------ label
L3893:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; oldfmt -4  
	cmp A0,1
	jnz L3895
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,11
	mov D13,[Dframe-48]	; T5 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3896
; ------------------------------ label
L3895:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; oldfmt -4  
	cmp A0,2
	jnz L3897
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov A0,12
	mov D13,[Dframe-56]	; T6 *
	mov byte [D13],B0
; ------------------------------ jump
	jmp	L3898
; ------------------------------ label
L3897:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-80],B0	; T9  
; ------------------------------ widen
	movzx A0,byte [Dframe-80]	; T9  
	mov dword[Dframe-88],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T10  
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ index
	lea D0,[opndnames]
	mov D1,[Dframe-72]	; T8  
	mov D0, [D0+D1*8]
	mov [Dframe-64],D0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK917
	mov D11,KK918
	mov D12,[Dframe-64]	; T7  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call strtclopnd
	mov [Dframe-96],D0	; T11  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK919
	mov D11,[Dframe-96]	; T11  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK920
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L3898:
; ------------------------------ label
L3896:
; ------------------------------ label
L3894:
; ------------------------------ label
L3892:
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-104],D0	; T12  
; ------------------------------ move
	mov A0,8
	mov D13,[Dframe-104]	; T12 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	mov A11,[Dframe+24]	; reg 24  
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; T13  
; ------------------------------ move
	mov A0,[Dframe-4]	; oldfmt -4  
	mov D13,[Dframe-112]	; T13 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T14  
; ------------------------------ move
	mov A0,[Dframe-8]	; oldsize -8  
	mov D13,[Dframe-120]	; T14 *
	mov dword[D13],A0
; ------------------------------ label
L3890:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:domove
domove:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,5
	jnz L3900
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	call doblockmove
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L3899
; ------------------------------ label
L3900:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L3899:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:doblockmove
doblockmove:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	call docopyblock
	add Dstack, 32
; ------------------------------ label
L3901:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:doincr
doincr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,14
	call getlvopnd
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-8]	; T1  
	mov [Dframe+16],D0	; a 16  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [doopndsize],B0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; isinc 24  
	and A0,A0
	jz L3903
; ------------------------------ move
	mov D0,KK921
	mov [Dframe-16],D0	; T2  
; ------------------------------ jump
	jmp	L3904
; ------------------------------ label
L3903:
; ------------------------------ move
	mov D0,KK922
	mov [Dframe-16],D0	; T2  
; ------------------------------ label
L3904:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ label
L3902:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:getasmcondcode
getasmcondcode:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,35
	jnz L3906
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK923
	jmp L3905
; ------------------------------ jump
	jmp	L3907
; ------------------------------ label
L3906:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,36
	jnz L3908
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK924
	jmp L3905
; ------------------------------ jump
	jmp	L3909
; ------------------------------ label
L3908:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+24]	; fsigned 24  
	and A0,A0
	jz L3910
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,37
	jnz L3911
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK925
	jmp L3905
; ------------------------------ jump
	jmp	L3912
; ------------------------------ label
L3911:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,38
	jnz L3913
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK926
	jmp L3905
; ------------------------------ jump
	jmp	L3914
; ------------------------------ label
L3913:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,40
	jnz L3915
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK927
	jmp L3905
; ------------------------------ jump
	jmp	L3916
; ------------------------------ label
L3915:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,39
	jnz L3917
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK928
	jmp L3905
; ------------------------------ label
L3917:
; ------------------------------ label
L3916:
; ------------------------------ label
L3914:
; ------------------------------ label
L3912:
; ------------------------------ jump
	jmp	L3918
; ------------------------------ label
L3910:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,37
	jnz L3919
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK929
	jmp L3905
; ------------------------------ jump
	jmp	L3920
; ------------------------------ label
L3919:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,38
	jnz L3921
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK930
	jmp L3905
; ------------------------------ jump
	jmp	L3922
; ------------------------------ label
L3921:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,40
	jnz L3923
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK931
	jmp L3905
; ------------------------------ jump
	jmp	L3924
; ------------------------------ label
L3923:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,39
	jnz L3925
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK932
	jmp L3905
; ------------------------------ label
L3925:
; ------------------------------ label
L3924:
; ------------------------------ label
L3922:
; ------------------------------ label
L3920:
; ------------------------------ label
L3918:
; ------------------------------ label
L3909:
; ------------------------------ label
L3907:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,KK933
	jmp L3905
; ------------------------------ label
L3905:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:dojumpcc
dojumpcc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; b 32  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,3
	jnz L3927
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,35
	jz L3927
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,36
	jz L3927
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; b 32  
	mov A11,1
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; b 32  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,4
	jnz L3928
; ------------------------------ move
	mov D0,KK934
	mov [Dframe-32],D0	; T3  
; ------------------------------ jump
	jmp	L3929
; ------------------------------ label
L3928:
; ------------------------------ move
	mov D0,KK935
	mov [Dframe-32],D0	; T3  
; ------------------------------ label
L3929:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T3  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+40]	; c 40  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3930
; ------------------------------ label
L3927:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; b 32  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK936
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; b 32  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-48]	; T5  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+40]	; c 40  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ label
L3930:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK937
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ setcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,1
	setz B0
	movzx A0,B0
	mov [Dframe-56],A0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; cond 16  
	mov A11,[Dframe-56]	; T6  
	call getasmcondcode
	mov [Dframe-64],D0	; T7  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-64]	; T7  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,32
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ label
L3926:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:docallproc
docallproc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 512

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-8],A0	; argbytes -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[ncallparams]
	cmp A0,4
	jle L3932
; ------------------------------ iand
	mov A0,[ncallparams]
	mov A1,1
	and A0,A1
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe-16]	; T1  
	and A0,A0
	jz L3932
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK938
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,8
	mov [Dframe-8],A0	; argbytes -8  
; ------------------------------ label
L3932:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[ncallparams]
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L3935
; ------------------------------ label
L3936:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-24],W0	; T2  
; ------------------------------ widen
	movzx A0,word [Dframe-24]	; T2  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; T3  
	and A0,A0
	jz L3937
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-64],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T7  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-56]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-48],D0	; T5  
; ------------------------------ index
	mov D0,[Dframe-48]	; T5  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,4
	jnz L3937
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-96],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T11  
	mov qword[Dframe-88],D0	; T10  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-88]	; T10  
	mov D0, [D0+D1*8]
	mov [Dframe-80],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-80]	; T9  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T8  
	mov dword[Dframe-104],A0	; T12  
; ------------------------------ jumpcc
	mov A0,[Dframe-104]	; T12  
	cmp A0,3
	jnz L3937
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-128],A0	; T15  
; ------------------------------ widen
	movsx D0,dword[Dframe-128]	; T15  
	mov qword[Dframe-120],D0	; T14  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-120]	; T14  
	mov D0, [D0+D1*8]
	mov [Dframe-112],D0	; T13  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-112]	; T13  
	call pushfloatparam
	add Dstack, 32
; ------------------------------ jump
	jmp	L3938
; ------------------------------ label
L3937:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-152],A0	; T18  
; ------------------------------ widen
	movsx D0,dword[Dframe-152]	; T18  
	mov qword[Dframe-144],D0	; T17  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-144]	; T17  
	mov D0, [D0+D1*8]
	mov [Dframe-136],D0	; T16  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-136]	; T16  
	call pushopnd
	add Dstack, 32
; ------------------------------ label
L3938:
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-8]	; argbytes -8  
	mov A1,8
	add A0,A1
	mov [Dframe-8],A0	; argbytes -8  
; ------------------------------ label
L3933:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-4]	; i -4  
; ------------------------------ label
L3935:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,5
	jge L3936
; ------------------------------ label
L3934:
; ------------------------------ stmt
; ------------------------------ addto
	mov A0,[Dframe-8]	; argbytes -8  
	mov A1,32
	add A0,A1
	mov [Dframe-8],A0	; argbytes -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK939
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L3941
; ------------------------------ label
L3942:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[ncallparams]
	jg L3943
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-184],A0	; T22  
; ------------------------------ widen
	movsx D0,dword[Dframe-184]	; T22  
	mov qword[Dframe-176],D0	; T21  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-176]	; T21  
	mov D0, [D0+D1*8]
	mov [Dframe-168],D0	; T20  
; ------------------------------ index
	mov D0,[Dframe-168]	; T20  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-160],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T19  
	mov dword[Dframe-192],A0	; T23  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T23  
	cmp A0,3
	jnz L3944
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-200],W0	; T24  
; ------------------------------ widen
	movzx A0,word [Dframe-200]	; T24  
	mov dword[Dframe-208],A0	; T25  
; ------------------------------ jumpfalse
	mov A0,[Dframe-208]	; T25  
	and A0,A0
	jz L3945
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-240],A0	; T29  
; ------------------------------ widen
	movsx D0,dword[Dframe-240]	; T29  
	mov qword[Dframe-232],D0	; T28  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-232]	; T28  
	mov D0, [D0+D1*8]
	mov [Dframe-224],D0	; T27  
; ------------------------------ index
	mov D0,[Dframe-224]	; T27  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-216],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-216]	; T26  
	cmp A0,4
	jnz L3946
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-264],A0	; T32  
; ------------------------------ widen
	movsx D0,dword[Dframe-264]	; T32  
	mov qword[Dframe-256],D0	; T31  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-256]	; T31  
	mov D0, [D0+D1*8]
	mov [Dframe-248],D0	; T30  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-272],A0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-248]	; T30  
	mov A11,[Dframe-272]	; T33  
	call loadfloatparam
	add Dstack, 32
; ------------------------------ jump
	jmp	L3947
; ------------------------------ label
L3946:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-296],A0	; T36  
; ------------------------------ widen
	movsx D0,dword[Dframe-296]	; T36  
	mov qword[Dframe-288],D0	; T35  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-288]	; T35  
	mov D0, [D0+D1*8]
	mov [Dframe-280],D0	; T34  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-304],A0	; T37  
; ------------------------------ add
	mov A0,1
	mov A1,[Dframe-304]	; T37  
	add A0,A1
	mov [Dframe-312],A0	; T38  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-280]	; T34  
	mov A11,[Dframe-312]	; T38  
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-336],A0	; T41  
; ------------------------------ widen
	movsx D0,dword[Dframe-336]	; T41  
	mov qword[Dframe-328],D0	; T40  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-328]	; T40  
	mov D0, [D0+D1*8]
	mov [Dframe-320],D0	; T39  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-344],A0	; T42  
; ------------------------------ add
	mov A0,11
	mov A1,[Dframe-344]	; T42  
	add A0,A1
	mov [Dframe-352],A0	; T43  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-320]	; T39  
	mov A11,[Dframe-352]	; T43  
	call loadopnd
	add Dstack, 32
; ------------------------------ label
L3947:
; ------------------------------ jump
	jmp	L3948
; ------------------------------ label
L3945:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-376],A0	; T46  
; ------------------------------ widen
	movsx D0,dword[Dframe-376]	; T46  
	mov qword[Dframe-368],D0	; T45  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-368]	; T45  
	mov D0, [D0+D1*8]
	mov [Dframe-360],D0	; T44  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-384],A0	; T47  
; ------------------------------ add
	mov A0,1
	mov A1,[Dframe-384]	; T47  
	add A0,A1
	mov [Dframe-392],A0	; T48  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-360]	; T44  
	mov A11,[Dframe-392]	; T48  
	call floadopnd
	add Dstack, 32
; ------------------------------ label
L3948:
; ------------------------------ jump
	jmp	L3949
; ------------------------------ label
L3944:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-424],A0	; T52  
; ------------------------------ widen
	movsx D0,dword[Dframe-424]	; T52  
	mov qword[Dframe-416],D0	; T51  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-416]	; T51  
	mov D0, [D0+D1*8]
	mov [Dframe-408],D0	; T50  
; ------------------------------ index
	mov D0,[Dframe-408]	; T50  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-400],B0	; T49  
; ------------------------------ widen
	movzx A0,byte [Dframe-400]	; T49  
	mov dword[Dframe-432],A0	; T53  
; ------------------------------ jumpcc
	mov A0,[Dframe-432]	; T53  
	cmp A0,5
	jnz L3950
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK940
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ jump
	jmp	L3951
; ------------------------------ label
L3950:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-456],A0	; T56  
; ------------------------------ widen
	movsx D0,dword[Dframe-456]	; T56  
	mov qword[Dframe-448],D0	; T55  
; ------------------------------ index
	lea D0,[paramlist]
	mov D1,[Dframe-448]	; T55  
	mov D0, [D0+D1*8]
	mov [Dframe-440],D0	; T54  
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-464],A0	; T57  
; ------------------------------ add
	mov A0,11
	mov A1,[Dframe-464]	; T57  
	add A0,A1
	mov [Dframe-472],A0	; T58  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-440]	; T54  
	mov A11,[Dframe-472]	; T58  
	call loadopnd
	add Dstack, 32
; ------------------------------ label
L3951:
; ------------------------------ label
L3949:
; ------------------------------ label
L3943:
; ------------------------------ label
L3939:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L3941:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,4
	jle L3942
; ------------------------------ label
L3940:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,60
	mov B0, [D0+D1]
	mov [Dframe-480],B0	; T59  
; ------------------------------ widen
	movzx A0,byte [Dframe-480]	; T59  
	mov dword[Dframe-488],A0	; T60  
; ------------------------------ jumpcc
	mov A0,[Dframe-488]	; T60  
	cmp A0,36
	jnz L3952
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK941
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3953
; ------------------------------ label
L3952:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-496],B0	; T61  
; ------------------------------ widen
	movzx A0,byte [Dframe-496]	; T61  
	mov dword[Dframe-504],A0	; T62  
; ------------------------------ jumpcc
	mov A0,[Dframe-504]	; T62  
	cmp A0,5
	jnz L3954
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov A11,10
	call loadaddr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK942
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; b 32  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3955
; ------------------------------ label
L3954:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK943
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; b 32  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov A11,1
	call gstoreopnd
	add Dstack, 32
; ------------------------------ label
L3955:
; ------------------------------ label
L3953:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK944
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-8]	; argbytes -8  
	mov qword[Dframe-512],D0	; T63  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-512]	; T63  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [ncallparams],A0
; ------------------------------ label
L3931:
; ------------------------------ hardret
	add Dstack, 512
	pop Dframe
	ret
;	End

;	Proc:doadd
doadd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jz L3957
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK945
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L3958
; ------------------------------ label
L3957:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov D12,[Dframe+32]	; c 32  
	mov A13,40
	call dofadd
	add Dstack, 32
; ------------------------------ label
L3958:
; ------------------------------ label
L3956:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dosub
dosub:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jz L3960
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK946
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L3961
; ------------------------------ label
L3960:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov D12,[Dframe+32]	; c 32  
	mov A13,41
	call dofadd
	add Dstack, 32
; ------------------------------ label
L3961:
; ------------------------------ label
L3959:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dofadd
dofadd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,2
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opcode 40  
	cmp A0,40
	jnz L3963
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK947
	mov [Dframe-8],D0	; opcstr -8  
; ------------------------------ jump
	jmp	L3964
; ------------------------------ label
L3963:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opcode 40  
	cmp A0,41
	jnz L3965
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK948
	mov [Dframe-8],D0	; opcstr -8  
; ------------------------------ jump
	jmp	L3966
; ------------------------------ label
L3965:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opcode 40  
	cmp A0,42
	jnz L3967
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK949
	mov [Dframe-8],D0	; opcstr -8  
; ------------------------------ jump
	jmp	L3968
; ------------------------------ label
L3967:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opcode 40  
	cmp A0,43
	jnz L3969
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK950
	mov [Dframe-8],D0	; opcstr -8  
; ------------------------------ label
L3969:
; ------------------------------ label
L3968:
; ------------------------------ label
L3966:
; ------------------------------ label
L3964:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; opcstr -8  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,4
	jnz L3970
; ------------------------------ move
	mov D0,KK951
	mov [Dframe-16],D0	; T1  
; ------------------------------ jump
	jmp	L3971
; ------------------------------ label
L3970:
; ------------------------------ move
	mov D0,KK952
	mov [Dframe-16],D0	; T1  
; ------------------------------ label
L3971:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T1  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call asmxreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	call asmxreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call fstoreopnd
	add Dstack, 32
; ------------------------------ label
L3962:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:domul
domul:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jz L3973
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK953
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L3974
; ------------------------------ label
L3973:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov D12,[Dframe+32]	; c 32  
	mov A13,42
	call dofadd
	add Dstack, 32
; ------------------------------ label
L3974:
; ------------------------------ label
L3972:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dodiv
dodiv:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jz L3976
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,1
	jnz L3977
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; size -4  
	cmp A0,4
	jnz L3978
; ------------------------------ move
	mov D0,KK954
	mov [Dframe-48],D0	; T5  
; ------------------------------ jump
	jmp	L3979
; ------------------------------ label
L3978:
; ------------------------------ move
	mov D0,KK955
	mov [Dframe-48],D0	; T5  
; ------------------------------ label
L3979:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; T5  
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK956
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3980
; ------------------------------ label
L3977:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK957
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK958
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3980:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opcode 40  
	cmp A0,44
	jnz L3981
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; size -4  
	cmp A0,4
	jnz L3982
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK959
	call asmstrln
	add Dstack, 32
; ------------------------------ jump
	jmp	L3983
; ------------------------------ label
L3982:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK960
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L3983:
; ------------------------------ label
L3981:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L3984
; ------------------------------ label
L3976:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov D12,[Dframe+32]	; c 32  
	mov A13,43
	call dofadd
	add Dstack, 32
; ------------------------------ label
L3984:
; ------------------------------ label
L3975:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:doiand
doiand:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opc 40  
	cmp A0,45
	jnz L3986
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK961
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3987
; ------------------------------ label
L3986:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opc 40  
	cmp A0,46
	jnz L3988
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK962
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3989
; ------------------------------ label
L3988:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opc 40  
	cmp A0,47
	jnz L3990
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK963
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3990:
; ------------------------------ label
L3989:
; ------------------------------ label
L3987:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L3985:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:doshl
doshl:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+32]	; c 32  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T1  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-16]	; T1 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,11
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opc 40  
	cmp A0,48
	jnz L3992
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK964
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3993
; ------------------------------ label
L3992:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; opc 40  
	cmp A0,49
	jnz L3994
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T3  
	cmp A0,1
	jnz L3995
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK965
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3996
; ------------------------------ label
L3995:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK966
	call asmstr
	add Dstack, 32
; ------------------------------ label
L3996:
; ------------------------------ label
L3994:
; ------------------------------ label
L3993:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK967
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L3991:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:doshlto
doshlto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,11
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,61
	jnz L3998
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK968
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L3999
; ------------------------------ label
L3998:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,62
	jnz L4000
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,1
	jnz L4001
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK969
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L4002
; ------------------------------ label
L4001:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK970
	call asmstr
	add Dstack, 32
; ------------------------------ label
L4002:
; ------------------------------ label
L4000:
; ------------------------------ label
L3999:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK971
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L3997:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dojumptrue
dojumptrue:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK972
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-8]	; T1  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-16]	; T2  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+32]	; dojumptrue 32  
	and A0,A0
	jz L4004
; ------------------------------ move
	mov D0,KK973
	mov [Dframe-24],D0	; T3  
; ------------------------------ jump
	jmp	L4005
; ------------------------------ label
L4004:
; ------------------------------ move
	mov D0,KK974
	mov [Dframe-24],D0	; T3  
; ------------------------------ label
L4005:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; T3  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ label
L4003:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dogetptr
dogetptr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,5
	jnz L4007
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	call doblockgetptr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ return
	jmp L4006
; ------------------------------ label
L4007:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK975
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-24]	; T3  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK976
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-32]	; T4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK977
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4006:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:doblockgetptr
doblockgetptr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,11
	call loadaddr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,12
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; T1  
	call domemcpy
	add Dstack, 32
; ------------------------------ label
L4008:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:dogetaddr
dogetaddr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK978
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-8]	; T1  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4009:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:getlvopnd
	segment .bss
	align 8,resb 1
getlvopnd.ptr:	resb 16
	segment .text
getlvopnd:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 144

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,7
	jz L4012
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,8
	jnz L4011
; ------------------------------ label
L4012:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4013
; ------------------------------ label
L4011:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe+16]	; ax 16  
	jmp L4010
; ------------------------------ label
L4013:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK979
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; reg 24  
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,8236
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; oldsize -4  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-48],D0	; T5  
; ------------------------------ move
	mov A0,8
	mov D13,[Dframe-48]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T6  
; ------------------------------ move
	mov A0,[Dframe-4]	; oldsize -4  
	mov D13,[Dframe-56]	; T6 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getlvopnd.ptr]
	mov [Dframe-72],D0	; T8  
; ------------------------------ indexlv
	mov D0,[Dframe-72]	; T8  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ move
	mov A0,10
	mov D13,[Dframe-64]	; T7 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getlvopnd.ptr]
	mov [Dframe-88],D0	; T10  
; ------------------------------ indexlv
	mov D0,[Dframe-88]	; T10  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-80],D0	; T9  
; ------------------------------ move
	mov A0,[Dframe+24]	; reg 24  
	mov D13,[Dframe-80]	; T9 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getlvopnd.ptr]
	mov [Dframe-104],D0	; T12  
; ------------------------------ indexlv
	mov D0,[Dframe-104]	; T12  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T11  
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-112],A0	; T13  
; ------------------------------ move
	mov A0,[Dframe-112]	; T13  
	mov D13,[Dframe-96]	; T11 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getlvopnd.ptr]
	mov [Dframe-128],D0	; T15  
; ------------------------------ indexlv
	mov D0,[Dframe-128]	; T15  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T14  
; ------------------------------ index
	mov D0,[Dframe+16]	; ax 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-136],B0	; T16  
; ------------------------------ move
	mov B0,[Dframe-136]	; T16  
	mov D13,[Dframe-120]	; T14 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [doopndsize],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[getlvopnd.ptr]
	mov [Dframe-144],D0	; T17  
; ------------------------------ returnx
	mov D0,[Dframe-144]	; T17  
	jmp L4010
; ------------------------------ label
L4010:
; ------------------------------ hardret
	add Dstack, 144
	pop Dframe
	ret
;	End

;	Proc:dowiden
dowiden:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; asize -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T3  
	cmp A0,1
	jnz L4015
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK980
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L4016
; ------------------------------ label
L4015:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; asize -4  
	cmp A0,8
	jnz L4017
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-4],A0	; asize -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,4
	jnz L4018
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK981
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L4019
; ------------------------------ label
L4018:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK982
	call asmstr
	add Dstack, 32
; ------------------------------ label
L4019:
; ------------------------------ jump
	jmp	L4020
; ------------------------------ label
L4017:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK983
	call asmstr
	add Dstack, 32
; ------------------------------ label
L4020:
; ------------------------------ label
L4016:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; asize -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [doopndsize],B0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4014:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:donarrow
donarrow:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4021:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:dotruncate
dotruncate:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,1
	jnz L4023
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK984
	call asmstrln
	add Dstack, 32
; ------------------------------ jump
	jmp	L4024
; ------------------------------ label
L4023:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,2
	jnz L4025
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK985
	call asmstrln
	add Dstack, 32
; ------------------------------ jump
	jmp	L4026
; ------------------------------ label
L4025:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,4
	jnz L4027
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK986
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L4027:
; ------------------------------ label
L4026:
; ------------------------------ label
L4024:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4022:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:docopylist
docopylist:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; nbytes -12  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK987
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK988
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK989
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[currproc]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; T1  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,46
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T2  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T2  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK990
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; nbytes -12  
	mov qword[Dframe-40],D0	; T3  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-40]	; T3  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK991
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK992
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK993
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L4028:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:doindex
doindex:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,5
	jnz L4030
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe+48]	; lv 48  
	push D13
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov D12,[Dframe+32]	; c 32  
	mov A13,[Dframe+40]	; scale 40  
	call doblockindex
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ return
	jmp L4029
; ------------------------------ label
L4030:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,1
	jz L4032
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,2
	jz L4032
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,4
	jz L4032
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,8
	jnz L4031
; ------------------------------ label
L4032:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4033
; ------------------------------ label
L4031:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK994
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; scale 40  
	mov qword[Dframe-24],D0	; T3  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; T3  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe+40],A0	; scale 40  
; ------------------------------ label
L4033:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+48]	; lv 48  
	and A0,A0
	jz L4034
; ------------------------------ move
	mov D0,KK995
	mov [Dframe-32],D0	; T4  
; ------------------------------ jump
	jmp	L4035
; ------------------------------ label
L4034:
; ------------------------------ move
	mov D0,KK996
	mov [Dframe-32],D0	; T4  
; ------------------------------ label
L4035:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T4  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-40]	; T5  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK997
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,43
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,1
	jle L4036
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,42
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; scale 40  
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; T6  
	call asmint
	add Dstack, 32
; ------------------------------ label
L4036:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; c 32  
	mov A1,10
	mov W0, [D0+D1]
	mov [Dframe-56],W0	; T7  
; ------------------------------ widen
	movsx A0,word [Dframe-56]	; T7  
	mov dword[Dframe-64],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; T8  
	and A0,A0
	jz L4037
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,43
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; c 32  
	mov A1,10
	mov W0, [D0+D1]
	mov [Dframe-80],W0	; T10  
; ------------------------------ widen
	movsx A0,word [Dframe-80]	; T10  
	mov dword[Dframe-88],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-88]	; T11  
	mov qword[Dframe-72],D0	; T9  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-72]	; T9  
	call asmint
	add Dstack, 32
; ------------------------------ label
L4037:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,93
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4029:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:doblockindex
doblockindex:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,1
	jz L4040
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,2
	jz L4040
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,4
	jz L4040
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,8
	jnz L4039
; ------------------------------ label
L4040:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4041
; ------------------------------ label
L4039:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK998
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; scale 40  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe+40],A0	; scale 40  
; ------------------------------ label
L4041:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK999
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,12
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1000
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,43
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,1
	jle L4042
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,42
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; scale 40  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	call asmint
	add Dstack, 32
; ------------------------------ label
L4042:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,93
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,11
	call loadaddr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-24]	; T3  
	call domemcpy
	add Dstack, 32
; ------------------------------ label
L4038:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dopreincrx
dopreincrx:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,14
	call getlvopnd
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-8]	; T1  
	mov [Dframe+24],D0	; b 24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [doopndsize],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,1
	jg L4044
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+32]	; isinc 32  
	and A0,A0
	jz L4045
; ------------------------------ move
	mov D0,KK1001
	mov [Dframe-16],D0	; T2  
; ------------------------------ jump
	jmp	L4046
; ------------------------------ label
L4045:
; ------------------------------ move
	mov D0,KK1002
	mov [Dframe-16],D0	; T2  
; ------------------------------ label
L4046:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L4047
; ------------------------------ label
L4044:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+32]	; isinc 32  
	and A0,A0
	jz L4048
; ------------------------------ move
	mov D0,KK1003
	mov [Dframe-24],D0	; T3  
; ------------------------------ jump
	jmp	L4049
; ------------------------------ label
L4048:
; ------------------------------ move
	mov D0,KK1004
	mov [Dframe-24],D0	; T3  
; ------------------------------ label
L4049:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; T3  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; scale 40  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T4  
	call asmint
	add Dstack, 32
; ------------------------------ label
L4047:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4043:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dopostincrx
dopostincrx:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,14
	call getlvopnd
	mov [Dframe-8],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-8]	; T1  
	mov [Dframe+24],D0	; b 24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [doopndsize],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+40]	; scale 40  
	cmp A0,1
	jg L4051
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+32]	; isinc 32  
	and A0,A0
	jz L4052
; ------------------------------ move
	mov D0,KK1005
	mov [Dframe-16],D0	; T2  
; ------------------------------ jump
	jmp	L4053
; ------------------------------ label
L4052:
; ------------------------------ move
	mov D0,KK1006
	mov [Dframe-16],D0	; T2  
; ------------------------------ label
L4053:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L4054
; ------------------------------ label
L4051:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+32]	; isinc 32  
	and A0,A0
	jz L4055
; ------------------------------ move
	mov D0,KK1007
	mov [Dframe-24],D0	; T3  
; ------------------------------ jump
	jmp	L4056
; ------------------------------ label
L4055:
; ------------------------------ move
	mov D0,KK1008
	mov [Dframe-24],D0	; T3  
; ------------------------------ label
L4056:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; T3  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+40]	; scale 40  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T4  
	call asmint
	add Dstack, 32
; ------------------------------ label
L4054:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4050:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dofloat
dofloat:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,4
	jnz L4058
; ------------------------------ move
	mov D0,KK1009
	mov [Dframe-8],D0	; T1  
; ------------------------------ jump
	jmp	L4059
; ------------------------------ label
L4058:
; ------------------------------ move
	mov D0,KK1010
	mov [Dframe-8],D0	; T1  
; ------------------------------ label
L4059:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [doopndsize],B0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [doopndsize],B0
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call fstoreopnd
	add Dstack, 32
; ------------------------------ label
L4057:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:dofix
dofix:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,4
	jnz L4061
; ------------------------------ move
	mov D0,KK1011
	mov [Dframe-8],D0	; T1  
; ------------------------------ jump
	jmp	L4062
; ------------------------------ label
L4061:
; ------------------------------ move
	mov D0,KK1012
	mov [Dframe-8],D0	; T1  
; ------------------------------ label
L4062:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-24]	; T3  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1013
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4060:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dosoftconv
dosoftconv:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4063:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:doaddto
doaddto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jz L4065
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1014
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L4066
; ------------------------------ label
L4065:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov A12,53
	call dofaddto
	add Dstack, 32
; ------------------------------ label
L4066:
; ------------------------------ label
L4064:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dofaddto
dofaddto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,2
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opcode 32  
	cmp A0,53
	jnz L4068
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK1015
	mov [Dframe-8],D0	; opcstr -8  
; ------------------------------ jump
	jmp	L4069
; ------------------------------ label
L4068:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opcode 32  
	cmp A0,54
	jnz L4070
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK1016
	mov [Dframe-8],D0	; opcstr -8  
; ------------------------------ jump
	jmp	L4071
; ------------------------------ label
L4070:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opcode 32  
	cmp A0,55
	jnz L4072
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK1017
	mov [Dframe-8],D0	; opcstr -8  
; ------------------------------ jump
	jmp	L4073
; ------------------------------ label
L4072:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opcode 32  
	cmp A0,56
	jnz L4074
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK1018
	mov [Dframe-8],D0	; opcstr -8  
; ------------------------------ label
L4074:
; ------------------------------ label
L4073:
; ------------------------------ label
L4071:
; ------------------------------ label
L4069:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; opcstr -8  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,4
	jnz L4075
; ------------------------------ move
	mov D0,KK1019
	mov [Dframe-16],D0	; T1  
; ------------------------------ jump
	jmp	L4076
; ------------------------------ label
L4075:
; ------------------------------ move
	mov D0,KK1020
	mov [Dframe-16],D0	; T1  
; ------------------------------ label
L4076:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T1  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call asmxreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	call asmxreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call fstoreopnd
	add Dstack, 32
; ------------------------------ label
L4067:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dosubto
dosubto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jz L4078
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1021
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L4079
; ------------------------------ label
L4078:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov A12,54
	call dofaddto
	add Dstack, 32
; ------------------------------ label
L4079:
; ------------------------------ label
L4077:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:domulto
domulto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jz L4081
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1022
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L4082
; ------------------------------ label
L4081:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov A12,55
	call dofaddto
	add Dstack, 32
; ------------------------------ label
L4082:
; ------------------------------ label
L4080:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dodivto
dodivto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T2  
	cmp A0,3
	jz L4084
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T3  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,1
	jnz L4085
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; size -4  
	cmp A0,4
	jnz L4086
; ------------------------------ move
	mov D0,KK1023
	mov [Dframe-48],D0	; T5  
; ------------------------------ jump
	jmp	L4087
; ------------------------------ label
L4086:
; ------------------------------ move
	mov D0,KK1024
	mov [Dframe-48],D0	; T5  
; ------------------------------ label
L4087:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-48]	; T5  
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1025
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L4088
; ------------------------------ label
L4085:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1026
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1027
	call asmstr
	add Dstack, 32
; ------------------------------ label
L4088:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opcode 32  
	cmp A0,57
	jnz L4089
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; size -4  
	cmp A0,4
	jnz L4090
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1028
	call asmstrln
	add Dstack, 32
; ------------------------------ jump
	jmp	L4091
; ------------------------------ label
L4090:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1029
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L4091:
; ------------------------------ label
L4089:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L4092
; ------------------------------ label
L4084:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,[Dframe+24]	; b 24  
	mov A12,56
	call dofaddto
	add Dstack, 32
; ------------------------------ label
L4092:
; ------------------------------ label
L4083:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:doiandto
doiandto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; size -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,2
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opcode 32  
	cmp A0,59
	jnz L4094
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1030
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L4095
; ------------------------------ label
L4094:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opcode 32  
	cmp A0,58
	jnz L4096
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1031
	call asmstr
	add Dstack, 32
; ------------------------------ jump
	jmp	L4097
; ------------------------------ label
L4096:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opcode 32  
	cmp A0,60
	jnz L4098
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1032
	call asmstr
	add Dstack, 32
; ------------------------------ label
L4098:
; ------------------------------ label
L4097:
; ------------------------------ label
L4095:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,2
	mov A11,[Dframe-4]	; size -4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4093:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:doneg
doneg:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-8],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-8]	; T1  
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; T2  
	cmp A0,3
	jz L4100
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1033
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-24]	; T3  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ jump
	jmp	L4101
; ------------------------------ label
L4100:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1034
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call fstoreopnd
	add Dstack, 32
; ------------------------------ label
L4101:
; ------------------------------ label
L4099:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:doabs
doabs:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1035
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-8]	; T1  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1036
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1037
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[labelno]
	mov A0,dword[labelno]
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-24]	; T3  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1038
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-32]	; T4  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,76
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[labelno]
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-40]	; T5  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1039
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4102:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:doinot
doinot:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1040
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-8]	; T1  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4103:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:docopyblock
docopyblock:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,11
	call loadaddr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov A11,12
	call loadaddr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; T1  
	call domemcpy
	add Dstack, 32
; ------------------------------ label
L4104:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:domemcpy
domemcpy:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1041
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; size 16  
	mov qword[Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1042
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1043
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1044
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1045
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L4105:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:doswitchop
doswitchop:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1046
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; b 32  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; T1  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1047
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,61
	mov W0, [D0+D1]
	mov [Dframe-24],W0	; T3  
; ------------------------------ widen
	movzx A0,word [Dframe-24]	; T3  
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T4  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1048
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+40]	; c 40  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T6  
	mov qword[Dframe-40],D0	; T5  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-40]	; T5  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1049
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; m 16  
	mov A1,48
	mov D0, [D0+D1]
	mov [Dframe-72],D0	; T9  
; ------------------------------ index
	mov D0,[Dframe-72]	; T9  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T8  
	mov qword[Dframe-56],D0	; T7  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-56]	; T7  
	call asmint
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1050
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1051
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L4106:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:dosetcc
dosetcc:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; b 32  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-16],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-16]	; T1  
	mov dword[Dframe-24],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,3
	jnz L4108
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,35
	jz L4108
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; cond 16  
	cmp A0,36
	jz L4108
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; b 32  
	mov A11,1
	call floadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; b 32  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,4
	jnz L4109
; ------------------------------ move
	mov D0,KK1052
	mov [Dframe-32],D0	; T3  
; ------------------------------ jump
	jmp	L4110
; ------------------------------ label
L4109:
; ------------------------------ move
	mov D0,KK1053
	mov [Dframe-32],D0	; T3  
; ------------------------------ label
L4110:
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; T3  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+40]	; c 40  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ jump
	jmp	L4111
; ------------------------------ label
L4108:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; b 32  
	mov A11,1
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1054
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+32]	; b 32  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov A11,[Dframe-48]	; T5  
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+40]	; c 40  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmln
	add Dstack, 32
; ------------------------------ label
L4111:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1055
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ setcc
	mov A0,[Dframe-4]	; t -4  
	cmp A0,1
	setz B0
	movzx A0,B0
	mov [Dframe-56],A0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+16]	; cond 16  
	mov A11,[Dframe-56]	; T6  
	call getasmcondcode
	mov [Dframe-64],D0	; T7  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-64]	; T7  
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1056
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1057
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov A11,1
	call storeopnd
	add Dstack, 32
; ------------------------------ label
L4107:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:pushfloatparam
pushfloatparam:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1058
	mov D11,KK1059
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1060
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1061
	call asmstrln
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1062
	call asmstrln
	add Dstack, 32
; ------------------------------ label
L4112:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:loadfloatparam
loadfloatparam:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ add
	mov A0,11
	mov A1,[Dframe+24]	; regoffset 24  
	add A0,A1
	mov [Dframe-16],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; ireg -4  
; ------------------------------ stmt
; ------------------------------ add
	mov A0,1
	mov A1,[Dframe+24]	; regoffset 24  
	add A0,A1
	mov [Dframe-24],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-8],A0	; xreg -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1063
	mov D11,KK1064
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1065
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; xreg -8  
	call asmxreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; ax 16  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1066
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; ireg -4  
	mov A11,8
	call asmreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,44
	call asmchar
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; xreg -8  
	call asmxreg
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ label
L4113:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dofwiden
dofwiden:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1067
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call fstoreopnd
	add Dstack, 32
; ------------------------------ label
L4114:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:dofnarrow
dofnarrow:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1068
	call asmstr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call asmopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call asmline
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov A11,1
	call fstoreopnd
	add Dstack, 32
; ------------------------------ label
L4115:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:saveretvalue
saveretvalue:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[txreturn]
	mov A11,11
	call loadopnd
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; b 16  
	mov A11,12
	call loadaddr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; b 16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; T1  
	call domemcpy
	add Dstack, 32
; ------------------------------ label
L4116:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global codegen_tcl
;	Proc:codegen_tcl
codegen_tcl:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[fverbose]
	and A0,A0
	jz L4118
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1069
	mov D11,KK1070
	call printf
	add Dstack, 32
; ------------------------------ label
L4118:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call inittc
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-16],D0	; T1  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-16]	; T1  
	imul D1,78
	mov D0, [D0+D1+8]
	mov [stmodule],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[stmodule]
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4119
; ------------------------------ label
L4121:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-32],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T3  
	cmp A0,6
	jnz L4122
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T4  
; ------------------------------ jumpfalse
	mov D0,[Dframe-40]	; T4  
	and D0,D0
	jz L4122
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; d -8  
	call do_procdef
	add Dstack, 32
; ------------------------------ label
L4122:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; d -8  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; d -8  
; ------------------------------ label
L4119:
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; d -8  
	and D0,D0
	jnz L4121
; ------------------------------ label
L4120:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L4117
; ------------------------------ label
L4117:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:do_stmt
do_stmt:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 688

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; p 16  
	cmp D0,0
	jnz L4124
; ------------------------------ stmt
; ------------------------------ return
	jmp L4123
; ------------------------------ label
L4124:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[clineno]
	mov [Dframe-4],A0	; oldclineno -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,57
	mov B0, [D0+D1]
	mov [Dframe-344],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-344]	; T1  
	mov dword[Dframe-352],A0	; T2  
; ------------------------------ shl
	mov A0,[Dframe-352]	; T2  
	mov B10,24
	shl A0, cl
	mov [Dframe-360],A0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-368],A0	; T4  
; ------------------------------ add
	mov A0,[Dframe-360]	; T3  
	mov A1,[Dframe-368]	; T4  
	add A0,A1
	mov [clineno],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; a -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; b -32  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,7
	call gentc
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-376],A0	; T5  
; ------------------------------ switch
	mov A0,[Dframe-376]	; T5  
	sub A0, 2
	cmp A0, 79
	jae L4125
	jmp [A0*8+L4160]
	align 8
; ------------------------------ label
L4160:
; ------------------------------ jumplabel
	dq L4128	; 1
; ------------------------------ jumplabel
	dq L4125	; 2
; ------------------------------ jumplabel
	dq L4125	; 3
; ------------------------------ jumplabel
	dq L4125	; 4
; ------------------------------ jumplabel
	dq L4125	; 5
; ------------------------------ jumplabel
	dq L4159	; 6
; ------------------------------ jumplabel
	dq L4125	; 7
; ------------------------------ jumplabel
	dq L4158	; 8
; ------------------------------ jumplabel
	dq L4125	; 9
; ------------------------------ jumplabel
	dq L4156	; 10
; ------------------------------ jumplabel
	dq L4125	; 11
; ------------------------------ jumplabel
	dq L4155	; 12
; ------------------------------ jumplabel
	dq L4154	; 13
; ------------------------------ jumplabel
	dq L4153	; 14
; ------------------------------ jumplabel
	dq L4152	; 15
; ------------------------------ jumplabel
	dq L4151	; 16
; ------------------------------ jumplabel
	dq L4150	; 17
; ------------------------------ jumplabel
	dq L4149	; 18
; ------------------------------ jumplabel
	dq L4148	; 19
; ------------------------------ jumplabel
	dq L4147	; 20
; ------------------------------ jumplabel
	dq L4145	; 21
; ------------------------------ jumplabel
	dq L4144	; 22
; ------------------------------ jumplabel
	dq L4143	; 23
; ------------------------------ jumplabel
	dq L4146	; 24
; ------------------------------ jumplabel
	dq L4125	; 25
; ------------------------------ jumplabel
	dq L4125	; 26
; ------------------------------ jumplabel
	dq L4125	; 27
; ------------------------------ jumplabel
	dq L4125	; 28
; ------------------------------ jumplabel
	dq L4125	; 29
; ------------------------------ jumplabel
	dq L4127	; 30
; ------------------------------ jumplabel
	dq L4157	; 31
; ------------------------------ jumplabel
	dq L4125	; 32
; ------------------------------ jumplabel
	dq L4125	; 33
; ------------------------------ jumplabel
	dq L4125	; 34
; ------------------------------ jumplabel
	dq L4125	; 35
; ------------------------------ jumplabel
	dq L4125	; 36
; ------------------------------ jumplabel
	dq L4125	; 37
; ------------------------------ jumplabel
	dq L4125	; 38
; ------------------------------ jumplabel
	dq L4125	; 39
; ------------------------------ jumplabel
	dq L4125	; 40
; ------------------------------ jumplabel
	dq L4125	; 41
; ------------------------------ jumplabel
	dq L4125	; 42
; ------------------------------ jumplabel
	dq L4125	; 43
; ------------------------------ jumplabel
	dq L4125	; 44
; ------------------------------ jumplabel
	dq L4125	; 45
; ------------------------------ jumplabel
	dq L4125	; 46
; ------------------------------ jumplabel
	dq L4125	; 47
; ------------------------------ jumplabel
	dq L4125	; 48
; ------------------------------ jumplabel
	dq L4125	; 49
; ------------------------------ jumplabel
	dq L4125	; 50
; ------------------------------ jumplabel
	dq L4125	; 51
; ------------------------------ jumplabel
	dq L4125	; 52
; ------------------------------ jumplabel
	dq L4125	; 53
; ------------------------------ jumplabel
	dq L4125	; 54
; ------------------------------ jumplabel
	dq L4125	; 55
; ------------------------------ jumplabel
	dq L4125	; 56
; ------------------------------ jumplabel
	dq L4125	; 57
; ------------------------------ jumplabel
	dq L4125	; 58
; ------------------------------ jumplabel
	dq L4125	; 59
; ------------------------------ jumplabel
	dq L4125	; 60
; ------------------------------ jumplabel
	dq L4125	; 61
; ------------------------------ jumplabel
	dq L4125	; 62
; ------------------------------ jumplabel
	dq L4125	; 63
; ------------------------------ jumplabel
	dq L4125	; 64
; ------------------------------ jumplabel
	dq L4125	; 65
; ------------------------------ jumplabel
	dq L4142	; 66
; ------------------------------ jumplabel
	dq L4141	; 67
; ------------------------------ jumplabel
	dq L4140	; 68
; ------------------------------ jumplabel
	dq L4139	; 69
; ------------------------------ jumplabel
	dq L4138	; 70
; ------------------------------ jumplabel
	dq L4137	; 71
; ------------------------------ jumplabel
	dq L4136	; 72
; ------------------------------ jumplabel
	dq L4135	; 73
; ------------------------------ jumplabel
	dq L4134	; 74
; ------------------------------ jumplabel
	dq L4133	; 75
; ------------------------------ jumplabel
	dq L4131	; 76
; ------------------------------ jumplabel
	dq L4129	; 77
; ------------------------------ jumplabel
	dq L4132	; 78
; ------------------------------ jumplabel
	dq L4130	; 79
; ------------------------------ stmt
; ------------------------------ comment
;case 7:
; ------------------------------ label
L4159:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4161
; ------------------------------ label
L4163:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; a -24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; a -24  
; ------------------------------ label
L4161:
; ------------------------------ jumptrue
	mov D0,[Dframe-24]	; a -24  
	and D0,D0
	jnz L4163
; ------------------------------ label
L4162:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 9:
; ------------------------------ label
L4158:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; d -80  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; a -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; a -24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-384],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-384]	; T6  
	cmp A0,30
	jz L4164
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-408],W0	; T9  
; ------------------------------ widen
	movsx A0,word [Dframe-408]	; T9  
	mov dword[Dframe-416],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-416]	; T10  
	mov qword[Dframe-400],D0	; T8  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-400]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-392],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-392]	; T7  
	cmp A0,19
	jnz L4165
; ------------------------------ index
	mov D0,[Dframe-24]	; a -24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-424],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-424]	; T11  
	cmp A0,1
	jnz L4165
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L147
; ------------------------------ label
L4165:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-432],W0	; T12  
; ------------------------------ widen
	movsx A0,word [Dframe-432]	; T12  
	mov dword[Dframe-440],A0	; T13  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-80]	; d -80  
	mov A11,[Dframe-440]	; T13  
	call gen_mem
	mov [Dframe-448],D0	; T14  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,0
	call do_expr
	mov [Dframe-456],D0	; T15  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,11
	mov D11,[Dframe-448]	; T14  
	mov D12,[Dframe-456]	; T15  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4166
; ------------------------------ label
L4164:
; ------------------------------ stmt
; ------------------------------ label
L146: ;<copyl>
; ------------------------------ stmt
; ------------------------------ label
L147: ;<L7>
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-80]	; d -80  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-464],W0	; T16  
; ------------------------------ widen
	movsx A0,word [Dframe-464]	; T16  
	mov dword[Dframe-472],A0	; T17  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-80]	; d -80  
	mov A11,[Dframe-472]	; T17  
	call gen_mem
	mov [Dframe-480],D0	; T18  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,12
	mov D11,[Dframe-480]	; T18  
	call gentc1
	add Dstack, 32
; ------------------------------ label
L4166:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 32:
; ------------------------------ label
L4157:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe-24]	; a -24  
	mov D12,[Dframe-32]	; b -32  
	mov A13,0
	call dx_call
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 11:
; ------------------------------ label
L4156:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	call do_return
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 13:
; ------------------------------ label
L4155:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	call do_assign
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 14:
; ------------------------------ label
L4154:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-488],D0	; T19  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov D12,[Dframe-488]	; T19  
	call do_if
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 15:
; ------------------------------ label
L4153:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	call do_for
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 16:
; ------------------------------ label
L4152:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	call do_while
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 17:
; ------------------------------ label
L4151:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	call do_dowhile
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 18:
; ------------------------------ label
L4150:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-496],D0	; T20  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-496]	; T20  
	call do_goto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 19:
; ------------------------------ label
L4149:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-504],D0	; T21  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-504]	; T21  
	call do_labeldef
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 20:
; ------------------------------ label
L4148:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-336]	; str -336  
	mov [Dframe-512],D0	; T22  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-520],A0	; T23  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-512]	; T22  
	mov D11,KK1071
	mov A12,[Dframe-520]	; T23  
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-336]	; str -336  
	mov [Dframe-528],D0	; T24  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-528]	; T24  
	call pcm_copyheapstring
	mov [Dframe-536],D0	; T25  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-536]	; T25  
	call gencomment
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[sw_ncases]
	cmp A0,0
	jnz L4167
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-560],A0	; T28  
; ------------------------------ sub
	mov A0,[Dframe-560]	; T28  
	mov A1,[sw_lower]
	sub A0,A1
	mov [Dframe-568],A0	; T29  
; ------------------------------ add
	mov A0,[Dframe-568]	; T29  
	mov A1,1
	add A0,A1
	mov [Dframe-576],A0	; T30  
; ------------------------------ sub
	mov A0,[Dframe-576]	; T30  
	mov A1,1
	sub A0,A1
	mov [Dframe-584],A0	; T31  
; ------------------------------ widen
	movsx D0,dword[Dframe-584]	; T31  
	mov qword[Dframe-552],D0	; T27  
; ------------------------------ index
	mov D0,[sw_labeltable]
	mov D1,[Dframe-552]	; T27  
	mov A0, [D0+D1*4]
	mov [Dframe-544],A0	; T26  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,20
	mov A11,[Dframe-544]	; T26  
	call gentc_label
	add Dstack, 32
; ------------------------------ jump
	jmp	L4168
; ------------------------------ label
L4167:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; value -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-12],A0	; i -12  
; ------------------------------ jump
	jmp	L4171
; ------------------------------ label
L4172:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-12]	; i -12  
	mov A1,1
	sub A0,A1
	mov [Dframe-608],A0	; T34  
; ------------------------------ widen
	movsx D0,dword[Dframe-608]	; T34  
	mov qword[Dframe-600],D0	; T33  
; ------------------------------ index
	mov D0,[sw_valuetable]
	mov D1,[Dframe-600]	; T33  
	mov A0, [D0+D1*4]
	mov [Dframe-592],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-592]	; T32  
	cmp A0,[Dframe-8]	; value -8  
	jnz L4173
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-12]	; i -12  
	mov A1,1
	sub A0,A1
	mov [Dframe-632],A0	; T37  
; ------------------------------ widen
	movsx D0,dword[Dframe-632]	; T37  
	mov qword[Dframe-624],D0	; T36  
; ------------------------------ index
	mov D0,[sw_labeltable]
	mov D1,[Dframe-624]	; T36  
	mov A0, [D0+D1*4]
	mov [Dframe-616],A0	; T35  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,20
	mov A11,[Dframe-616]	; T35  
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L148
; ------------------------------ label
L4173:
; ------------------------------ label
L4169:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-12]	; i -12  
; ------------------------------ label
L4171:
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; i -12  
	cmp A0,[sw_ncases]
	jle L4172
; ------------------------------ label
L4170:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1072
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ label
L148: ;<L11>
; ------------------------------ label
L4168:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 21:
; ------------------------------ label
L4147:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [sw_defaultseen],B0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1073
	call gencomment
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,20
	mov A11,[sw_defaultlabel]
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 25:
; ------------------------------ label
L4146:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[sw_breaklabel]
	call genjumpl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 22:
; ------------------------------ label
L4145:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[loopindex]
	mov A1,1
	sub A0,A1
	mov [Dframe-656],A0	; T40  
; ------------------------------ widen
	movsx D0,dword[Dframe-656]	; T40  
	mov qword[Dframe-648],D0	; T39  
; ------------------------------ index
	lea D0,[breakstack]
	mov D1,[Dframe-648]	; T39  
	mov A0, [D0+D1*4]
	mov [Dframe-640],A0	; T38  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-640]	; T38  
	call genjumpl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 23:
; ------------------------------ label
L4144:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[loopindex]
	mov A1,1
	sub A0,A1
	mov [Dframe-680],A0	; T43  
; ------------------------------ widen
	movsx D0,dword[Dframe-680]	; T43  
	mov qword[Dframe-672],D0	; T42  
; ------------------------------ index
	lea D0,[continuestack]
	mov D1,[Dframe-672]	; T42  
	mov A0, [D0+D1*4]
	mov [Dframe-664],A0	; T41  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-664]	; T41  
	call genjumpl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 24:
; ------------------------------ label
L4143:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe-24]	; a -24  
	mov D12,[Dframe-32]	; b -32  
	call do_switch
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 67:
; ------------------------------ label
L4142:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,53
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L4141:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,54
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L4140:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,55
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 70:
; ------------------------------ label
L4139:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,56
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 71:
; ------------------------------ label
L4138:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,57
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 72:
; ------------------------------ label
L4137:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,59
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 73:
; ------------------------------ label
L4136:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,58
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 74:
; ------------------------------ label
L4135:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,60
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 75:
; ------------------------------ label
L4134:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,61
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L4133:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,62
	mov A13,0
	call dx_addto
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 77:
; ------------------------------ label
L4131:
; ------------------------------ stmt
; ------------------------------ comment
;case 79:
; ------------------------------ label
L4132:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,63
	mov A12,53
	call do_incr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 78:
; ------------------------------ label
L4129:
; ------------------------------ stmt
; ------------------------------ comment
;case 80:
; ------------------------------ label
L4130:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,64
	mov A12,54
	call do_incr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 2:
; ------------------------------ label
L4128:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1074
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;case 31:
; ------------------------------ label
L4127:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4174
; ------------------------------ label
L4176:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-32]	; b -32  
	mov [Dframe-24],D0	; a -24  
; ------------------------------ label
L4174:
; ------------------------------ jumpfalse
	mov D0,[Dframe-24]	; a -24  
	and D0,D0
	jz L4177
; ------------------------------ index
	mov D0,[Dframe-24]	; a -24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; b -32  
; ------------------------------ jumptrue
	mov D0,[Dframe-32]	; b -32  
	and D0,D0
	jnz L4176
; ------------------------------ label
L4177:
; ------------------------------ label
L4175:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4126
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L4125:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call loneexpr
	add Dstack, 32
; ------------------------------ label
L4126:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4]	; oldclineno -4  
	mov [clineno],A0
; ------------------------------ label
L4123:
; ------------------------------ hardret
	add Dstack, 688
	pop Dframe
	ret
;	End

;	Proc:do_expr
do_expr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1088

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; p 16  
	cmp D0,0
	jnz L4179
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L4178
; ------------------------------ label
L4179:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[clineno]
	mov [Dframe-4],A0	; oldclineno -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,57
	mov B0, [D0+D1]
	mov [Dframe-352],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-352]	; T1  
	mov dword[Dframe-360],A0	; T2  
; ------------------------------ shl
	mov A0,[Dframe-360]	; T2  
	mov B10,24
	shl A0, cl
	mov [Dframe-368],A0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-376],A0	; T4  
; ------------------------------ add
	mov A0,[Dframe-368]	; T3  
	mov A1,[Dframe-376]	; T4  
	add A0,A1
	mov [clineno],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; a -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; b -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; m -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-384],A0	; T5  
; ------------------------------ switch
	mov A0,[Dframe-384]	; T5  
	sub A0, 1
	cmp A0, 80
	jae L4180
	jmp [A0*8+L4232]
	align 8
; ------------------------------ label
L4232:
; ------------------------------ jumplabel
	dq L4231	; 1
; ------------------------------ jumplabel
	dq L4180	; 2
; ------------------------------ jumplabel
	dq L4230	; 3
; ------------------------------ jumplabel
	dq L4229	; 4
; ------------------------------ jumplabel
	dq L4228	; 5
; ------------------------------ jumplabel
	dq L4227	; 6
; ------------------------------ jumplabel
	dq L4180	; 7
; ------------------------------ jumplabel
	dq L4180	; 8
; ------------------------------ jumplabel
	dq L4180	; 9
; ------------------------------ jumplabel
	dq L4180	; 10
; ------------------------------ jumplabel
	dq L4180	; 11
; ------------------------------ jumplabel
	dq L4180	; 12
; ------------------------------ jumplabel
	dq L4226	; 13
; ------------------------------ jumplabel
	dq L4180	; 14
; ------------------------------ jumplabel
	dq L4180	; 15
; ------------------------------ jumplabel
	dq L4180	; 16
; ------------------------------ jumplabel
	dq L4180	; 17
; ------------------------------ jumplabel
	dq L4180	; 18
; ------------------------------ jumplabel
	dq L4180	; 19
; ------------------------------ jumplabel
	dq L4180	; 20
; ------------------------------ jumplabel
	dq L4180	; 21
; ------------------------------ jumplabel
	dq L4180	; 22
; ------------------------------ jumplabel
	dq L4180	; 23
; ------------------------------ jumplabel
	dq L4180	; 24
; ------------------------------ jumplabel
	dq L4180	; 25
; ------------------------------ jumplabel
	dq L4224	; 26
; ------------------------------ jumplabel
	dq L4225	; 27
; ------------------------------ jumplabel
	dq L4223	; 28
; ------------------------------ jumplabel
	dq L4180	; 29
; ------------------------------ jumplabel
	dq L4180	; 30
; ------------------------------ jumplabel
	dq L4222	; 31
; ------------------------------ jumplabel
	dq L4221	; 32
; ------------------------------ jumplabel
	dq L4220	; 33
; ------------------------------ jumplabel
	dq L4180	; 34
; ------------------------------ jumplabel
	dq L4214	; 35
; ------------------------------ jumplabel
	dq L4215	; 36
; ------------------------------ jumplabel
	dq L4216	; 37
; ------------------------------ jumplabel
	dq L4217	; 38
; ------------------------------ jumplabel
	dq L4219	; 39
; ------------------------------ jumplabel
	dq L4218	; 40
; ------------------------------ jumplabel
	dq L4213	; 41
; ------------------------------ jumplabel
	dq L4212	; 42
; ------------------------------ jumplabel
	dq L4211	; 43
; ------------------------------ jumplabel
	dq L4210	; 44
; ------------------------------ jumplabel
	dq L4209	; 45
; ------------------------------ jumplabel
	dq L4208	; 46
; ------------------------------ jumplabel
	dq L4207	; 47
; ------------------------------ jumplabel
	dq L4206	; 48
; ------------------------------ jumplabel
	dq L4205	; 49
; ------------------------------ jumplabel
	dq L4204	; 50
; ------------------------------ jumplabel
	dq L4180	; 51
; ------------------------------ jumplabel
	dq L4180	; 52
; ------------------------------ jumplabel
	dq L4180	; 53
; ------------------------------ jumplabel
	dq L4180	; 54
; ------------------------------ jumplabel
	dq L4203	; 55
; ------------------------------ jumplabel
	dq L4201	; 56
; ------------------------------ jumplabel
	dq L4202	; 57
; ------------------------------ jumplabel
	dq L4200	; 58
; ------------------------------ jumplabel
	dq L4199	; 59
; ------------------------------ jumplabel
	dq L4198	; 60
; ------------------------------ jumplabel
	dq L4197	; 61
; ------------------------------ jumplabel
	dq L4196	; 62
; ------------------------------ jumplabel
	dq L4180	; 63
; ------------------------------ jumplabel
	dq L4180	; 64
; ------------------------------ jumplabel
	dq L4180	; 65
; ------------------------------ jumplabel
	dq L4180	; 66
; ------------------------------ jumplabel
	dq L4191	; 67
; ------------------------------ jumplabel
	dq L4190	; 68
; ------------------------------ jumplabel
	dq L4189	; 69
; ------------------------------ jumplabel
	dq L4188	; 70
; ------------------------------ jumplabel
	dq L4187	; 71
; ------------------------------ jumplabel
	dq L4186	; 72
; ------------------------------ jumplabel
	dq L4185	; 73
; ------------------------------ jumplabel
	dq L4184	; 74
; ------------------------------ jumplabel
	dq L4183	; 75
; ------------------------------ jumplabel
	dq L4182	; 76
; ------------------------------ jumplabel
	dq L4195	; 77
; ------------------------------ jumplabel
	dq L4194	; 78
; ------------------------------ jumplabel
	dq L4193	; 79
; ------------------------------ jumplabel
	dq L4192	; 80
; ------------------------------ stmt
; ------------------------------ comment
;case 1:
; ------------------------------ label
L4231:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call dx_const
	mov [Dframe-392],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-392]	; T6  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 3:
; ------------------------------ label
L4230:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-344],D0	; d -344  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-344]	; d -344  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-400],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-400]	; T7  
	mov dword[Dframe-408],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-408]	; T8  
	cmp A0,9
	jnz L4233
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-16]	; m -16  
	call isstructunion
	mov [Dframe-416],A0	; T9  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-416]	; T9  
	and A0,A0
	jz L4233
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-424],A0	; T10  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-424]	; T10  
	call gen_temp
	mov [Dframe-432],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-432]	; T11  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-344]	; d -344  
	mov A11,16
	call gen_mem
	mov [Dframe-440],D0	; T12  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,15
	mov D11,[Dframe-80]	; tx -80  
	mov D12,[Dframe-440]	; T12  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4234
; ------------------------------ label
L4233:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-344]	; d -344  
	mov A11,[Dframe-16]	; m -16  
	call gen_mem
	mov [Dframe-448],D0	; T13  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-448]	; T13  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ label
L4234:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 4:
; ------------------------------ label
L4229:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-344],D0	; d -344  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-344]	; d -344  
	mov A1,114
	mov B0, [D0+D1]
	mov [Dframe-456],B0	; T14  
; ------------------------------ widen
	movzx A0,byte [Dframe-456]	; T14  
	mov dword[Dframe-464],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-464]	; T15  
	cmp A0,9
	jnz L4235
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; m -16  
	mov qword[Dframe-480],D0	; T17  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-480]	; T17  
	mov A0, [D0+D1*4]
	mov [Dframe-472],A0	; T16  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-472]	; T16  
	call isstructunion
	mov [Dframe-488],A0	; T18  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-488]	; T18  
	and A0,A0
	jz L4235
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-344]	; d -344  
	mov A11,16
	call gen_mem
	mov [Dframe-496],D0	; T19  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-496]	; T19  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ jump
	jmp	L4236
; ------------------------------ label
L4235:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; dest 24  
	mov A11,10
	call gen_dest
	mov [Dframe-504],D0	; T20  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-504]	; T20  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-344]	; d -344  
	mov A11,0
	call gen_mem
	mov [Dframe-512],D0	; T21  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,19
	mov D11,[Dframe-80]	; tx -80  
	mov D12,[Dframe-512]	; T21  
	call gentc2
	add Dstack, 32
; ------------------------------ label
L4236:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 5:
; ------------------------------ label
L4228:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,[Dframe-16]	; m -16  
	mov D12,[Dframe+24]	; dest 24  
	call dx_widen
	mov [Dframe-520],D0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-520]	; T22  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 6:
; ------------------------------ label
L4227:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-528],D0	; T23  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-528]	; T23  
	call gen_addr
	mov [Dframe-536],D0	; T24  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-536]	; T24  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 13:
; ------------------------------ label
L4226:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	call dx_assign
	mov [Dframe-544],D0	; T25  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-544]	; T25  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 26:
; ------------------------------ label
L4224:
; ------------------------------ stmt
; ------------------------------ comment
;case 27:
; ------------------------------ label
L4225:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call dx_andorl
	mov [Dframe-552],D0	; T26  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-552]	; T26  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 28:
; ------------------------------ label
L4223:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	call dx_andorl
	mov [Dframe-560],D0	; T27  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-560]	; T27  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 31:
; ------------------------------ label
L4222:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4237
; ------------------------------ label
L4239:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,0
	call do_expr
	mov [Dframe-568],D0	; T28  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-568]	; T28  
	mov [Dframe-48],D0	; ax -48  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-32]	; b -32  
	mov [Dframe-24],D0	; a -24  
; ------------------------------ label
L4237:
; ------------------------------ jumpfalse
	mov D0,[Dframe-24]	; a -24  
	and D0,D0
	jz L4240
; ------------------------------ index
	mov D0,[Dframe-24]	; a -24  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; b -32  
; ------------------------------ jumptrue
	mov D0,[Dframe-32]	; b -32  
	and D0,D0
	jnz L4239
; ------------------------------ label
L4240:
; ------------------------------ label
L4238:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,0
	call do_expr
	mov [Dframe-576],D0	; T29  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-576]	; T29  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 32:
; ------------------------------ label
L4221:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe-24]	; a -24  
	mov D12,[Dframe-32]	; b -32  
	mov A13,1
	call dx_call
	mov [Dframe-584],D0	; T30  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-584]	; T30  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 33:
; ------------------------------ label
L4220:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-592],D0	; T31  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov D12,[Dframe-592]	; T31  
	call dx_ifx
	mov [Dframe-600],D0	; T32  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-600]	; T32  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 35:
; ------------------------------ label
L4214:
; ------------------------------ stmt
; ------------------------------ comment
;case 36:
; ------------------------------ label
L4215:
; ------------------------------ stmt
; ------------------------------ comment
;case 37:
; ------------------------------ label
L4216:
; ------------------------------ stmt
; ------------------------------ comment
;case 38:
; ------------------------------ label
L4217:
; ------------------------------ stmt
; ------------------------------ comment
;case 40:
; ------------------------------ label
L4218:
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L4219:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-608],A0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,[Dframe-608]	; T33  
	call dx_eq
	mov [Dframe-616],D0	; T34  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-616]	; T34  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 41:
; ------------------------------ label
L4213:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-24]	; a -24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-640],A0	; T37  
; ------------------------------ widen
	movsx D0,dword[Dframe-640]	; T37  
	mov qword[Dframe-632],D0	; T36  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-632]	; T36  
	mov B0, [D0+D1]
	mov [Dframe-624],B0	; T35  
; ------------------------------ widen
	movzx A0,byte [Dframe-624]	; T35  
	mov dword[Dframe-648],A0	; T38  
; ------------------------------ jumpfalse
	mov A0,[Dframe-648]	; T38  
	and A0,A0
	jz L4241
; ------------------------------ index
	mov D0,[Dframe-32]	; b -32  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-672],A0	; T41  
; ------------------------------ widen
	movsx D0,dword[Dframe-672]	; T41  
	mov qword[Dframe-664],D0	; T40  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-664]	; T40  
	mov A0, [D0+D1*4]
	mov [Dframe-656],A0	; T39  
; ------------------------------ jumpcc
	mov A0,[Dframe-656]	; T39  
	cmp A0,4
	jg L4241
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-32]	; b -32  
	mov A1,52
	lea D0, [D0+D1]
	mov [Dframe-680],D0	; T42  
; ------------------------------ move
	mov A0,10
	mov D13,[Dframe-680]	; T42 *
	mov dword[D13],A0
; ------------------------------ label
L4241:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,40
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-688],D0	; T43  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-688]	; T43  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 42:
; ------------------------------ label
L4212:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,41
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-696],D0	; T44  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-696]	; T44  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-80]	; tx -80  
	mov A1,9
	lea D0, [D0+D1]
	mov [Dframe-704],D0	; T45  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-712],A0	; T46  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-712]	; T46  
	call gettypecode
	mov [Dframe-720],A0	; T47  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-720]	; T47  
	mov D13,[Dframe-704]	; T45 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 43:
; ------------------------------ label
L4211:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,42
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-728],D0	; T48  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-728]	; T48  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 44:
; ------------------------------ label
L4210:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,43
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-736],D0	; T49  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-736]	; T49  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 45:
; ------------------------------ label
L4209:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,44
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-744],D0	; T50  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-744]	; T50  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 46:
; ------------------------------ label
L4208:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,45
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-752],D0	; T51  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-752]	; T51  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 47:
; ------------------------------ label
L4207:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,46
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-760],D0	; T52  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-760]	; T52  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 48:
; ------------------------------ label
L4206:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,47
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-768],D0	; T53  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-768]	; T53  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 49:
; ------------------------------ label
L4205:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,48
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-776],D0	; T54  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-776]	; T54  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 50:
; ------------------------------ label
L4204:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,49
	mov D13,[Dframe+24]	; dest 24  
	call dx_add
	mov [Dframe-784],D0	; T55  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-784]	; T55  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L4203:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe-24]	; a -24  
	call dx_deref
	mov [Dframe-792],D0	; T56  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-792]	; T56  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L4201:
; ------------------------------ stmt
; ------------------------------ comment
;case 57:
; ------------------------------ label
L4202:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-800],D0	; T57  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	push qword [Dframe+24]	; dest 24  
	mov A13,0
	push D13
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe-24]	; a -24  
	mov D12,[Dframe-32]	; b -32  
	mov D13,[Dframe-800]	; T57  
	call dx_derefoffset
	mov [Dframe-808],D0	; T58  
	add Dstack, 48
; ------------------------------ move
	mov D0,[Dframe-808]	; T58  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 58:
; ------------------------------ label
L4200:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; m -16  
	cmp A0,1
	jnz L4242
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe+24]	; dest 24  
	call do_expr
	mov [Dframe-816],D0	; T59  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-816]	; T59  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ jump
	jmp	L4243
; ------------------------------ label
L4242:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-824],A0	; T60  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,[Dframe-16]	; m -16  
	mov A12,[Dframe-824]	; T60  
	call dx_convert
	mov [Dframe-832],D0	; T61  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-832]	; T61  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ label
L4243:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 59:
; ------------------------------ label
L4199:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,0
	call do_expr
	mov [Dframe-840],D0	; T62  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-840]	; T62  
	mov [Dframe-48],D0	; ax -48  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-848],A0	; T63  
; ------------------------------ jumpcc
	mov A0,[Dframe-848]	; T63  
	cmp A0,0
	jl L4244
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-48]	; ax -48  
	call gen_tempax
	mov [Dframe-856],D0	; T64  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-856]	; T64  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-872],A0	; T66  
; ------------------------------ widen
	movsx D0,dword[Dframe-872]	; T66  
	mov qword[Dframe-864],D0	; T65  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-864]	; T65  
	mov A11,8
	call gen_int
	mov [Dframe-880],D0	; T67  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,42
	mov D11,[Dframe-80]	; tx -80  
	mov D12,[Dframe-48]	; ax -48  
	mov D13,[Dframe-880]	; T67  
	call gentc3
	add Dstack, 32
; ------------------------------ jump
	jmp	L4245
; ------------------------------ label
L4244:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-48]	; ax -48  
	call gen_tempax
	mov [Dframe-888],D0	; T68  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-888]	; T68  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-904],A0	; T70  
; ------------------------------ neg
	mov A0,[Dframe-904]	; T70  
	neg A0
	mov [Dframe-912],A0	; T71  
; ------------------------------ widen
	movsx D0,dword[Dframe-912]	; T71  
	mov qword[Dframe-896],D0	; T69  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-896]	; T69  
	mov A11,8
	call gen_int
	mov [Dframe-920],D0	; T72  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,43
	mov D11,[Dframe-80]	; tx -80  
	mov D12,[Dframe-48]	; ax -48  
	mov D13,[Dframe-920]	; T72  
	call gentc3
	add Dstack, 32
; ------------------------------ label
L4245:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 60:
; ------------------------------ label
L4198:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,50
	call dx_neg
	mov [Dframe-928],D0	; T73  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-928]	; T73  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 61:
; ------------------------------ label
L4197:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,51
	call dx_neg
	mov [Dframe-936],D0	; T74  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-936]	; T74  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 62:
; ------------------------------ label
L4196:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,52
	call dx_neg
	mov [Dframe-944],D0	; T75  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-944]	; T75  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 77:
; ------------------------------ label
L4195:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,65
	call dx_preincr
	mov [Dframe-952],D0	; T76  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-952]	; T76  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 78:
; ------------------------------ label
L4194:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,66
	call dx_preincr
	mov [Dframe-960],D0	; T77  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-960]	; T77  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 79:
; ------------------------------ label
L4193:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,67
	call dx_preincr
	mov [Dframe-968],D0	; T78  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-968]	; T78  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 80:
; ------------------------------ label
L4192:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov A11,68
	call dx_preincr
	mov [Dframe-976],D0	; T79  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-976]	; T79  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 67:
; ------------------------------ label
L4191:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,53
	mov A13,1
	call dx_addto
	mov [Dframe-984],D0	; T80  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-984]	; T80  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 68:
; ------------------------------ label
L4190:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,54
	mov A13,1
	call dx_addto
	mov [Dframe-992],D0	; T81  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-992]	; T81  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 69:
; ------------------------------ label
L4189:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,55
	mov A13,1
	call dx_addto
	mov [Dframe-1000],D0	; T82  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1000]	; T82  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 70:
; ------------------------------ label
L4188:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,56
	mov A13,1
	call dx_addto
	mov [Dframe-1008],D0	; T83  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1008]	; T83  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 71:
; ------------------------------ label
L4187:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,57
	mov A13,1
	call dx_addto
	mov [Dframe-1016],D0	; T84  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1016]	; T84  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 72:
; ------------------------------ label
L4186:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,59
	mov A13,1
	call dx_addto
	mov [Dframe-1024],D0	; T85  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1024]	; T85  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 73:
; ------------------------------ label
L4185:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,58
	mov A13,1
	call dx_addto
	mov [Dframe-1032],D0	; T86  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1032]	; T86  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 74:
; ------------------------------ label
L4184:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,60
	mov A13,1
	call dx_addto
	mov [Dframe-1040],D0	; T87  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1040]	; T87  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 75:
; ------------------------------ label
L4183:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,61
	mov A13,1
	call dx_addto
	mov [Dframe-1048],D0	; T88  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1048]	; T88  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;case 76:
; ------------------------------ label
L4182:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; a -24  
	mov D11,[Dframe-32]	; b -32  
	mov A12,62
	mov A13,1
	call dx_addto
	mov [Dframe-1056],D0	; T89  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1056]	; T89  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4181
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L4180:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-1080],A0	; T92  
; ------------------------------ widen
	movsx D0,dword[Dframe-1080]	; T92  
	mov qword[Dframe-1072],D0	; T91  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-1072]	; T91  
	mov D0, [D0+D1*8]
	mov [Dframe-1064],D0	; T90  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1075
	mov D11,[Dframe-1064]	; T90  
	mov D12,0
	call gerror_s
	add Dstack, 32
; ------------------------------ label
L4181:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+24]	; dest 24  
	and D0,D0
	jz L4246
; ------------------------------ jumpcc
	mov D0,[Dframe-80]	; tx -80  
	cmp D0,[Dframe+24]	; dest 24  
	jz L4246
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,11
	mov D11,[Dframe+24]	; dest 24  
	mov D12,[Dframe-80]	; tx -80  
	call gentc2
	add Dstack, 32
; ------------------------------ label
L4246:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4]	; oldclineno -4  
	mov [clineno],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-80]	; tx -80  
	jmp L4178
; ------------------------------ label
L4178:
; ------------------------------ hardret
	add Dstack, 1088
	pop Dframe
	ret
;	End

;	Proc:do_exprlv
do_exprlv:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 448

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe+16]	; p 16  
	cmp D0,0
	jnz L4248
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L4247
; ------------------------------ label
L4248:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[clineno]
	mov [Dframe-4],A0	; oldclineno -4  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,57
	mov B0, [D0+D1]
	mov [Dframe-352],B0	; T1  
; ------------------------------ widen
	movzx A0,byte [Dframe-352]	; T1  
	mov dword[Dframe-360],A0	; T2  
; ------------------------------ shl
	mov A0,[Dframe-360]	; T2  
	mov B10,24
	shl A0, cl
	mov [Dframe-368],A0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,44
	mov A0, [D0+D1]
	mov [Dframe-376],A0	; T4  
; ------------------------------ add
	mov A0,[Dframe-368]	; T3  
	mov A1,[Dframe-376]	; T4  
	add A0,A1
	mov [clineno],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-24],D0	; a -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; b -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; m -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-384],A0	; T5  
; ------------------------------ switch
	mov A0,[Dframe-384]	; T5  
	sub A0, 3
	cmp A0, 54
	jae L4249
	jmp [A0*8+L4254]
	align 8
; ------------------------------ label
L4254:
; ------------------------------ jumplabel
	dq L4253	; 1
; ------------------------------ jumplabel
	dq L4249	; 2
; ------------------------------ jumplabel
	dq L4249	; 3
; ------------------------------ jumplabel
	dq L4249	; 4
; ------------------------------ jumplabel
	dq L4249	; 5
; ------------------------------ jumplabel
	dq L4249	; 6
; ------------------------------ jumplabel
	dq L4249	; 7
; ------------------------------ jumplabel
	dq L4249	; 8
; ------------------------------ jumplabel
	dq L4249	; 9
; ------------------------------ jumplabel
	dq L4249	; 10
; ------------------------------ jumplabel
	dq L4249	; 11
; ------------------------------ jumplabel
	dq L4249	; 12
; ------------------------------ jumplabel
	dq L4249	; 13
; ------------------------------ jumplabel
	dq L4249	; 14
; ------------------------------ jumplabel
	dq L4249	; 15
; ------------------------------ jumplabel
	dq L4249	; 16
; ------------------------------ jumplabel
	dq L4249	; 17
; ------------------------------ jumplabel
	dq L4249	; 18
; ------------------------------ jumplabel
	dq L4249	; 19
; ------------------------------ jumplabel
	dq L4249	; 20
; ------------------------------ jumplabel
	dq L4249	; 21
; ------------------------------ jumplabel
	dq L4249	; 22
; ------------------------------ jumplabel
	dq L4249	; 23
; ------------------------------ jumplabel
	dq L4249	; 24
; ------------------------------ jumplabel
	dq L4249	; 25
; ------------------------------ jumplabel
	dq L4249	; 26
; ------------------------------ jumplabel
	dq L4249	; 27
; ------------------------------ jumplabel
	dq L4249	; 28
; ------------------------------ jumplabel
	dq L4249	; 29
; ------------------------------ jumplabel
	dq L4249	; 30
; ------------------------------ jumplabel
	dq L4249	; 31
; ------------------------------ jumplabel
	dq L4249	; 32
; ------------------------------ jumplabel
	dq L4249	; 33
; ------------------------------ jumplabel
	dq L4249	; 34
; ------------------------------ jumplabel
	dq L4249	; 35
; ------------------------------ jumplabel
	dq L4249	; 36
; ------------------------------ jumplabel
	dq L4249	; 37
; ------------------------------ jumplabel
	dq L4249	; 38
; ------------------------------ jumplabel
	dq L4249	; 39
; ------------------------------ jumplabel
	dq L4249	; 40
; ------------------------------ jumplabel
	dq L4249	; 41
; ------------------------------ jumplabel
	dq L4249	; 42
; ------------------------------ jumplabel
	dq L4249	; 43
; ------------------------------ jumplabel
	dq L4249	; 44
; ------------------------------ jumplabel
	dq L4249	; 45
; ------------------------------ jumplabel
	dq L4249	; 46
; ------------------------------ jumplabel
	dq L4249	; 47
; ------------------------------ jumplabel
	dq L4249	; 48
; ------------------------------ jumplabel
	dq L4249	; 49
; ------------------------------ jumplabel
	dq L4249	; 50
; ------------------------------ jumplabel
	dq L4249	; 51
; ------------------------------ jumplabel
	dq L4249	; 52
; ------------------------------ jumplabel
	dq L4252	; 53
; ------------------------------ jumplabel
	dq L4251	; 54
; ------------------------------ stmt
; ------------------------------ comment
;case 3:
; ------------------------------ label
L4253:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-392],D0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-392]	; T6  
	mov A11,[Dframe-16]	; m -16  
	call gen_mem
	mov [Dframe-400],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-400]	; T7  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4250
; ------------------------------ stmt
; ------------------------------ comment
;case 55:
; ------------------------------ label
L4252:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe-24]	; a -24  
	call dx_dereflv
	mov [Dframe-408],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-408]	; T8  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4250
; ------------------------------ stmt
; ------------------------------ comment
;case 56:
; ------------------------------ label
L4251:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,32
	mov D0, [D0+D1]
	mov [Dframe-416],D0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	push qword 0
	mov A13,1
	push D13
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,[Dframe-24]	; a -24  
	mov D12,[Dframe-32]	; b -32  
	mov D13,[Dframe-416]	; T9  
	call dx_derefoffset
	mov [Dframe-424],D0	; T10  
	add Dstack, 48
; ------------------------------ move
	mov D0,[Dframe-424]	; T10  
	mov [Dframe-80],D0	; tx -80  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4250
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L4249:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-448],A0	; T13  
; ------------------------------ widen
	movsx D0,dword[Dframe-448]	; T13  
	mov qword[Dframe-440],D0	; T12  
; ------------------------------ index
	lea D0,[jtagnames]
	mov D1,[Dframe-440]	; T12  
	mov D0, [D0+D1*8]
	mov [Dframe-432],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1076
	mov D11,[Dframe-432]	; T11  
	mov D12,0
	call gerror_s
	add Dstack, 32
; ------------------------------ label
L4250:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+24]	; dest 24  
	and D0,D0
	jz L4255
; ------------------------------ jumpcc
	mov D0,[Dframe-80]	; tx -80  
	cmp D0,[Dframe+24]	; dest 24  
	jz L4255
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,11
	mov D11,[Dframe+24]	; dest 24  
	mov D12,[Dframe-80]	; tx -80  
	call gentc2
	add Dstack, 32
; ------------------------------ label
L4255:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4]	; oldclineno -4  
	mov [clineno],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-80]	; tx -80  
	jmp L4247
; ------------------------------ label
L4247:
; ------------------------------ hardret
	add Dstack, 448
	pop Dframe
	ret
;	End

;	Proc:loneexpr
loneexpr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+16]	; p 16  
	and D0,D0
	jz L4257
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,2
	jz L4257
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,0
	call do_expr
	mov [Dframe-16],D0	; T2  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,10
	mov D11,[Dframe-16]	; T2  
	call gentc1
	add Dstack, 32
; ------------------------------ label
L4257:
; ------------------------------ label
L4256:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:dx_const
dx_const:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T2  
	mov qword[Dframe-24],D0	; T1  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-24]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-12],A0	; t -12  
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,2
	jl L4259
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,10
	jg L4259
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T6  
	mov qword[Dframe-56],D0	; T5  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-56]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T4  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T3  
	mov A11,[Dframe-48]	; T4  
	call gen_int
	mov [Dframe-72],D0	; T7  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-72]	; T7  
	jmp L4258
; ------------------------------ jump
	jmp	L4260
; ------------------------------ label
L4259:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,11
	jl L4261
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,13
	jg L4261
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-80],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-104],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T11  
	mov qword[Dframe-96],D0	; T10  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-96]	; T10  
	mov A0, [D0+D1*4]
	mov [Dframe-88],A0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	movq XMM0,[Dframe-80]	; T8  
	mov A11,[Dframe-88]	; T9  
	call gen_real
	mov [Dframe-112],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T12  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L4258
; ------------------------------ jump
	jmp	L4262
; ------------------------------ label
L4261:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-12]	; t -12  
	cmp A0,16
	jnz L4263
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,58
	mov B0, [D0+D1]
	mov [Dframe-120],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T13  
	mov dword[Dframe-128],A0	; T14  
; ------------------------------ jumpfalse
	mov A0,[Dframe-128]	; T14  
	and A0,A0
	jz L4264
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-136],D0	; T15  
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-144],A0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-136]	; T15  
	mov A11,[Dframe-144]	; T16  
	call gen_string
	mov [Dframe-152],D0	; T17  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-152]	; T17  
	jmp L4258
; ------------------------------ label
L4264:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-160],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-160]	; T18  
	mov A11,8
	call gen_int
	mov [Dframe-168],D0	; T19  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-168]	; T19  
	jmp L4258
; ------------------------------ label
L4263:
; ------------------------------ label
L4262:
; ------------------------------ label
L4260:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-176],A0	; T20  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-176]	; T20  
	mov A11,1
	call Strmode
	mov [Dframe-184],D0	; T21  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1077
	mov D11,[Dframe-184]	; T21  
	mov D12,0
	call gerror_s
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L4258
; ------------------------------ label
L4258:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

;	Proc:do_assign
do_assign:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_exprlv
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-32],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T2  
	cmp A0,5
	jnz L4266
; ------------------------------ index
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T3  
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T6  
	mov qword[Dframe-56],D0	; T5  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-56]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T3  
	cmp A0,[Dframe-48]	; T4  
	jge L4266
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe+24],D0	; b 24  
; ------------------------------ label
L4266:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T7  
	mov dword[Dframe-80],A0	; T8  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T8  
	cmp A0,1
	jnz L4267
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov D11,[Dframe-8]	; ax -8  
	call do_expr
	add Dstack, 32
; ------------------------------ jump
	jmp	L4268
; ------------------------------ label
L4267:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov D11,0
	call do_expr
	mov [Dframe-88],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-88]	; T9  
	mov [Dframe-16],D0	; bx -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,11
	mov D11,[Dframe-8]	; ax -8  
	mov D12,[Dframe-16]	; bx -16  
	call gentc2
	add Dstack, 32
; ------------------------------ label
L4268:
; ------------------------------ label
L4265:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:dx_assign
dx_assign:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_exprlv
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; lhs -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov D11,[Dframe-8]	; lhs -8  
	call do_expr
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; lhs -8  
	jmp L4269
; ------------------------------ label
L4269:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:do_labeldef
do_labeldef:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,100
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,20
	mov A11,[Dframe-8]	; T1  
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ move
	mov D0,[Dframe+16]	; d 16  
	mov D13,[Dframe-16]	; T2 *
	mov qword[D13],D0
; ------------------------------ label
L4270:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:do_goto
do_goto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,100
	mov A0, [D0+D1]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,0
	jnz L4272
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1078
	mov D11,[Dframe-16]	; T2  
	mov D12,0
	call gerror_s
	add Dstack, 32
; ------------------------------ label
L4272:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; d 16  
	mov A1,100
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,24
	mov A11,[Dframe-24]	; T3  
	call gentc_label
	add Dstack, 32
; ------------------------------ label
L4271:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:do_if
do_if:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-16],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; lab1 -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	mov D11,[Dframe+16]	; a 16  
	mov A12,[Dframe-4]	; lab1 -4  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+32]	; c 32  
	and D0,D0
	jz L4274
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-24],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-8],A0	; lab2 -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab2 -8  
	call genjumpl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; lab1 -4  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab2 -8  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ jump
	jmp	L4275
; ------------------------------ label
L4274:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; lab1 -4  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ label
L4275:
; ------------------------------ label
L4273:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:definelabel
definelabel:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[labelno]
	mov A0,dword[labelno]
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,20
	mov A11,[Dframe-8]	; T1  
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[labelno]
	jmp L4276
; ------------------------------ label
L4276:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global createfwdlabel
;	Proc:createfwdlabel
createfwdlabel:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[labelno]
	mov A0,dword[labelno]
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ returnx
	mov A0,[Dframe-8]	; T1  
	jmp L4277
; ------------------------------ label
L4277:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

	global definefwdlabel
;	Proc:definefwdlabel
definefwdlabel:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,20
	mov A11,[Dframe+16]	; lab 16  
	call gentc_label
	add Dstack, 32
; ------------------------------ label
L4278:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:genjumpl
genjumpl:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,24
	mov A11,[Dframe+16]	; lab 16  
	call gentc_label
	add Dstack, 32
; ------------------------------ label
L4279:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:genjumpcond
genjumpcond:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,24
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; r -16  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T1  
; ------------------------------ switch
	mov A0,[Dframe-40]	; T1  
	sub A0, 26
	cmp A0, 15
	jae L4281
	jmp [A0*8+L4294]
	align 8
; ------------------------------ label
L4294:
; ------------------------------ jumplabel
	dq L4293	; 1
; ------------------------------ jumplabel
	dq L4292	; 2
; ------------------------------ jumplabel
	dq L4291	; 3
; ------------------------------ jumplabel
	dq L4290	; 4
; ------------------------------ jumplabel
	dq L4281	; 5
; ------------------------------ jumplabel
	dq L4283	; 6
; ------------------------------ jumplabel
	dq L4281	; 7
; ------------------------------ jumplabel
	dq L4281	; 8
; ------------------------------ jumplabel
	dq L4281	; 9
; ------------------------------ jumplabel
	dq L4284	; 10
; ------------------------------ jumplabel
	dq L4285	; 11
; ------------------------------ jumplabel
	dq L4286	; 12
; ------------------------------ jumplabel
	dq L4287	; 13
; ------------------------------ jumplabel
	dq L4289	; 14
; ------------------------------ jumplabel
	dq L4288	; 15
; ------------------------------ stmt
; ------------------------------ comment
;case 26:
; ------------------------------ label
L4293:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,0
	jnz L4295
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	mov D11,[Dframe-16]	; r -16  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ jump
	jmp	L4296
; ------------------------------ label
L4295:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,1
	jnz L4297
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-48],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T2  
	mov [Dframe-20],A0	; lab2 -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe-20]	; lab2 -20  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov D11,[Dframe-16]	; r -16  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-20]	; lab2 -20  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ label
L4297:
; ------------------------------ label
L4296:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4282
; ------------------------------ stmt
; ------------------------------ comment
;case 27:
; ------------------------------ label
L4292:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,0
	jnz L4298
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-56],A0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-56]	; T3  
	mov [Dframe-20],A0	; lab2 -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe-20]	; lab2 -20  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	mov D11,[Dframe-16]	; r -16  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-20]	; lab2 -20  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ jump
	jmp	L4299
; ------------------------------ label
L4298:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,1
	jnz L4300
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov D11,[Dframe-16]	; r -16  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ label
L4300:
; ------------------------------ label
L4299:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4282
; ------------------------------ stmt
; ------------------------------ comment
;case 28:
; ------------------------------ label
L4291:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,0
	jnz L4301
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ jump
	jmp	L4302
; ------------------------------ label
L4301:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,1
	jnz L4303
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ label
L4303:
; ------------------------------ label
L4302:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4282
; ------------------------------ stmt
; ------------------------------ comment
;case 29:
; ------------------------------ label
L4290:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4282
; ------------------------------ stmt
; ------------------------------ comment
;case 35:
; ------------------------------ label
L4284:
; ------------------------------ stmt
; ------------------------------ comment
;case 36:
; ------------------------------ label
L4285:
; ------------------------------ stmt
; ------------------------------ comment
;case 37:
; ------------------------------ label
L4286:
; ------------------------------ stmt
; ------------------------------ comment
;case 38:
; ------------------------------ label
L4287:
; ------------------------------ stmt
; ------------------------------ comment
;case 40:
; ------------------------------ label
L4288:
; ------------------------------ stmt
; ------------------------------ comment
;case 39:
; ------------------------------ label
L4289:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe+32]	; lab 32  
	push D13
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe+24]	; p 24  
	mov D12,[Dframe-8]	; q -8  
	mov D13,[Dframe-16]	; r -16  
	call gcomparejump
	add Dstack, 48
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4282
; ------------------------------ stmt
; ------------------------------ comment
;case 31:
; ------------------------------ label
L4283:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4304
; ------------------------------ label
L4306:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; q -8  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; q -8  
; ------------------------------ label
L4304:
; ------------------------------ index
	mov D0,[Dframe-8]	; q -8  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-64],D0	; T4  
; ------------------------------ jumptrue
	mov D0,[Dframe-64]	; T4  
	and D0,D0
	jnz L4306
; ------------------------------ label
L4305:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+16]	; opc 16  
	mov D11,[Dframe-8]	; q -8  
	mov A12,[Dframe+32]	; lab 32  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4282
; ------------------------------ stmt
; ------------------------------ comment
;default:
; ------------------------------ label
L4281:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; p 24  
	mov D11,0
	call do_expr
	mov [Dframe-72],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-72]	; T5  
	mov [Dframe-32],D0	; ax -32  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; opc 16  
	cmp A0,1
	jnz L4307
; ------------------------------ move
	mov A0,26
	mov [Dframe-80],A0	; T6  
; ------------------------------ jump
	jmp	L4308
; ------------------------------ label
L4307:
; ------------------------------ move
	mov A0,27
	mov [Dframe-80],A0	; T6  
; ------------------------------ label
L4308:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-80]	; T6  
	mov A11,[Dframe+32]	; lab 32  
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T7  
; ------------------------------ getptr
	lea D10,[Dframe-104]	; T8  
	mov D11,[Dframe-32]	; ax -32  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-88]	; T7  
	lea D11,[Dframe-104]	; T8  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ label
L4282:
; ------------------------------ label
L4280:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:gcomparejump
gcomparejump:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; p 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-4],A0	; cond -4  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; jumpopc 16  
	cmp A0,0
	jnz L4310
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4]	; cond -4  
	call reversecond
	mov [Dframe-32],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-32]	; T1  
	mov [Dframe-4],A0	; cond -4  
; ------------------------------ label
L4310:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; lhs 32  
	mov D11,0
	call do_expr
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; ax -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+40]	; rhs 40  
	mov D11,0
	call do_expr
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-24],D0	; bx -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,25
	mov A11,[Dframe+48]	; lab 48  
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T4  
; ------------------------------ move
	mov A0,[Dframe-4]	; cond -4  
	mov D13,[Dframe-56]	; T4 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T5  
; ------------------------------ getptr
	lea D10,[Dframe-80]	; T6  
	mov D11,[Dframe-16]	; ax -16  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-64]	; T5  
	lea D11,[Dframe-80]	; T6  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T7  
; ------------------------------ getptr
	lea D10,[Dframe-104]	; T8  
	mov D11,[Dframe-24]	; bx -24  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-88]	; T7  
	lea D11,[Dframe-104]	; T8  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ label
L4309:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:reversecond
reversecond:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; op 16  
	cmp A0,35
	jnz L4312
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,36
	jmp L4311
; ------------------------------ jump
	jmp	L4313
; ------------------------------ label
L4312:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; op 16  
	cmp A0,36
	jnz L4314
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,35
	jmp L4311
; ------------------------------ jump
	jmp	L4315
; ------------------------------ label
L4314:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; op 16  
	cmp A0,37
	jnz L4316
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,40
	jmp L4311
; ------------------------------ jump
	jmp	L4317
; ------------------------------ label
L4316:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; op 16  
	cmp A0,38
	jnz L4318
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,39
	jmp L4311
; ------------------------------ jump
	jmp	L4319
; ------------------------------ label
L4318:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; op 16  
	cmp A0,40
	jnz L4320
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,37
	jmp L4311
; ------------------------------ jump
	jmp	L4321
; ------------------------------ label
L4320:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; op 16  
	cmp A0,39
	jnz L4322
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,38
	jmp L4311
; ------------------------------ label
L4322:
; ------------------------------ label
L4321:
; ------------------------------ label
L4319:
; ------------------------------ label
L4317:
; ------------------------------ label
L4315:
; ------------------------------ label
L4313:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L4311
; ------------------------------ label
L4311:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:stacklooplabels
stacklooplabels:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[loopindex]
	mov A0,dword[loopindex]
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ sub
	mov A0,[Dframe-24]	; T3  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T4  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ indexlv
	lea D0,[continuestack]
	mov D1,[Dframe-16]	; T2  
	lea D0, [D0+D1*4]
	mov [Dframe-8],D0	; T1  
; ------------------------------ move
	mov A0,[Dframe+16]	; a 16  
	mov D13,[Dframe-8]	; T1 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[loopindex]
	mov A1,1
	sub A0,A1
	mov [Dframe-56],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; T7  
	mov qword[Dframe-48],D0	; T6  
; ------------------------------ indexlv
	lea D0,[breakstack]
	mov D1,[Dframe-48]	; T6  
	lea D0, [D0+D1*4]
	mov [Dframe-40],D0	; T5  
; ------------------------------ move
	mov A0,[Dframe+24]	; b 24  
	mov D13,[Dframe-40]	; T5 *
	mov dword[D13],A0
; ------------------------------ label
L4323:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:do_while
do_while:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-24],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [Dframe-8],A0	; lab_c -8  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-32],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-32]	; T2  
	mov [Dframe-12],A0	; lab_d -12  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab_c -8  
	mov A11,[Dframe-12]	; lab_d -12  
	call stacklooplabels
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab_c -8  
	call genjumpl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call definelabel
	mov [Dframe-40],A0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [Dframe-4],A0	; lab_b -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; pbody 24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab_c -8  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov D11,[Dframe+16]	; pcond 16  
	mov A12,[Dframe-4]	; lab_b -4  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-12]	; lab_d -12  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[loopindex]
; ------------------------------ label
L4324:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:do_dowhile
do_dowhile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-24],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [Dframe-8],A0	; lab_c -8  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-32],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-32]	; T2  
	mov [Dframe-12],A0	; lab_d -12  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab_c -8  
	mov A11,[Dframe-12]	; lab_d -12  
	call stacklooplabels
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call definelabel
	mov [Dframe-40],A0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [Dframe-4],A0	; lab_b -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pbody 16  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab_c -8  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov D11,[Dframe+24]	; pcond 24  
	mov A12,[Dframe-4]	; lab_b -4  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-12]	; lab_d -12  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[loopindex]
; ------------------------------ label
L4325:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:do_for
do_for:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; pinit 16  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; pcond -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; pcond -8  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; pincr -16  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-40],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-40]	; T1  
	mov [Dframe-24],A0	; lab_c -24  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-48],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T2  
	mov [Dframe-28],A0	; lab_d -28  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-56],A0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-56]	; T3  
	mov [Dframe-32],A0	; lab_cond -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; pinit 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T4  
	cmp A0,2
	jz L4327
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+16]	; pinit 16  
	call do_stmt
	add Dstack, 32
; ------------------------------ label
L4327:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-32]	; lab_cond -32  
	call genjumpl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-24]	; lab_c -24  
	mov A11,[Dframe-28]	; lab_d -28  
	call stacklooplabels
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call definelabel
	mov [Dframe-72],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-72]	; T5  
	mov [Dframe-20],A0	; lab_b -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+24]	; pbody 24  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-24]	; lab_c -24  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; pincr -16  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-32]	; lab_cond -32  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; pcond -8  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T6  
	cmp A0,2
	jz L4328
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	mov D11,[Dframe-8]	; pcond -8  
	mov A12,[Dframe-20]	; lab_b -20  
	call genjumpcond
	add Dstack, 32
; ------------------------------ jump
	jmp	L4329
; ------------------------------ label
L4328:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-20]	; lab_b -20  
	call genjumpl
	add Dstack, 32
; ------------------------------ label
L4329:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-28]	; lab_d -28  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[loopindex]
; ------------------------------ label
L4326:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:do_incr
do_incr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,0
	call do_exprlv
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; ptropnd -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-12],A0	; m -12  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; m -12  
	mov qword[Dframe-40],D0	; T3  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-40]	; T3  
	mov B0, [D0+D1]
	mov [Dframe-32],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-32]	; T2  
	mov dword[Dframe-48],A0	; T4  
; ------------------------------ jumpfalse
	mov A0,[Dframe-48]	; T4  
	and A0,A0
	jz L4331
; ------------------------------ widen
	movsx D0,dword[Dframe-12]	; m -12  
	mov qword[Dframe-72],D0	; T7  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-72]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-64],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-64]	; T6  
	mov qword[Dframe-56],D0	; T5  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-56]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-16],A0	; size -16  
; ------------------------------ jumpcc
	mov A0,[Dframe-16]	; size -16  
	cmp A0,1
	jz L4331
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; size -16  
	mov qword[Dframe-80],D0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-80]	; T8  
	mov A11,4
	call gen_int
	mov [Dframe-88],D0	; T9  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+32]	; addopc 32  
	mov D11,[Dframe-8]	; ptropnd -8  
	mov D12,[Dframe-88]	; T9  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4332
; ------------------------------ label
L4331:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; incropc 24  
	mov D11,[Dframe-8]	; ptropnd -8  
	call gentc1
	add Dstack, 32
; ------------------------------ label
L4332:
; ------------------------------ label
L4330:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:dx_preincr
dx_preincr:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 96

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; p 16  
	mov D11,0
	call do_exprlv
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; ptropnd -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-20],A0	; m -20  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-20]	; m -20  
	call gen_temp
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; tx -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; incropc 24  
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ptropnd -8  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; m -20  
	mov qword[Dframe-56],D0	; T4  
; ------------------------------ index
	lea D0,[ttisref]
	mov D1,[Dframe-56]	; T4  
	mov B0, [D0+D1]
	mov [Dframe-48],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T3  
	mov dword[Dframe-64],A0	; T5  
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; T5  
	and A0,A0
	jz L4334
; ------------------------------ widen
	movsx D0,dword[Dframe-20]	; m -20  
	mov qword[Dframe-88],D0	; T8  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-88]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-80],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T7  
	mov qword[Dframe-72],D0	; T6  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-72]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; size -24  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; size -24  
	cmp A0,1
	jz L4334
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-96],D0	; T9  
; ------------------------------ move
	mov A0,[Dframe-24]	; size -24  
	mov D13,[Dframe-96]	; T9 *
	mov word [D13],W0
; ------------------------------ label
L4334:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; tx -16  
	jmp L4333
; ------------------------------ label
L4333:
; ------------------------------ hardret
	add Dstack, 96
	pop Dframe
	ret
;	End

;	Proc:do_return
do_return:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+16]	; a 16  
	and D0,D0
	jz L4336
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_expr
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,38
	mov A11,[retindex]
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-24],D0	; T2  
; ------------------------------ getptr
	lea D10,[Dframe-40]	; T3  
	mov D11,[Dframe-8]	; ax -8  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-24]	; T2  
	lea D11,[Dframe-40]	; T3  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ jump
	jmp	L4337
; ------------------------------ label
L4336:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,37
	mov A11,[retindex]
	call gentc_label
	add Dstack, 32
; ------------------------------ label
L4337:
; ------------------------------ label
L4335:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:dx_neg
dx_neg:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_expr
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; ax -8  
	call gen_tempax
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-16],D0	; tx -16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+24]	; opc 24  
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; tx -16  
	jmp L4338
; ------------------------------ label
L4338:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dx_add
dx_add:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_expr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov D11,0
	call do_expr
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; bx -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+40]	; dest 40  
	mov D11,[Dframe-8]	; ax -8  
	call gen_destax
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-24],D0	; tx -24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+32]	; opc 32  
	mov D11,[Dframe-24]	; tx -24  
	mov D12,[Dframe-8]	; ax -8  
	mov D13,[Dframe-16]	; bx -16  
	call gentc3
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; tx -24  
	jmp L4339
; ------------------------------ label
L4339:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:dx_convert
dx_convert:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-40],A0	; T2  
; ------------------------------ widen
	movsx D0,dword[Dframe-40]	; T2  
	mov qword[Dframe-32],D0	; T1  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-32]	; T1  
	mov A0, [D0+D1*4]
	mov [Dframe-20],A0	; ssize -20  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; t 24  
	mov qword[Dframe-48],D0	; T3  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-48]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; tsize -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe+24]	; t 24  
	call gen_temp
	mov [Dframe-56],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T4  
	mov [Dframe-16],D0	; tx -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_expr
	mov [Dframe-64],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T5  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,1
	jnz L4341
; ------------------------------ stmt
; ------------------------------ label
L149: ;<dosoft>
; ------------------------------ stmt
; ------------------------------ label
L150: ;<L38>
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,69
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; tx -16  
	jmp L4340
; ------------------------------ jump
	jmp	L4342
; ------------------------------ label
L4341:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,2
	jnz L4343
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; tsize -24  
	cmp A0,[Dframe-20]	; ssize -20  
	jge L4344
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,75
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4345
; ------------------------------ label
L4344:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; tsize -24  
	cmp A0,[Dframe-20]	; ssize -20  
	jle L4346
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,73
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4347
; ------------------------------ label
L4346:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L4340
; ------------------------------ label
L4347:
; ------------------------------ label
L4345:
; ------------------------------ jump
	jmp	L4348
; ------------------------------ label
L4343:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,3
	jz L4350
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,4
	jnz L4349
; ------------------------------ label
L4350:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; ssize -20  
	cmp A0,[Dframe-24]	; tsize -24  
	jnz L4351
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L150
; ------------------------------ label
L4351:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; ax -8  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-72],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-72]	; T6  
	mov dword[Dframe-80],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T7  
	cmp A0,3
	jnz L4352
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	lea D0, [D0+D1]
	mov [Dframe-88],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-16]	; tx -16  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-96]	; T9  
	mov D13,[Dframe-88]	; T8 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; ax -8  
	mov [Dframe-16],D0	; tx -16  
; ------------------------------ jump
	jmp	L4353
; ------------------------------ label
L4352:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,73
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ label
L4353:
; ------------------------------ jump
	jmp	L4354
; ------------------------------ label
L4349:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,5
	jz L4356
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,6
	jnz L4355
; ------------------------------ label
L4356:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,70
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4357
; ------------------------------ label
L4355:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,7
	jz L4359
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,8
	jnz L4358
; ------------------------------ label
L4359:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,71
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4360
; ------------------------------ label
L4358:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,10
	jz L4362
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,9
	jnz L4361
; ------------------------------ label
L4362:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,10
	jnz L4363
; ------------------------------ move
	mov A0,76
	mov [Dframe-104],A0	; T10  
; ------------------------------ jump
	jmp	L4364
; ------------------------------ label
L4363:
; ------------------------------ move
	mov A0,74
	mov [Dframe-104],A0	; T10  
; ------------------------------ label
L4364:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-104]	; T10  
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4365
; ------------------------------ label
L4361:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,11
	jnz L4366
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,75
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4367
; ------------------------------ label
L4366:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+32]	; opc 32  
	cmp A0,12
	jnz L4368
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,72
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4369
; ------------------------------ label
L4368:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+32]	; opc 32  
	mov qword[Dframe-120],D0	; T12  
; ------------------------------ index
	lea D0,[convnames]
	mov D1,[Dframe-120]	; T12  
	mov D0, [D0+D1*8]
	mov [Dframe-112],D0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1079
	mov D11,[Dframe-112]	; T11  
	mov D12,0
	call gerror_s
	add Dstack, 32
; ------------------------------ label
L4369:
; ------------------------------ label
L4367:
; ------------------------------ label
L4365:
; ------------------------------ label
L4360:
; ------------------------------ label
L4357:
; ------------------------------ label
L4354:
; ------------------------------ label
L4348:
; ------------------------------ label
L4342:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; tx -16  
	jmp L4340
; ------------------------------ label
L4340:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:dx_andorl
dx_andorl:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-24],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-24]	; T1  
	mov [Dframe-4],A0	; lab1 -4  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	mov D11,[Dframe+16]	; p 16  
	mov A12,[Dframe-4]	; lab1 -4  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,4
	call gen_temp
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-16],D0	; tx -16  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-40],A0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-40]	; T3  
	mov [Dframe-8],A0	; lab2 -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,1
	mov A11,4
	call gen_int
	mov [Dframe-48],D0	; T4  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,11
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-48]	; T4  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab2 -8  
	call genjumpl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4]	; lab1 -4  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,0
	mov A11,4
	call gen_int
	mov [Dframe-56],D0	; T5  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,11
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-56]	; T5  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-8]	; lab2 -8  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; tx -16  
	jmp L4370
; ------------------------------ label
L4370:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:getindex
getindex:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-24],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T1  
	cmp A0,59
	jz L4372
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_expr
	mov [Dframe-32],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T2  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe+24]	; scale 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L4371
; ------------------------------ label
L4372:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-40],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T3  
	mov D11,0
	call do_expr
	mov [Dframe-48],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T4  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T5  
	cmp A0,2
	jz L4374
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T6  
	cmp A0,4
	jz L4374
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T7  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T7  
	cmp A0,8
	jnz L4373
; ------------------------------ label
L4374:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-80],A0	; T8  
; ------------------------------ move
	mov A0,[Dframe-80]	; T8  
	mov D13,[Dframe+24]	; scale 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L4371
; ------------------------------ jump
	jmp	L4375
; ------------------------------ label
L4373:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe+24]	; scale 24 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; ax -8  
	call gen_tempax
	mov [Dframe-88],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-88]	; T9  
	mov [Dframe-16],D0	; tx -16  
; ------------------------------ index
	mov D0,[Dframe+16]	; a 16  
	mov A1,48
	mov A0, [D0+D1]
	mov [Dframe-104],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T11  
	mov qword[Dframe-96],D0	; T10  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-96]	; T10  
	mov A11,4
	call gen_int
	mov [Dframe-112],D0	; T12  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,42
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	mov D13,[Dframe-112]	; T12  
	call gentc3
	add Dstack, 32
; ------------------------------ label
L4375:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; tx -16  
	jmp L4371
; ------------------------------ label
L4371:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:dx_deref
dx_deref:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T1  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-56]	; T1  
	call gen_temp
	mov [Dframe-64],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-64]	; T2  
	mov [Dframe-32],D0	; tx -32  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov D11,0
	call do_expr
	mov [Dframe-72],D0	; T3  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,15
	mov D11,[Dframe-32]	; tx -32  
	mov D12,[Dframe-72]	; T3  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-32]	; tx -32  
	jmp L4376
; ------------------------------ label
L4376:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:dx_dereflv
dx_dereflv:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T1  
	cmp A0,3
	jnz L4378
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov D11,0
	call do_expr
	mov [Dframe-64],D0	; T2  
	add Dstack, 32
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-64]	; T2  
	mov A11,[Dframe-72]	; T3  
	call makeindirect
	mov [Dframe-80],D0	; T4  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-80]	; T4  
	jmp L4377
; ------------------------------ label
L4378:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-88],A0	; T5  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-88]	; T5  
	call gen_temp
	mov [Dframe-96],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-96]	; T6  
	mov [Dframe-32],D0	; tx -32  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov D11,0
	call do_expr
	mov [Dframe-104],D0	; T7  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,11
	mov D11,[Dframe-32]	; tx -32  
	mov D12,[Dframe-104]	; T7  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-112],A0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; tx -32  
	mov A11,[Dframe-112]	; T8  
	call makeindirect
	mov [Dframe-120],D0	; T9  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-120]	; T9  
	jmp L4377
; ------------------------------ label
L4377:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:do_switch
do_switch:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 5104

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-4552],D0	; pcase -4552  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4524],A0	; length -4524  
; ------------------------------ move
	mov A0,[Dframe-4524]	; length -4524  
	mov [Dframe-4532],A0	; ncases -4532  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4380
; ------------------------------ label
L4382:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4532]	; ncases -4532  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4532]	; ncases -4532  
	cmp A0,500
	jle L4383
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1080
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L4383:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4532]	; ncases -4532  
	mov A1,1
	sub A0,A1
	mov [Dframe-4632],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-4632]	; T3  
	mov qword[Dframe-4624],D0	; T2  
; ------------------------------ indexlv
	lea D0,[Dframe-4000]	; valuetable -4000  
	mov D1,[Dframe-4624]	; T2  
	lea D0, [D0+D1*4]
	mov [Dframe-4616],D0	; T1  
; ------------------------------ index
	mov D0,[Dframe-4552]	; pcase -4552  
	mov A1,8
	mov A0, [D0+D1]
	mov [Dframe-4528],A0	; value -4528  
; ------------------------------ move
	mov A0,[Dframe-4528]	; value -4528  
	mov D13,[Dframe-4616]	; T1 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4532]	; ncases -4532  
	cmp A0,1
	jnz L4384
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4528]	; value -4528  
	mov [Dframe-4520],A0	; upper -4520  
; ------------------------------ move
	mov A0,[Dframe-4520]	; upper -4520  
	mov [Dframe-4516],A0	; lower -4516  
; ------------------------------ jump
	jmp	L4385
; ------------------------------ label
L4384:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4516]	; lower -4516  
	cmp A0,[Dframe-4528]	; value -4528  
	jge L4386
; ------------------------------ move
	mov A0,[Dframe-4516]	; lower -4516  
	mov [Dframe-4640],A0	; T4  
; ------------------------------ jump
	jmp	L4387
; ------------------------------ label
L4386:
; ------------------------------ move
	mov A0,[Dframe-4528]	; value -4528  
	mov [Dframe-4640],A0	; T4  
; ------------------------------ label
L4387:
; ------------------------------ move
	mov A0,[Dframe-4640]	; T4  
	mov [Dframe-4516],A0	; lower -4516  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4520]	; upper -4520  
	cmp A0,[Dframe-4528]	; value -4528  
	jle L4388
; ------------------------------ move
	mov A0,[Dframe-4520]	; upper -4520  
	mov [Dframe-4648],A0	; T5  
; ------------------------------ jump
	jmp	L4389
; ------------------------------ label
L4388:
; ------------------------------ move
	mov A0,[Dframe-4528]	; value -4528  
	mov [Dframe-4648],A0	; T5  
; ------------------------------ label
L4389:
; ------------------------------ move
	mov A0,[Dframe-4648]	; T5  
	mov [Dframe-4520],A0	; upper -4520  
; ------------------------------ label
L4385:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-4552]	; pcase -4552  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-4552],D0	; pcase -4552  
; ------------------------------ label
L4380:
; ------------------------------ jumptrue
	mov D0,[Dframe-4552]	; pcase -4552  
	and D0,D0
	jnz L4382
; ------------------------------ label
L4381:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4520]	; upper -4520  
	mov A1,[Dframe-4516]	; lower -4516  
	sub A0,A1
	mov [Dframe-4656],A0	; T6  
; ------------------------------ add
	mov A0,[Dframe-4656]	; T6  
	mov A1,1
	add A0,A1
	mov [Dframe-4524],A0	; length -4524  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-4664],A0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-4664]	; T7  
	mov [Dframe-4504],A0	; defaultlabel -4504  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-4672],A0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-4672]	; T8  
	mov [Dframe-4508],A0	; breakswlabel -4508  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-4524]	; length -4524  
	cmp A0,500
	jle L4390
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4533],B0	; serialsw -4533  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov D11,0
	call do_expr
	mov [Dframe-4680],D0	; T9  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-4680]	; T9  
	mov [Dframe-4560],D0	; ax -4560  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4540],A0	; i -4540  
; ------------------------------ jump
	jmp	L4393
; ------------------------------ label
L4394:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4540]	; i -4540  
	mov A1,1
	sub A0,A1
	mov [Dframe-4704],A0	; T12  
; ------------------------------ widen
	movsx D0,dword[Dframe-4704]	; T12  
	mov qword[Dframe-4696],D0	; T11  
; ------------------------------ indexlv
	lea D0,[Dframe-2000]	; labeltable -2000  
	mov D1,[Dframe-4696]	; T11  
	lea D0, [D0+D1*4]
	mov [Dframe-4688],D0	; T10  
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-4712],A0	; T13  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-4712]	; T13  
	mov D13,[Dframe-4688]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4540]	; i -4540  
	mov A1,1
	sub A0,A1
	mov [Dframe-4736],A0	; T16  
; ------------------------------ widen
	movsx D0,dword[Dframe-4736]	; T16  
	mov qword[Dframe-4728],D0	; T15  
; ------------------------------ index
	lea D0,[Dframe-2000]	; labeltable -2000  
	mov D1,[Dframe-4728]	; T15  
	mov A0, [D0+D1*4]
	mov [Dframe-4720],A0	; T14  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,25
	mov A11,[Dframe-4720]	; T14  
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-4744],D0	; T17  
; ------------------------------ move
	mov A0,35
	mov D13,[Dframe-4744]	; T17 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-4752],D0	; T18  
; ------------------------------ getptr
	lea D10,[Dframe-4768]	; T19  
	mov D11,[Dframe-4560]	; ax -4560  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-4752]	; T18  
	lea D11,[Dframe-4768]	; T19  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,32
	lea D0, [D0+D1]
	mov [Dframe-4776],D0	; T20  
; ------------------------------ sub
	mov A0,[Dframe-4540]	; i -4540  
	mov A1,1
	sub A0,A1
	mov [Dframe-4824],A0	; T25  
; ------------------------------ widen
	movsx D0,dword[Dframe-4824]	; T25  
	mov qword[Dframe-4816],D0	; T24  
; ------------------------------ index
	lea D0,[Dframe-4000]	; valuetable -4000  
	mov D1,[Dframe-4816]	; T24  
	mov A0, [D0+D1*4]
	mov [Dframe-4808],A0	; T23  
; ------------------------------ widen
	movsx D0,dword[Dframe-4808]	; T23  
	mov qword[Dframe-4800],D0	; T22  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-4800]	; T22  
	mov A11,4
	call gen_int
	mov [Dframe-4832],D0	; T26  
	add Dstack, 32
; ------------------------------ getptr
	lea D10,[Dframe-4792]	; T21  
	mov D11,[Dframe-4832]	; T26  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-4776]	; T20  
	lea D11,[Dframe-4792]	; T21  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ label
L4391:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4540]	; i -4540  
; ------------------------------ label
L4393:
; ------------------------------ jumpcc
	mov A0,[Dframe-4540]	; i -4540  
	cmp A0,[Dframe-4532]	; ncases -4532  
	jle L4394
; ------------------------------ label
L4392:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,24
	mov A11,[Dframe-4504]	; defaultlabel -4504  
	call gentc_label
	add Dstack, 32
; ------------------------------ jump
	jmp	L4395
; ------------------------------ label
L4390:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-4533],B0	; serialsw -4533  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4500]	; flags -4500  
	mov [Dframe-4840],D0	; T27  
; ------------------------------ widen
	movsx D0,dword[Dframe-4524]	; length -4524  
	mov qword[Dframe-4848],D0	; T28  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-4840]	; T27  
	mov A11,0
	mov D12,[Dframe-4848]	; T28  
	call memset
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4540],A0	; i -4540  
; ------------------------------ jump
	jmp	L4398
; ------------------------------ label
L4399:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4540]	; i -4540  
	mov A1,1
	sub A0,A1
	mov [Dframe-4872],A0	; T31  
; ------------------------------ widen
	movsx D0,dword[Dframe-4872]	; T31  
	mov qword[Dframe-4864],D0	; T30  
; ------------------------------ indexlv
	lea D0,[Dframe-2000]	; labeltable -2000  
	mov D1,[Dframe-4864]	; T30  
	lea D0, [D0+D1*4]
	mov [Dframe-4856],D0	; T29  
; ------------------------------ move
	mov A0,[Dframe-4504]	; defaultlabel -4504  
	mov D13,[Dframe-4856]	; T29 *
	mov dword[D13],A0
; ------------------------------ label
L4396:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4540]	; i -4540  
; ------------------------------ label
L4398:
; ------------------------------ jumpcc
	mov A0,[Dframe-4540]	; i -4540  
	cmp A0,[Dframe-4524]	; length -4524  
	jle L4399
; ------------------------------ label
L4397:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4540],A0	; i -4540  
; ------------------------------ jump
	jmp	L4402
; ------------------------------ label
L4403:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4540]	; i -4540  
	mov A1,1
	sub A0,A1
	mov [Dframe-4888],A0	; T33  
; ------------------------------ widen
	movsx D0,dword[Dframe-4888]	; T33  
	mov qword[Dframe-4880],D0	; T32  
; ------------------------------ index
	lea D0,[Dframe-4000]	; valuetable -4000  
	mov D1,[Dframe-4880]	; T32  
	mov A0, [D0+D1*4]
	mov [Dframe-4528],A0	; value -4528  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4528]	; value -4528  
	mov A1,[Dframe-4516]	; lower -4516  
	sub A0,A1
	mov [Dframe-4896],A0	; T34  
; ------------------------------ add
	mov A0,[Dframe-4896]	; T34  
	mov A1,1
	add A0,A1
	mov [Dframe-4544],A0	; index -4544  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4544]	; index -4544  
	mov A1,1
	sub A0,A1
	mov [Dframe-4920],A0	; T37  
; ------------------------------ widen
	movsx D0,dword[Dframe-4920]	; T37  
	mov qword[Dframe-4912],D0	; T36  
; ------------------------------ indexlv
	lea D0,[Dframe-2000]	; labeltable -2000  
	mov D1,[Dframe-4912]	; T36  
	lea D0, [D0+D1*4]
	mov [Dframe-4904],D0	; T35  
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-4928],A0	; T38  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-4928]	; T38  
	mov D13,[Dframe-4904]	; T35 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4544]	; index -4544  
	mov A1,1
	sub A0,A1
	mov [Dframe-4952],A0	; T41  
; ------------------------------ widen
	movsx D0,dword[Dframe-4952]	; T41  
	mov qword[Dframe-4944],D0	; T40  
; ------------------------------ index
	lea D0,[Dframe-4500]	; flags -4500  
	mov D1,[Dframe-4944]	; T40  
	mov B0, [D0+D1]
	mov [Dframe-4936],B0	; T39  
; ------------------------------ widen
	movzx A0,byte [Dframe-4936]	; T39  
	mov dword[Dframe-4960],A0	; T42  
; ------------------------------ jumpfalse
	mov A0,[Dframe-4960]	; T42  
	and A0,A0
	jz L4404
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4528]	; value -4528  
	mov qword[Dframe-4976],D0	; T44  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1081
	mov D11,[Dframe-4976]	; T44  
	mov D12,0
	call gerror_s
	add Dstack, 32
; ------------------------------ label
L4404:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4544]	; index -4544  
	mov A1,1
	sub A0,A1
	mov [Dframe-5000],A0	; T47  
; ------------------------------ widen
	movsx D0,dword[Dframe-5000]	; T47  
	mov qword[Dframe-4992],D0	; T46  
; ------------------------------ indexlv
	lea D0,[Dframe-4500]	; flags -4500  
	mov D1,[Dframe-4992]	; T46  
	lea D0, [D0+D1]
	mov [Dframe-4984],D0	; T45  
; ------------------------------ move
	mov A0,1
	mov D13,[Dframe-4984]	; T45 *
	mov byte [D13],B0
; ------------------------------ label
L4400:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4540]	; i -4540  
; ------------------------------ label
L4402:
; ------------------------------ jumpcc
	mov A0,[Dframe-4540]	; i -4540  
	cmp A0,[Dframe-4532]	; ncases -4532  
	jle L4403
; ------------------------------ label
L4401:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-5008],A0	; T48  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-5008]	; T48  
	mov [Dframe-4512],A0	; switchlabel -4512  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov D11,0
	call do_expr
	mov [Dframe-5016],D0	; T49  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-5016]	; T49  
	mov [Dframe-4560],D0	; ax -4560  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4516]	; lower -4516  
	mov qword[Dframe-5024],D0	; T50  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-5024]	; T50  
	mov A11,4
	call gen_int
	mov [Dframe-5032],D0	; T51  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-4504]	; defaultlabel -4504  
	call gen_label
	mov [Dframe-5040],D0	; T52  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,23
	mov D11,[Dframe-4560]	; ax -4560  
	mov D12,[Dframe-5032]	; T51  
	mov D13,[Dframe-5040]	; T52  
	call gentc3
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-5048],D0	; T53  
; ------------------------------ move
	mov A0,[Dframe-4524]	; length -4524  
	mov D13,[Dframe-5048]	; T53 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4512]	; switchlabel -4512  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4540],A0	; i -4540  
; ------------------------------ jump
	jmp	L4407
; ------------------------------ label
L4408:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4540]	; i -4540  
	mov A1,1
	sub A0,A1
	mov [Dframe-5072],A0	; T56  
; ------------------------------ widen
	movsx D0,dword[Dframe-5072]	; T56  
	mov qword[Dframe-5064],D0	; T55  
; ------------------------------ index
	lea D0,[Dframe-2000]	; labeltable -2000  
	mov D1,[Dframe-5064]	; T55  
	mov A0, [D0+D1*4]
	mov [Dframe-5056],A0	; T54  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,21
	mov A11,[Dframe-5056]	; T54  
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-5080],D0	; T57  
; ------------------------------ move
	mov A0,[Dframe-4540]	; i -4540  
	mov D13,[Dframe-5080]	; T57 *
	mov word [D13],W0
; ------------------------------ label
L4405:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4540]	; i -4540  
; ------------------------------ label
L4407:
; ------------------------------ jumpcc
	mov A0,[Dframe-4540]	; i -4540  
	cmp A0,[Dframe-4524]	; length -4524  
	jle L4408
; ------------------------------ label
L4406:
; ------------------------------ label
L4395:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[sw_labeltable]
	mov [Dframe-4576],D0	; old_labeltable -4576  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[sw_valuetable]
	mov [Dframe-4584],D0	; old_valuetable -4584  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[sw_lower]
	mov [Dframe-4592],A0	; old_lower -4592  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[sw_ncases]
	mov [Dframe-4588],A0	; old_ncases -4588  
; ------------------------------ stmt
; ------------------------------ move
	mov B0,[sw_defaultseen]
	mov [Dframe-4593],B0	; old_defaultseen -4593  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[sw_defaultlabel]
	mov [Dframe-4600],A0	; old_defaultlabel -4600  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[sw_breaklabel]
	mov [Dframe-4604],A0	; old_breaklabel -4604  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-2000]	; labeltable -2000  
	mov [sw_labeltable],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-4000]	; valuetable -4000  
	mov [sw_valuetable],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4516]	; lower -4516  
	mov [sw_lower],A0
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [Dframe-4533]	; serialsw -4533  
	mov dword[Dframe-5096],A0	; T59  
; ------------------------------ jumpfalse
	mov A0,[Dframe-5096]	; T59  
	and A0,A0
	jz L4409
; ------------------------------ move
	mov A0,[Dframe-4532]	; ncases -4532  
	mov [Dframe-5088],A0	; T58  
; ------------------------------ jump
	jmp	L4410
; ------------------------------ label
L4409:
; ------------------------------ move
	mov A0,0
	mov [Dframe-5088],A0	; T58  
; ------------------------------ label
L4410:
; ------------------------------ move
	mov A0,[Dframe-5088]	; T58  
	mov [sw_ncases],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [sw_defaultseen],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4504]	; defaultlabel -4504  
	mov [sw_defaultlabel],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4508]	; breakswlabel -4508  
	mov [sw_breaklabel],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe+32]	; b 32  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [sw_defaultseen]
	mov dword[Dframe-5104],A0	; T60  
; ------------------------------ jumptrue
	mov A0,[Dframe-5104]	; T60  
	and A0,A0
	jnz L4411
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4504]	; defaultlabel -4504  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ label
L4411:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-4508]	; breakswlabel -4508  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-4576]	; old_labeltable -4576  
	mov [sw_labeltable],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-4584]	; old_valuetable -4584  
	mov [sw_valuetable],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4592]	; old_lower -4592  
	mov [sw_lower],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4588]	; old_ncases -4588  
	mov [sw_ncases],A0
; ------------------------------ stmt
; ------------------------------ move
	mov B0,[Dframe-4593]	; old_defaultseen -4593  
	mov [sw_defaultseen],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4600]	; old_defaultlabel -4600  
	mov [sw_defaultlabel],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe-4604]	; old_breaklabel -4604  
	mov [sw_breaklabel],A0
; ------------------------------ label
L4379:
; ------------------------------ hardret
	add Dstack, 5104
	pop Dframe
	ret
;	End

;	Proc:dx_addto
dx_addto:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_exprlv
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov D11,0
	call do_expr
	mov [Dframe-24],D0	; T2  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe+32]	; opc 32  
	mov D11,[Dframe-8]	; ax -8  
	mov D12,[Dframe-24]	; T2  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; isexpr 40  
	and A0,A0
	jz L4413
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-8]	; ax -8  
	call fixopnd
	mov [Dframe-32],D0	; T3  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-32]	; T3  
	jmp L4412
; ------------------------------ label
L4413:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L4412
; ------------------------------ label
L4412:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:dx_call
dx_call:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 1984

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-44],A0	; retmode -44  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-44]	; retmode -44  
	cmp A0,1
	jnz L4415
; ------------------------------ stmt
; ------------------------------ move
	mov A0,4
	mov [Dframe-44],A0	; retmode -44  
; ------------------------------ label
L4415:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-1672],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-1672]	; T1  
	cmp A0,4
	jnz L4416
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1680],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-1680]	; T2  
	mov A1,80
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; pm -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-54],B0	; isfnptr -54  
; ------------------------------ jump
	jmp	L4417
; ------------------------------ label
L4416:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-1712],A0	; T6  
; ------------------------------ widen
	movsx D0,dword[Dframe-1712]	; T6  
	mov qword[Dframe-1704],D0	; T5  
; ------------------------------ index
	lea D0,[tttarget]
	mov D1,[Dframe-1704]	; T5  
	mov A0, [D0+D1*4]
	mov [Dframe-1696],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-1696]	; T4  
	mov qword[Dframe-1688],D0	; T3  
; ------------------------------ index
	lea D0,[ttparams]
	mov D1,[Dframe-1688]	; T3  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; pm -32  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-54],B0	; isfnptr -54  
; ------------------------------ label
L4417:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-32]	; pm -32  
	mov A1,22
	mov W0, [D0+D1]
	mov [Dframe-1736],W0	; T9  
; ------------------------------ widen
	movsx A0,word [Dframe-1736]	; T9  
	mov dword[Dframe-1744],A0	; T10  
; ------------------------------ setcc
	mov A0,[Dframe-1744]	; T10  
	cmp A0,3
	setz B0
	movzx A0,B0
	mov [Dframe-1752],A0	; T11  
; ------------------------------ softconv
	mov A0,[Dframe-1752]	; T11  
	mov [Dframe-1728],A0	; T8  
; ------------------------------ softconv
	mov A0,[Dframe-1728]	; T8  
	mov [Dframe-1720],A0	; T7  
; ------------------------------ move
	mov A0,[Dframe-1720]	; T7  
	mov [Dframe-56],B0	; variadic -56  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+32]	; b 32  
	mov [Dframe-1664],D0	; q -1664  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-40],A0	; n -40  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4418
; ------------------------------ label
L4420:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[Dframe-40]	; n -40  
	mov A0,dword[Dframe-40]	; n -40  
	mov dword[Dframe-1776],A0	; T14  
; ------------------------------ sub
	mov A0,[Dframe-1776]	; T14  
	mov A1,1
	sub A0,A1
	mov [Dframe-1784],A0	; T15  
; ------------------------------ widen
	movsx D0,dword[Dframe-1784]	; T15  
	mov qword[Dframe-1768],D0	; T13  
; ------------------------------ indexlv
	lea D0,[Dframe-856]	; paramlist -856  
	mov D1,[Dframe-1768]	; T13  
	lea D0, [D0+D1*8]
	mov [Dframe-1760],D0	; T12  
; ------------------------------ move
	mov D0,[Dframe-1664]	; q -1664  
	mov D13,[Dframe-1760]	; T12 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-40]	; n -40  
	mov A1,1
	sub A0,A1
	mov [Dframe-1808],A0	; T18  
; ------------------------------ widen
	movsx D0,dword[Dframe-1808]	; T18  
	mov qword[Dframe-1800],D0	; T17  
; ------------------------------ indexlv
	lea D0,[Dframe-1656]	; arglist -1656  
	mov D1,[Dframe-1800]	; T17  
	lea D0, [D0+D1*8]
	mov [Dframe-1792],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1664]	; q -1664  
	mov D11,0
	call do_expr
	mov [Dframe-1816],D0	; T19  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1816]	; T19  
	mov D13,[Dframe-1792]	; T16 *
	mov qword[D13],D0
; ------------------------------ move
	mov D13,[Dframe-1792]	; T16 *
	mov D0,qword[D13]
	mov qword[Dframe-8],D0	; rx -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; rx -8  
	mov A1,9
	mov B0, [D0+D1]
	mov [Dframe-1824],B0	; T20  
; ------------------------------ widen
	movzx A0,byte [Dframe-1824]	; T20  
	mov dword[Dframe-1832],A0	; T21  
; ------------------------------ jumpcc
	mov A0,[Dframe-1832]	; T21  
	cmp A0,5
	jnz L4421
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call gen_temp
	mov [Dframe-1840],D0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1840]	; T22  
	mov [Dframe-24],D0	; tx -24  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-8]	; rx -8  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-1848],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-1848]	; T23  
	mov dword[Dframe-1856],A0	; T24  
; ------------------------------ jumpcc
	mov A0,[Dframe-1856]	; T24  
	cmp A0,1
	jz L4423
; ------------------------------ index
	mov D0,[Dframe-8]	; rx -8  
	mov A1,8
	mov B0, [D0+D1]
	mov [Dframe-1864],B0	; T25  
; ------------------------------ widen
	movzx A0,byte [Dframe-1864]	; T25  
	mov dword[Dframe-1872],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-1872]	; T26  
	cmp A0,2
	jnz L4422
; ------------------------------ label
L4423:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,19
	mov D11,[Dframe-24]	; tx -24  
	mov D12,[Dframe-8]	; rx -8  
	call gentc2
	add Dstack, 32
; ------------------------------ jump
	jmp	L4424
; ------------------------------ label
L4422:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1082
	mov D11,0
	call gerror
	add Dstack, 32
; ------------------------------ label
L4424:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-40]	; n -40  
	mov A1,1
	sub A0,A1
	mov [Dframe-1896],A0	; T29  
; ------------------------------ widen
	movsx D0,dword[Dframe-1896]	; T29  
	mov qword[Dframe-1888],D0	; T28  
; ------------------------------ indexlv
	lea D0,[Dframe-1656]	; arglist -1656  
	mov D1,[Dframe-1888]	; T28  
	lea D0, [D0+D1*8]
	mov [Dframe-1880],D0	; T27  
; ------------------------------ move
	mov D0,[Dframe-24]	; tx -24  
	mov D13,[Dframe-1880]	; T27 *
	mov qword[D13],D0
; ------------------------------ label
L4421:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe-1664]	; q -1664  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-1664],D0	; q -1664  
; ------------------------------ label
L4418:
; ------------------------------ jumptrue
	mov D0,[Dframe-1664]	; q -1664  
	and D0,D0
	jnz L4420
; ------------------------------ label
L4419:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-1904],A0	; T30  
; ------------------------------ jumpcc
	mov A0,[Dframe-1904]	; T30  
	cmp A0,4
	jnz L4425
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-1912],D0	; T31  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-1912]	; T31  
	call gen_addr
	mov [Dframe-1920],D0	; T32  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1920]	; T32  
	mov [Dframe-16],D0	; fx -16  
; ------------------------------ jump
	jmp	L4426
; ------------------------------ label
L4425:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov D11,0
	call do_expr
	mov [Dframe-1928],D0	; T33  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1928]	; T33  
	mov [Dframe-16],D0	; fx -16  
; ------------------------------ label
L4426:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-36],A0	; i -36  
; ------------------------------ jump
	jmp	L4429
; ------------------------------ label
L4430:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-36]	; i -36  
	mov A1,1
	sub A0,A1
	mov [Dframe-1952],A0	; T36  
; ------------------------------ widen
	movsx D0,dword[Dframe-1952]	; T36  
	mov qword[Dframe-1944],D0	; T35  
; ------------------------------ index
	lea D0,[Dframe-1656]	; arglist -1656  
	mov D1,[Dframe-1944]	; T35  
	mov D0, [D0+D1*8]
	mov [Dframe-1936],D0	; T34  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,9
	mov D11,[Dframe-1936]	; T34  
	call gentc1
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-1960],D0	; T37  
; ------------------------------ move
	mov A0,[Dframe-36]	; i -36  
	mov D13,[Dframe-1960]	; T37 *
	mov word [D13],W0
; ------------------------------ label
L4427:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-36]	; i -36  
; ------------------------------ label
L4429:
; ------------------------------ jumpcc
	mov A0,[Dframe-36]	; i -36  
	cmp A0,[Dframe-40]	; n -40  
	jle L4430
; ------------------------------ label
L4428:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+40]	; isfn 40  
	and A0,A0
	jz L4431
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-44]	; retmode -44  
	call gen_temp
	mov [Dframe-1968],D0	; T38  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-1968]	; T38  
	mov [Dframe-8],D0	; rx -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,35
	mov D11,[Dframe-8]	; rx -8  
	mov D12,[Dframe-16]	; fx -16  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-1976],D0	; T39  
; ------------------------------ move
	mov B0,[Dframe-56]	; variadic -56  
	mov D13,[Dframe-1976]	; T39 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; rx -8  
	jmp L4414
; ------------------------------ jump
	jmp	L4432
; ------------------------------ label
L4431:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,36
	mov D11,[Dframe-16]	; fx -16  
	call gentc1
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-1984],D0	; T40  
; ------------------------------ move
	mov B0,[Dframe-56]	; variadic -56  
	mov D13,[Dframe-1984]	; T40 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,0
	jmp L4414
; ------------------------------ label
L4432:
; ------------------------------ label
L4414:
; ------------------------------ hardret
	add Dstack, 1984
	pop Dframe
	ret
;	End

;	Proc:dx_ifx
dx_ifx:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 112

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-48],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T1  
	mov [Dframe-36],A0	; lab1 -36  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-56],A0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-56]	; T2  
	mov [Dframe-40],A0	; lab2 -40  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; T3  
	cmp A0,1
	jz L4434
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; b 24  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-72],A0	; T4  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-72]	; T4  
	call gen_temp
	mov [Dframe-80],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-80]	; T5  
	mov [Dframe-32],D0	; tx -32  
; ------------------------------ jump
	jmp	L4435
; ------------------------------ label
L4434:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,4
	call gen_temp
	mov [Dframe-88],D0	; T6  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-88]	; T6  
	mov [Dframe-32],D0	; tx -32  
; ------------------------------ label
L4435:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	mov D11,[Dframe+16]	; a 16  
	mov A12,[Dframe-36]	; lab1 -36  
	call genjumpcond
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov D11,[Dframe-32]	; tx -32  
	call do_expr
	mov [Dframe-96],D0	; T7  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-96]	; T7  
	mov [Dframe-16],D0	; bx -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-40]	; lab2 -40  
	call genjumpl
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-36]	; lab1 -36  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; c 32  
	mov D11,[Dframe-32]	; tx -32  
	call do_expr
	mov [Dframe-104],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-104]	; T8  
	mov [Dframe-24],D0	; cx -24  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-40]	; lab2 -40  
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-32]	; tx -32  
	jmp L4433
; ------------------------------ label
L4433:
; ------------------------------ hardret
	add Dstack, 112
	pop Dframe
	ret
;	End

;	Proc:dx_eq
dx_eq:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_expr
	mov [Dframe-32],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-32]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; b 24  
	mov D11,0
	call do_expr
	mov [Dframe-40],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-40]	; T2  
	mov [Dframe-16],D0	; bx -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,4
	call gen_temp
	mov [Dframe-48],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-48]	; T3  
	mov [Dframe-24],D0	; cx -24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,29
	mov D11,[Dframe-24]	; cx -24  
	mov D12,[Dframe-8]	; ax -8  
	mov D13,[Dframe-16]	; bx -16  
	call gentc3
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-56],D0	; T4  
; ------------------------------ move
	mov A0,[Dframe+32]	; cond 32  
	mov D13,[Dframe-56]	; T4 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-24]	; cx -24  
	jmp L4436
; ------------------------------ label
L4436:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:do_procdef
do_procdef:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 320

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe+16]	; p 16  
	mov [currproc],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call settcdest
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call inittccode
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [loopindex],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-8],A0	; nparams -8  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; d -32  
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call createfwdlabel
	mov [Dframe-48],A0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-48]	; T1  
	mov [retindex],A0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-72],W0	; T4  
; ------------------------------ widen
	movsx A0,word [Dframe-72]	; T4  
	mov dword[Dframe-80],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T5  
	mov qword[Dframe-64],D0	; T3  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-64]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-56],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T2  
	cmp A0,20
	jz L4439
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-104],W0	; T8  
; ------------------------------ widen
	movsx A0,word [Dframe-104]	; T8  
	mov dword[Dframe-112],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-112]	; T9  
	mov qword[Dframe-96],D0	; T7  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-96]	; T7  
	mov A0, [D0+D1*4]
	mov [Dframe-88],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-88]	; T6  
	cmp A0,21
	jnz L4438
; ------------------------------ label
L4439:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,16
	call gen_temp
	mov [Dframe-120],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-120]	; T10  
	mov [Dframe-40],D0	; tx -40  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,6
	mov D11,[Dframe-40]	; tx -40  
	call gentc1
	add Dstack, 32
; ------------------------------ label
L4438:
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-128],D0	; T11  
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-128]	; T11  
	call do_stmt
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-136],W0	; T12  
; ------------------------------ widen
	movsx A0,word [Dframe-136]	; T12  
	mov dword[Dframe-144],A0	; T13  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T13  
	cmp A0,1
	jz L4440
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,72
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T14  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-152]	; T14  
	call checkblockreturn
	mov [Dframe-160],A0	; T15  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-160]	; T15  
	and A0,A0
	jnz L4441
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-168],D0	; T16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-168]	; T16  
	mov D11,KK1083
	call strcmp
	mov [Dframe-176],A0	; T17  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T17  
	cmp A0,0
	jnz L4442
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,38
	mov A11,[retindex]
	call gentc_label
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-184],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,0
	mov A11,4
	call gen_int
	mov [Dframe-208],D0	; T20  
	add Dstack, 32
; ------------------------------ getptr
	lea D10,[Dframe-200]	; T19  
	mov D11,[Dframe-208]	; T20  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ move
	mov D10,[Dframe-184]	; T18  
	lea D11,[Dframe-200]	; T19  
	mov D12,16
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ label
L4442:
; ------------------------------ label
L4441:
; ------------------------------ label
L4440:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[retindex]
	call definefwdlabel
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,39
	call gentc
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccode]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-216],D0	; T21  
; ------------------------------ move
	mov A0,[currtempno]
	mov D13,[Dframe-216]	; T21 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccode]
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-224],D0	; T22  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[currtempno]
	call pcm_alloc
	mov [Dframe-232],D0	; T23  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-232]	; T23  
	mov D13,[Dframe-224]	; T22 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccode]
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-240],D0	; T24  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[currtempno]
	call pcm_alloc
	mov [Dframe-248],D0	; T25  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-248]	; T25  
	mov D13,[Dframe-240]	; T24 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[tccode]
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-264],D0	; T27  
; ------------------------------ getaddr
	lea D0,[opndtypes]
	mov [Dframe-272],D0	; T28  
; ------------------------------ widen
	movsx D0,dword[currtempno]
	mov qword[Dframe-280],D0	; T29  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-264]	; T27  
	mov D11,[Dframe-272]	; T28  
	mov D12,[Dframe-280]	; T29  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[tccode]
	mov A1,16
	mov D0, [D0+D1]
	mov [Dframe-296],D0	; T31  
; ------------------------------ getaddr
	lea D0,[opndsizes]
	mov [Dframe-304],D0	; T32  
; ------------------------------ widen
	movsx D0,dword[currtempno]
	mov qword[Dframe-312],D0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-296]	; T31  
	mov D11,[Dframe-304]	; T32  
	mov D12,[Dframe-312]	; T33  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[Dframe+16]	; p 16  
	mov A1,56
	lea D0, [D0+D1]
	mov [Dframe-320],D0	; T34  
; ------------------------------ move
	mov D0,[tccode]
	mov D13,[Dframe-320]	; T34 *
	mov qword[D13],D0
; ------------------------------ label
L4437:
; ------------------------------ hardret
	add Dstack, 320
	pop Dframe
	ret
;	End

;	Proc:dx_derefoffset
dx_derefoffset:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
	mov [Dframe+40], D13
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-64],A0	; opcode -64  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,0
	mov A0, [D0+D1]
	mov [Dframe-56],A0	; scale -56  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; scale -56  
	cmp A0,0
	jnz L4444
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-56],A0	; scale -56  
; ------------------------------ label
L4444:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe+40]	; c 40  
	and D0,D0
	jz L4445
; ------------------------------ index
	mov D0,[Dframe+40]	; c 40  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-88],D0	; T2  
; ------------------------------ jump
	jmp	L4446
; ------------------------------ label
L4445:
; ------------------------------ move
	mov D0,0
	mov [Dframe-88],D0	; T2  
; ------------------------------ label
L4446:
; ------------------------------ truncate
	mov D0,[Dframe-88]	; T2  
	mov A0,A0
	mov [Dframe-80],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-80]	; T1  
	mov [Dframe-60],A0	; offset -60  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; opcode -64  
	cmp A0,57
	jz L4449
; ------------------------------ jumpfalse
	mov A0,[Dframe+48]	; lv 48  
	and A0,A0
	jz L4447
; ------------------------------ label
L4449:
; ------------------------------ move
	mov A0,10
	mov [Dframe-96],A0	; T3  
; ------------------------------ jump
	jmp	L4448
; ------------------------------ label
L4447:
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-96],A0	; T3  
; ------------------------------ label
L4448:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+56]	; dest 56  
	mov A11,[Dframe-96]	; T3  
	call gen_dest
	mov [Dframe-104],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-104]	; T4  
	mov [Dframe-32],D0	; tx -32  
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,40
	mov A0, [D0+D1]
	mov [Dframe-112],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T5  
	cmp A0,4
	jnz L4450
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-128],D0	; T7  
; ------------------------------ index
	mov D0,[Dframe-128]	; T7  
	mov A1,110
	mov W0, [D0+D1]
	mov [Dframe-120],W0	; T6  
; ------------------------------ widen
	movsx A0,word [Dframe-120]	; T6  
	mov dword[Dframe-136],A0	; T8  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,[Dframe-136]	; T8  
	call isstructunion
	mov [Dframe-144],A0	; T9  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-144]	; T9  
	and A0,A0
	jnz L4450
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+24]	; a 24  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-152],D0	; T10  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-152]	; T10  
	call gen_addr
	mov [Dframe-160],D0	; T11  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-160]	; T11  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ jump
	jmp	L4451
; ------------------------------ label
L4450:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; a 24  
	mov D11,0
	call do_expr
	mov [Dframe-168],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-168]	; T12  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ label
L4451:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; b 32  
	mov D11,0
	call do_expr
	mov [Dframe-176],D0	; T13  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-176]	; T13  
	mov [Dframe-24],D0	; ix -24  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; scale -56  
	cmp A0,255
	jg L4453
; ------------------------------ jumpcc
	mov A0,[Dframe-60]	; offset -60  
	cmp A0,-32768
	jl L4453
; ------------------------------ jumpcc
	mov A0,[Dframe-60]	; offset -60  
	cmp A0,32767
	jle L4452
; ------------------------------ label
L4453:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; scale -56  
	cmp A0,1
	jle L4454
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,10
	call gen_temp
	mov [Dframe-184],D0	; T14  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-184]	; T14  
	mov [Dframe-40],D0	; tx2 -40  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-56]	; scale -56  
	mov qword[Dframe-192],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-192]	; T15  
	mov A11,8
	call gen_int
	mov [Dframe-200],D0	; T16  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,42
	mov D11,[Dframe-40]	; tx2 -40  
	mov D12,[Dframe-24]	; ix -24  
	mov D13,[Dframe-200]	; T16  
	call gentc3
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-40]	; tx2 -40  
	mov [Dframe-24],D0	; ix -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-56],A0	; scale -56  
; ------------------------------ label
L4454:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe-60]	; offset -60  
	and A0,A0
	jz L4455
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,10
	call gen_temp
	mov [Dframe-208],D0	; T17  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-208]	; T17  
	mov [Dframe-40],D0	; tx2 -40  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-60]	; offset -60  
	mov qword[Dframe-216],D0	; T18  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-216]	; T18  
	mov A11,8
	call gen_int
	mov [Dframe-224],D0	; T19  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,40
	mov D11,[Dframe-40]	; tx2 -40  
	mov D12,[Dframe-24]	; ix -24  
	mov D13,[Dframe-224]	; T19  
	call gentc3
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-40]	; tx2 -40  
	mov [Dframe-24],D0	; ix -24  
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [Dframe-60],A0	; offset -60  
; ------------------------------ label
L4455:
; ------------------------------ label
L4452:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+48]	; lv 48  
	and A0,A0
	jz L4456
; ------------------------------ stmt
; ------------------------------ move
	mov A0,17
	mov [Dframe-68],A0	; opc -68  
; ------------------------------ jump
	jmp	L4457
; ------------------------------ label
L4456:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-64]	; opcode -64  
	cmp A0,56
	jnz L4458
; ------------------------------ stmt
; ------------------------------ move
	mov A0,16
	mov [Dframe-68],A0	; opc -68  
; ------------------------------ jump
	jmp	L4459
; ------------------------------ label
L4458:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,18
	mov [Dframe-68],A0	; opc -68  
; ------------------------------ label
L4459:
; ------------------------------ label
L4457:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-68]	; opc -68  
	mov D11,[Dframe-32]	; tx -32  
	mov D12,[Dframe-8]	; ax -8  
	mov D13,[Dframe-24]	; ix -24  
	call gentc3
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,61
	lea D0, [D0+D1]
	mov [Dframe-232],D0	; T20  
; ------------------------------ move
	mov A0,[Dframe-56]	; scale -56  
	mov D13,[Dframe-232]	; T20 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ indexlv
	mov D0,[tccodex]
	mov A1,42
	lea D0, [D0+D1]
	mov [Dframe-240],D0	; T21  
; ------------------------------ move
	mov A0,[Dframe-60]	; offset -60  
	mov D13,[Dframe-240]	; T21 *
	mov word [D13],W0
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+48]	; lv 48  
	and A0,A0
	jz L4460
; ------------------------------ stmt
; ------------------------------ index
	mov D0,[Dframe+16]	; p 16  
	mov A1,52
	mov A0, [D0+D1]
	mov [Dframe-248],A0	; T22  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; tx -32  
	mov A11,[Dframe-248]	; T22  
	call makeindirect
	mov [Dframe-256],D0	; T23  
	add Dstack, 32
; ------------------------------ returnx
	mov D0,[Dframe-256]	; T23  
	jmp L4443
; ------------------------------ label
L4460:
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-32]	; tx -32  
	jmp L4443
; ------------------------------ label
L4443:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

;	Proc:dx_widen
dx_widen:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov [Dframe+32],D0	; dest 32  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; a 16  
	mov D11,0
	call do_expr
	mov [Dframe-24],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T1  
	mov [Dframe-8],D0	; ax -8  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; m 24  
	mov qword[Dframe-40],D0	; T3  
; ------------------------------ index
	lea D0,[ttsize]
	mov D1,[Dframe-40]	; T3  
	mov A0, [D0+D1*4]
	mov [Dframe-32],A0	; T2  
; ------------------------------ index
	mov D0,[Dframe-8]	; ax -8  
	mov A1,12
	mov A0, [D0+D1]
	mov [Dframe-48],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; T2  
	cmp A0,[Dframe-48]	; T4  
	jnz L4462
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-8]	; ax -8  
	jmp L4461
; ------------------------------ label
L4462:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+32]	; dest 32  
	mov A11,[Dframe+24]	; m 24  
	call gen_dest
	mov [Dframe-56],D0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-56]	; T5  
	mov [Dframe-16],D0	; tx -16  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,73
	mov D11,[Dframe-16]	; tx -16  
	mov D12,[Dframe-8]	; ax -8  
	call gentc2
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov D0,[Dframe-16]	; tx -16  
	jmp L4461
; ------------------------------ label
L4461:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:isstructunion
isstructunion:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-16]	; T2  
	mov A0, [D0+D1*4]
	mov [Dframe-8],A0	; T1  
; ------------------------------ jumpcc
	mov A0,[Dframe-8]	; T1  
	cmp A0,20
	jz L4465
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; m 16  
	mov qword[Dframe-32],D0	; T4  
; ------------------------------ index
	lea D0,[ttbasetype]
	mov D1,[Dframe-32]	; T4  
	mov A0, [D0+D1*4]
	mov [Dframe-24],A0	; T3  
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; T3  
	cmp A0,21
	jnz L4464
; ------------------------------ label
L4465:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L4463
; ------------------------------ label
L4464:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L4463
; ------------------------------ label
L4463:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:showoutput
showoutput:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowmodules]
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe-8]	; T1  
	and A0,A0
	jz L4467
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showmodules
	add Dstack, 32
; ------------------------------ label
L4467:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowfiles]
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpfalse
	mov A0,[Dframe-16]	; T2  
	and A0,A0
	jz L4468
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showfiles
	add Dstack, 32
; ------------------------------ label
L4468:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowast]
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ jumpfalse
	mov A0,[Dframe-24]	; T3  
	and A0,A0
	jz L4469
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call showast
	add Dstack, 32
; ------------------------------ label
L4469:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowst]
	mov dword[Dframe-32],A0	; T4  
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; T4  
	and A0,A0
	jz L4470
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1084
	mov A11,1
	call showsttree
	add Dstack, 32
; ------------------------------ label
L4470:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowstflat]
	mov dword[Dframe-40],A0	; T5  
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; T5  
	and A0,A0
	jz L4471
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1085
	call showstflat
	add Dstack, 32
; ------------------------------ label
L4471:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowtypes]
	mov dword[Dframe-48],A0	; T6  
; ------------------------------ jumpfalse
	mov A0,[Dframe-48]	; T6  
	and A0,A0
	jz L4472
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	call printmodelist
	add Dstack, 32
; ------------------------------ label
L4472:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowtcl]
	mov dword[Dframe-56],A0	; T7  
; ------------------------------ jumpfalse
	mov A0,[Dframe-56]	; T7  
	and A0,A0
	jz L4473
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1086
	mov A11,1
	call showtcl
	add Dstack, 32
; ------------------------------ label
L4473:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowasm]
	mov dword[Dframe-64],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; T8  
	and A0,A0
	jz L4474
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,1
	call showasm
	add Dstack, 32
; ------------------------------ label
L4474:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowtiming]
	mov dword[Dframe-72],A0	; T9  
; ------------------------------ jumpfalse
	mov A0,[Dframe-72]	; T9  
	and A0,A0
	jz L4475
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showtiming
	add Dstack, 32
; ------------------------------ label
L4475:
; ------------------------------ label
L4466:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:do_loadmodules
do_loadmodules:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[ninputfiles]
	cmp A0,0
	jnz L4477
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1087
	mov D11,KK1088
	call loaderror
	add Dstack, 32
; ------------------------------ jump
	jmp	L4478
; ------------------------------ label
L4477:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[ninputfiles]
	cmp A0,1
	jnz L4479
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4480
; ------------------------------ label
L4479:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1089
	mov D11,KK1090
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4480:
; ------------------------------ label
L4478:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[nlibfiles]
	and A0,A0
	jz L4481
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1091
	mov D11,KK1092
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4481:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[fverbose]
	and A0,A0
	jz L4482
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[inputfiles]
	mov D1,8
	mov D0, [D0+D1]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1093
	mov D11,KK1094
	mov D12,[Dframe-8]	; T1  
	call printf
	add Dstack, 32
; ------------------------------ label
L4482:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-24],D0	; T3  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-24]	; T3  
	mov A0,A0
	mov [Dframe-16],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-16]	; T2  
	mov [loadstart],A0
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[inputfiles]
	mov D1,8
	mov D0, [D0+D1]
	mov [Dframe-32],D0	; T4  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; T4  
	call loadmainmodule
	mov [Dframe-40],A0	; T5  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-40]	; T5  
	mov [loadstatus],B0
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-56],D0	; T7  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-56]	; T7  
	mov A0,A0
	mov [Dframe-48],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-48]	; T6  
	mov [loadend],A0
; ------------------------------ label
L4476:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:do_preprocess
do_preprocess:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [loadstatus]
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ jumptrue
	mov A0,[Dframe-8]	; T1  
	and A0,A0
	jnz L4484
; ------------------------------ stmt
; ------------------------------ return
	jmp L4483
; ------------------------------ label
L4484:
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[inputfiles]
	mov D1,8
	mov D0, [D0+D1]
	mov [Dframe-16],D0	; T2  
; ------------------------------ widen
	movzx A0,byte [fshowtokens]
	mov dword[Dframe-24],A0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-16]	; T2  
	mov A11,[Dframe-24]	; T3  
	call lex_preprocess_only
	add Dstack, 32
; ------------------------------ label
L4483:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:do_parsemodules
do_parsemodules:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [loadstatus]
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ jumptrue
	mov A0,[Dframe-8]	; T1  
	and A0,A0
	jnz L4486
; ------------------------------ stmt
; ------------------------------ return
	jmp L4485
; ------------------------------ label
L4486:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[fverbose]
	and A0,A0
	jz L4487
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1095
	mov D11,KK1096
	call printf
	add Dstack, 32
; ------------------------------ label
L4487:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-24],D0	; T3  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-24]	; T3  
	mov A0,A0
	mov [Dframe-16],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-16]	; T2  
	mov [parsestart],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,1
	call parsemodule
	mov [Dframe-32],A0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-32]	; T4  
	mov [parsestatus],B0
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-48],D0	; T6  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-48]	; T6  
	mov A0,A0
	mov [Dframe-40],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-40]	; T5  
	mov [parseend],A0
; ------------------------------ label
L4485:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:do_linkmodules
do_linkmodules:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L4488
; ------------------------------ label
L4488:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

;	Proc:do_gen1
do_gen1:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 48

; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [parsestatus]
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ jumptrue
	mov A0,[Dframe-8]	; T1  
	and A0,A0
	jnz L4490
; ------------------------------ stmt
; ------------------------------ return
	jmp L4489
; ------------------------------ label
L4490:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-24],D0	; T3  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-24]	; T3  
	mov A0,A0
	mov [Dframe-16],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-16]	; T2  
	mov [gen1start],A0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[gen1target]
	cmp A0,4997972
	jnz L4491
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,1
	call codegen_tcl
	mov [Dframe-32],A0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-32]	; T4  
	mov [gen1status],B0
; ------------------------------ jump
	jmp	L4492
; ------------------------------ label
L4491:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1097
	mov D11,KK1098
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4492:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-48],D0	; T6  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-48]	; T6  
	mov A0,A0
	mov [Dframe-40],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-40]	; T5  
	mov [gen1end],A0
; ------------------------------ label
L4489:
; ------------------------------ hardret
	add Dstack, 48
	pop Dframe
	ret
;	End

;	Proc:do_gen2
do_gen2:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [gen1status]
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ jumptrue
	mov A0,[Dframe-8]	; T1  
	and A0,A0
	jnz L4494
; ------------------------------ stmt
; ------------------------------ return
	jmp L4493
; ------------------------------ label
L4494:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fgenasm]
	mov dword[Dframe-16],A0	; T2  
; ------------------------------ jumpfalse
	mov A0,[Dframe-16]	; T2  
	and A0,A0
	jz L4495
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[gen2target]
	cmp A0,5067585
	jnz L4496
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov A10,1
	mov D11,[outfile]
	call codegen_asm
	mov [Dframe-24],A0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-24]	; T3  
	mov [gen2status],B0
; ------------------------------ jump
	jmp	L4497
; ------------------------------ label
L4496:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1099
	mov D11,KK1100
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4497:
; ------------------------------ jump
	jmp	L4498
; ------------------------------ label
L4495:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1101
	mov D11,KK1102
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4498:
; ------------------------------ label
L4493:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:do_runprog
do_runprog:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1103
	mov D11,KK1104
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4499:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

;	Proc:loadmainmodule
loadmainmodule:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 768

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ indexref
	lea D0,[moduletable]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-512],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-512]	; T1  
	mov A11,78
	call pcm_clearmem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[sourcefilenames]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-520],D0	; T2  
; ------------------------------ move
	mov D0,KK1105
	mov D13,[Dframe-520]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[sourcefilepaths]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-528],D0	; T3  
; ------------------------------ move
	mov D0,KK1106
	mov D13,[Dframe-528]	; T3 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[sourcefiletext]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-536],D0	; T4  
; ------------------------------ move
	mov D0,KK1107
	mov D13,[Dframe-536]	; T4 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[sourcefilesizes]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-544],D0	; T5  
; ------------------------------ index
	lea D0,[sourcefiletext]
	mov D1,0
	mov D0, [D0+D1]
	mov [Dframe-560],D0	; T7  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-560]	; T7  
	call strlen
	mov [Dframe-568],D0	; T8  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-568]	; T8  
	mov A0,A0
	mov [Dframe-552],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-552]	; T6  
	mov D13,[Dframe-544]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[moduletable]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-576],D0	; T9  
; ------------------------------ move
	mov D0,KK1108
	mov D13,[Dframe-576]	; T9 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[moduletable]
	mov D1,16
	lea D0, [D0+D1]
	mov [Dframe-584],D0	; T10  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-584]	; T10 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,KK1109
	call addnamestr
	mov [Dframe-592],D0	; T11  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,0
	mov D11,[Dframe-592]	; T11  
	mov A12,2
	call createdupldef
	mov [Dframe-600],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-600]	; T12  
	mov [stprogram],D0
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[moduletable]
	mov D1,8
	lea D0, [D0+D1]
	mov [Dframe-608],D0	; T13  
; ------------------------------ move
	mov D0,[stprogram]
	mov D13,[Dframe-608]	; T13 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; filespec 16  
	call checkfile
	mov [Dframe-616],A0	; T14  
	add Dstack, 32
; ------------------------------ jumptrue
	mov A0,[Dframe-616]	; T14  
	and A0,A0
	jnz L4501
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1110
	mov D11,[Dframe+16]	; filespec 16  
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4501:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; filespec 16  
	mov D11,[Dframe+16]	; filespec 16  
	call loadsourcefile
	mov [Dframe-624],A0	; T15  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-624]	; T15  
	mov [Dframe-500],A0	; fileno -500  
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-100]	; modulename -100  
	mov [Dframe-632],D0	; T16  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; filespec 16  
	call extractbasefile
	mov [Dframe-640],D0	; T17  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-632]	; T16  
	mov D11,[Dframe-640]	; T17  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-400]	; path -400  
	mov [Dframe-648],D0	; T18  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; filespec 16  
	call extractpath
	mov [Dframe-656],D0	; T19  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-648]	; T18  
	mov D11,[Dframe-656]	; T19  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[Dframe-400]	; path -400  
	mov D1,0
	mov B0, [D0+D1]
	mov [Dframe-672],B0	; T21  
; ------------------------------ widen
	movzx A0,byte [Dframe-672]	; T21  
	mov dword[Dframe-680],A0	; T22  
; ------------------------------ truncate
	mov A0,[Dframe-680]	; T22  
	and D0,255
	mov [Dframe-664],B0	; T20  
; ------------------------------ jumpfalse
	mov B0,[Dframe-664]	; T20  
	and B0,B0
	jz L4502
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[nsearchdirs]
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[nsearchdirs]
	mov [Dframe-492],A0	; i -492  
; ------------------------------ jump
	jmp	L4505
; ------------------------------ label
L4506:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-492]	; i -492  
	mov A1,1
	sub A0,A1
	mov [Dframe-704],A0	; T25  
; ------------------------------ widen
	movsx D0,dword[Dframe-704]	; T25  
	mov qword[Dframe-696],D0	; T24  
; ------------------------------ indexlv
	lea D0,[searchdirs]
	mov D1,[Dframe-696]	; T24  
	lea D0, [D0+D1*8]
	mov [Dframe-688],D0	; T23  
; ------------------------------ sub
	mov A0,[Dframe-492]	; i -492  
	mov A1,1
	sub A0,A1
	mov [Dframe-728],A0	; T28  
; ------------------------------ sub
	mov A0,[Dframe-728]	; T28  
	mov A1,1
	sub A0,A1
	mov [Dframe-736],A0	; T29  
; ------------------------------ widen
	movsx D0,dword[Dframe-736]	; T29  
	mov qword[Dframe-720],D0	; T27  
; ------------------------------ index
	lea D0,[searchdirs]
	mov D1,[Dframe-720]	; T27  
	mov D0, [D0+D1*8]
	mov [Dframe-712],D0	; T26  
; ------------------------------ move
	mov D0,[Dframe-712]	; T26  
	mov D13,[Dframe-688]	; T23 *
	mov qword[D13],D0
; ------------------------------ label
L4503:
; ------------------------------ stmt
; ------------------------------ decrto
	dec dword[Dframe-492]	; i -492  
; ------------------------------ label
L4505:
; ------------------------------ jumpcc
	mov A0,[Dframe-492]	; i -492  
	cmp A0,2
	jge L4506
; ------------------------------ label
L4504:
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[searchdirs]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-744],D0	; T30  
; ------------------------------ getaddr
	lea D0,[Dframe-400]	; path -400  
	mov [Dframe-752],D0	; T31  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-752]	; T31  
	call pcm_copyheapstring
	mov [Dframe-760],D0	; T32  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-760]	; T32  
	mov D13,[Dframe-744]	; T30 *
	mov qword[D13],D0
; ------------------------------ label
L4502:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-100]	; modulename -100  
	mov [Dframe-768],D0	; T33  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-768]	; T33  
	mov A11,[Dframe-500]	; fileno -500  
	mov A12,3
	call addmodule
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L4500
; ------------------------------ label
L4500:
; ------------------------------ hardret
	add Dstack, 768
	pop Dframe
	ret
;	End

;	Proc:addmodule
addmodule:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-80]	; m -80  
	mov [Dframe-120],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-120]	; T1  
	mov A11,78
	call pcm_clearmem
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-80]	; m -80  
	mov [Dframe-136],D0	; T3  
; ------------------------------ indexlv
	mov D0,[Dframe-136]	; T3  
	mov A1,0
	lea D0, [D0+D1]
	mov [Dframe-128],D0	; T2  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; modulename 16  
	call pcm_copyheapstring
	mov [Dframe-144],D0	; T4  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T4  
	mov D13,[Dframe-128]	; T2 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-80]	; m -80  
	mov [Dframe-160],D0	; T6  
; ------------------------------ indexlv
	mov D0,[Dframe-160]	; T6  
	mov A1,16
	lea D0, [D0+D1]
	mov [Dframe-152],D0	; T5  
; ------------------------------ move
	mov A0,[Dframe+24]	; fileno 24  
	mov D13,[Dframe-152]	; T5 *
	mov dword[D13],A0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-80]	; m -80  
	mov [Dframe-176],D0	; T8  
; ------------------------------ index
	mov D0,[Dframe-176]	; T8  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-168],D0	; T7  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-168]	; T7  
	call addnamestr
	mov [Dframe-184],D0	; T9  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[stprogram]
	mov D11,[Dframe-184]	; T9  
	call createnewmoduledef
	mov [Dframe-192],D0	; T10  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-192]	; T10  
	mov [stmodule],D0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-80]	; m -80  
	mov [Dframe-208],D0	; T12  
; ------------------------------ indexlv
	mov D0,[Dframe-208]	; T12  
	mov A1,8
	lea D0, [D0+D1]
	mov [Dframe-200],D0	; T11  
; ------------------------------ move
	mov D0,[stmodule]
	mov D13,[Dframe-200]	; T11 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[modulelevel]
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nmodules]
	cmp A0,50
	jl L4508
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1111
	mov D11,[Dframe+16]	; modulename 16  
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4508:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[nmodules]
	mov A0,dword[nmodules]
	mov dword[Dframe-224],A0	; T14  
; ------------------------------ widen
	movsx D0,dword[Dframe-224]	; T14  
	mov qword[Dframe-216],D0	; T13  
; ------------------------------ indexref
	lea D0,[moduletable]
	mov D1,[Dframe-216]	; T13  
	imul D1,78
	lea D0, [D0+D1]
	mov [Dframe-112],D0	; pmodule -112  
; ------------------------------ stmt
; ------------------------------ move
	mov D10,[Dframe-112]	; pmodule -112  
	lea D11,[Dframe-80]	; m -80  
	mov D12,78
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-80]	; m -80  
	mov [Dframe-248],D0	; T17  
; ------------------------------ index
	mov D0,[Dframe-248]	; T17  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-240],D0	; T16  
; ------------------------------ indexlv
	mov D0,[Dframe-240]	; T16  
	mov A1,125
	lea D0, [D0+D1]
	mov [Dframe-232],D0	; T15  
; ------------------------------ move
	mov A0,[nmodules]
	mov D13,[Dframe-232]	; T15 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nmodules]
	cmp A0,50
	jl L4509
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1112
	mov D11,[Dframe+16]	; modulename 16  
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4509:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,[nmodules]
	jmp L4507
; ------------------------------ label
L4507:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

;	Proc:initlogfile
initlogfile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowlog]
	mov dword[Dframe-8],A0	; T1  
; ------------------------------ jumptrue
	mov A0,[Dframe-8]	; T1  
	and A0,A0
	jnz L4511
; ------------------------------ stmt
; ------------------------------ return
	jmp L4510
; ------------------------------ label
L4511:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,2
	jnz L4512
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1113
	call remove
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,KK1114
	mov D11,KK1115
	call fopen
	mov [Dframe-16],D0	; T2  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T2  
	mov [logdev],D0
; ------------------------------ jump
	jmp	L4513
; ------------------------------ label
L4512:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,0
	jz L4515
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,1
	jnz L4514
; ------------------------------ label
L4515:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_getstdout
	mov [Dframe-24],D0	; T3  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-24]	; T3  
	mov [logdev],D0
; ------------------------------ label
L4514:
; ------------------------------ label
L4513:
; ------------------------------ label
L4510:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:closelogfile
closelogfile:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 128

; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,2
	jnz L4517
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	call fclose
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-100]	; str -100  
	mov [Dframe-112],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-112]	; T1  
	mov D11,KK1116
	mov D12,KK1117
	call sprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,KK1118
	call checkfile
	mov [Dframe-120],A0	; T2  
	add Dstack, 32
; ------------------------------ jumpfalse
	mov A0,[Dframe-120]	; T2  
	and A0,A0
	jz L4518
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-100]	; str -100  
	mov [Dframe-128],D0	; T3  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-128]	; T3  
	mov A11,1
	mov D12,0
	call os_execwait
	add Dstack, 32
; ------------------------------ jump
	jmp	L4519
; ------------------------------ label
L4518:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1119
	mov D11,KK1120
	mov D12,KK1121
	call printf
	add Dstack, 32
; ------------------------------ label
L4519:
; ------------------------------ jump
	jmp	L4520
; ------------------------------ label
L4517:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[dopause]
	and A0,A0
	jz L4521
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,0
	jz L4521
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1122
	mov D11,KK1123
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call os_getch
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1124
	call printf
	add Dstack, 32
; ------------------------------ label
L4521:
; ------------------------------ label
L4520:
; ------------------------------ label
L4516:
; ------------------------------ hardret
	add Dstack, 128
	pop Dframe
	ret
;	End

;	Proc:initdata
initdata:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call pcm_init
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call lexsetup
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call inittypetables
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call initcclib
	add Dstack, 32
; ------------------------------ label
L4522:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

;	Proc:initsearchdirs
initsearchdirs:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 752

; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[nsearchdirs]
	mov A0,dword[nsearchdirs]
	mov dword[Dframe-632],A0	; T3  
; ------------------------------ sub
	mov A0,[Dframe-632]	; T3  
	mov A1,1
	sub A0,A1
	mov [Dframe-640],A0	; T4  
; ------------------------------ widen
	movsx D0,dword[Dframe-640]	; T4  
	mov qword[Dframe-624],D0	; T2  
; ------------------------------ indexlv
	lea D0,[searchdirs]
	mov D1,[Dframe-624]	; T2  
	lea D0, [D0+D1*8]
	mov [Dframe-616],D0	; T1  
; ------------------------------ move
	mov D0,KK1125
	mov D13,[Dframe-616]	; T1 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nincludepaths]
	cmp A0,0
	jnz L4524
; ------------------------------ stmt
; ------------------------------ indexlv
	lea D0,[includepaths]
	mov D1,0
	lea D0, [D0+D1]
	mov [Dframe-648],D0	; T5  
; ------------------------------ move
	mov D0,KK1126
	mov D13,[Dframe-648]	; T5 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[nincludepaths]
; ------------------------------ label
L4524:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-604],A0	; i -604  
; ------------------------------ jump
	jmp	L4527
; ------------------------------ label
L4528:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-604]	; i -604  
	mov A1,1
	sub A0,A1
	mov [Dframe-688],A0	; T10  
; ------------------------------ widen
	movsx D0,dword[Dframe-688]	; T10  
	mov qword[Dframe-680],D0	; T9  
; ------------------------------ index
	lea D0,[includepaths]
	mov D1,[Dframe-680]	; T9  
	mov D0, [D0+D1*8]
	mov [Dframe-672],D0	; T8  
; ------------------------------ getptr
	mov D0,[Dframe-672]	; T8  
	mov B0, [D0]
	mov [Dframe-664],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-664]	; T7  
	mov dword[Dframe-696],A0	; T11  
; ------------------------------ truncate
	mov A0,[Dframe-696]	; T11  
	and D0,255
	mov [Dframe-656],B0	; T6  
; ------------------------------ jumpfalse
	mov B0,[Dframe-656]	; T6  
	and B0,B0
	jz L4529
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[nsearchdirs]
	mov A0,dword[nsearchdirs]
	mov dword[Dframe-720],A0	; T14  
; ------------------------------ sub
	mov A0,[Dframe-720]	; T14  
	mov A1,1
	sub A0,A1
	mov [Dframe-728],A0	; T15  
; ------------------------------ widen
	movsx D0,dword[Dframe-728]	; T15  
	mov qword[Dframe-712],D0	; T13  
; ------------------------------ indexlv
	lea D0,[searchdirs]
	mov D1,[Dframe-712]	; T13  
	lea D0, [D0+D1*8]
	mov [Dframe-704],D0	; T12  
; ------------------------------ sub
	mov A0,[Dframe-604]	; i -604  
	mov A1,1
	sub A0,A1
	mov [Dframe-752],A0	; T18  
; ------------------------------ widen
	movsx D0,dword[Dframe-752]	; T18  
	mov qword[Dframe-744],D0	; T17  
; ------------------------------ index
	lea D0,[includepaths]
	mov D1,[Dframe-744]	; T17  
	mov D0, [D0+D1*8]
	mov [Dframe-736],D0	; T16  
; ------------------------------ move
	mov D0,[Dframe-736]	; T16  
	mov D13,[Dframe-704]	; T12 *
	mov qword[D13],D0
; ------------------------------ label
L4529:
; ------------------------------ label
L4525:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-604]	; i -604  
; ------------------------------ label
L4527:
; ------------------------------ jumpcc
	mov A0,[Dframe-604]	; i -604  
	cmp A0,[nincludepaths]
	jle L4528
; ------------------------------ label
L4526:
; ------------------------------ label
L4523:
; ------------------------------ hardret
	add Dstack, 752
	pop Dframe
	ret
;	End

;	Proc:showsearchdirs
showsearchdirs:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 80

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1127
	mov D11,KK1128
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[dointheaders]
	and A0,A0
	jz L4531
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1129
	mov D11,KK1130
	call printf
	add Dstack, 32
; ------------------------------ label
L4531:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L4534
; ------------------------------ label
L4535:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-48],A0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-48]	; T5  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ index
	lea D0,[searchdirs]
	mov D1,[Dframe-40]	; T4  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; T3  
; ------------------------------ getptr
	mov D0,[Dframe-32]	; T3  
	mov B0, [D0]
	mov [Dframe-24],B0	; T2  
; ------------------------------ widen
	movzx A0,byte [Dframe-24]	; T2  
	mov dword[Dframe-56],A0	; T6  
; ------------------------------ truncate
	mov A0,[Dframe-56]	; T6  
	and D0,255
	mov [Dframe-16],B0	; T1  
; ------------------------------ jumpfalse
	mov B0,[Dframe-16]	; T1  
	and B0,B0
	jz L4536
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-80],A0	; T9  
; ------------------------------ widen
	movsx D0,dword[Dframe-80]	; T9  
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ index
	lea D0,[searchdirs]
	mov D1,[Dframe-72]	; T8  
	mov D0, [D0+D1*8]
	mov [Dframe-64],D0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1131
	mov A11,[Dframe-4]	; i -4  
	mov D12,KK1132
	mov D13,[Dframe-64]	; T7  
	call printf
	add Dstack, 32
; ------------------------------ jump
	jmp	L4537
; ------------------------------ label
L4536:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1133
	mov A11,[Dframe-4]	; i -4  
	mov D12,KK1134
	call printf
	add Dstack, 32
; ------------------------------ label
L4537:
; ------------------------------ label
L4532:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L4534:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[nsearchdirs]
	jle L4535
; ------------------------------ label
L4533:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1135
	call printf
	add Dstack, 32
; ------------------------------ label
L4530:
; ------------------------------ hardret
	add Dstack, 80
	pop Dframe
	ret
;	End

;	Proc:showast
showast:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[logdest]
	and A0,A0
	jz L4539
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,2
	jnz L4540
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1136
	call fprintf
	add Dstack, 32
; ------------------------------ label
L4540:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1137
	mov A12,[Dframe+16]	; n 16  
	call printcode
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1138
	call fprintf
	add Dstack, 32
; ------------------------------ label
L4539:
; ------------------------------ label
L4538:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:showstflat
showstflat:
	push Dframe
	mov Dframe, Dstack

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[logdest]
	and A0,A0
	jz L4542
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,2
	jnz L4543
; ------------------------------ stmt
; ------------------------------ label
L4543:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1139
	mov D12,KK1140
	mov D13,[Dframe+16]	; caption 16  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	call printstflat
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1141
	call fprintf
	add Dstack, 32
; ------------------------------ label
L4542:
; ------------------------------ label
L4541:
; ------------------------------ hardret
	pop Dframe
	ret
;	End

;	Proc:showsttree
showsttree:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[logdest]
	and A0,A0
	jz L4545
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,2
	jnz L4546
; ------------------------------ stmt
; ------------------------------ label
L4546:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1142
	mov D12,KK1143
	mov D13,[Dframe+16]	; caption 16  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+24]	; n 24  
	mov qword[Dframe-16],D0	; T2  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-16]	; T2  
	imul D1,78
	mov D0, [D0+D1+8]
	mov [Dframe-8],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,[Dframe-8]	; T1  
	mov A12,0
	call printst
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1144
	call fprintf
	add Dstack, 32
; ------------------------------ label
L4545:
; ------------------------------ label
L4544:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:showtcl
showtcl:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 16

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[logdest]
	and A0,A0
	jz L4548
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+16]	; caption 16  
	mov A11,[Dframe+24]	; n 24  
	mov A12,1
	call writetccode
	mov [Dframe-16],D0	; T1  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-16]	; T1  
	mov [Dframe-8],D0	; tclstr -8  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-8]	; tclstr -8  
	mov D11,[logdev]
	call gs_println
	add Dstack, 32
; ------------------------------ label
L4548:
; ------------------------------ label
L4547:
; ------------------------------ hardret
	add Dstack, 16
	pop Dframe
	ret
;	End

;	Proc:showasm
showasm:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

	mov [Dframe+16], D10
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[gen2target]
	cmp A0,5067585
	jnz L4550
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK1145
	mov [Dframe-16],D0	; caption -16  
; ------------------------------ jump
	jmp	L4551
; ------------------------------ label
L4550:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[gen2target]
	cmp A0,67
	jnz L4552
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK1146
	mov [Dframe-16],D0	; caption -16  
; ------------------------------ label
L4552:
; ------------------------------ label
L4551:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe+16]	; n 16  
	mov qword[Dframe-24],D0	; T1  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-24]	; T1  
	imul D1,78
	mov D0, [D0+D1+20]
	mov [Dframe-8],D0	; asmstr -8  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[Dframe-8]	; asmstr -8  
	cmp D0,0
	jnz L4553
; ------------------------------ stmt
; ------------------------------ return
	jmp L4549
; ------------------------------ label
L4553:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[logdest]
	and A0,A0
	jz L4554
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1147
	mov D12,[Dframe-16]	; caption -16  
	mov A13,[Dframe+16]	; n 16  
	call fprintf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[logdev]
	mov D11,KK1148
	mov D12,[Dframe-8]	; asmstr -8  
	call fprintf
	add Dstack, 32
; ------------------------------ label
L4554:
; ------------------------------ label
L4549:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:showmodules
showmodules:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 176

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1149
	mov D11,KK1150
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L4558
; ------------------------------ label
L4559:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-104],D0	; T1  
; ------------------------------ index
	lea D0,[moduletable]
	mov D1,[Dframe-104]	; T1  
	imul D1,78
	lea D11, [D0+D1]
	lea D10,[Dframe-96]	; m -96  
	mov D12,78
	extern memcpy
	sub Dstack,32
	call memcpy
	add Dstack,32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; m -96  
	mov [Dframe-112],D0	; T2  
; ------------------------------ index
	mov D0,[Dframe-112]	; T2  
	mov A1,16
	mov A0, [D0+D1]
	mov [Dframe-16],A0	; fileno -16  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1151
	mov A11,[Dframe-4]	; i -4  
	mov D12,KK1152
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; m -96  
	mov [Dframe-128],D0	; T4  
; ------------------------------ index
	mov D0,[Dframe-128]	; T4  
	mov A1,0
	mov D0, [D0+D1]
	mov [Dframe-120],D0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; fileno -16  
	mov qword[Dframe-144],D0	; T6  
; ------------------------------ index
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-144]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-136],D0	; T5  
; ------------------------------ widen
	movsx D0,dword[Dframe-16]	; fileno -16  
	mov qword[Dframe-160],D0	; T8  
; ------------------------------ index
	lea D0,[sourcefilesizes]
	mov D1,[Dframe-160]	; T8  
	mov A0, [D0+D1*4]
	mov [Dframe-152],A0	; T7  
; ------------------------------ getaddr
	lea D0,[Dframe-96]	; m -96  
	mov [Dframe-176],D0	; T10  
; ------------------------------ index
	mov D0,[Dframe-176]	; T10  
	mov A1,8
	mov D0, [D0+D1]
	mov [Dframe-168],D0	; T9  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	push qword [Dframe-168]	; T9  
	push qword KK1153
	mov A13,[Dframe-152]	; T7  
	push D13
	sub Dstack,32
	mov D10,KK1154
	mov D11,[Dframe-120]	; T3  
	mov D12,[Dframe-136]	; T5  
	mov D13,KK1155
	call printf
	add Dstack, 64
; ------------------------------ label
L4556:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L4558:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[nmodules]
	jle L4559
; ------------------------------ label
L4557:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1156
	call printf
	add Dstack, 32
; ------------------------------ label
L4555:
; ------------------------------ hardret
	add Dstack, 176
	pop Dframe
	ret
;	End

;	Proc:showfiles
showfiles:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1157
	mov D11,KK1158
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L4563
; ------------------------------ label
L4564:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[sourcefilepaths]
	mov D1,[Dframe-24]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; T1  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ index
	lea D0,[sourcefilenames]
	mov D1,[Dframe-40]	; T4  
	mov D0, [D0+D1*8]
	mov [Dframe-32],D0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-56],D0	; T6  
; ------------------------------ index
	lea D0,[sourcefilesizes]
	mov D1,[Dframe-56]	; T6  
	mov A0, [D0+D1*4]
	mov [Dframe-48],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe-48]	; T5  
	push D13
	push qword KK1159
	push qword [Dframe-32]	; T3  
	sub Dstack,32
	mov D10,KK1160
	mov A11,[Dframe-4]	; i -4  
	mov D12,KK1161
	mov D13,[Dframe-16]	; T1  
	call printf
	add Dstack, 64
; ------------------------------ label
L4561:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L4563:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[nsourcefiles]
	jle L4564
; ------------------------------ label
L4562:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1162
	call printf
	add Dstack, 32
; ------------------------------ label
L4560:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:starttiming
starttiming:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 64

; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-24],D0	; T2  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-24]	; T2  
	mov A0,A0
	mov [Dframe-16],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-16]	; T1  
	mov [Dframe-4],A0	; t -4  
; ------------------------------ stmt
; ------------------------------ label
L4568:
; ------------------------------ stmt
; ------------------------------ label
L4566:
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-32],D0	; T3  
	add Dstack, 32
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; t -4  
	mov qword[Dframe-40],D0	; T4  
; ------------------------------ jumpcc
	mov D0,[Dframe-32]	; T3  
	cmp D0,[Dframe-40]	; T4  
	jz L4568
; ------------------------------ label
L4567:
; ------------------------------ stmt
; ------------------------------ callfn
	sub Dstack,32
	call os_clock
	mov [Dframe-56],D0	; T6  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-56]	; T6  
	mov A0,A0
	mov [Dframe-48],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-48]	; T5  
	mov [progstart],A0
; ------------------------------ label
L4565:
; ------------------------------ hardret
	add Dstack, 64
	pop Dframe
	ret
;	End

;	Proc:showtiming
showtiming:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 160

; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[loadend]
	mov A1,[loadstart]
	sub A0,A1
	mov [Dframe-40],A0	; T1  
; ------------------------------ move
	mov A0,[Dframe-40]	; T1  
	mov [Dframe-12],A0	; loadtime -12  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[parseend]
	mov A1,[parsestart]
	sub A0,A1
	mov [Dframe-48],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-48]	; T2  
	mov [Dframe-16],A0	; parsetime -16  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[gen1end]
	mov A1,[gen1start]
	sub A0,A1
	mov [Dframe-56],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-56]	; T3  
	mov [Dframe-20],A0	; codegen1time -20  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[gen2end]
	mov A1,[gen2start]
	sub A0,A1
	mov [Dframe-64],A0	; T4  
; ------------------------------ move
	mov A0,[Dframe-64]	; T4  
	mov [Dframe-24],A0	; codegen2time -24  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[asmwend]
	mov A1,[asmwstart]
	sub A0,A1
	mov [Dframe-72],A0	; T5  
; ------------------------------ move
	mov A0,[Dframe-72]	; T5  
	mov [Dframe-28],A0	; asmwtime -28  
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[progend]
	mov A1,[progstart]
	sub A0,A1
	mov [Dframe-80],A0	; T6  
; ------------------------------ move
	mov A0,[Dframe-80]	; T6  
	mov [Dframe-32],A0	; progtime -32  
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1163
	mov A11,[NALLLINES]
	mov D12,KK1164
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1165
	mov A11,[Dframe-12]	; loadtime -12  
	mov A12,1
	call showlps
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1166
	mov A11,[Dframe-16]	; parsetime -16  
	mov A12,1
	call showlps
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1167
	mov A11,[Dframe-20]	; codegen1time -20  
	mov A12,0
	call showlps
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-12]	; loadtime -12  
	mov A1,[Dframe-16]	; parsetime -16  
	add A0,A1
	mov [Dframe-88],A0	; T7  
; ------------------------------ add
	mov A0,[Dframe-88]	; T7  
	mov A1,[Dframe-20]	; codegen1time -20  
	add A0,A1
	mov [Dframe-96],A0	; T8  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1168
	mov A11,[Dframe-96]	; T8  
	mov A12,1
	call showlps
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1169
	mov A11,[Dframe-24]	; codegen2time -24  
	mov A12,0
	call showlps
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1170
	mov A11,[Dframe-28]	; asmwtime -28  
	mov A12,0
	call showlps
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-16]	; parsetime -16  
	mov A1,[Dframe-20]	; codegen1time -20  
	add A0,A1
	mov [Dframe-104],A0	; T9  
; ------------------------------ add
	mov A0,[Dframe-104]	; T9  
	mov A1,[Dframe-24]	; codegen2time -24  
	add A0,A1
	mov [Dframe-112],A0	; T10  
; ------------------------------ add
	mov A0,[Dframe-112]	; T10  
	mov A1,[Dframe-28]	; asmwtime -28  
	add A0,A1
	mov [Dframe-120],A0	; T11  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1171
	mov A11,[Dframe-120]	; T11  
	mov A12,1
	call showlps
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-12]	; loadtime -12  
	mov A1,[Dframe-16]	; parsetime -16  
	add A0,A1
	mov [Dframe-128],A0	; T12  
; ------------------------------ add
	mov A0,[Dframe-128]	; T12  
	mov A1,[Dframe-20]	; codegen1time -20  
	add A0,A1
	mov [Dframe-136],A0	; T13  
; ------------------------------ add
	mov A0,[Dframe-136]	; T13  
	mov A1,[Dframe-24]	; codegen2time -24  
	add A0,A1
	mov [Dframe-144],A0	; T14  
; ------------------------------ add
	mov A0,[Dframe-144]	; T14  
	mov A1,[Dframe-28]	; asmwtime -28  
	add A0,A1
	mov [Dframe-152],A0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1172
	mov A11,[Dframe-152]	; T15  
	mov A12,1
	call showlps
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1173
	mov A11,[Dframe-32]	; progtime -32  
	mov A12,1
	call showlps
	add Dstack, 32
; ------------------------------ label
L4569:
; ------------------------------ hardret
	add Dstack, 160
	pop Dframe
	ret
;	End

	global showlps
;	Proc:showlps
showlps:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 336

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ move
	mov A0,[Dframe+24]	; t 24  
	mov [Dframe-264],A0	; txi -264  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+24]	; t 24  
	cmp A0,1
	jle L4571
; ------------------------------ stmt
; ------------------------------ float
	cvtsi2sd XMM0,dword[NALLLINES]
	movq [Dframe-288],XMM0	; T1  
; ------------------------------ float
	cvtsi2sd XMM0,dword[Dframe+24]	; t 24  
	movq [Dframe-296],XMM0	; T2  
; ------------------------------ div
	movq XMM0,[Dframe-288]	; T1  
	movq XMM1,[Dframe-296]	; T2  
	divsd XMM0,XMM1
	movq [Dframe-280],XMM0	; lpsx -280  
; ------------------------------ jump
	jmp	L4572
; ------------------------------ label
L4571:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[RR17]
	mov [Dframe-280],D0	; lpsx -280  
; ------------------------------ fix
	movq XMM0,[Dframe-280]	; lpsx -280  
	cvtsd2si A0, XMM0
	mov [Dframe-304],A0	; T3  
; ------------------------------ move
	mov A0,[Dframe-304]	; T3  
	mov [Dframe-260],A0	; lps -260  
; ------------------------------ label
L4572:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[Dframe+32]	; showlps 32  
	and A0,A0
	jz L4573
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-312],D0	; T4  
; ------------------------------ fix
	movq XMM0,[Dframe-280]	; lpsx -280  
	cvtsd2si A0, XMM0
	mov [Dframe-320],A0	; T5  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,8
	mov A13,[Dframe-320]	; T5  
	push D13
	sub Dstack,32
	mov D10,[Dframe-312]	; T4  
	mov D11,KK1174
	mov D12,[Dframe+16]	; caption 16  
	mov A13,[Dframe-264]	; txi -264  
	call sprintf
	add Dstack, 48
; ------------------------------ jump
	jmp	L4574
; ------------------------------ label
L4573:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-328],D0	; T6  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-328]	; T6  
	mov D11,KK1175
	mov D12,[Dframe+16]	; caption 16  
	mov A13,[Dframe-264]	; txi -264  
	call sprintf
	add Dstack, 32
; ------------------------------ label
L4574:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[Dframe-256]	; str -256  
	mov [Dframe-336],D0	; T7  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1176
	mov D11,[Dframe-336]	; T7  
	call printf
	add Dstack, 32
; ------------------------------ label
L4570:
; ------------------------------ hardret
	add Dstack, 336
	pop Dframe
	ret
;	End

;	Proc:getinputoptions
getinputoptions:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 256

; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [Dframe-16],A0	; paramno -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4576
; ------------------------------ label
L4578:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; pmtype -20  
	cmp A0,1
	jnz L4579
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-32]	; name -32  
	call convlcstring
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-24],A0	; sw -24  
; ------------------------------ jump
	jmp	L4582
; ------------------------------ label
L4583:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-24]	; sw -24  
	mov A1,1
	sub A0,A1
	mov [Dframe-72],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-72]	; T3  
	mov qword[Dframe-64],D0	; T2  
; ------------------------------ index
	lea D0,[optionnames]
	mov D1,[Dframe-64]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-56],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; name -32  
	mov D11,[Dframe-56]	; T1  
	call strcmp
	mov [Dframe-80],A0	; T4  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T4  
	cmp A0,0
	jnz L4584
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,[Dframe-24]	; sw -24  
	mov D11,[Dframe-40]	; value -40  
	call do_option
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L151
; ------------------------------ label
L4584:
; ------------------------------ label
L4580:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-24]	; sw -24  
; ------------------------------ label
L4582:
; ------------------------------ jumpcc
	mov A0,[Dframe-24]	; sw -24  
	cmp A0,34
	jle L4583
; ------------------------------ label
L4581:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1177
	mov D11,KK1178
	mov D12,[Dframe-32]	; name -32  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,99
	call exit
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ label
L151: ;<L43>
; ------------------------------ jump
	jmp	L4585
; ------------------------------ label
L4579:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; pmtype -20  
	cmp A0,2
	jnz L4586
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[ninputfiles]
	cmp A0,50
	jl L4587
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1179
	mov D11,KK1180
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4587:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[ninputfiles]
	mov A0,dword[ninputfiles]
	mov dword[Dframe-104],A0	; T7  
; ------------------------------ widen
	movsx D0,dword[Dframe-104]	; T7  
	mov qword[Dframe-96],D0	; T6  
; ------------------------------ indexlv
	lea D0,[inputfiles]
	mov D1,[Dframe-96]	; T6  
	lea D0, [D0+D1*8]
	mov [Dframe-88],D0	; T5  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; name -32  
	call pcm_copyheapstring
	mov [Dframe-112],D0	; T8  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-112]	; T8  
	mov D13,[Dframe-88]	; T5 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L4588
; ------------------------------ label
L4586:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-20]	; pmtype -20  
	cmp A0,3
	jnz L4589
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nlibfiles]
	cmp A0,50
	jl L4590
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1181
	mov D11,KK1182
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4590:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[nlibfiles]
	mov A0,dword[nlibfiles]
	mov dword[Dframe-136],A0	; T11  
; ------------------------------ widen
	movsx D0,dword[Dframe-136]	; T11  
	mov qword[Dframe-128],D0	; T10  
; ------------------------------ indexlv
	lea D0,[libfiles]
	mov D1,[Dframe-128]	; T10  
	lea D0, [D0+D1*8]
	mov [Dframe-120],D0	; T9  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-32]	; name -32  
	call pcm_copyheapstring
	mov [Dframe-144],D0	; T12  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-144]	; T12  
	mov D13,[Dframe-120]	; T9 *
	mov qword[D13],D0
; ------------------------------ label
L4589:
; ------------------------------ label
L4588:
; ------------------------------ label
L4585:
; ------------------------------ label
L4576:
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; paramno -16  
	mov [Dframe-152],D0	; T13  
; ------------------------------ getaddr
	lea D0,[Dframe-32]	; name -32  
	mov [Dframe-160],D0	; T14  
; ------------------------------ getaddr
	lea D0,[Dframe-40]	; value -40  
	mov [Dframe-168],D0	; T15  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-152]	; T13  
	mov D11,[Dframe-160]	; T14  
	mov D12,[Dframe-168]	; T15  
	call nextparam
	mov [Dframe-176],A0	; T16  
	add Dstack, 32
; ------------------------------ move
	mov A0,[Dframe-176]	; T16  
	mov [Dframe-20],A0	; pmtype -20  
; ------------------------------ jumptrue
	mov A0,[Dframe-20]	; pmtype -20  
	and A0,A0
	jnz L4578
; ------------------------------ label
L4577:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fgenasm]
	mov dword[Dframe-184],A0	; T17  
; ------------------------------ jumpcc
	mov A0,[Dframe-184]	; T17  
	cmp A0,0
	jnz L4591
; ------------------------------ widen
	movzx A0,byte [fgenbin]
	mov dword[Dframe-192],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-192]	; T18  
	cmp A0,0
	jnz L4591
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fgenasm],B0
; ------------------------------ label
L4591:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[passes]
	cmp A0,0
	jnz L4592
; ------------------------------ stmt
; ------------------------------ move
	mov A0,29
	mov [passes],A0
; ------------------------------ label
L4592:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowlog]
	mov dword[Dframe-200],A0	; T19  
; ------------------------------ jumpfalse
	mov A0,[Dframe-200]	; T19  
	and A0,A0
	jz L4593
; ------------------------------ jumpcc
	mov A0,[logdest]
	cmp A0,0
	jnz L4593
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [logdest],A0
; ------------------------------ label
L4593:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[ninputfiles]
	cmp A0,0
	jnz L4594
; ------------------------------ widen
	movzx A0,byte [fwriteheaders]
	mov dword[Dframe-208],A0	; T20  
; ------------------------------ jumptrue
	mov A0,[Dframe-208]	; T20  
	and A0,A0
	jnz L4594
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showcaption
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1183
	mov D11,KK1184
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[sysparams]
	mov D1,0
	mov D0, [D0+D1]
	mov [Dframe-216],D0	; T21  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1185
	mov D11,KK1186
	mov D12,[Dframe-216]	; T21  
	mov D13,KK1187
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[sysparams]
	mov D1,0
	mov D0, [D0+D1]
	mov [Dframe-224],D0	; T22  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1188
	mov D11,KK1189
	mov D12,[Dframe-224]	; T22  
	mov D13,KK1190
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ jump
	jmp	L4595
; ------------------------------ label
L4594:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[ninputfiles]
	and A0,A0
	jz L4596
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[gen2target]
	cmp A0,5067585
	jnz L4597
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK1191
	mov [Dframe-48],D0	; ext -48  
; ------------------------------ jump
	jmp	L4598
; ------------------------------ label
L4597:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[gen2target]
	cmp A0,67
	jnz L4599
; ------------------------------ stmt
; ------------------------------ move
	mov D0,KK1192
	mov [Dframe-48],D0	; ext -48  
; ------------------------------ label
L4599:
; ------------------------------ label
L4598:
; ------------------------------ stmt
; ------------------------------ index
	lea D0,[inputfiles]
	mov D1,8
	mov D0, [D0+D1]
	mov [Dframe-232],D0	; T23  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-232]	; T23  
	mov D11,[Dframe-48]	; ext -48  
	call changeext
	mov [Dframe-240],D0	; T24  
	add Dstack, 32
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-240]	; T24  
	call pcm_copyheapstring
	mov [Dframe-248],D0	; T25  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-248]	; T25  
	mov [outfile],D0
; ------------------------------ label
L4596:
; ------------------------------ label
L4595:
; ------------------------------ label
L4575:
; ------------------------------ hardret
	add Dstack, 256
	pop Dframe
	ret
;	End

;	Proc:do_option
do_option:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 192

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,1
	jnz L4601
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [passes],A0
; ------------------------------ jump
	jmp	L4602
; ------------------------------ label
L4601:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,2
	jnz L4603
; ------------------------------ stmt
; ------------------------------ move
	mov A0,3
	mov [passes],A0
; ------------------------------ jump
	jmp	L4604
; ------------------------------ label
L4603:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,3
	jnz L4605
; ------------------------------ stmt
; ------------------------------ move
	mov A0,5
	mov [passes],A0
; ------------------------------ jump
	jmp	L4606
; ------------------------------ label
L4605:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,4
	jnz L4607
; ------------------------------ stmt
; ------------------------------ move
	mov A0,13
	mov [passes],A0
; ------------------------------ jump
	jmp	L4608
; ------------------------------ label
L4607:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,5
	jnz L4609
; ------------------------------ stmt
; ------------------------------ move
	mov A0,29
	mov [passes],A0
; ------------------------------ jump
	jmp	L4610
; ------------------------------ label
L4609:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,6
	jnz L4611
; ------------------------------ stmt
; ------------------------------ move
	mov A0,61
	mov [passes],A0
; ------------------------------ jump
	jmp	L4612
; ------------------------------ label
L4611:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,7
	jnz L4613
; ------------------------------ stmt
; ------------------------------ move
	mov A0,125
	mov [passes],A0
; ------------------------------ jump
	jmp	L4614
; ------------------------------ label
L4613:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,8
	jnz L4615
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fgenasm],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [fgenbin],B0
; ------------------------------ jump
	jmp	L4616
; ------------------------------ label
L4615:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,9
	jnz L4617
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [fgenasm],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fgenbin],B0
; ------------------------------ jump
	jmp	L4618
; ------------------------------ label
L4617:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,10
	jnz L4619
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowoptions],B0
; ------------------------------ jump
	jmp	L4620
; ------------------------------ label
L4619:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,11
	jnz L4621
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowmodules],B0
; ------------------------------ jump
	jmp	L4622
; ------------------------------ label
L4621:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,12
	jnz L4623
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowfiles],B0
; ------------------------------ jump
	jmp	L4624
; ------------------------------ label
L4623:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,13
	jnz L4625
; ------------------------------ stmt
; ------------------------------ move
	mov A0,3
	mov [passes],A0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowtokens],B0
; ------------------------------ jump
	jmp	L4626
; ------------------------------ label
L4625:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,14
	jnz L4627
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowast],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowlog],B0
; ------------------------------ jump
	jmp	L4628
; ------------------------------ label
L4627:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,15
	jnz L4629
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowst],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowlog],B0
; ------------------------------ jump
	jmp	L4630
; ------------------------------ label
L4629:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,16
	jnz L4631
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowstflat],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowlog],B0
; ------------------------------ jump
	jmp	L4632
; ------------------------------ label
L4631:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,21
	jnz L4633
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowtcl],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowlog],B0
; ------------------------------ jump
	jmp	L4634
; ------------------------------ label
L4633:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,22
	jnz L4635
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowasm],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowlog],B0
; ------------------------------ jump
	jmp	L4636
; ------------------------------ label
L4635:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,20
	jnz L4637
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowtypes],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowlog],B0
; ------------------------------ jump
	jmp	L4638
; ------------------------------ label
L4637:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,17
	jnz L4639
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowdis],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowlog],B0
; ------------------------------ jump
	jmp	L4640
; ------------------------------ label
L4639:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,18
	jnz L4641
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowpaths],B0
; ------------------------------ jump
	jmp	L4642
; ------------------------------ label
L4641:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,19
	jnz L4643
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowheaders],B0
; ------------------------------ jump
	jmp	L4644
; ------------------------------ label
L4643:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,23
	jnz L4645
; ------------------------------ stmt
; ------------------------------ move
	mov A0,29
	mov [passes],A0
; ------------------------------ jump
	jmp	L4646
; ------------------------------ label
L4645:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,24
	jnz L4647
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [logdest],A0
; ------------------------------ jump
	jmp	L4648
; ------------------------------ label
L4647:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,25
	jnz L4649
; ------------------------------ stmt
; ------------------------------ move
	mov A0,2
	mov [logdest],A0
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowlog]
	mov dword[Dframe-16],A0	; T1  
; ------------------------------ jumptrue
	mov A0,[Dframe-16]	; T1  
	and A0,A0
	jnz L4650
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowast],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowst],B0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowtcl],B0
; ------------------------------ label
L4650:
; ------------------------------ jump
	jmp	L4651
; ------------------------------ label
L4649:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,26
	jnz L4652
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[nincludepaths]
	cmp A0,20
	jle L4653
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1193
	mov D11,KK1194
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4653:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; value 24  
	call strlen
	mov [Dframe-32],D0	; T3  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-32]	; T3  
	mov A0,A0
	mov [Dframe-24],A0	; T2  
; ------------------------------ move
	mov A0,[Dframe-24]	; T2  
	mov [Dframe-4],A0	; length -4  
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; length -4  
	mov qword[Dframe-72],D0	; T8  
; ------------------------------ indexref
	mov D0,[Dframe+24]	; value 24  
	mov D1,[Dframe-72]	; T8  
	lea D0, [D0+D1]
	mov [Dframe-64],D0	; T7  
; ------------------------------ sub
	mov D0,[Dframe-64]	; T7  
	mov D1,1
	sub D0,D1
	mov [Dframe-80],D0	; T9  
; ------------------------------ getptr
	mov D0,[Dframe-80]	; T9  
	mov B0, [D0]
	mov [Dframe-56],B0	; T6  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T6  
	mov dword[Dframe-88],A0	; T10  
; ------------------------------ truncate
	mov A0,[Dframe-88]	; T10  
	and D0,255
	mov [Dframe-48],B0	; T5  
; ------------------------------ widen
	movzx A0,byte [Dframe-48]	; T5  
	mov dword[Dframe-40],A0	; T4  
; ------------------------------ jumpcc
	mov A0,[Dframe-40]	; T4  
	cmp A0,92
	jz L4655
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; length -4  
	mov qword[Dframe-128],D0	; T15  
; ------------------------------ indexref
	mov D0,[Dframe+24]	; value 24  
	mov D1,[Dframe-128]	; T15  
	lea D0, [D0+D1]
	mov [Dframe-120],D0	; T14  
; ------------------------------ sub
	mov D0,[Dframe-120]	; T14  
	mov D1,1
	sub D0,D1
	mov [Dframe-136],D0	; T16  
; ------------------------------ getptr
	mov D0,[Dframe-136]	; T16  
	mov B0, [D0]
	mov [Dframe-112],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-112]	; T13  
	mov dword[Dframe-144],A0	; T17  
; ------------------------------ truncate
	mov A0,[Dframe-144]	; T17  
	and D0,255
	mov [Dframe-104],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-104]	; T12  
	mov dword[Dframe-96],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-96]	; T11  
	cmp A0,47
	jnz L4654
; ------------------------------ label
L4655:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4656
; ------------------------------ label
L4654:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1195
	mov D11,[Dframe+24]	; value 24  
	call loaderror
	add Dstack, 32
; ------------------------------ label
L4656:
; ------------------------------ stmt
; ------------------------------ preincrx
	inc dword[nincludepaths]
	mov A0,dword[nincludepaths]
	mov dword[Dframe-168],A0	; T20  
; ------------------------------ sub
	mov A0,[Dframe-168]	; T20  
	mov A1,1
	sub A0,A1
	mov [Dframe-176],A0	; T21  
; ------------------------------ widen
	movsx D0,dword[Dframe-176]	; T21  
	mov qword[Dframe-160],D0	; T19  
; ------------------------------ indexlv
	lea D0,[includepaths]
	mov D1,[Dframe-160]	; T19  
	lea D0, [D0+D1*8]
	mov [Dframe-152],D0	; T18  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe+24]	; value 24  
	call pcm_copyheapstring
	mov [Dframe-184],D0	; T22  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-184]	; T22  
	mov D13,[Dframe-152]	; T18 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L4657
; ------------------------------ label
L4652:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,27
	jnz L4658
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fshowtiming],B0
; ------------------------------ jump
	jmp	L4659
; ------------------------------ label
L4658:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,28
	jnz L4660
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fverbose],A0
; ------------------------------ jump
	jmp	L4661
; ------------------------------ label
L4660:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,29
	jnz L4662
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fverbose],A0
; ------------------------------ jump
	jmp	L4663
; ------------------------------ label
L4662:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,30
	jnz L4664
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fquiet],A0
; ------------------------------ jump
	jmp	L4665
; ------------------------------ label
L4664:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,31
	jz L4667
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,32
	jnz L4666
; ------------------------------ label
L4667:
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showhelp
	add Dstack, 32
; ------------------------------ jump
	jmp	L4668
; ------------------------------ label
L4666:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,33
	jnz L4669
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [dointheaders],A0
; ------------------------------ jump
	jmp	L4670
; ------------------------------ label
L4669:
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe+16]	; sw 16  
	cmp A0,34
	jnz L4671
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [fwriteheaders],B0
; ------------------------------ label
L4671:
; ------------------------------ label
L4670:
; ------------------------------ label
L4668:
; ------------------------------ label
L4665:
; ------------------------------ label
L4663:
; ------------------------------ label
L4661:
; ------------------------------ label
L4659:
; ------------------------------ label
L4657:
; ------------------------------ label
L4651:
; ------------------------------ label
L4648:
; ------------------------------ label
L4646:
; ------------------------------ label
L4644:
; ------------------------------ label
L4642:
; ------------------------------ label
L4640:
; ------------------------------ label
L4638:
; ------------------------------ label
L4636:
; ------------------------------ label
L4634:
; ------------------------------ label
L4632:
; ------------------------------ label
L4630:
; ------------------------------ label
L4628:
; ------------------------------ label
L4626:
; ------------------------------ label
L4624:
; ------------------------------ label
L4622:
; ------------------------------ label
L4620:
; ------------------------------ label
L4618:
; ------------------------------ label
L4616:
; ------------------------------ label
L4614:
; ------------------------------ label
L4612:
; ------------------------------ label
L4610:
; ------------------------------ label
L4608:
; ------------------------------ label
L4606:
; ------------------------------ label
L4604:
; ------------------------------ label
L4602:
; ------------------------------ label
L4600:
; ------------------------------ hardret
	add Dstack, 192
	pop Dframe
	ret
;	End

;	Proc:nextparam
	segment .data
	align 4
nextparam.infile:
	dd 0
	align 8
nextparam.filestart:
	dq 0
	align 8
nextparam.fileptr:
	dq 0
nextparam.colonnext:
	db 0
	segment .bss
nextparam.str:	resb 300
	segment .text
nextparam:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 464

	mov [Dframe+16], D10
	mov [Dframe+24], D11
	mov [Dframe+32], D12
; ------------------------------ stmt
; ------------------------------ label
L152: ;<reenter>
; ------------------------------ stmt
; ------------------------------ label
L153: ;<L87>
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[nextparam.infile]
	and A0,A0
	jz L4673
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextparam.fileptr]
	mov [Dframe-40],D0	; T1  
; ------------------------------ getaddr
	lea D0,[Dframe-16]	; item -16  
	mov [Dframe-48],D0	; T2  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-40]	; T1  
	mov D11,[Dframe-48]	; T2  
	call readnextfileitem
	mov [Dframe-56],A0	; T3  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-56]	; T3  
	cmp A0,0
	jnz L4674
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[nextparam.filestart]
	call free
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov [nextparam.infile],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L153
; ------------------------------ label
L4674:
; ------------------------------ jump
	jmp	L4675
; ------------------------------ label
L4673:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [nextparam.colonnext]
	mov dword[Dframe-64],A0	; T4  
; ------------------------------ jumptrue
	mov A0,[Dframe-64]	; T4  
	and A0,A0
	jnz L4677
; ------------------------------ getptr
	mov D0,[Dframe+16]	; paramno 16  
	mov A0, [D0]
	mov [Dframe-72],A0	; T5  
; ------------------------------ jumpcc
	mov A0,[Dframe-72]	; T5  
	cmp A0,[nsysparams]
	jle L4676
; ------------------------------ label
L4677:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L4672
; ------------------------------ label
L4676:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; paramno 16  
	mov A0, [D0]
	mov [Dframe-88],A0	; T7  
; ------------------------------ sub
	mov A0,[Dframe-88]	; T7  
	mov A1,1
	sub A0,A1
	mov [Dframe-96],A0	; T8  
; ------------------------------ widen
	movsx D0,dword[Dframe-96]	; T8  
	mov qword[Dframe-80],D0	; T6  
; ------------------------------ index
	lea D0,[sysparams]
	mov D1,[Dframe-80]	; T6  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; item -16  
; ------------------------------ stmt
; ------------------------------ incrto
	mov D13,[Dframe+16]	; paramno 16 *
	inc dword[D13]
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; item -16  
	call strlen
	mov [Dframe-112],D0	; T10  
	add Dstack, 32
; ------------------------------ truncate
	mov D0,[Dframe-112]	; T10  
	mov A0,A0
	mov [Dframe-104],A0	; T9  
; ------------------------------ move
	mov A0,[Dframe-104]	; T9  
	mov [Dframe-28],A0	; length -28  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; item -16  
	mov B0, [D0]
	mov [Dframe-136],B0	; T13  
; ------------------------------ widen
	movzx A0,byte [Dframe-136]	; T13  
	mov dword[Dframe-144],A0	; T14  
; ------------------------------ truncate
	mov A0,[Dframe-144]	; T14  
	and D0,255
	mov [Dframe-128],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T12  
	mov dword[Dframe-120],A0	; T11  
; ------------------------------ jumpcc
	mov A0,[Dframe-120]	; T11  
	cmp A0,45
	jz L4678
; ------------------------------ widen
	movsx D0,dword[Dframe-28]	; length -28  
	mov qword[Dframe-184],D0	; T19  
; ------------------------------ indexref
	mov D0,[Dframe-16]	; item -16  
	mov D1,[Dframe-184]	; T19  
	lea D0, [D0+D1]
	mov [Dframe-176],D0	; T18  
; ------------------------------ sub
	mov D0,[Dframe-176]	; T18  
	mov D1,1
	sub D0,D1
	mov [Dframe-192],D0	; T20  
; ------------------------------ getptr
	mov D0,[Dframe-192]	; T20  
	mov B0, [D0]
	mov [Dframe-168],B0	; T17  
; ------------------------------ widen
	movzx A0,byte [Dframe-168]	; T17  
	mov dword[Dframe-200],A0	; T21  
; ------------------------------ truncate
	mov A0,[Dframe-200]	; T21  
	and D0,255
	mov [Dframe-160],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T16  
	mov dword[Dframe-152],A0	; T15  
; ------------------------------ jumpcc
	mov A0,[Dframe-152]	; T15  
	cmp A0,58
	jnz L4678
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1196
	mov D11,KK1197
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [nextparam.colonnext],B0
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-28]	; length -28  
	mov qword[Dframe-224],D0	; T24  
; ------------------------------ indexref
	mov D0,[Dframe-16]	; item -16  
	mov D1,[Dframe-224]	; T24  
	lea D0, [D0+D1]
	mov [Dframe-216],D0	; T23  
; ------------------------------ sub
	mov D0,[Dframe-216]	; T23  
	mov D1,1
	sub D0,D1
	mov [Dframe-232],D0	; T25  
; ------------------------------ move
	mov D0,[Dframe-232]	; T25  
	mov [Dframe-208],D0	; T22  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-208]	; T22 *
	mov byte [D13],B0
; ------------------------------ label
L4678:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; item -16  
	mov B0, [D0]
	mov [Dframe-256],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-256]	; T28  
	mov dword[Dframe-264],A0	; T29  
; ------------------------------ truncate
	mov A0,[Dframe-264]	; T29  
	and D0,255
	mov [Dframe-248],B0	; T27  
; ------------------------------ widen
	movzx A0,byte [Dframe-248]	; T27  
	mov dword[Dframe-240],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T26  
	cmp A0,64
	jnz L4679
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe-16]	; item -16  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-272],D0	; T30  
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-272]	; T30  
	call readfile
	mov [Dframe-280],D0	; T31  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-280]	; T31  
	mov [nextparam.fileptr],D0
; ------------------------------ move
	mov D0,[nextparam.fileptr]
	mov [nextparam.filestart],D0
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov D0,[nextparam.filestart]
	cmp D0,0
	jnz L4680
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1198
	mov D11,KK1199
	mov D12,[Dframe-16]	; item -16  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ label
L4680:
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [nextparam.infile],A0
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L153
; ------------------------------ label
L4679:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; item -16  
	mov B0, [D0]
	mov [Dframe-304],B0	; T34  
; ------------------------------ widen
	movzx A0,byte [Dframe-304]	; T34  
	mov dword[Dframe-312],A0	; T35  
; ------------------------------ truncate
	mov A0,[Dframe-312]	; T35  
	and D0,255
	mov [Dframe-296],B0	; T33  
; ------------------------------ widen
	movzx A0,byte [Dframe-296]	; T33  
	mov dword[Dframe-288],A0	; T32  
; ------------------------------ jumpcc
	mov A0,[Dframe-288]	; T32  
	cmp A0,58
	jnz L4681
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L4672
; ------------------------------ label
L4681:
; ------------------------------ label
L4675:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,0
	mov D13,[Dframe+32]	; value 32 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-16]	; item -16  
	mov B0, [D0]
	mov [Dframe-336],B0	; T38  
; ------------------------------ widen
	movzx A0,byte [Dframe-336]	; T38  
	mov dword[Dframe-344],A0	; T39  
; ------------------------------ truncate
	mov A0,[Dframe-344]	; T39  
	and D0,255
	mov [Dframe-328],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-328]	; T37  
	mov dword[Dframe-320],A0	; T36  
; ------------------------------ jumpcc
	mov A0,[Dframe-320]	; T36  
	cmp A0,45
	jnz L4682
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe-16]	; item -16  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-352],D0	; T40  
; ------------------------------ move
	mov D0,[Dframe-352]	; T40  
	mov D13,[Dframe+24]	; name 24 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; item -16  
	mov A11,58
	call strchr
	mov [Dframe-360],D0	; T41  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-360]	; T41  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ stmt
; ------------------------------ jumptrue
	mov D0,[Dframe-8]	; q -8  
	and D0,D0
	jnz L4683
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; item -16  
	mov A11,61
	call strchr
	mov [Dframe-368],D0	; T42  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-368]	; T42  
	mov [Dframe-8],D0	; q -8  
; ------------------------------ label
L4683:
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov D0,[Dframe-8]	; q -8  
	and D0,D0
	jz L4684
; ------------------------------ stmt
; ------------------------------ indexref
	mov D0,[Dframe-8]	; q -8  
	mov D1,1
	lea D0, [D0+D1]
	mov [Dframe-376],D0	; T43  
; ------------------------------ move
	mov D0,[Dframe-376]	; T43  
	mov D13,[Dframe+32]	; value 32 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-8]	; q -8 *
	mov byte [D13],B0
; ------------------------------ label
L4684:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L4672
; ------------------------------ label
L4682:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-16]	; item -16  
	mov A11,0
	call extractext
	mov [Dframe-384],D0	; T44  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-384]	; T44  
	mov [Dframe-24],D0	; fileext -24  
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-16]	; item -16  
	mov D13,[Dframe+24]	; name 24 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-24]	; fileext -24  
	mov B0, [D0]
	mov [Dframe-408],B0	; T47  
; ------------------------------ widen
	movzx A0,byte [Dframe-408]	; T47  
	mov dword[Dframe-416],A0	; T48  
; ------------------------------ truncate
	mov A0,[Dframe-416]	; T48  
	and D0,255
	mov [Dframe-400],B0	; T46  
; ------------------------------ widen
	movzx A0,byte [Dframe-400]	; T46  
	mov dword[Dframe-392],A0	; T45  
; ------------------------------ jumpcc
	mov A0,[Dframe-392]	; T45  
	cmp A0,0
	jnz L4685
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextparam.str]
	mov [Dframe-424],D0	; T49  
; ------------------------------ getptr
	mov D0,[Dframe+24]	; name 24  
	mov D0, [D0]
	mov [Dframe-432],D0	; T50  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-424]	; T49  
	mov D11,[Dframe-432]	; T50  
	call strcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[nextparam.str]
	mov [Dframe-440],D0	; T51  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-440]	; T51  
	mov D11,KK1200
	call addext
	mov [Dframe-448],D0	; T52  
	add Dstack, 32
; ------------------------------ move
	mov D0,[Dframe-448]	; T52  
	mov D13,[Dframe+24]	; name 24 *
	mov qword[D13],D0
; ------------------------------ jump
	jmp	L4686
; ------------------------------ label
L4685:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callfn
	sub Dstack,32
	mov D10,[Dframe-24]	; fileext -24  
	mov D11,KK1201
	call strcmp
	mov [Dframe-456],A0	; T53  
	add Dstack, 32
; ------------------------------ jumpcc
	mov A0,[Dframe-456]	; T53  
	cmp A0,0
	jnz L4687
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,3
	jmp L4672
; ------------------------------ label
L4687:
; ------------------------------ label
L4686:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,2
	jmp L4672
; ------------------------------ label
L4672:
; ------------------------------ hardret
	add Dstack, 464
	pop Dframe
	ret
;	End

;	Proc:readnextfileitem
	segment .bss
readnextfileitem.str:	resb 256
	segment .text
readnextfileitem:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 720

	mov [Dframe+16], D10
	mov [Dframe+24], D11
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe+16]	; fileptr 16  
	mov D0, [D0]
	mov [Dframe-40],D0	; T1  
; ------------------------------ move
	mov D0,[Dframe-40]	; T1  
	mov [Dframe-8],D0	; p -8  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4689
; ------------------------------ label
L4691:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-64],B0	; T4  
; ------------------------------ widen
	movzx A0,byte [Dframe-64]	; T4  
	mov dword[Dframe-72],A0	; T5  
; ------------------------------ truncate
	mov A0,[Dframe-72]	; T5  
	and D0,255
	mov [Dframe-56],B0	; T3  
; ------------------------------ widen
	movzx A0,byte [Dframe-56]	; T3  
	mov dword[Dframe-48],A0	; T2  
; ------------------------------ jumpcc
	mov A0,[Dframe-48]	; T2  
	cmp A0,32
	jz L4693
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-96],B0	; T8  
; ------------------------------ widen
	movzx A0,byte [Dframe-96]	; T8  
	mov dword[Dframe-104],A0	; T9  
; ------------------------------ truncate
	mov A0,[Dframe-104]	; T9  
	and D0,255
	mov [Dframe-88],B0	; T7  
; ------------------------------ widen
	movzx A0,byte [Dframe-88]	; T7  
	mov dword[Dframe-80],A0	; T6  
; ------------------------------ jumpcc
	mov A0,[Dframe-80]	; T6  
	cmp A0,9
	jz L4693
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-128],B0	; T12  
; ------------------------------ widen
	movzx A0,byte [Dframe-128]	; T12  
	mov dword[Dframe-136],A0	; T13  
; ------------------------------ truncate
	mov A0,[Dframe-136]	; T13  
	and D0,255
	mov [Dframe-120],B0	; T11  
; ------------------------------ widen
	movzx A0,byte [Dframe-120]	; T11  
	mov dword[Dframe-112],A0	; T10  
; ------------------------------ jumpcc
	mov A0,[Dframe-112]	; T10  
	cmp A0,13
	jz L4693
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-160],B0	; T16  
; ------------------------------ widen
	movzx A0,byte [Dframe-160]	; T16  
	mov dword[Dframe-168],A0	; T17  
; ------------------------------ truncate
	mov A0,[Dframe-168]	; T17  
	and D0,255
	mov [Dframe-152],B0	; T15  
; ------------------------------ widen
	movzx A0,byte [Dframe-152]	; T15  
	mov dword[Dframe-144],A0	; T14  
; ------------------------------ jumpcc
	mov A0,[Dframe-144]	; T14  
	cmp A0,10
	jnz L4692
; ------------------------------ label
L4693:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-8]	; p -8  
; ------------------------------ jump
	jmp	L4694
; ------------------------------ label
L4692:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-192],B0	; T20  
; ------------------------------ widen
	movzx A0,byte [Dframe-192]	; T20  
	mov dword[Dframe-200],A0	; T21  
; ------------------------------ truncate
	mov A0,[Dframe-200]	; T21  
	and D0,255
	mov [Dframe-184],B0	; T19  
; ------------------------------ widen
	movzx A0,byte [Dframe-184]	; T19  
	mov dword[Dframe-176],A0	; T18  
; ------------------------------ jumpcc
	mov A0,[Dframe-176]	; T18  
	cmp A0,26
	jz L4696
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-224],B0	; T24  
; ------------------------------ widen
	movzx A0,byte [Dframe-224]	; T24  
	mov dword[Dframe-232],A0	; T25  
; ------------------------------ truncate
	mov A0,[Dframe-232]	; T25  
	and D0,255
	mov [Dframe-216],B0	; T23  
; ------------------------------ widen
	movzx A0,byte [Dframe-216]	; T23  
	mov dword[Dframe-208],A0	; T22  
; ------------------------------ jumpcc
	mov A0,[Dframe-208]	; T22  
	cmp A0,0
	jnz L4695
; ------------------------------ label
L4696:
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,0
	jmp L4688
; ------------------------------ jump
	jmp	L4697
; ------------------------------ label
L4695:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L154
; ------------------------------ label
L4697:
; ------------------------------ label
L4694:
; ------------------------------ label
L4689:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L4691
; ------------------------------ label
L4690:
; ------------------------------ stmt
; ------------------------------ label
L154: ;<L92>
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-256],B0	; T28  
; ------------------------------ widen
	movzx A0,byte [Dframe-256]	; T28  
	mov dword[Dframe-264],A0	; T29  
; ------------------------------ truncate
	mov A0,[Dframe-264]	; T29  
	and D0,255
	mov [Dframe-248],B0	; T27  
; ------------------------------ widen
	movzx A0,byte [Dframe-248]	; T27  
	mov dword[Dframe-240],A0	; T26  
; ------------------------------ jumpcc
	mov A0,[Dframe-240]	; T26  
	cmp A0,34
	jnz L4698
; ------------------------------ stmt
; ------------------------------ preincrx
	inc qword[Dframe-8]	; p -8  
	mov D0,qword[Dframe-8]	; p -8  
	mov qword[Dframe-272],D0	; T30  
; ------------------------------ move
	mov D0,[Dframe-272]	; T30  
	mov [Dframe-16],D0	; pstart -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4699
; ------------------------------ label
L4701:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-296],B0	; T33  
; ------------------------------ widen
	movzx A0,byte [Dframe-296]	; T33  
	mov dword[Dframe-304],A0	; T34  
; ------------------------------ truncate
	mov A0,[Dframe-304]	; T34  
	and D0,255
	mov [Dframe-288],B0	; T32  
; ------------------------------ widen
	movzx A0,byte [Dframe-288]	; T32  
	mov dword[Dframe-280],A0	; T31  
; ------------------------------ jumpcc
	mov A0,[Dframe-280]	; T31  
	cmp A0,0
	jz L4703
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-328],B0	; T37  
; ------------------------------ widen
	movzx A0,byte [Dframe-328]	; T37  
	mov dword[Dframe-336],A0	; T38  
; ------------------------------ truncate
	mov A0,[Dframe-336]	; T38  
	and D0,255
	mov [Dframe-320],B0	; T36  
; ------------------------------ widen
	movzx A0,byte [Dframe-320]	; T36  
	mov dword[Dframe-312],A0	; T35  
; ------------------------------ jumpcc
	mov A0,[Dframe-312]	; T35  
	cmp A0,26
	jnz L4702
; ------------------------------ label
L4703:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1202
	mov D11,KK1203
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ jump
	jmp	L4704
; ------------------------------ label
L4702:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-360],B0	; T41  
; ------------------------------ widen
	movzx A0,byte [Dframe-360]	; T41  
	mov dword[Dframe-368],A0	; T42  
; ------------------------------ truncate
	mov A0,[Dframe-368]	; T42  
	and D0,255
	mov [Dframe-352],B0	; T40  
; ------------------------------ widen
	movzx A0,byte [Dframe-352]	; T40  
	mov dword[Dframe-344],A0	; T39  
; ------------------------------ jumpcc
	mov A0,[Dframe-344]	; T39  
	cmp A0,34
	jnz L4705
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe-8]	; p -8  
	inc qword[Dframe-8]	; p -8  
	mov qword[Dframe-376],D0	; T43  
; ------------------------------ move
	mov D0,[Dframe-376]	; T43  
	mov [Dframe-24],D0	; pend -24  
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-400],B0	; T46  
; ------------------------------ widen
	movzx A0,byte [Dframe-400]	; T46  
	mov dword[Dframe-408],A0	; T47  
; ------------------------------ truncate
	mov A0,[Dframe-408]	; T47  
	and D0,255
	mov [Dframe-392],B0	; T45  
; ------------------------------ widen
	movzx A0,byte [Dframe-392]	; T45  
	mov dword[Dframe-384],A0	; T44  
; ------------------------------ jumpcc
	mov A0,[Dframe-384]	; T44  
	cmp A0,44
	jnz L4706
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-8]	; p -8  
; ------------------------------ label
L4706:
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L155
; ------------------------------ label
L4705:
; ------------------------------ label
L4704:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-8]	; p -8  
; ------------------------------ label
L4699:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L4701
; ------------------------------ label
L4700:
; ------------------------------ stmt
; ------------------------------ label
L155: ;<L98>
; ------------------------------ jump
	jmp	L4707
; ------------------------------ label
L4698:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [Dframe-16],D0	; pstart -16  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L4708
; ------------------------------ label
L4710:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-432],B0	; T50  
; ------------------------------ widen
	movzx A0,byte [Dframe-432]	; T50  
	mov dword[Dframe-440],A0	; T51  
; ------------------------------ truncate
	mov A0,[Dframe-440]	; T51  
	and D0,255
	mov [Dframe-424],B0	; T49  
; ------------------------------ widen
	movzx A0,byte [Dframe-424]	; T49  
	mov dword[Dframe-416],A0	; T48  
; ------------------------------ jumpcc
	mov A0,[Dframe-416]	; T48  
	cmp A0,0
	jz L4712
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-464],B0	; T54  
; ------------------------------ widen
	movzx A0,byte [Dframe-464]	; T54  
	mov dword[Dframe-472],A0	; T55  
; ------------------------------ truncate
	mov A0,[Dframe-472]	; T55  
	and D0,255
	mov [Dframe-456],B0	; T53  
; ------------------------------ widen
	movzx A0,byte [Dframe-456]	; T53  
	mov dword[Dframe-448],A0	; T52  
; ------------------------------ jumpcc
	mov A0,[Dframe-448]	; T52  
	cmp A0,26
	jnz L4711
; ------------------------------ label
L4712:
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov [Dframe-24],D0	; pend -24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L156
; ------------------------------ jump
	jmp	L4713
; ------------------------------ label
L4711:
; ------------------------------ stmt
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-496],B0	; T58  
; ------------------------------ widen
	movzx A0,byte [Dframe-496]	; T58  
	mov dword[Dframe-504],A0	; T59  
; ------------------------------ truncate
	mov A0,[Dframe-504]	; T59  
	and D0,255
	mov [Dframe-488],B0	; T57  
; ------------------------------ widen
	movzx A0,byte [Dframe-488]	; T57  
	mov dword[Dframe-480],A0	; T56  
; ------------------------------ jumpcc
	mov A0,[Dframe-480]	; T56  
	cmp A0,32
	jz L4715
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-528],B0	; T62  
; ------------------------------ widen
	movzx A0,byte [Dframe-528]	; T62  
	mov dword[Dframe-536],A0	; T63  
; ------------------------------ truncate
	mov A0,[Dframe-536]	; T63  
	and D0,255
	mov [Dframe-520],B0	; T61  
; ------------------------------ widen
	movzx A0,byte [Dframe-520]	; T61  
	mov dword[Dframe-512],A0	; T60  
; ------------------------------ jumpcc
	mov A0,[Dframe-512]	; T60  
	cmp A0,9
	jz L4715
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-560],B0	; T66  
; ------------------------------ widen
	movzx A0,byte [Dframe-560]	; T66  
	mov dword[Dframe-568],A0	; T67  
; ------------------------------ truncate
	mov A0,[Dframe-568]	; T67  
	and D0,255
	mov [Dframe-552],B0	; T65  
; ------------------------------ widen
	movzx A0,byte [Dframe-552]	; T65  
	mov dword[Dframe-544],A0	; T64  
; ------------------------------ jumpcc
	mov A0,[Dframe-544]	; T64  
	cmp A0,44
	jz L4715
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-592],B0	; T70  
; ------------------------------ widen
	movzx A0,byte [Dframe-592]	; T70  
	mov dword[Dframe-600],A0	; T71  
; ------------------------------ truncate
	mov A0,[Dframe-600]	; T71  
	and D0,255
	mov [Dframe-584],B0	; T69  
; ------------------------------ widen
	movzx A0,byte [Dframe-584]	; T69  
	mov dword[Dframe-576],A0	; T68  
; ------------------------------ jumpcc
	mov A0,[Dframe-576]	; T68  
	cmp A0,13
	jz L4715
; ------------------------------ getptr
	mov D0,[Dframe-8]	; p -8  
	mov B0, [D0]
	mov [Dframe-624],B0	; T74  
; ------------------------------ widen
	movzx A0,byte [Dframe-624]	; T74  
	mov dword[Dframe-632],A0	; T75  
; ------------------------------ truncate
	mov A0,[Dframe-632]	; T75  
	and D0,255
	mov [Dframe-616],B0	; T73  
; ------------------------------ widen
	movzx A0,byte [Dframe-616]	; T73  
	mov dword[Dframe-608],A0	; T72  
; ------------------------------ jumpcc
	mov A0,[Dframe-608]	; T72  
	cmp A0,10
	jnz L4714
; ------------------------------ label
L4715:
; ------------------------------ stmt
; ------------------------------ postincrx
	mov D0,[Dframe-8]	; p -8  
	inc qword[Dframe-8]	; p -8  
	mov qword[Dframe-640],D0	; T76  
; ------------------------------ move
	mov D0,[Dframe-640]	; T76  
	mov [Dframe-24],D0	; pend -24  
; ------------------------------ stmt
; ------------------------------ jump
	jmp	L156
; ------------------------------ label
L4714:
; ------------------------------ label
L4713:
; ------------------------------ stmt
; ------------------------------ incrto
	inc qword[Dframe-8]	; p -8  
; ------------------------------ label
L4708:
; ------------------------------ jumptrue
	mov A0,1
	and A0,A0
	jnz L4710
; ------------------------------ label
L4709:
; ------------------------------ stmt
; ------------------------------ label
L156: ;<L103>
; ------------------------------ label
L4707:
; ------------------------------ stmt
; ------------------------------ sub
	mov D0,[Dframe-24]	; pend -24  
	mov D1,[Dframe-16]	; pstart -16  
	sub D0,D1
	mov [Dframe-656],D0	; T78  
; ------------------------------ truncate
	mov D0,[Dframe-656]	; T78  
	mov A0,A0
	mov [Dframe-648],A0	; T77  
; ------------------------------ move
	mov A0,[Dframe-648]	; T77  
	mov [Dframe-32],A0	; n -32  
; ------------------------------ stmt
; ------------------------------ jumpcc
	mov A0,[Dframe-32]	; n -32  
	cmp A0,256
	jl L4716
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1204
	mov D11,KK1205
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ label
L4716:
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[readnextfileitem.str]
	mov [Dframe-664],D0	; T79  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; n -32  
	mov qword[Dframe-680],D0	; T81  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,[Dframe-664]	; T79  
	mov D11,[Dframe-16]	; pstart -16  
	mov D12,[Dframe-680]	; T81  
	call memcpy
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ add
	mov A0,[Dframe-32]	; n -32  
	mov A1,1
	add A0,A1
	mov [Dframe-704],A0	; T84  
; ------------------------------ sub
	mov A0,[Dframe-704]	; T84  
	mov A1,1
	sub A0,A1
	mov [Dframe-712],A0	; T85  
; ------------------------------ widen
	movsx D0,dword[Dframe-712]	; T85  
	mov qword[Dframe-696],D0	; T83  
; ------------------------------ indexlv
	lea D0,[readnextfileitem.str]
	mov D1,[Dframe-696]	; T83  
	lea D0, [D0+D1]
	mov [Dframe-688],D0	; T82  
; ------------------------------ move
	mov A0,0
	mov D13,[Dframe-688]	; T82 *
	mov byte [D13],B0
; ------------------------------ stmt
; ------------------------------ getaddr
	lea D0,[readnextfileitem.str]
	mov [Dframe-720],D0	; T86  
; ------------------------------ move
	mov D0,[Dframe-720]	; T86  
	mov D13,[Dframe+24]	; item 24 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ move
	mov D0,[Dframe-8]	; p -8  
	mov D13,[Dframe+16]	; fileptr 16 *
	mov qword[D13],D0
; ------------------------------ stmt
; ------------------------------ returnx
	mov A0,1
	jmp L4688
; ------------------------------ label
L4688:
; ------------------------------ hardret
	add Dstack, 720
	pop Dframe
	ret
;	End

;	Proc:showoptions
showoptions:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 224

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1206
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1207
	mov D11,KK1208
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1209
	mov D11,KK1210
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,1
	and A0,A1
	mov [Dframe-16],A0	; T1  
; ------------------------------ jumpfalse
	mov A0,[Dframe-16]	; T1  
	and A0,A0
	jz L4718
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1211
	mov D11,KK1212
	call printf
	add Dstack, 32
; ------------------------------ label
L4718:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,2
	and A0,A1
	mov [Dframe-24],A0	; T2  
; ------------------------------ jumpfalse
	mov A0,[Dframe-24]	; T2  
	and A0,A0
	jz L4719
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1213
	mov D11,KK1214
	call printf
	add Dstack, 32
; ------------------------------ label
L4719:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,4
	and A0,A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ jumpfalse
	mov A0,[Dframe-32]	; T3  
	and A0,A0
	jz L4720
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1215
	mov D11,KK1216
	call printf
	add Dstack, 32
; ------------------------------ label
L4720:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,8
	and A0,A1
	mov [Dframe-40],A0	; T4  
; ------------------------------ jumpfalse
	mov A0,[Dframe-40]	; T4  
	and A0,A0
	jz L4721
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1217
	mov D11,KK1218
	call printf
	add Dstack, 32
; ------------------------------ label
L4721:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,16
	and A0,A1
	mov [Dframe-48],A0	; T5  
; ------------------------------ jumpfalse
	mov A0,[Dframe-48]	; T5  
	and A0,A0
	jz L4722
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1219
	mov D11,KK1220
	call printf
	add Dstack, 32
; ------------------------------ label
L4722:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,32
	and A0,A1
	mov [Dframe-56],A0	; T6  
; ------------------------------ jumpfalse
	mov A0,[Dframe-56]	; T6  
	and A0,A0
	jz L4723
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1221
	mov D11,KK1222
	call printf
	add Dstack, 32
; ------------------------------ label
L4723:
; ------------------------------ stmt
; ------------------------------ iand
	mov A0,[passes]
	mov A1,64
	and A0,A1
	mov [Dframe-64],A0	; T7  
; ------------------------------ jumpfalse
	mov A0,[Dframe-64]	; T7  
	and A0,A0
	jz L4724
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1223
	mov D11,KK1224
	call printf
	add Dstack, 32
; ------------------------------ label
L4724:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowoptions]
	mov dword[Dframe-72],A0	; T8  
; ------------------------------ jumpfalse
	mov A0,[Dframe-72]	; T8  
	and A0,A0
	jz L4725
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1225
	mov D11,KK1226
	call printf
	add Dstack, 32
; ------------------------------ label
L4725:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowmodules]
	mov dword[Dframe-80],A0	; T9  
; ------------------------------ jumpfalse
	mov A0,[Dframe-80]	; T9  
	and A0,A0
	jz L4726
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1227
	mov D11,KK1228
	call printf
	add Dstack, 32
; ------------------------------ label
L4726:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowtokens]
	mov dword[Dframe-88],A0	; T10  
; ------------------------------ jumpfalse
	mov A0,[Dframe-88]	; T10  
	and A0,A0
	jz L4727
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1229
	mov D11,KK1230
	call printf
	add Dstack, 32
; ------------------------------ label
L4727:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowast]
	mov dword[Dframe-96],A0	; T11  
; ------------------------------ jumpfalse
	mov A0,[Dframe-96]	; T11  
	and A0,A0
	jz L4728
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1231
	mov D11,KK1232
	call printf
	add Dstack, 32
; ------------------------------ label
L4728:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowst]
	mov dword[Dframe-104],A0	; T12  
; ------------------------------ jumpfalse
	mov A0,[Dframe-104]	; T12  
	and A0,A0
	jz L4729
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1233
	mov D11,KK1234
	call printf
	add Dstack, 32
; ------------------------------ label
L4729:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowstflat]
	mov dword[Dframe-112],A0	; T13  
; ------------------------------ jumpfalse
	mov A0,[Dframe-112]	; T13  
	and A0,A0
	jz L4730
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1235
	mov D11,KK1236
	call printf
	add Dstack, 32
; ------------------------------ label
L4730:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowtypes]
	mov dword[Dframe-120],A0	; T14  
; ------------------------------ jumpfalse
	mov A0,[Dframe-120]	; T14  
	and A0,A0
	jz L4731
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1237
	mov D11,KK1238
	call printf
	add Dstack, 32
; ------------------------------ label
L4731:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowtcl]
	mov dword[Dframe-128],A0	; T15  
; ------------------------------ jumpfalse
	mov A0,[Dframe-128]	; T15  
	and A0,A0
	jz L4732
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1239
	mov D11,KK1240
	call printf
	add Dstack, 32
; ------------------------------ label
L4732:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowasm]
	mov dword[Dframe-136],A0	; T16  
; ------------------------------ jumpfalse
	mov A0,[Dframe-136]	; T16  
	and A0,A0
	jz L4733
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1241
	mov D11,KK1242
	call printf
	add Dstack, 32
; ------------------------------ label
L4733:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowdis]
	mov dword[Dframe-144],A0	; T17  
; ------------------------------ jumpfalse
	mov A0,[Dframe-144]	; T17  
	and A0,A0
	jz L4734
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1243
	mov D11,KK1244
	call printf
	add Dstack, 32
; ------------------------------ label
L4734:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowtiming]
	mov dword[Dframe-152],A0	; T18  
; ------------------------------ jumpfalse
	mov A0,[Dframe-152]	; T18  
	and A0,A0
	jz L4735
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1245
	mov D11,KK1246
	call printf
	add Dstack, 32
; ------------------------------ label
L4735:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowlog]
	mov dword[Dframe-160],A0	; T19  
; ------------------------------ jumpfalse
	mov A0,[Dframe-160]	; T19  
	and A0,A0
	jz L4736
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1247
	mov D11,KK1248
	call printf
	add Dstack, 32
; ------------------------------ label
L4736:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fgenasm]
	mov dword[Dframe-168],A0	; T20  
; ------------------------------ jumpfalse
	mov A0,[Dframe-168]	; T20  
	and A0,A0
	jz L4737
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1249
	mov D11,KK1250
	call printf
	add Dstack, 32
; ------------------------------ label
L4737:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fgenbin]
	mov dword[Dframe-176],A0	; T21  
; ------------------------------ jumpfalse
	mov A0,[Dframe-176]	; T21  
	and A0,A0
	jz L4738
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1251
	mov D11,KK1252
	call printf
	add Dstack, 32
; ------------------------------ label
L4738:
; ------------------------------ stmt
; ------------------------------ widen
	movzx A0,byte [fshowlog]
	mov dword[Dframe-184],A0	; T22  
; ------------------------------ jumpfalse
	mov A0,[Dframe-184]	; T22  
	and A0,A0
	jz L4739
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1253
	mov D11,KK1254
	call printf
	add Dstack, 32
; ------------------------------ label
L4739:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1255
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ jumpfalse
	mov A0,[dointheaders]
	and A0,A0
	jz L4740
; ------------------------------ move
	mov D0,KK1256
	mov [Dframe-192],D0	; T23  
; ------------------------------ jump
	jmp	L4741
; ------------------------------ label
L4740:
; ------------------------------ move
	mov D0,KK1257
	mov [Dframe-192],D0	; T23  
; ------------------------------ label
L4741:
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1258
	mov D11,KK1259
	mov D12,[Dframe-192]	; T23  
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ callproc
	sub Dstack,32
	call showincludepaths
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1260
	mov D11,KK1261
	mov A12,[ninputfiles]
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L4744
; ------------------------------ label
L4745:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-208],D0	; T25  
; ------------------------------ index
	lea D0,[inputfiles]
	mov D1,[Dframe-208]	; T25  
	mov D0, [D0+D1*8]
	mov [Dframe-200],D0	; T24  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1262
	mov A11,[Dframe-4]	; i -4  
	mov D12,[Dframe-200]	; T24  
	call printf
	add Dstack, 32
; ------------------------------ label
L4742:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L4744:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[ninputfiles]
	jle L4745
; ------------------------------ label
L4743:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1263
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1264
	mov D11,KK1265
	mov A12,[nlibfiles]
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L4748
; ------------------------------ label
L4749:
; ------------------------------ stmt
; ------------------------------ widen
	movsx D0,dword[Dframe-4]	; i -4  
	mov qword[Dframe-224],D0	; T27  
; ------------------------------ index
	lea D0,[libfiles]
	mov D1,[Dframe-224]	; T27  
	mov D0, [D0+D1*8]
	mov [Dframe-216],D0	; T26  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1266
	mov A11,[Dframe-4]	; i -4  
	mov D12,[Dframe-216]	; T26  
	call printf
	add Dstack, 32
; ------------------------------ label
L4746:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L4748:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[nlibfiles]
	jle L4749
; ------------------------------ label
L4747:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1267
	call printf
	add Dstack, 32
; ------------------------------ label
L4717:
; ------------------------------ hardret
	add Dstack, 224
	pop Dframe
	ret
;	End

;	Proc:showincludepaths
showincludepaths:
	push Dframe
	mov Dframe, Dstack
	sub Dstack, 32

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1268
	mov D11,KK1269
	mov A12,[nincludepaths]
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ move
	mov A0,1
	mov [Dframe-4],A0	; i -4  
; ------------------------------ jump
	jmp	L4753
; ------------------------------ label
L4754:
; ------------------------------ stmt
; ------------------------------ sub
	mov A0,[Dframe-4]	; i -4  
	mov A1,1
	sub A0,A1
	mov [Dframe-32],A0	; T3  
; ------------------------------ widen
	movsx D0,dword[Dframe-32]	; T3  
	mov qword[Dframe-24],D0	; T2  
; ------------------------------ index
	lea D0,[includepaths]
	mov D1,[Dframe-24]	; T2  
	mov D0, [D0+D1*8]
	mov [Dframe-16],D0	; T1  
; ------------------------------ param
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1270
	mov A11,[Dframe-4]	; i -4  
	mov D12,[Dframe-16]	; T1  
	call printf
	add Dstack, 32
; ------------------------------ label
L4751:
; ------------------------------ stmt
; ------------------------------ incrto
	inc dword[Dframe-4]	; i -4  
; ------------------------------ label
L4753:
; ------------------------------ jumpcc
	mov A0,[Dframe-4]	; i -4  
	cmp A0,[nincludepaths]
	jle L4754
; ------------------------------ label
L4752:
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1271
	call printf
	add Dstack, 32
; ------------------------------ label
L4750:
; ------------------------------ hardret
	add Dstack, 32
	pop Dframe
	ret
;	End

;	Proc:showhelp
	segment .data
	align 8
showhelp.helptext:
	dq KK1272
	segment .text
showhelp:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1273
	mov D11,[showhelp.helptext]
	call printf
	add Dstack, 32
; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov A10,0
	call exit
	add Dstack, 32
; ------------------------------ label
L4755:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

;	Proc:showcaption
showcaption:
	sub Dstack, 8

; ------------------------------ stmt
; ------------------------------ param
; ------------------------------ param
; ------------------------------ callproc
	sub Dstack,32
	mov D10,KK1274
	mov D11,KK1275
	call printf
	add Dstack, 32
; ------------------------------ label
L4756:
; ------------------------------ hardret
	add Dstack,8
	ret
;	End

	global nsysparams
	segment .bss
	align 4,resb 1
nsysparams:	resb 4
	global sysparams
	align 8,resb 1
sysparams:	resb 256
	global allocupper
	align 4,resb 1
allocupper:	resb 1024
	global alloccode
	align 4,resb 1
alloccode:	resb 4
	global allocbytes
	align 4,resb 1
allocbytes:	resb 4
	global fdebug
	segment .data
	align 4
fdebug:
	dd 0
	global rfsize
	segment .bss
	align 4,resb 1
rfsize:	resb 4
	align 4,resb 1
maxmemory:	resb 4
	align 4,resb 1
maxalloccode:	resb 4
	segment .data
	align 4
show:
	dd 0
	global memtotal
	align 4
memtotal:
	dd 0
	global smallmemtotal
	align 8
smallmemtotal:
	dq 0
	global smallmemobjs
	align 4
smallmemobjs:
	dd 0
	global maxmemtotal
	align 4
maxmemtotal:
	dd 0
	segment .bss
	align 8,resb 1
memalloctable:	resb 800008
	align 4,resb 1
memallocsize:	resb 400004
	align 8,resb 1
pcheapstart:	resb 8
	align 8,resb 1
pcheapend:	resb 8
	align 8,resb 1
pcheapptr:	resb 8
sizeindextable:	resb 2049
	align 8,resb 1
freelist:	resb 72
	segment .data
	align 4
init_flag:
	dd 0
	global stdtypenames
	align 8
stdtypenames:
	dq KK1276
	dq KK1277
	dq KK1278
	dq KK1279
	dq KK1280
	dq KK1281
	dq KK1282
	dq KK1283
	dq KK1284
	dq KK1285
	dq KK1286
	dq KK1287
	dq KK1288
	dq KK1289
	dq KK1290
	dq KK1291
	dq KK1292
	dq KK1293
	dq KK1294
	dq KK1295
	dq KK1296
	dq KK1297
	dq KK1298
	global stdtypewidths
stdtypewidths:
	db 0
	db 0
	db 8
	db 16
	db 32
	db 64
	db 8
	db 8
	db 16
	db 32
	db 64
	db 32
	db 64
	db 128
	db 128
	db 0
	db 64
	db 64
	db 64
	db 0
	db 0
	db 0
	db 0
	global stdtypesigned
stdtypesigned:
	db 0
	db 0
	db 1
	db 1
	db 1
	db 1
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	global stdexpandtypes
stdexpandtypes:
	db 0
	db 0
	db 4
	db 4
	db 0
	db 0
	db 9
	db 9
	db 9
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	global typespecnames
	align 8
typespecnames:
	dq KK1299
	dq KK1300
	dq KK1301
	dq KK1302
	dq KK1303
	dq KK1304
	dq KK1305
	dq KK1306
	dq KK1307
	dq KK1308
	dq KK1309
	dq KK1310
	dq KK1311
	dq KK1312
	dq KK1313
	dq KK1314
	global typespectypes
	align 4
typespectypes:
	dd 1
	dd 7
	dd 0
	dd 0
	dd 4
	dd 11
	dd 12
	dd 0
	dd 0
	dd 6
	dd 14
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	global typespecsizes
typespecsizes:
	db 0
	db 1
	db 2
	db 4
	db 4
	db 4
	db 8
	db 0
	db 0
	db 1
	db 0
	db 0
	db 0
	db 0
	db 4
	db 0
	global pmflagnames
	align 8
pmflagnames:
	dq KK1315
	dq KK1316
	dq KK1317
	dq KK1318
	global scopenames
	align 8
scopenames:
	dq KK1319
	dq KK1320
	dq KK1321
	dq KK1322
	dq KK1323
	global ccnames
	align 8
ccnames:
	dq KK1324
	dq KK1325
	dq KK1326
	dq KK1327
	dq KK1328
	dq KK1329
	global linkagenames
	align 8
linkagenames:
	dq KK1330
	dq KK1331
	dq KK1332
	dq KK1333
	dq KK1334
	dq KK1335
	global typequalnames
	align 8
typequalnames:
	dq KK1336
	dq KK1337
	dq KK1338
	dq KK1339
	global fnspecnames
	align 8
fnspecnames:
	dq KK1340
	dq KK1341
	global jtagnames
	align 8
jtagnames:
	dq KK1342
	dq KK1343
	dq KK1344
	dq KK1345
	dq KK1346
	dq KK1347
	dq KK1348
	dq KK1349
	dq KK1350
	dq KK1351
	dq KK1352
	dq KK1353
	dq KK1354
	dq KK1355
	dq KK1356
	dq KK1357
	dq KK1358
	dq KK1359
	dq KK1360
	dq KK1361
	dq KK1362
	dq KK1363
	dq KK1364
	dq KK1365
	dq KK1366
	dq KK1367
	dq KK1368
	dq KK1369
	dq KK1370
	dq KK1371
	dq KK1372
	dq KK1373
	dq KK1374
	dq KK1375
	dq KK1376
	dq KK1377
	dq KK1378
	dq KK1379
	dq KK1380
	dq KK1381
	dq KK1382
	dq KK1383
	dq KK1384
	dq KK1385
	dq KK1386
	dq KK1387
	dq KK1388
	dq KK1389
	dq KK1390
	dq KK1391
	dq KK1392
	dq KK1393
	dq KK1394
	dq KK1395
	dq KK1396
	dq KK1397
	dq KK1398
	dq KK1399
	dq KK1400
	dq KK1401
	dq KK1402
	dq KK1403
	dq KK1404
	dq KK1405
	dq KK1406
	dq KK1407
	dq KK1408
	dq KK1409
	dq KK1410
	dq KK1411
	dq KK1412
	dq KK1413
	dq KK1414
	dq KK1415
	dq KK1416
	dq KK1417
	dq KK1418
	dq KK1419
	dq KK1420
	dq KK1421
	dq KK1422
	dq KK1423
	global symbolnames
	align 8
symbolnames:
	dq KK1424
	dq KK1425
	dq KK1426
	dq KK1427
	dq KK1428
	dq KK1429
	dq KK1430
	dq KK1431
	dq KK1432
	dq KK1433
	dq KK1434
	dq KK1435
	dq KK1436
	dq KK1437
	dq KK1438
	dq KK1439
	dq KK1440
	dq KK1441
	dq KK1442
	dq KK1443
	dq KK1444
	dq KK1445
	dq KK1446
	dq KK1447
	dq KK1448
	dq KK1449
	dq KK1450
	dq KK1451
	dq KK1452
	dq KK1453
	dq KK1454
	dq KK1455
	dq KK1456
	dq KK1457
	dq KK1458
	dq KK1459
	dq KK1460
	dq KK1461
	dq KK1462
	dq KK1463
	dq KK1464
	dq KK1465
	dq KK1466
	dq KK1467
	dq KK1468
	dq KK1469
	dq KK1470
	dq KK1471
	dq KK1472
	dq KK1473
	dq KK1474
	dq KK1475
	dq KK1476
	dq KK1477
	dq KK1478
	dq KK1479
	dq KK1480
	dq KK1481
	dq KK1482
	dq KK1483
	dq KK1484
	dq KK1485
	dq KK1486
	dq KK1487
	dq KK1488
	dq KK1489
	dq KK1490
	dq KK1491
	dq KK1492
	dq KK1493
	dq KK1494
	dq KK1495
	dq KK1496
	dq KK1497
	dq KK1498
	dq KK1499
	dq KK1500
	dq KK1501
	dq KK1502
	dq KK1503
	dq KK1504
	dq KK1505
	dq KK1506
	dq KK1507
	dq KK1508
	dq KK1509
	dq KK1510
	dq KK1511
	dq KK1512
	dq KK1513
	dq KK1514
	dq KK1515
	dq KK1516
	dq KK1517
	dq KK1518
	dq KK1519
	dq KK1520
	dq KK1521
	global shortsymbolnames
	align 8
shortsymbolnames:
	dq KK1522
	dq KK1523
	dq KK1524
	dq KK1525
	dq KK1526
	dq KK1527
	dq KK1528
	dq KK1529
	dq KK1530
	dq KK1531
	dq KK1532
	dq KK1533
	dq KK1534
	dq KK1535
	dq KK1536
	dq KK1537
	dq KK1538
	dq KK1539
	dq KK1540
	dq KK1541
	dq KK1542
	dq KK1543
	dq KK1544
	dq KK1545
	dq KK1546
	dq KK1547
	dq KK1548
	dq KK1549
	dq KK1550
	dq KK1551
	dq KK1552
	dq KK1553
	dq KK1554
	dq KK1555
	dq KK1556
	dq KK1557
	dq KK1558
	dq KK1559
	dq KK1560
	dq KK1561
	dq KK1562
	dq KK1563
	dq KK1564
	dq KK1565
	dq KK1566
	dq KK1567
	dq KK1568
	dq KK1569
	dq KK1570
	dq KK1571
	dq KK1572
	dq KK1573
	dq KK1574
	dq KK1575
	dq KK1576
	dq KK1577
	dq KK1578
	dq KK1579
	dq KK1580
	dq KK1581
	dq KK1582
	dq KK1583
	dq KK1584
	dq KK1585
	dq KK1586
	dq KK1587
	dq KK1588
	dq KK1589
	dq KK1590
	dq KK1591
	dq KK1592
	dq KK1593
	dq KK1594
	dq KK1595
	dq KK1596
	dq KK1597
	dq KK1598
	dq KK1599
	dq KK1600
	dq KK1601
	dq KK1602
	dq KK1603
	dq KK1604
	dq KK1605
	dq KK1606
	dq KK1607
	dq KK1608
	dq KK1609
	dq KK1610
	dq KK1611
	dq KK1612
	dq KK1613
	dq KK1614
	dq KK1615
	dq KK1616
	dq KK1617
	dq KK1618
	dq KK1619
	global symboltojtag
symboltojtag:
	db 0
	db 51
	db 52
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 13
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 41
	db 42
	db 43
	db 44
	db 45
	db 47
	db 46
	db 48
	db 27
	db 26
	db 49
	db 50
	db 62
	db 28
	db 77
	db 78
	db 61
	db 35
	db 36
	db 37
	db 38
	db 40
	db 39
	db 67
	db 68
	db 69
	db 70
	db 71
	db 73
	db 72
	db 74
	db 75
	db 76
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	db 0
	global sourcedirnames
	align 8
sourcedirnames:
	dq KK1620
	dq KK1621
	dq KK1622
	dq KK1623
	dq KK1624
	dq KK1625
	dq KK1626
	dq KK1627
	dq KK1628
	dq KK1629
	dq KK1630
	dq KK1631
	dq KK1632
	dq KK1633
	dq KK1634
	dq KK1635
	dq KK1636
	dq KK1637
	dq KK1638
	dq KK1639
	global namespacenames
	align 8
namespacenames:
	dq KK1640
	dq KK1641
	dq KK1642
	dq KK1643
	dq KK1644
	global namenames
	align 8
namenames:
	dq KK1645
	dq KK1646
	dq KK1647
	dq KK1648
	dq KK1649
	dq KK1650
	dq KK1651
	dq KK1652
	dq KK1653
	dq KK1654
	dq KK1655
	dq KK1656
	dq KK1657
	dq KK1658
	dq KK1659
	global namespaces
	align 4
namespaces:
	dd 1
	dd 1
	dd 1
	dd 1
	dd 1
	dd 2
	dd 2
	dd 2
	dd 2
	dd 2
	dd 5
	dd 2
	dd 3
	dd 3
	dd 4
	global stnames
	align 8
stnames:
	dq KK1660
	dq KK1661
	dq KK1662
	dq KK1663
	dq KK1664
	dq KK1665
	dq KK1666
	dq KK1667
	dq KK1668
	dq KK1669
	dq KK1670
	dq KK1671
	dq KK1672
	dq KK1673
	dq KK1674
	dq KK1675
	dq KK1676
	dq KK1677
	dq KK1678
	dq KK1679
	dq KK1680
	dq KK1681
	dq KK1682
	dq KK1683
	dq KK1684
	dq KK1685
	dq KK1686
	dq KK1687
	dq KK1688
	dq KK1689
	dq KK1690
	dq KK1691
	dq KK1692
	dq KK1693
	dq KK1694
	dq KK1695
	dq KK1696
	dq KK1697
	dq KK1698
	dq KK1699
	dq KK1700
	dq KK1701
	dq KK1702
	dq KK1703
	dq KK1704
	dq KK1705
	dq KK1706
	dq KK1707
	dq KK1708
	dq KK1709
	dq KK1710
	dq KK1711
	dq KK1712
	dq KK1713
	dq KK1714
	dq KK1715
	dq KK1716
	dq KK1717
	dq KK1718
	dq KK1719
	dq KK1720
	dq KK1721
	dq KK1722
	dq KK1723
	dq KK1724
	dq KK1725
	dq KK1726
	dq KK1727
	dq KK1728
	dq KK1729
	dq KK1730
	dq KK1731
	dq KK1732
	dq KK1733
	dq KK1734
	global stsymbols
	align 4
stsymbols:
	dd 69
	dd 70
	dd 71
	dd 72
	dd 73
	dd 75
	dd 74
	dd 76
	dd 77
	dd 78
	dd 79
	dd 80
	dd 81
	dd 82
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 66
	dd 83
	dd 83
	dd 83
	dd 83
	dd 83
	dd 84
	dd 84
	dd 84
	dd 84
	dd 85
	dd 85
	dd 86
	dd 37
	dd 87
	dd 88
	dd 88
	dd 88
	dd 68
	dd 68
	dd 68
	dd 68
	dd 68
	dd 68
	dd 68
	dd 68
	dd 68
	dd 68
	dd 68
	dd 67
	dd 67
	dd 67
	dd 67
	dd 67
	dd 34
	dd 89
	dd 90
	dd 91
	dd 92
	dd 93
	dd 94
	dd 95
	dd 96
	dd 97
	dd 0
	global stsubcodes
	align 4
stsubcodes:
	dd 14
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 7
	dd 1
	dd 4
	dd 8
	dd 9
	dd 6
	dd 10
	dd 11
	dd 12
	dd 13
	dd 13
	dd 20
	dd 19
	dd 14
	dd 15
	dd 16
	dd 17
	dd 2
	dd 3
	dd 1
	dd 4
	dd 5
	dd 1
	dd 2
	dd 3
	dd 4
	dd 1
	dd 2
	dd 0
	dd 0
	dd 0
	dd 3
	dd 4
	dd 3
	dd 1
	dd 2
	dd 3
	dd 4
	dd 5
	dd 6
	dd 7
	dd 8
	dd 9
	dd 2
	dd 11
	dd 1
	dd 3
	dd 4
	dd 2
	dd 6
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	dd 0
	global convnames
	align 8
convnames:
	dq KK1735
	dq KK1736
	dq KK1737
	dq KK1738
	dq KK1739
	dq KK1740
	dq KK1741
	dq KK1742
	dq KK1743
	dq KK1744
	dq KK1745
	dq KK1746
	dq KK1747
	dq KK1748
	global dominantmode
	segment .bss
dominantmode:	resb 1024
	global conversionops
conversionops:	resb 256
	global dominantsetuptable
	segment .data
dominantsetuptable:
	db 2
	db 2
	db 4
	db 2
	db 3
	db 4
	db 2
	db 4
	db 4
	db 2
	db 5
	db 5
	db 2
	db 6
	db 4
	db 2
	db 7
	db 4
	db 2
	db 8
	db 4
	db 2
	db 9
	db 4
	db 2
	db 10
	db 5
	db 2
	db 11
	db 11
	db 2
	db 12
	db 12
	db 2
	db 13
	db 13
	db 3
	db 2
	db 4
	db 3
	db 3
	db 4
	db 3
	db 4
	db 4
	db 3
	db 5
	db 5
	db 3
	db 6
	db 4
	db 3
	db 7
	db 4
	db 3
	db 8
	db 4
	db 3
	db 9
	db 4
	db 3
	db 10
	db 5
	db 3
	db 11
	db 11
	db 3
	db 12
	db 12
	db 3
	db 13
	db 13
	db 4
	db 2
	db 4
	db 4
	db 3
	db 4
	db 4
	db 4
	db 4
	db 4
	db 5
	db 5
	db 4
	db 6
	db 4
	db 4
	db 7
	db 4
	db 4
	db 8
	db 4
	db 4
	db 9
	db 9
	db 4
	db 10
	db 5
	db 4
	db 11
	db 11
	db 4
	db 12
	db 12
	db 4
	db 13
	db 13
	db 5
	db 2
	db 5
	db 5
	db 3
	db 5
	db 5
	db 4
	db 5
	db 5
	db 5
	db 5
	db 5
	db 6
	db 5
	db 5
	db 7
	db 5
	db 5
	db 8
	db 5
	db 5
	db 9
	db 5
	db 5
	db 10
	db 10
	db 5
	db 11
	db 11
	db 5
	db 12
	db 12
	db 5
	db 13
	db 13
	db 6
	db 2
	db 4
	db 6
	db 3
	db 4
	db 6
	db 4
	db 4
	db 6
	db 5
	db 5
	db 6
	db 6
	db 9
	db 6
	db 7
	db 9
	db 6
	db 8
	db 9
	db 6
	db 9
	db 9
	db 6
	db 10
	db 10
	db 6
	db 11
	db 11
	db 6
	db 12
	db 12
	db 6
	db 13
	db 13
	db 7
	db 2
	db 4
	db 7
	db 3
	db 4
	db 7
	db 4
	db 4
	db 7
	db 5
	db 5
	db 7
	db 6
	db 0
	db 7
	db 7
	db 9
	db 7
	db 8
	db 9
	db 7
	db 9
	db 9
	db 7
	db 10
	db 10
	db 7
	db 11
	db 11
	db 7
	db 12
	db 12
	db 7
	db 13
	db 13
	db 8
	db 2
	db 4
	db 8
	db 3
	db 4
	db 8
	db 4
	db 4
	db 8
	db 5
	db 5
	db 8
	db 6
	db 9
	db 8
	db 7
	db 9
	db 8
	db 8
	db 9
	db 8
	db 9
	db 9
	db 8
	db 10
	db 10
	db 8
	db 11
	db 11
	db 8
	db 12
	db 12
	db 8
	db 13
	db 13
	db 9
	db 2
	db 4
	db 9
	db 3
	db 4
	db 9
	db 4
	db 9
	db 9
	db 5
	db 5
	db 9
	db 6
	db 9
	db 9
	db 7
	db 9
	db 9
	db 8
	db 9
	db 9
	db 9
	db 9
	db 9
	db 10
	db 10
	db 9
	db 11
	db 11
	db 9
	db 12
	db 12
	db 9
	db 13
	db 13
	db 10
	db 2
	db 10
	db 10
	db 3
	db 10
	db 10
	db 4
	db 10
	db 10
	db 5
	db 10
	db 10
	db 6
	db 10
	db 10
	db 7
	db 10
	db 10
	db 8
	db 10
	db 10
	db 9
	db 10
	db 10
	db 10
	db 10
	db 10
	db 11
	db 11
	db 10
	db 12
	db 12
	db 10
	db 13
	db 13
	db 11
	db 2
	db 12
	db 11
	db 3
	db 12
	db 11
	db 4
	db 12
	db 11
	db 5
	db 12
	db 11
	db 6
	db 12
	db 11
	db 7
	db 12
	db 11
	db 8
	db 12
	db 11
	db 9
	db 12
	db 11
	db 10
	db 12
	db 11
	db 11
	db 11
	db 11
	db 12
	db 12
	db 11
	db 13
	db 13
	db 12
	db 2
	db 12
	db 12
	db 3
	db 12
	db 12
	db 4
	db 12
	db 12
	db 5
	db 12
	db 12
	db 6
	db 12
	db 12
	db 7
	db 12
	db 12
	db 8
	db 12
	db 12
	db 9
	db 12
	db 12
	db 10
	db 12
	db 12
	db 11
	db 12
	db 12
	db 12
	db 12
	db 12
	db 13
	db 13
	db 13
	db 2
	db 12
	db 13
	db 3
	db 12
	db 13
	db 4
	db 12
	db 13
	db 5
	db 12
	db 13
	db 6
	db 12
	db 13
	db 7
	db 12
	db 13
	db 8
	db 12
	db 13
	db 9
	db 12
	db 13
	db 10
	db 12
	db 13
	db 11
	db 12
	db 13
	db 12
	db 12
	db 13
	db 13
	db 13
	global convsetuptable
convsetuptable:
	db 2
	db 2
	db 3
	db 2
	db 3
	db 3
	db 2
	db 4
	db 3
	db 2
	db 5
	db 3
	db 2
	db 6
	db 13
	db 2
	db 7
	db 1
	db 2
	db 8
	db 3
	db 2
	db 9
	db 3
	db 2
	db 10
	db 3
	db 2
	db 11
	db 5
	db 2
	db 12
	db 5
	db 2
	db 13
	db 5
	db 3
	db 2
	db 12
	db 3
	db 3
	db 0
	db 3
	db 4
	db 3
	db 3
	db 5
	db 3
	db 3
	db 6
	db 13
	db 3
	db 7
	db 12
	db 3
	db 8
	db 1
	db 3
	db 9
	db 3
	db 3
	db 10
	db 3
	db 3
	db 11
	db 5
	db 3
	db 12
	db 5
	db 3
	db 13
	db 5
	db 4
	db 2
	db 12
	db 4
	db 3
	db 12
	db 4
	db 4
	db 0
	db 4
	db 5
	db 3
	db 4
	db 6
	db 13
	db 4
	db 7
	db 12
	db 4
	db 8
	db 12
	db 4
	db 9
	db 1
	db 4
	db 10
	db 3
	db 4
	db 11
	db 5
	db 4
	db 12
	db 5
	db 4
	db 13
	db 5
	db 5
	db 2
	db 12
	db 5
	db 3
	db 12
	db 5
	db 4
	db 12
	db 5
	db 5
	db 0
	db 5
	db 6
	db 13
	db 5
	db 7
	db 12
	db 5
	db 8
	db 12
	db 5
	db 9
	db 12
	db 5
	db 10
	db 12
	db 5
	db 11
	db 5
	db 5
	db 12
	db 5
	db 5
	db 13
	db 5
	db 6
	db 2
	db 1
	db 6
	db 3
	db 4
	db 6
	db 4
	db 4
	db 6
	db 5
	db 4
	db 6
	db 6
	db 0
	db 6
	db 7
	db 1
	db 6
	db 8
	db 4
	db 6
	db 9
	db 4
	db 6
	db 10
	db 4
	db 6
	db 11
	db 6
	db 6
	db 12
	db 6
	db 6
	db 13
	db 6
	db 7
	db 2
	db 1
	db 7
	db 3
	db 4
	db 7
	db 4
	db 4
	db 7
	db 5
	db 4
	db 7
	db 6
	db 13
	db 7
	db 7
	db 1
	db 7
	db 8
	db 4
	db 7
	db 9
	db 4
	db 7
	db 10
	db 4
	db 7
	db 11
	db 6
	db 7
	db 12
	db 6
	db 7
	db 13
	db 6
	db 8
	db 2
	db 12
	db 8
	db 3
	db 1
	db 8
	db 4
	db 4
	db 8
	db 5
	db 4
	db 8
	db 6
	db 13
	db 8
	db 7
	db 12
	db 8
	db 8
	db 0
	db 8
	db 9
	db 4
	db 8
	db 10
	db 4
	db 8
	db 11
	db 6
	db 8
	db 12
	db 6
	db 8
	db 13
	db 6
	db 9
	db 2
	db 12
	db 9
	db 3
	db 12
	db 9
	db 4
	db 1
	db 9
	db 5
	db 4
	db 9
	db 6
	db 13
	db 9
	db 7
	db 12
	db 9
	db 8
	db 12
	db 9
	db 9
	db 0
	db 9
	db 10
	db 4
	db 9
	db 11
	db 6
	db 9
	db 12
	db 6
	db 9
	db 13
	db 6
	db 10
	db 2
	db 12
	db 10
	db 3
	db 12
	db 10
	db 4
	db 12
	db 10
	db 5
	db 1
	db 10
	db 6
	db 13
	db 10
	db 7
	db 12
	db 10
	db 8
	db 12
	db 10
	db 9
	db 12
	db 10
	db 10
	db 0
	db 10
	db 11
	db 6
	db 10
	db 12
	db 6
	db 10
	db 13
	db 6
	db 11
	db 2
	db 7
	db 11
	db 3
	db 7
	db 11
	db 4
	db 7
	db 11
	db 5
	db 7
	db 11
	db 6
	db 8
	db 11
	db 7
	db 8
	db 11
	db 8
	db 8
	db 11
	db 9
	db 8
	db 11
	db 10
	db 8
	db 11
	db 11
	db 0
	db 11
	db 12
	db 9
	db 11
	db 13
	db 9
	db 12
	db 2
	db 7
	db 12
	db 3
	db 7
	db 12
	db 4
	db 7
	db 12
	db 5
	db 7
	db 12
	db 6
	db 8
	db 12
	db 7
	db 8
	db 12
	db 8
	db 8
	db 12
	db 9
	db 8
	db 12
	db 10
	db 8
	db 12
	db 11
	db 10
	db 12
	db 12
	db 0
	db 12
	db 13
	db 0
	db 13
	db 2
	db 7
	db 13
	db 3
	db 7
	db 13
	db 4
	db 7
	db 13
	db 5
	db 7
	db 13
	db 6
	db 8
	db 13
	db 7
	db 8
	db 13
	db 8
	db 8
	db 13
	db 9
	db 8
	db 13
	db 10
	db 8
	db 13
	db 11
	db 10
	db 13
	db 12
	db 0
	db 13
	db 13
	db 0
	global ntypes
	segment .bss
	align 4,resb 1
ntypes:	resb 4
	global ttnamedef
	align 8,resb 1
ttnamedef:	resb 200000
	global ttbasetype
	align 4,resb 1
ttbasetype:	resb 100000
	global ttlength
	align 4,resb 1
ttlength:	resb 100000
	global ttconst
ttconst:	resb 25000
	global ttrestrict
ttrestrict:	resb 25000
	global ttvolatile
ttvolatile:	resb 25000
	global ttusertype
	align 4,resb 1
ttusertype:	resb 100000
	global tttarget
	align 4,resb 1
tttarget:	resb 100000
	global ttreftype
	align 4,resb 1
ttreftype:	resb 100000
	global ttconsttype
	align 4,resb 1
ttconsttype:	resb 100000
	global ttsize
	align 4,resb 1
ttsize:	resb 100000
	global ttbitwidth
	align 4,resb 1
ttbitwidth:	resb 100000
	global ttisref
ttisref:	resb 25000
	global ttparams
	align 8,resb 1
ttparams:	resb 200000
	global trefchar
	align 4,resb 1
trefchar:	resb 4
	global trefwchar
	align 4,resb 1
trefwchar:	resb 4
	global moduletable
	align 8,resb 1
moduletable:	resb 3978
	global inputfiles
	align 8,resb 1
inputfiles:	resb 408
	global libfiles
	align 8,resb 1
libfiles:	resb 408
	global sourcefilenames
	align 8,resb 1
sourcefilenames:	resb 4808
	global sourcefilepaths
	align 8,resb 1
sourcefilepaths:	resb 4808
	global sourcefiletext
	align 8,resb 1
sourcefiletext:	resb 4808
	global sourcefilesizes
	align 4,resb 1
sourcefilesizes:	resb 2404
	global nmodules
	align 4,resb 1
nmodules:	resb 4
	global nsourcefiles
	align 4,resb 1
nsourcefiles:	resb 4
	global ninputfiles
	align 4,resb 1
ninputfiles:	resb 4
	global nlibfiles
	align 4,resb 1
nlibfiles:	resb 4
	global currmoduleno
	align 4,resb 1
currmoduleno:	resb 4
	global currmodule
	align 8,resb 1
currmodule:	resb 8
	global searchdirs
	align 8,resb 1
searchdirs:	resb 160
	global nsearchdirs
	segment .data
	align 4
nsearchdirs:
	dd 0
	global includepaths
	segment .bss
	align 8,resb 1
includepaths:	resb 160
	global nincludepaths
	segment .data
	align 4
nincludepaths:
	dd 0
	global stprogram
	segment .bss
	align 8,resb 1
stprogram:	resb 8
	global stmodule
	align 8,resb 1
stmodule:	resb 8
	global stsysmodule
	align 8,resb 1
stsysmodule:	resb 8
	global alldeflist
	align 8,resb 1
alldeflist:	resb 8
	global logdev
	align 8,resb 1
logdev:	resb 8
	global optflag
	segment .data
	align 4
optflag:
	dd 0
	global nullunit
	segment .bss
	align 8,resb 1
nullunit:	resb 8
	global fverbose
	segment .data
	align 4
fverbose:
	dd 0
	global fquiet
	align 4
fquiet:
	dd 0
	global foptimise
	align 4
foptimise:
	dd 0
	global wintarget
	align 4
wintarget:
	dd 1
	global lintarget
	align 4
lintarget:
	dd 0
	global nostarget
	align 4
nostarget:
	dd 0
	global clineno
	align 4
clineno:
	dd 0
	global lx
	segment .bss
	align 8,resb 1
lx:	resb 32
	global nextlx
	align 8,resb 1
nextlx:	resb 32
	global tlex
	segment .data
	align 4
tlex:
	dd 0
	global debug
	align 4
debug:
	dd 0
	global ndlltable
	segment .bss
	align 4,resb 1
ndlltable:	resb 4
	global ndllproctable
	align 4,resb 1
ndllproctable:	resb 4
	global dlltable
	align 8,resb 1
dlltable:	resb 400
	global dllinsttable
	align 8,resb 1
dllinsttable:	resb 400
	global dllproctable
	align 8,resb 1
dllproctable:	resb 10000
	global ncmdparams
	align 4,resb 1
ncmdparams:	resb 4
	global cmdparamtable
	align 8,resb 1
cmdparamtable:	resb 264
	global proclist
	align 8,resb 1
proclist:	resb 8
	global nproclist
	align 4,resb 1
nproclist:	resb 4
	global NUNITNAME
	align 4,resb 1
NUNITNAME:	resb 4
	global NUNIT0
	align 4,resb 1
NUNIT0:	resb 4
	global NUNIT1
	align 4,resb 1
NUNIT1:	resb 4
	global NUNIT2
	align 4,resb 1
NUNIT2:	resb 4
	global NUNIT3
	align 4,resb 1
NUNIT3:	resb 4
	global NEXPRS
	align 4,resb 1
NEXPRS:	resb 4
	global NSIMPLEEXPRS
	align 4,resb 1
NSIMPLEEXPRS:	resb 4
	global NNAMEEXPRS
	align 4,resb 1
NNAMEEXPRS:	resb 4
	global NCONSTEXPRS
	align 4,resb 1
NCONSTEXPRS:	resb 4
	global NALLFNMACROS
	align 4,resb 1
NALLFNMACROS:	resb 4
	global NALLOBJMACROS
	align 4,resb 1
NALLOBJMACROS:	resb 4
	global NALLSIMPLEMACROS
	align 4,resb 1
NALLSIMPLEMACROS:	resb 4
	global NALLSIMPLEMACROS1
	align 4,resb 1
NALLSIMPLEMACROS1:	resb 4
	global NALLSIMPLEMACROS0
	align 4,resb 1
NALLSIMPLEMACROS0:	resb 4
	global NALLSIMPLEMACROSNUM
	align 4,resb 1
NALLSIMPLEMACROSNUM:	resb 4
	global NALLLINES
	align 4,resb 1
NALLLINES:	resb 4
	global NSKIPPEDTOKENS
	align 4,resb 1
NSKIPPEDTOKENS:	resb 4
	global NSKIPPEDLINES
	align 4,resb 1
NSKIPPEDLINES:	resb 4
	global NIFS
	align 4,resb 1
NIFS:	resb 4
	global NALLCHARS
	align 4,resb 1
NALLCHARS:	resb 4
	global NSUBST
	align 4,resb 1
NSUBST:	resb 4
	global NSIMPLESUBST
	align 4,resb 1
NSIMPLESUBST:	resb 4
	global NLEXTOKENS
	align 4,resb 1
NLEXTOKENS:	resb 4
	global hashtable
	align 8,resb 1
hashtable:	resb 8388608
	global blockowner
	align 4,resb 1
blockowner:	resb 8404
	global blockcounts
	align 4,resb 1
blockcounts:	resb 8404
	global blockstack
	align 4,resb 1
blockstack:	resb 404
	global currblockno
	align 4,resb 1
currblockno:	resb 4
	global nextblockno
	align 4,resb 1
nextblockno:	resb 4
	global blocklevel
	align 4,resb 1
blocklevel:	resb 4
	global currproc
	align 8,resb 1
currproc:	resb 8
	global progstart
	align 4,resb 1
progstart:	resb 4
	global progend
	align 4,resb 1
progend:	resb 4
	global loadstart
	align 4,resb 1
loadstart:	resb 4
	global loadend
	align 4,resb 1
loadend:	resb 4
	global parsestart
	align 4,resb 1
parsestart:	resb 4
	global parseend
	align 4,resb 1
parseend:	resb 4
	global gen1start
	align 4,resb 1
gen1start:	resb 4
	global gen1end
	align 4,resb 1
gen1end:	resb 4
	global gen2start
	align 4,resb 1
gen2start:	resb 4
	global gen2end
	align 4,resb 1
gen2end:	resb 4
	global asmwstart
	align 4,resb 1
asmwstart:	resb 4
	global asmwend
	align 4,resb 1
asmwend:	resb 4
	global ntclinstructions
	align 4,resb 1
ntclinstructions:	resb 4
	global labelno
	segment .data
	align 4
labelno:
	dd 0
	global dointheaders
	align 4
dointheaders:
	dd 1
	global structpadding
	align 4
structpadding:
	dd 1
	global callbackflag
	align 4
callbackflag:
	dd 0
	global slineno
	segment .bss
	align 4,resb 1
slineno:	resb 4
	global sfileno
	align 4,resb 1
sfileno:	resb 4
	global bytemasks
	segment .data
bytemasks:
	db 1
	db 2
	db 4
	db 8
	db 16
	db 32
	db 64
	db 128
	align 8
h_assert:
	dq KK1749
	align 8
h_ctype:
	dq KK1750
	align 8
h_errno:
	dq KK1751
	align 8
h_fenv:
	dq KK1752
	align 8
h_float:
	dq KK1753
	align 8
h_inttypes:
	dq KK1754
	align 8
h_stdint:
	dq KK1755
	align 8
h_limits:
	dq KK1756
	align 8
h_locale:
	dq KK1757
	align 8
h__ansi:
	dq KK1758
	align 8
h_math:
	dq KK1759
	align 8
h_setjmp:
	dq KK1760
	align 8
h_signal:
	dq KK1761
	align 8
h_stdarg:
	dq KK1762
	align 8
h_stdbool:
	dq KK1763
	align 8
h_stddef:
	dq KK1764
	align 8
h_stdio:
	dq KK1765
	align 8
h_stdlib:
	dq KK1766
	align 8
h__syslist:
	dq KK1767
	align 8
h_string:
	dq KK1768
	align 8
h_time:
	dq KK1769
	align 8
h_utime:
	dq KK1770
	align 8
h_unistd:
	dq KK1771
	align 8
h_safelib:
	dq KK1772
	align 8
h_wchar:
	dq KK1773
	align 8
h_wctype:
	dq KK1774
	align 8
h_systypes:
	dq KK1775
	align 8
h_sysstat:
	dq KK1776
	align 8
h_systimeb:
	dq KK1777
	align 8
h_sysutime:
	dq KK1778
	align 8
h_memory:
	dq KK1779
	align 8
h_windows:
	dq KK1780
	align 8
h_fcntl:
	dq KK1781
	align 8
h_io:
	dq KK1782
	align 8
h_direct:
	dq KK1783
	align 8
h_process:
	dq KK1784
	align 8
h_malloc:
	dq KK1785
	global stdhdrnames
	align 8
stdhdrnames:
	dq KK1786
	dq KK1787
	dq KK1788
	dq KK1789
	dq KK1790
	dq KK1791
	dq KK1792
	dq KK1793
	dq KK1794
	dq KK1795
	dq KK1796
	dq KK1797
	dq KK1798
	dq KK1799
	dq KK1800
	dq KK1801
	dq KK1802
	dq KK1803
	dq KK1804
	dq KK1805
	dq KK1806
	dq KK1807
	dq KK1808
	dq KK1809
	dq KK1810
	dq KK1811
	dq KK1812
	dq KK1813
	dq KK1814
	dq KK1815
	dq KK1816
	dq KK1817
	dq KK1818
	dq KK1819
	dq KK1820
	dq KK1821
	dq KK1822
	global stdhdrtext
	align 8
stdhdrtext:
	dq h_assert
	dq h_ctype
	dq h_errno
	dq h_fenv
	dq h_float
	dq h_inttypes
	dq h_stdint
	dq h_limits
	dq h_locale
	dq h__ansi
	dq h_math
	dq h_setjmp
	dq h_signal
	dq h_stdarg
	dq h_stdbool
	dq h_stddef
	dq h_stdio
	dq h_stdlib
	dq h__syslist
	dq h_string
	dq h_time
	dq h_utime
	dq h_unistd
	dq h_safelib
	dq h_wchar
	dq h_wctype
	dq h_systypes
	dq h_sysstat
	dq h_systimeb
	dq h_sysutime
	dq h_malloc
	dq h_windows
	dq h_fcntl
	dq h_io
	dq h_direct
	dq h_process
	dq h_memory
	align 4
longestname:
	dd 0
	align 4
DEPTH:
	dd 0
	align 4
MAXLEN:
	dd 0
	align 8
tkptr:
	dq 0
	align 4
dowhitespace:
	dd 0
	segment .bss
	align 8,resb 1
globalmacrolist:	resb 8
	align 4,resb 1
NIFDEFS:	resb 4
	align 8,resb 1
normaltkx:	resb 32
	segment .data
	align 8
normaltk:
	dq normaltkx
	align 4
noexpand:
	dd 0
	segment .bss
	align 8,resb 1
lx_stack:	resb 480
	align 4,resb 1
lx_stackindex:	resb 4
	segment .data
	align 4
ifcondlevel:
	dd 0
	segment .bss
	align 8,resb 1
lxstart:	resb 8
	align 8,resb 1
lxsptr:	resb 8
	align 4,resb 1
lxhashvalue:	resb 4
	align 8,resb 1
lxsvalue:	resb 8
alphamap:	resb 256
digitmap:	resb 256
commentmap:	resb 256
linecommentmap:	resb 256
spacemap:	resb 256
	align 8,resb 1
destcopy:	resb 8
	align 8,resb 1
pastedtokenlist:	resb 28000
	segment .data
	align 4
npastedtokens:
	dd 0
	align 4
autotypeno:
	dd 0
	segment .bss
	align 4,resb 1
currlineno:	resb 4
	global nextafindex
	segment .data
	align 4
nextafindex:
	dd 0
	segment .bss
	align 8,resb 1
exprstrvar:	resb 16
	segment .data
	align 8
exprstr:
	dq exprstrvar
	align 8
unitheapptr:
	dq 0
	align 4
remainingunits:
	dd 0
	segment .bss
	align 4,resb 1
NALLEXPRS:	resb 4
	align 4,resb 1
NSMALLEXPRS:	resb 4
	align 8,resb 1
ist_symptr:	resb 8
looptypestack:	resb 100
	align 4,resb 1
loopindex:	resb 4
	align 8,resb 1
casevaluestack:	resb 800
iscallbackfn:	resb 1
	global tclnames
	segment .data
	align 8
tclnames:
	dq KK1823
	dq KK1824
	dq KK1825
	dq KK1826
	dq KK1827
	dq KK1828
	dq KK1829
	dq KK1830
	dq KK1831
	dq KK1832
	dq KK1833
	dq KK1834
	dq KK1835
	dq KK1836
	dq KK1837
	dq KK1838
	dq KK1839
	dq KK1840
	dq KK1841
	dq KK1842
	dq KK1843
	dq KK1844
	dq KK1845
	dq KK1846
	dq KK1847
	dq KK1848
	dq KK1849
	dq KK1850
	dq KK1851
	dq KK1852
	dq KK1853
	dq KK1854
	dq KK1855
	dq KK1856
	dq KK1857
	dq KK1858
	dq KK1859
	dq KK1860
	dq KK1861
	dq KK1862
	dq KK1863
	dq KK1864
	dq KK1865
	dq KK1866
	dq KK1867
	dq KK1868
	dq KK1869
	dq KK1870
	dq KK1871
	dq KK1872
	dq KK1873
	dq KK1874
	dq KK1875
	dq KK1876
	dq KK1877
	dq KK1878
	dq KK1879
	dq KK1880
	dq KK1881
	dq KK1882
	dq KK1883
	dq KK1884
	dq KK1885
	dq KK1886
	dq KK1887
	dq KK1888
	dq KK1889
	dq KK1890
	dq KK1891
	dq KK1892
	dq KK1893
	dq KK1894
	dq KK1895
	dq KK1896
	dq KK1897
	dq KK1898
	dq KK1899
	dq KK1900
	dq KK1901
	global opndnames
	align 8
opndnames:
	dq KK1902
	dq KK1903
	dq KK1904
	dq KK1905
	dq KK1906
	dq KK1907
	dq KK1908
	dq KK1909
	dq KK1910
	dq KK1911
	dq KK1912
	dq KK1913
	dq KK1914
	global shorttypenames
	align 8
shorttypenames:
	dq KK1915
	dq KK1916
	dq KK1917
	dq KK1918
	dq KK1919
	dq KK1920
	global opndtypenames
	align 8
opndtypenames:
	dq KK1921
	dq KK1922
	dq KK1923
	dq KK1924
	dq KK1925
	dq KK1926
	global tccode
	segment .bss
	align 8,resb 1
tccode:	resb 8
	global tccodex
	align 8,resb 1
tccodex:	resb 8
	global itccode
	align 8,resb 1
itccode:	resb 8
	global itccodex
	align 8,resb 1
itccodex:	resb 8
	global rxstack
	align 8,resb 1
rxstack:	resb 8
	align 8,resb 1
tclbuffer:	resb 16
	segment .data
	align 8
tcl:
	dq tclbuffer
	segment .bss
	align 8,resb 1
zerotcl:	resb 64
	align 8,resb 1
zeroopnd:	resb 16
	global opndtable
	align 8,resb 1
opndtable:	resb 8000
	global opndsizes
opndsizes:	resb 2000
	global opndtypes
opndtypes:	resb 2000
	global topopnd
	align 4,resb 1
topopnd:	resb 4
	global currtempno
	align 4,resb 1
currtempno:	resb 4
	align 8,resb 1
asmstart:	resb 8
	align 8,resb 1
asmptr:	resb 8
	align 8,resb 1
asmend:	resb 8
	align 4,resb 1
asmalloc:	resb 4
	global regnames
	segment .data
	align 8
regnames:
	dq KK1927
	dq KK1928
	dq KK1929
	dq KK1930
	dq KK1931
	dq KK1932
	dq KK1933
	dq KK1934
	dq KK1935
	dq KK1936
	dq KK1937
	dq KK1938
	dq KK1939
	dq KK1940
	dq KK1941
	dq KK1942
	dq KK1943
	global xregnames
	align 8
xregnames:
	dq KK1944
	dq KK1945
	dq KK1946
	dq KK1947
	dq KK1948
	dq KK1949
	dq KK1950
	dq KK1951
	dq KK1952
	dq KK1953
	dq KK1954
	dq KK1955
	dq KK1956
	dq KK1957
	dq KK1958
	dq KK1959
	dq KK1960
regnameprefix:
	db 66
	db 87
	db 0
	db 65
	db 0
	db 0
	db 0
	db 68
regname1:
	db 48
	db 49
	db 50
	db 51
	db 52
	db 53
	db 54
	db 55
	db 56
	db 57
	segment .bss
	align 8,resb 1
stringtable:	resb 40000
	align 4,resb 1
stringlentable:	resb 20000
	align 4,resb 1
nstrings:	resb 4
	align 8,resb 1
realtable:	resb 16000
realsizetable:	resb 2000
	align 4,resb 1
nreals:	resb 4
	align 4,resb 1
currseg:	resb 4
opndcomment1:	resb 100
opndcomment2:	resb 100
doopndsize:	resb 1
	segment .data
	align 8
sizeprefixes:
	dq KK1961
	dq KK1962
	dq KK1963
	dq KK1964
	dq KK1965
	dq KK1966
	dq KK1967
	dq KK1968
	segment .bss
	align 8,resb 1
temp:	resb 16
	segment .data
	align 8
tx:
	dq temp
	segment .bss
	align 8,resb 1
tempsizes:	resb 8
	align 8,resb 1
temptypes:	resb 8
	align 4,resb 1
tempoffsets:	resb 8000
	align 4,resb 1
ntemps:	resb 4
	align 8,resb 1
txreturn:	resb 8
	align 8,resb 1
paramlist:	resb 800
	align 4,resb 1
ncallparams:	resb 4
	align 4,resb 1
continuestack:	resb 400
	align 4,resb 1
breakstack:	resb 400
	align 4,resb 1
retindex:	resb 4
	align 8,resb 1
sw_labeltable:	resb 8
	align 8,resb 1
sw_valuetable:	resb 8
	align 4,resb 1
sw_lower:	resb 4
	align 4,resb 1
sw_ncases:	resb 4
sw_defaultseen:	resb 1
	align 4,resb 1
sw_defaultlabel:	resb 4
	align 4,resb 1
sw_breaklabel:	resb 4
	segment .data
	align 4
gen1target:
	dd 4997972
	align 4
gen2target:
	dd 5067585
	align 8
pmnames:
	dq KK1969
	dq KK1970
	dq KK1971
	dq KK1972
	align 4
passes:
	dd 0
	segment .bss
fshowoptions:	resb 1
fshowmodules:	resb 1
fshowfiles:	resb 1
fshowtokens:	resb 1
fshowast:	resb 1
fshowst:	resb 1
fshowstflat:	resb 1
fshowtypes:	resb 1
fshowtcl:	resb 1
fshowasm:	resb 1
fshowdis:	resb 1
fshowtiming:	resb 1
fshowpaths:	resb 1
fshowheaders:	resb 1
fwriteheaders:	resb 1
fshowlog:	resb 1
fgenasm:	resb 1
fgenbin:	resb 1
	segment .data
	align 8
optionnames:
	dq KK1973
	dq KK1974
	dq KK1975
	dq KK1976
	dq KK1977
	dq KK1978
	dq KK1979
	dq KK1980
	dq KK1981
	dq KK1982
	dq KK1983
	dq KK1984
	dq KK1985
	dq KK1986
	dq KK1987
	dq KK1988
	dq KK1989
	dq KK1990
	dq KK1991
	dq KK1992
	dq KK1993
	dq KK1994
	dq KK1995
	dq KK1996
	dq KK1997
	dq KK1998
	dq KK1999
	dq KK2000
	dq KK2001
	dq KK2002
	dq KK2003
	dq KK2004
	dq KK2005
	dq KK2006
	segment .bss
loadstatus:	resb 1
parsestatus:	resb 1
gen1status:	resb 1
gen2status:	resb 1
linkstatus:	resb 1
	segment .data
	align 4
logdest:
	dd 0
	align 4
dopause:
	dd 0
	align 4
totallines:
	dd 0
	align 4
nstringobjects:
	dd 0
	segment .bss
	align 4,resb 1
modulelevel:	resb 4
	align 8,resb 1
outfile:	resb 8
	segment .data
	align 8

;string table:
KK1:	db '%s %s %s %s',10,0
KK2:	db 'Compiling',0
KK3:	db 'to',0
KK4:	db '%s',10,0
KK5:	db 'Finished.',0
KK6:	db '%s',10,0
KK7:	db 'Too many params',0
KK8:	db '%s %d',10,0
KK9:	db 'Time=',0
KK10:	db 'pcm_alloc failure',0
KK11:	db 'Can',39,'t alloc pc heap',0
KK12:	db '%s %d',10,0
KK13:	db 'Size: ',0
KK14:	db ' %X',0
KK15:	db 0

KK16:	db '%s %s',10,0
KK17:	db 'HEAP FREELISTS:',0
KK18:	db '%s %p %d',10,0
KK19:	db '***************ADD TO ALLOC:',0
KK20:	db '%s %p %s',10,0
KK21:	db 'ALLOC ERROR:',0
KK22:	db 'ALREADY ALLOCATED',10,10,10,0
KK23:	db '%s %p %d',10,0
KK24:	db '------------------************REMOVE FROM ALLOC:',0
KK25:	db ', BUT STORED AS BLOCK SIZE:',0
KK26:	db '%s %p %s %d %s %d',10,0
KK27:	db 'REMOVE:FOUND',0
KK28:	db 'IN MEMALLOCTABLE, FREESIZE=',0
KK29:	db 'MEMSIZE',0
KK30:	db '%s %p %s %d',10,0
KK31:	db 'CAN',39,'T FIND',0
KK32:	db 'IN MEMALLOCTABLE',0
KK33:	db 'MEM',0
KK34:	db '%d %d',10,0
KK35:	db 'Alloc mem failure',0
KK36:	db '%d',10,0
KK37:	db 'Realloc mem failure',0
KK38:	db '%s',10,0
KK39:	db '%s',0
KK40:	db 'ABORTING: Press key...',0
KK41:	db 'rb',0
KK42:	db 'wb',0
KK43:	db 'rb',0
KK44:	db '%d %d',10,0
KK45:	db 'line too long',0
KK46:	db '.',0
KK47:	db 0

KK48:	db '.',0
KK49:	db 0

KK50:	db 0

KK51:	db 0

KK52:	db 0

KK53:	db 'Alloctable failure',0
KK54:	db '%s %s %d %p %p',10,0
KK55:	db 'FREE LIST ERROR',0
KK56:	db 'exitcmd',0
KK57:	db 'kbhit',0
KK58:	db 'flushkeys',0
KK59:	db 'PROGINST',0
KK60:	db 'malloc',0
KK61:	db 'realloc',0
KK62:	db 'free',0
KK63:	db 'printf',0
KK64:	db 'puts',0
KK65:	db 'fgetc',0
KK66:	db 'fputc',0
KK67:	db 'getchar',0
KK68:	db 'fopen',0
KK69:	db 'fclose',0
KK70:	db 'fseek',0
KK71:	db 'ftell',0
KK72:	db 'fread',0
KK73:	db 'fwrite',0
KK74:	db 'clock',0
KK75:	db 'isalpha',0
KK76:	db 'tolower',0
KK77:	db 'feof',0
KK78:	db 'memset',0
KK79:	db 'memcpy',0
KK80:	db 'ungetc',0
KK81:	db 'remove',0
KK82:	db 'system',0
KK83:	db 'getchx',0
KK84:	db 'NO-OS',0
KK85:	db 'c:/windows/notepad.exe',0
KK86:	db 'rb',0
KK87:	db 'SHELL EXEC',0
KK88:	db 'sleep',0
KK89:	db 'con',0
KK90:	db 'rb',0
KK91:	db 'con',0
KK92:	db 'rb',0
KK93:	db 0

KK94:	db 0

KK95:	db 'SETMESSHANDLER',0
KK96:	db '%s %s',10,0
KK97:	db 'MC Error:',0
KK98:	db '%s %s%s',0
KK99:	db 'In function',0
KK100:	db ' ',0
KK101:	db '%s %d %s %s %s',10,0
KK102:	db 'On line',0
KK103:	db 'in file',0
KK104:	db 10,0
KK105:	db '%s %s %s',10,0
KK106:	db '**** Syntax Error:',0
KK107:	db '****',0
KK108:	db 10,0
KK109:	db 10,0
KK110:	db 10,0
KK111:	db 10,0
KK112:	db 10,0
KK113:	db 10,0
KK114:	db '%s',10,0
KK115:	db '--',0
KK116:	db '%s %s',10,0
KK117:	db 'In function',0
KK118:	db '%s %s %s %d %s',10,0
KK119:	db 'Type error:',0
KK120:	db 'on line',0
KK121:	db 10,0
KK122:	db 10,0
KK123:	db 10,0
KK124:	db '%s %s%s',0
KK125:	db 'In function',0
KK126:	db ' ',0
KK127:	db '%s %d %s %s',10,0
KK128:	db 'On line',0
KK129:	db 'in file',0
KK130:	db 10,0
KK131:	db '%s %s %s',10,0
KK132:	db '**** Code Gen Error:',0
KK133:	db '****',0
KK134:	db 10,0
KK135:	db 10,0
KK136:	db 10,0
KK137:	db '%s %s %s %d %s',10,0
KK138:	db 'NX error:',0
KK139:	db 'on line',0
KK140:	db '%s %s',10,0
KK141:	db 'Load Error:',0
KK142:	db '%s',10,0
KK143:	db 'Stopping',0
KK144:	db 'Too many source files',0
KK145:	db 0

KK146:	db 'LSF can',39,'t load ',0
KK147:	db 'Too many source files',0
KK148:	db 0

KK149:	db '<builtin>',0
KK150:	db '%lld',0
KK151:	db ' ',0
KK152:	db 13,10,0
KK153:	db '%d',0
KK154:	db '%.*s',13,10,0
KK155:	db '%.*s',13,10,0
KK156:	db ' ',0
KK157:	db ')',0
KK158:	db '%s %d %s %s%s',10,0
KK159:	db 9,'(Last macro invoked near line',0
KK160:	db 'in file',0
KK161:	db 'hdr',0
KK162:	db '%s %s %s %s',10,0
KK163:	db 'Writing internal',0
KK164:	db 'as',0
KK165:	db 'w',0
KK166:	db 'i',0
KK167:	db '%s %s',10,0
KK168:	db 'Preprocessing',0
KK169:	db '#endif missing',0
KK170:	db 10,0
KK171:	db '%s',10,0
KK172:	db 'Finished tokenising',0
KK173:	db '%s %s',10,0
KK174:	db 'Writing output to',0
KK175:	db 'wb',0
KK176:	db 10,0
KK177:	db 10,0
KK178:	db 10,0
KK179:	db 10,0
KK180:	db '%s %d %s %d',10,0
KK181:	db '@ SEEN',0
KK182:	db '%s %u %d',10,0
KK183:	db 'ERROR CHAR',0
KK184:	db 'ERROR CHAR',0
KK185:	db 'Real too long',0
KK186:	db 'Line:',0
KK187:	db '%s %s %s%s %s %d',10,0
KK188:	db 'Lex error',0
KK189:	db 'in:',0
KK190:	db 10,0
KK191:	db 10,0
KK192:	db 10,0
KK193:	db '%-18s',0
KK194:	db '%lld%s',0
KK195:	db ' ',0
KK196:	db '%f%s',0
KK197:	db ' ',0
KK198:	db '%s',0
KK199:	db '"',0
KK200:	db '%s',0
KK201:	db '"',0
KK202:	db '%s',0
KK203:	db 39,0
KK204:	db '%s',0
KK205:	db 39,0
KK206:	db '%s %u',0
KK207:	db '#',0
KK208:	db 10,0
KK209:	db '%.*s',0
KK210:	db '%.*s',0
KK211:	db 'Digit out of range',0
KK212:	db 'HASHTABLE FULL',0
KK213:	db '%s',10,0
KK214:	db 'Duplicate symbol table entry',0
KK215:	db 10,0
KK216:	db 'Invalid # directive',0
KK217:	db 'include: > expected',0
KK218:	db 'include?',0
KK219:	db 'undef: name expected',0
KK220:	db '#if missing/elif/else',0
KK221:	db '#if missing/endif',0
KK222:	db '%s',0
KK223:	db '#ERROR:',0
KK224:	db 10,0
KK225:	db '%s',0
KK226:	db '#MESSAGE',0
KK227:	db '%s %d %s',10,0
KK228:	db ' Line',0
KK229:	db 10,0
KK230:	db '%s',0
KK231:	db '#WARNING:',0
KK232:	db 10,0
KK233:	db '%s',0
KK234:	db 'Press key...',0
KK235:	db 10,0
KK236:	db '%d %s %s',0
KK237:	db ':',0
KK238:	db '%s %s %s',0
KK239:	db 'SHOW MACRO',0
KK240:	db ':',0
KK241:	db 'tokens:',0
KK242:	db 10,0
KK243:	db '%s',10,0
KK244:	db 'not a macro',0
KK245:	db '%s',10,0
KK246:	db 'Not a name',0
KK247:	db '%s %s',10,0
KK248:	db 'DIRECTIVE NOT IMPL:',0
KK249:	db 'Directive not implemented',0
KK250:	db '%d',10,0
KK251:	db '#endif missing',0
KK252:	db '%s%s',0
KK253:	db ':::',0
KK254:	db '%s%s',0
KK255:	db ':##',0
KK256:	db '%s',10,0
KK257:	db '%s %d %d',10,0
KK258:	db 'FINAL HASHTABLE',0
KK259:	db 'block comment eof',0
KK260:	db '-LL?',0
KK261:	db '-U?',0
KK262:	db 'Overflow in hex number',0
KK263:	db 'Binary bad digit',0
KK264:	db 'Binary fp',0
KK265:	db 'Overflow in binary number',0
KK266:	db '-LL?',0
KK267:	db '-U?',0
KK268:	db '1777777777777777777777',0
KK269:	db 'Overflow in octal number',0
KK270:	db '-LL?',0
KK271:	db '-U?',0
KK272:	db '18446744073709551615',0
KK273:	db 'Overflow in decimal number',0
KK274:	db '%s',10,0
KK275:	db 'Can',39,'t find include file',0
KK276:	db 'Too many nested includes',0
KK277:	db 'Bad \x code',0
KK278:	db '%s %d',10,0
KK279:	db 'NEXTLX.LINENO=',0
KK280:	db 'String not terminated',0
KK281:	db 'Local str too long',0
KK282:	db 'define: name expected',0
KK283:	db 'Dupl macro param',0
KK284:	db '__VA_ARGS__',0
KK285:	db 39,')',39,' expected',0
KK286:	db 'macro params?',0
KK287:	db '%s%s',0
KK288:	db '<',0
KK289:	db '%s',10,0
KK290:	db '>',0
KK291:	db 'rmc: no ',39,'(',39,0
KK292:	db 'rmc: ',39,')',39,' expected',0
KK293:	db 'EOS in macro call',0
KK294:	db 'Wrong # macro params',0
KK295:	db '# at end',0
KK296:	db '# not followed by param',0
KK297:	db '## at start',0
KK298:	db 'Too many ##',0
KK299:	db 10,0
KK300:	db 0

KK301:	db '%s%s%s',0
KK302:	db '<',0
KK303:	db '>',0
KK304:	db 'STRTOKEN: can',39,'t do this symbol',0
KK305:	db 0

KK306:	db ' ',0
KK307:	db '%.*s',0
KK308:	db 'Too many pasted tokens',0
KK309:	db '#if:eol expected',0
KK310:	db ': expected',0
KK311:	db '#if:div by zero',0
KK312:	db 'defined?',0
KK313:	db 39,')',39,' expected',0
KK314:	db 39,'(',39,' expected',0
KK315:	db 'name expected',0
KK316:	db 'sizeof2',0
KK317:	db 39,')',39,' expected',0
KK318:	db ') expected',0
KK319:	db 10,0
KK320:	db 'evalterm?',0
KK321:	db 'Name expected',0
KK322:	db 'EOL expected',0
KK323:	db '#if:Unexpected eof',0
KK324:	db '<Date>',0
KK325:	db '<Time>',0
KK326:	db '(File not available)',0
KK327:	db '%d',10,0
KK328:	db 'PDM',0
KK329:	db '%lld',0
KK330:	db 'pack',0
KK331:	db 39,'(',39,' expected',0
KK332:	db 'Only pack(1) or () allowed',0
KK333:	db '$callback',0
KK334:	db 'PRINTST not name',0
KK335:	db '    ',0
KK336:	db ':',0
KK337:	db '%s.%d',0
KK338:	db '[',0
KK339:	db ' ',0
KK340:	db 'Stat',0
KK341:	db '@@',0
KK342:	db ' ',0
KK343:	db 'Var ',0
KK344:	db 'Used ',0
KK345:	db 'Fwd ',0
KK346:	db 'Frm ',0
KK347:	db 'AV ',0
KK348:	db 'Pm:%d ',0
KK349:	db 'M#%d ',0
KK350:	db '= ',0
KK351:	db ']',0
KK352:	db '(%s)',0
KK353:	db '()',0
KK354:	db 'Void ',0
KK355:	db 'Offset:',0
KK356:	db '=',0
KK357:	db ' Offset: ',0
KK358:	db 'Index:',0
KK359:	db ' Address:',0
KK360:	db '%p',0
KK361:	db '<callback fn>',0
KK362:	db 'Enum:',0
KK363:	db '=',0
KK364:	db 'STATIC********',0
KK365:	db ' ',0
KK366:	db 'Lineno:',0
KK367:	db ' ',0
KK368:	db 9,9,'Param: ',0
KK369:	db 'Anon',0
KK370:	db '%s',10,0
KK371:	db 'GLOBAL SYMBOL TABLE:',0
KK372:	db ':',0
KK373:	db '%d %p %s %s %s %s',10,0
KK374:	db '%s %p %s %s %s %p',0
KK375:	db 9,0
KK376:	db '-',0
KK377:	db ')',0
KK378:	db '%s %s%s',10,0
KK379:	db '(From',0
KK380:	db 'to',0
KK381:	db '%s',10,0
KK382:	db 'Can',39,'t find -to version',0
KK383:	db 'GCV Not constant',0
KK384:	db '$T%d',0
KK385:	db '%s %s %s',10,0
KK386:	db 'MODULE:',0
KK387:	db '%s%s %s',10,0
KK388:	db '=',0
KK389:	db '1',0
KK390:	db 10,0
KK391:	db '%s %d',10,0
KK392:	db 'print unit: bad tag',0
KK393:	db '%s',0
KK394:	db '%s%s',0
KK395:	db ': ',0
KK396:	db '%s %s',10,0
KK397:	db 'IDNAME=',0
KK398:	db '%s %s',0
KK399:	db '}',0
KK400:	db '%s%s%s',0
KK401:	db ' {',0
KK402:	db '%s%s',0
KK403:	db ' ',0
KK404:	db '%s %p',0
KK405:	db ' Lastcall:',0
KK406:	db '%s %s',0
KK407:	db 10,0
KK408:	db '1',0
KK409:	db '%s %s',0
KK410:	db '%s',0
KK411:	db '%s %d',0
KK412:	db 'Index:',0
KK413:	db '" *',0
KK414:	db '%s%s %s%d',0
KK415:	db '"',0
KK416:	db '(LONGSTR)',0
KK417:	db '" *',0
KK418:	db '%s%s%s%d',0
KK419:	db '"',0
KK420:	db '%lld',0
KK421:	db '%llu',0
KK422:	db '%f',0
KK423:	db '%p',0
KK424:	db '%s',10,0
KK425:	db 'PRINTUNIT BAD CONST',0
KK426:	db '%s%s',0
KK427:	db ' ',0
KK428:	db '%s',0
KK429:	db '<STRCONST>',0
KK430:	db '%s',0
KK431:	db '%s',0
KK432:	db ' ',0
KK433:	db '%s',0
KK434:	db 'Mem:',0
KK435:	db '%s',0
KK436:	db '%s',0
KK437:	db ' => ',0
KK438:	db '%s',0
KK439:	db 'Mem:',0
KK440:	db '%s',0
KK441:	db '%s %d',0
KK442:	db 'Scale:',0
KK443:	db '%s %d',0
KK444:	db 'Ptrscale:',0
KK445:	db '%p %d',0
KK446:	db '%s %d',0
KK447:	db ' Aparams:',0
KK448:	db '%s',0
KK449:	db ' <simple>',0
KK450:	db 10,0
KK451:	db '1',0
KK452:	db '2',0
KK453:	db '3',0
KK454:	db '-----------------',0
KK455:	db '|---',0
KK456:	db ' ',0
KK457:	db '.',0
KK458:	db '.%d',0
KK459:	db '%05d ',0
KK460:	db '$F%d',0
KK461:	db '\%03o',0
KK462:	db 'LONGSTR)',0
KK463:	db '"',0
KK464:	db '"',0
KK465:	db '%lld',0
KK466:	db '%llu',0
KK467:	db '%f',0
KK468:	db '%p',0
KK469:	db '%s',10,0
KK470:	db 'EVAL/CONST',0
KK471:	db '&',0
KK472:	db '(',0
KK473:	db ')',0
KK474:	db '(',0
KK475:	db ')',0
KK476:	db '(',0
KK477:	db ',',0
KK478:	db ')',0
KK479:	db '.',0
KK480:	db '->',0
KK481:	db '(',0
KK482:	db '{',0
KK483:	db ',',0
KK484:	db ')',0
KK485:	db '}',0
KK486:	db '=',0
KK487:	db '?',0
KK488:	db ':',0
KK489:	db '(',0
KK490:	db ')',0
KK491:	db '*(',0
KK492:	db '+',0
KK493:	db ')',0
KK494:	db '<JBLOCK>',0
KK495:	db '++',0
KK496:	db '--',0
KK497:	db '++',0
KK498:	db '--',0
KK499:	db '<nullunit>',0
KK500:	db 'scale((',0
KK501:	db ')*',0
KK502:	db ')/',0
KK503:	db ')',0
KK504:	db '<CAN',39,'T DO JEVAL>',0
KK505:	db 'const ref ',0
KK506:	db 'ref ',0
KK507:	db '[%d]',0
KK508:	db '[]',0
KK509:	db 'enum ',0
KK510:	db '(',0
KK511:	db ',',0
KK512:	db ' ',0
KK513:	db ')',0
KK514:	db 'proc[PM](',0
KK515:	db ',',0
KK516:	db ')',0
KK517:	db '%s',10,0
KK518:	db 'NEWSTRMODE',0
KK519:	db 'PURGESYMBOL',0
KK520:	db '%s %d',10,0
KK521:	db 'MODELIST',0
KK522:	db '#',0
KK523:	db 'Name',0
KK524:	db 'Base',0
KK525:	db 'Bit',0
KK526:	db 'Target',0
KK527:	db 'Len',0
KK528:	db 'Size',0
KK529:	db 'C',0
KK530:	db 'R',0
KK531:	db 'V',0
KK532:	db '@Cnst',0
KK533:	db '@Ref',0
KK534:	db 'Tag',0
KK535:	db 'Mode',0
KK536:	db '-',0
KK537:	db 0

KK538:	db '-',0
KK539:	db 9,9,0
KK540:	db 10,0
KK541:	db 'struct',0
KK542:	db 'union',0
KK543:	db '<array>',0
KK544:	db '<enum>',0
KK545:	db 'const ',0
KK546:	db 0

KK547:	db 'Too many types',0
KK548:	db '%s %d',10,0
KK549:	db 'MAXTYPE=',0
KK550:	db 'Too many types/cnm',0
KK551:	db '%s expected, not %s',0
KK552:	db ' "',0
KK553:	db '"',0
KK554:	db '%s %s %s',10,0
KK555:	db 'in',0
KK556:	db 'Dupl proc name',0
KK557:	db 'GETALIGN 0',0
KK558:	db '%s',10,0
KK559:	db 'GETALIGN SIZE NOT 1248',0
KK560:	db '%s %s',10,0
KK561:	db 'Type is:',0
KK562:	db 'Var name expected',0
KK563:	db 'fn def after comma',0
KK564:	db 'Decl error %s',0
KK565:	db 'PARSETEST',0
KK566:	db 'declspec/ts %s',0
KK567:	db 'struct?',0
KK568:	db 'enum?',0
KK569:	db 'Implicit decls not allowed: %s',0
KK570:	db 'typeof',0
KK571:	db 'char decl?',0
KK572:	db 'dbl decl?',0
KK573:	db 'Complex?',0
KK574:	db 'declspec/float',0
KK575:	db 'Modifying constant?',0
KK576:	db '%s %s',10,0
KK577:	db '?: incompatible types',0
KK578:	db 'float|float',0
KK579:	db 'invalid | operands',0
KK580:	db 'float^float',0
KK581:	db 'invalid ^ operands',0
KK582:	db 'float&float',0
KK583:	db '%s',10,0
KK584:	db '%s',10,0
KK585:	db 'invalid & operands',0
KK586:	db 'Comparing distinct pointers/eq',0
KK587:	db 'Can',39,'t compare pointer to int',0
KK588:	db 'Can',39,'t compare pointer to int2',0
KK589:	db 'invalid == operands',0
KK590:	db 'Comparing distinct pointers/rel',0
KK591:	db 'invalid rel operands',0
KK592:	db 'shift:Not an int',0
KK593:	db 'Undefined name "%s"',0
KK594:	db 'rt/&&label',0
KK595:	db 'rt/compound lit',0
KK596:	db 'rt/generic',0
KK597:	db 'rt/alignof',0
KK598:	db 'Readterm?',0
KK599:	db 'var: name in use %s %s',0
KK600:	db 'var: redefining %s',0
KK601:	db 'Can',39,'t init twice %s',0
KK602:	db 'Can',39,'t init extern %s',0
KK603:	db 'var: name in use %s',0
KK604:	db 'Can',39,'t init twice %s',0
KK605:	db 'Can',39,'t init extern %s',0
KK606:	db 'rnt1',0
KK607:	db 'Can',39,'t do VLAs',0
KK608:	db 'Negative array dim',0
KK609:	db 'readconstint %s',0
KK610:	db 'init/0-size array',0
KK611:	db 'init/Empty struct',0
KK612:	db 'Too many array elems',0
KK613:	db 'Too many struct elems',0
KK614:	db '{} initialiser expected',0
KK615:	db 'Array init',0
KK616:	db 'Init str too long',0
KK617:	db 'Too many block levels',0
KK618:	db 'Too many blocks',0
KK619:	db 'break outside loop/sw',0
KK620:	db 'continue outside loop',0
KK621:	db 'Size is',0
KK622:	db 9,'on line',0
KK623:	db '%s %s %s %s %s %d %s %d',0
KK624:	db 'Mode is:',0
KK625:	db ':',0
KK626:	db '%s %d',0
KK627:	db ' target size',0
KK628:	db 10,0
KK629:	db '%s',10,0
KK630:	db 'Duplicate label',0
KK631:	db 'label before }',0
KK632:	db 'Var name expected',0
KK633:	db 'Not allowed in for stmt',0
KK634:	db 'For decl error',0
KK635:	db 'Can',39,'t return value in void function',0
KK636:	db 'Return value needed',0
KK637:	db 'Var name expected',0
KK638:	db 'Nested function',0
KK639:	db 'Local decl error %s',0
KK640:	db 'Typedef name in use %s',0
KK641:	db 'Typedef redefined or can',39,'t match types %s',0
KK642:	db 'Param name reused %s %s',0
KK643:	db 'bad symbol in paramlist',0
KK644:	db 'NAME not allowed in cast type %s',0
KK645:	db 'fn: name in use %s',0
KK646:	db 'Can',39,'t define function twice %s',0
KK647:	db 'Param names missing',0
KK648:	db '%s',10,0
KK649:	db 'neg bad type',0
KK650:	db 'abs bad type',0
KK651:	db '%s',10,0
KK652:	db '! bad type',0
KK653:	db '* not pointer',0
KK654:	db '++ bad type',0
KK655:	db '& on nameaddr &%s',0
KK656:	db 'Sub bad types',0
KK657:	db 'Sub bad types',0
KK658:	db 'Mul bad types',0
KK659:	db 'Div bad types',0
KK660:	db 'Rem bad types',0
KK661:	db 'EVALSUB/REF',0
KK662:	db 'div 0',0
KK663:	db 'rem 0',0
KK664:	db 'Invalid condition %s',0
KK665:	db '%s',10,0
KK666:	db 'WM',0
KK667:	db '*',0
KK668:	db 'CHECKLV/WIDEN',0
KK669:	db '*',0
KK670:	db 'Not lvalue: %s',0
KK671:	db 'Not function pointer %s %s',0
KK672:	db 'Too few args',0
KK673:	db 'Too many args',0
KK674:	db '%s',10,0
KK675:	db 'ATP:',0
KK676:	db '*',0
KK677:	db 'ATP?',0
KK678:	db 'Can',39,'t index this type %s',0
KK679:	db 'CREATEINDEX/ADDOFFSET/CONST SCALE<>1?',0
KK680:	db 'Struct tag in use %s',0
KK681:	db 'Struct tag in use %s',0
KK682:	db '%s %d %s %s',10,0
KK683:	db 'Prev',0
KK684:	db 'Redefining struct %s',0
KK685:	db 'Field name expected',0
KK686:	db 'typedef or function inside struct',0
KK687:	db 'member name in use %s',0
KK688:	db 'Can',39,'t use ss in struct',0
KK689:	db 'Struct decl error %s',0
KK690:	db '%s',10,0
KK691:	db '%s',10,0
KK692:	db 'const to non-const pointer',0
KK693:	db 'Enum tag in use %s',0
KK694:	db 'Enum tag in use %s',0
KK695:	db 'Redefining enum %s',0
KK696:	db 'enum name reused %s',0
KK697:	db '-> needs pointer',0
KK698:	db '. -> not a struct',0
KK699:	db 'Not a field of struct %s %s',0
KK700:	db 'ptr+=ptr',0
KK701:	db '-= refs don',39,'t match',0
KK702:	db 'Not allowed on ptrs',0
KK703:	db 'Too many nested loop or switch',0
KK704:	db 'poploop?',0
KK705:	db 'case not inside switch stmt',0
KK706:	db '%s',10,0
KK707:	db '%s',10,0
KK708:	db 'Can',39,'t do conversion %s => %s',0
KK709:	db 'kkk1',0
KK710:	db 'w',0
KK711:	db '!when %s then',10,0
KK712:	db 'Too many temps',0
KK713:	db 'Too many temps',0
KK714:	db 'PROC:',0
KK715:	db '%4d %06d: ',0
KK716:	db '>>',0
KK717:	db ' L',0
KK718:	db '/',0
KK719:	db ': =========',0
KK720:	db 'TEMPDATA:',0
KK721:	db 9,9,9,0
KK722:	db ': ',0
KK723:	db '   ',0
KK724:	db '; ',0
KK725:	db '   ',0
KK726:	db ':',0
KK727:	db '.',0
KK728:	db '.%d',0
KK729:	db ',  ',0
KK730:	db ',  ',0
KK731:	db ' Offset:',0
KK732:	db '%lld',0
KK733:	db '%f',0
KK734:	db '0',0
KK735:	db '(LONGSTR)',0
KK736:	db '"',0
KK737:	db '"',0
KK738:	db 'L%d',0
KK739:	db '[%s]',0
KK740:	db '@[%s]',0
KK741:	db '&%s',0
KK742:	db 'T%d',0
KK743:	db '@T%d',0
KK744:	db '<amode>',0
KK745:	db ' <BLOCK>',0
KK746:	db '%s/%s/%s',0
KK747:	db 'PROC ',0
KK748:	db '/MODULE:',0
KK749:	db '/',0
KK750:	db ':',0
KK751:	db '%s%d',0
KK752:	db '%s',10,0
KK753:	db 'Generating ASM64:',0
KK754:	db ';',9,'Module:',0
KK755:	db '%include "mccasm.inc"',0
KK756:	db 9,'extern $showline',0
KK757:	db '%s %s%s',10,0
KK758:	db 'Writing',0
KK759:	db ':',0
KK760:	db 9,'global ',0
KK761:	db 9,'extern ',0
KK762:	db 'Static function not defined',0
KK763:	db ';',9,'Proc:',0
KK764:	db '%s',10,0
KK765:	db 'Zero size local',0
KK766:	db 'tempdata op expected',0
KK767:	db 'main',0
KK768:	db 9,'push Dframe',0
KK769:	db 9,'mov Dframe, Dstack',0
KK770:	db 9,'sub Dstack, ',0
KK771:	db 9,'sub Dstack, 8',0
KK772:	db 9,'movd',0
KK773:	db 9,'movq',0
KK774:	db ' [Dframe+',0
KK775:	db '], XMM',0
KK776:	db 9,'mov [Dframe+',0
KK777:	db '], D',0
KK778:	db 9,'add Dstack, ',0
KK779:	db 9,'pop Dframe',0
KK780:	db 9,'add Dstack,8',0
KK781:	db 'main',0
KK782:	db 9,'extern exit',0
KK783:	db 9,'sub Dstack,40',0
KK784:	db 9,'mov D10,D0',0
KK785:	db 9,'call exit',0
KK786:	db 9,'ret',0
KK787:	db ';',9,'End',10,0
KK788:	db 10,';string table:',0
KK789:	db 'KK',0
KK790:	db ':',9,0
KK791:	db 10,';real const table:',0
KK792:	db 'RR',0
KK793:	db ':',9,0
KK794:	db '; ------------------------------ ',0
KK795:	db ' ;<',0
KK796:	db '>',0
KK797:	db 9,'dq ',0
KK798:	db 9,'; ',0
KK799:	db 9,'jmp',9,0
KK800:	db 9,'jmp ',0
KK801:	db '%s %s %s %d',10,0
KK802:	db 'CAN',39,'T DO',0
KK803:	db '((M)^.LINENO IAND 16777215)=',0
KK804:	db 'ASM: CAN',39,'T DO:',0
KK805:	db 'Too many string consts',0
KK806:	db 'Too many real consts',0
KK807:	db 'db 0',0
KK808:	db 'db ',0
KK809:	db 39,',',0
KK810:	db 39,',0',0
KK811:	db 'dq ',0
KK812:	db '0x%llX',0
KK813:	db 'dd ',0
KK814:	db '0x%X, 0',0
KK815:	db 9,'; ',0
KK816:	db '%lld',0
KK817:	db 'ASMBUFFER ERROR',0
KK818:	db 9,'segment .text',0
KK819:	db 9,'segment .bss',0
KK820:	db 9,'align ',0
KK821:	db ',resb 1',0
KK822:	db 9,'segment .data',0
KK823:	db 9,'align ',0
KK824:	db 9,'dq 0',0
KK825:	db 9,'db 0',0
KK826:	db 9,'db ',0
KK827:	db 9,'dq 0',0
KK828:	db 9,'db 0',0
KK829:	db 9,'db ',0
KK830:	db 9,'dw ',0
KK831:	db 9,'dd ',0
KK832:	db 9,'dq ',0
KK833:	db 9,'dq 0',0
KK834:	db 9,'dq KK',0
KK835:	db '%s',10,0
KK836:	db 'IDATA/SCALAR',0
KK837:	db 9,'dq ',0
KK838:	db 9,'dd ',0
KK839:	db 'Idata &frame',0
KK840:	db 9,'dq ',0
KK841:	db 'Add/Idata &frame',0
KK842:	db 9,'dq ',0
KK843:	db '*',0
KK844:	db 'Runtime or unsupported expr in static data',0
KK845:	db '%s %d',10,0
KK846:	db '*',0
KK847:	db 'IDATA? [Run-time expressions in {...} data not supported]',0
KK848:	db 9,'extern ',0
KK849:	db 9,'global ',0
KK850:	db 'ch',0
KK851:	db '$ch',0
KK852:	db ':',9,'resb ',0
KK853:	db ':',9,'resb ',0
KK854:	db '%.*s %d %c',0
KK855:	db 'T%d %c',0
KK856:	db 'stack',0
KK857:	db 'XMM',0
KK858:	db 9,'movd',9,0
KK859:	db 9,'movq',9,0
KK860:	db 9,'xchg',9,0
KK861:	db 9,'sub',9,'Dstack,152',0
KK862:	db 9,'sub',9,'Dstack,8',0
KK863:	db 9,'lea',9,'D0,[Dstack+8]',0
KK864:	db 9,'push',9,'D0',0
KK865:	db 9,'sub',9,'Dstack,32',0
KK866:	db 9,'lea',9,'D0,[Dstack+196]',0
KK867:	db 9,'mov',9,'[Dstack],D0',0
KK868:	db 9,'lea',9,'D0,[Dstack+184]',0
KK869:	db 9,'mov',9,'[Dstack+8],D0',0
KK870:	db 9,'lea',9,'D0,[Dstack+176]',0
KK871:	db 9,'mov',9,'[Dstack+16],D0',0
KK872:	db 9,'mov',9,'A0,0',0
KK873:	db 9,'mov',9,'[Dstack+24],A0',0
KK874:	db 9,'mov',9,'D10,[Dstack]',0
KK875:	db 9,'mov',9,'D11,[Dstack+8]',0
KK876:	db 9,'mov',9,'D12,[Dstack+16]',0
KK877:	db 9,'mov',9,'D13,[Dstack+24]',0
KK878:	db 9,'extern __getmainargs',0
KK879:	db 9,'call',9,'__getmainargs',0
KK880:	db 9,'add',9,'Dstack,48',0
KK881:	db 9,'sub',9,'Dstack,32',0
KK882:	db 9,'mov',9,'A0,[Dstack+180]',0
KK883:	db 9,'mov',9,'[Dstack],A0',0
KK884:	db 9,'mov',9,'D0,[Dstack+168]',0
KK885:	db 9,'mov',9,'[Dstack+8],D0',0
KK886:	db 9,'mov',9,'D10,[Dstack]',0
KK887:	db 9,'mov',9,'D11,[Dstack+8]',0
KK888:	db 9,'call',9,'.main',0
KK889:	db '.main:',0
KK890:	db 'Dframe',0
KK891:	db 'ch',0
KK892:	db '$ch',0
KK893:	db '[Dframe',0
KK894:	db 'RR',0
KK895:	db 'RR',0
KK896:	db 'KK',0
KK897:	db 'Dframe',0
KK898:	db 'ch',0
KK899:	db '$ch',0
KK900:	db '%s %s',10,0
KK901:	db 'OTHER OPND',0
KK902:	db 'OTHER OPND',0
KK903:	db '<',0
KK904:	db '>',0
KK905:	db 9,'push qword ',0
KK906:	db 9,'push D13',0
KK907:	db 'push odd size',0
KK908:	db 9,'lea ',0
KK909:	db 9,'lea ',0
KK910:	db 9,'mov ',0
KK911:	db 9,'mov ',0
KK912:	db 9,'movd ',0
KK913:	db 9,'movq ',0
KK914:	db 9,'movd ',0
KK915:	db 9,'movq ',0
KK916:	db 'STORE BLOCK OPND',0
KK917:	db '%s %s',10,0
KK918:	db 'OPNDNAMES^[(AX)^.FMT]=',0
KK919:	db '%s',10,0
KK920:	db 'loadaddr',0
KK921:	db 9,'inc ',0
KK922:	db 9,'dec ',0
KK923:	db 'z',0
KK924:	db 'nz',0
KK925:	db 'l',0
KK926:	db 'le',0
KK927:	db 'ge',0
KK928:	db 'g',0
KK929:	db 'b',0
KK930:	db 'be',0
KK931:	db 'ae',0
KK932:	db 'a',0
KK933:	db 0

KK934:	db 9,'comiss XMM0, ',0
KK935:	db 9,'comisd XMM0, ',0
KK936:	db 9,'cmp ',0
KK937:	db 9,'j',0
KK938:	db 9,'sub Dstack,8',0
KK939:	db 9,'sub Dstack,32',0
KK940:	db 'BLOCK PARAM 1..4',0
KK941:	db 9,'call ',0
KK942:	db 9,'call ',0
KK943:	db 9,'call ',0
KK944:	db 9,'add Dstack, ',0
KK945:	db 9,'add ',0
KK946:	db 9,'sub ',0
KK947:	db 9,'adds',0
KK948:	db 9,'subs',0
KK949:	db 9,'muls',0
KK950:	db 9,'divs',0
KK951:	db 's ',0
KK952:	db 'd ',0
KK953:	db 9,'mul ',0
KK954:	db 9,'cdq ',0
KK955:	db 9,'cqo',0
KK956:	db 9,'idiv ',0
KK957:	db 9,'xor D11,D11',0
KK958:	db 9,'div ',0
KK959:	db 9,'xchg A0,A11',0
KK960:	db 9,'xchg D0,D11',0
KK961:	db 9,'and ',0
KK962:	db 9,'or ',0
KK963:	db 9,'xor ',0
KK964:	db 9,'shl ',0
KK965:	db 9,'sar ',0
KK966:	db 9,'shr ',0
KK967:	db ', cl',0
KK968:	db 9,'shl ',0
KK969:	db 9,'sar ',0
KK970:	db 9,'shr ',0
KK971:	db ', cl',0
KK972:	db 9,'and ',0
KK973:	db 9,'jnz ',0
KK974:	db 9,'jz ',0
KK975:	db 9,'mov ',0
KK976:	db ', [',0
KK977:	db ']',0
KK978:	db 9,'lea ',0
KK979:	db 9,'mov ',0
KK980:	db 9,'movsx ',0
KK981:	db 9,'mov ',0
KK982:	db 9,'movzx ',0
KK983:	db 9,'movzx ',0
KK984:	db 9,'and D0,255',0
KK985:	db 9,'and D0,65535',0
KK986:	db 9,'mov A0,A0',0
KK987:	db 9,'sub Dstack,32',0
KK988:	db 9,'lea D10,',0
KK989:	db 9,'mov D11,$',0
KK990:	db 9,'mov D12,',0
KK991:	db 9,'extern memcpy',0
KK992:	db 9,'call memcpy',0
KK993:	db 9,'add Dstack,32',0
KK994:	db 9,'imul ',0
KK995:	db 9,'lea ',0
KK996:	db 9,'mov ',0
KK997:	db ', [',0
KK998:	db 9,'imul ',0
KK999:	db 9,'lea ',0
KK1000:	db ', [',0
KK1001:	db 9,'inc ',0
KK1002:	db 9,'dec ',0
KK1003:	db 9,'add ',0
KK1004:	db 9,'sub ',0
KK1005:	db 9,'inc ',0
KK1006:	db 9,'dec ',0
KK1007:	db 9,'add ',0
KK1008:	db 9,'sub ',0
KK1009:	db 9,'cvtsi2ss XMM0,',0
KK1010:	db 9,'cvtsi2sd XMM0,',0
KK1011:	db 9,'cvtss2si ',0
KK1012:	db 9,'cvtsd2si ',0
KK1013:	db ', XMM0',0
KK1014:	db 9,'add ',0
KK1015:	db 9,'adds',0
KK1016:	db 9,'subs',0
KK1017:	db 9,'muls',0
KK1018:	db 9,'divs',0
KK1019:	db 's ',0
KK1020:	db 'd ',0
KK1021:	db 9,'sub ',0
KK1022:	db 9,'mul ',0
KK1023:	db 9,'cdq ',0
KK1024:	db 9,'cqo',0
KK1025:	db 9,'idiv ',0
KK1026:	db 9,'xor D11,D11',0
KK1027:	db 9,'div ',0
KK1028:	db 9,'xchg A0,A11',0
KK1029:	db 9,'xchg D0,D11',0
KK1030:	db 9,'and ',0
KK1031:	db 9,'or ',0
KK1032:	db 9,'xor ',0
KK1033:	db 9,'neg ',0
KK1034:	db 9,'xorpd XMM0,[fchsmask_pd]',0
KK1035:	db 9,'cmp ',0
KK1036:	db ', 0',0
KK1037:	db 9,'jge L',0
KK1038:	db 9,'neg ',0
KK1039:	db ':',0
KK1040:	db 9,'not ',0
KK1041:	db 9,'mov D12,',0
KK1042:	db 9,'extern memcpy',0
KK1043:	db 9,'sub Dstack,32',0
KK1044:	db 9,'call memcpy',0
KK1045:	db 9,'add Dstack,32',0
KK1046:	db 9,'sub A0, ',0
KK1047:	db 9,'cmp A0, ',0
KK1048:	db 9,'jae L',0
KK1049:	db 9,'jmp [A0*8+L',0
KK1050:	db ']',0
KK1051:	db 9,'align 8',0
KK1052:	db 9,'comiss XMM0, ',0
KK1053:	db 9,'comisd XMM0, ',0
KK1054:	db 9,'cmp ',0
KK1055:	db 9,'set',0
KK1056:	db ' B0',0
KK1057:	db 9,'movzx A0,B0',0
KK1058:	db '%s',10,0
KK1059:	db 'PUSHFLOATPARAM',0
KK1060:	db 9,'cvtss2sd XMM15, ',0
KK1061:	db 9,'sub Dstack, 8',0
KK1062:	db 9,'movq [Dstack], XMM15',0
KK1063:	db '%s',10,0
KK1064:	db 'LOADFLOATPARAM',0
KK1065:	db 9,'cvtss2sd ',0
KK1066:	db 9,'movq ',0
KK1067:	db 9,'cvtss2sd XMM0, ',0
KK1068:	db 9,'cvtsd2ss XMM0, ',0
KK1069:	db '%s',10,0
KK1070:	db 'Generating TCL code:',0
KK1071:	db 'case %d:',0
KK1072:	db 'case: serial switch not found',0
KK1073:	db 'default:',0
KK1074:	db 'stmt/null',0
KK1075:	db 'DO-EXPR: can',39,'t do tag: %s',0
KK1076:	db 'DO-EXPRLV: can',39,'t do tag: %s',0
KK1077:	db 'dxconst %s',0
KK1078:	db 'Label not defined: %s',0
KK1079:	db 'Convert op not implem: %s',0
KK1080:	db 'Too many cases on one switch',0
KK1081:	db 'Dupl case value: %d',0
KK1082:	db 'call/block param?',0
KK1083:	db 'main',0
KK1084:	db 'ST',0
KK1085:	db 'FST',0
KK1086:	db 'TCL',0
KK1087:	db 'No sourcefile specified',0
KK1088:	db 0

KK1089:	db 'Can only compile a file at a time for now',0
KK1090:	db 0

KK1091:	db 'Can',39,'t yet use lib files',0
KK1092:	db 0

KK1093:	db '%s %s',10,0
KK1094:	db 'Loading:',0
KK1095:	db '%s',10,0
KK1096:	db 'Parsing:',0
KK1097:	db 'GEN1?',0
KK1098:	db 0

KK1099:	db 'GEN2?',0
KK1100:	db 0

KK1101:	db 'Can',39,'t do generate BIN code yet',0
KK1102:	db 0

KK1103:	db 'Can',39,'t run any code yet',0
KK1104:	db 0

KK1105:	db '<dummy file>',0
KK1106:	db '<dummy path>',0
KK1107:	db '<sourcefile0>',0
KK1108:	db 'PROGRAM',0
KK1109:	db '$prog',0
KK1110:	db 'Can',39,'t load main module: %s',0
KK1111:	db 'Too many modules %s',0
KK1112:	db 'Too many modules %s',0
KK1113:	db 'mcc.log',0
KK1114:	db 'mcc.log',0
KK1115:	db 'w',0
KK1116:	db '\m\med.bat %s',0
KK1117:	db 'mcc.log',0
KK1118:	db 'cc_start.m',0
KK1119:	db '%s %s',10,0
KK1120:	db 'Diagnostic outputs written to',0
KK1121:	db 'mcc.log',0
KK1122:	db '%s',0
KK1123:	db 'CLF Press key...',0
KK1124:	db 10,0
KK1125:	db 0

KK1126:	db '/cx/headers/',0
KK1127:	db '%s',10,0
KK1128:	db 'Include search paths:',0
KK1129:	db '%s',10,0
KK1130:	db '0: Internal standard headers (disable with -ext)',0
KK1131:	db '%d%s %s',10,0
KK1132:	db ':',0
KK1133:	db '%d%s',10,0
KK1134:	db ': .',0
KK1135:	db 10,0
KK1136:	db 10,0
KK1137:	db 'PROC AST',0
KK1138:	db 10,0
KK1139:	db '%s %s',10,0
KK1140:	db 'PROC',0
KK1141:	db 10,0
KK1142:	db '%s %s',10,0
KK1143:	db 'PROC',0
KK1144:	db 10,0
KK1145:	db 'PROC ASSEMBLY LISTING',0
KK1146:	db 'PROC FLATC LISTING',0
KK1147:	db '%s %d',10,0
KK1148:	db '%s',10,0
KK1149:	db '%s',10,0
KK1150:	db 'Modules:',0
KK1151:	db '%d%s',0
KK1152:	db ':',0
KK1153:	db '@',0
KK1154:	db '%s %s %s %d %s %p',10,0
KK1155:	db 'Size:',0
KK1156:	db 10,0
KK1157:	db '%s',10,0
KK1158:	db 'Sourcefiles:',0
KK1159:	db 'Size:',0
KK1160:	db '%d %s %s %s %s %d',10,0
KK1161:	db ':',0
KK1162:	db 10,0
KK1163:	db '%d %s',10,0
KK1164:	db 'Lines',0
KK1165:	db 'Load',0
KK1166:	db 'Parse',0
KK1167:	db 'Codegen1',0
KK1168:	db '(Load/Parse/Gen1)',0
KK1169:	db 'Codegen2',0
KK1170:	db 'Writeasm',0
KK1171:	db 'Compile',0
KK1172:	db 'Load+Compile',0
KK1173:	db 'Program',0
KK1174:	db '%18s: %4d ms  %8dK Lines per second',10,0
KK1175:	db '%18s: %4d ms',10,0
KK1176:	db '%s',0
KK1177:	db '%s %s',10,0
KK1178:	db 'Unknown option:',0
KK1179:	db 'Too many input files',0
KK1180:	db 0

KK1181:	db 'Too many lib files',0
KK1182:	db 0

KK1183:	db '%s',10,0
KK1184:	db 'Usage:',0
KK1185:	db '%s%s %s',10,0
KK1186:	db 9,0
KK1187:	db 'filename[.c]',0
KK1188:	db '%s%s %s',10,0
KK1189:	db 9,0
KK1190:	db '-help',0
KK1191:	db 'asm',0
KK1192:	db 'cx',0
KK1193:	db 'Too many include paths',0
KK1194:	db 0

KK1195:	db 'Path should end with / or \: %s',0
KK1196:	db '%s',10,0
KK1197:	db '//COLON SEEN',0
KK1198:	db '%s %s',10,0
KK1199:	db 'Can',39,'t open',0
KK1200:	db '.c',0
KK1201:	db 'dll',0
KK1202:	db '%s',10,0
KK1203:	db 'Unexpected EOF in @file',0
KK1204:	db '%s',10,0
KK1205:	db '@file item too long',0
KK1206:	db 10,0
KK1207:	db '%s',10,0
KK1208:	db 'Options:',0
KK1209:	db '%s',10,0
KK1210:	db '--------',0
KK1211:	db '%s',10,0
KK1212:	db '-load',0
KK1213:	db '%s',10,0
KK1214:	db '-pp',0
KK1215:	db '%s',10,0
KK1216:	db '-parse',0
KK1217:	db '%s',10,0
KK1218:	db '-gen1',0
KK1219:	db '%s',10,0
KK1220:	db '-gen2',0
KK1221:	db '%s',10,0
KK1222:	db '-link',0
KK1223:	db '%s',10,0
KK1224:	db '-run',0
KK1225:	db '%s',10,0
KK1226:	db '-options',0
KK1227:	db '%s',10,0
KK1228:	db '-modules',0
KK1229:	db '%s',10,0
KK1230:	db '-e',0
KK1231:	db '%s',10,0
KK1232:	db '-ast',0
KK1233:	db '%s',10,0
KK1234:	db '-st',0
KK1235:	db '%s',10,0
KK1236:	db '-stflat',0
KK1237:	db '%s',10,0
KK1238:	db '-types',0
KK1239:	db '%s',10,0
KK1240:	db '-tcl',0
KK1241:	db '%s',10,0
KK1242:	db '-showasm',0
KK1243:	db '%s',10,0
KK1244:	db '-dis',0
KK1245:	db '%s',10,0
KK1246:	db '-time',0
KK1247:	db '%s',10,0
KK1248:	db '-d',0
KK1249:	db '%s',10,0
KK1250:	db '-asm',0
KK1251:	db '%s',10,0
KK1252:	db '-bin',0
KK1253:	db '%s',10,0
KK1254:	db '<showlog>',0
KK1255:	db 10,0
KK1256:	db 'Yes',0
KK1257:	db 'No',0
KK1258:	db '%s %s',10,0
KK1259:	db 'Use internal headers:',0
KK1260:	db '%s %d',10,0
KK1261:	db 'Input files',0
KK1262:	db '%d %s',10,0
KK1263:	db 10,0
KK1264:	db '%s %d',10,0
KK1265:	db 'Library files',0
KK1266:	db '%d %s',10,0
KK1267:	db 10,0
KK1268:	db '%s %d',10,0
KK1269:	db 'Include paths',0
KK1270:	db '%d %s',10,0
KK1271:	db 10,0
KK1272:	db 'MCC-ASM version compiles one C file to .asm64',13,10,13,10,'Normal use (mcc is the compiler executable):',13,10,13,10,9,'mcc filename',13,10,9,'mcc filename.c',13,10,13,10,'Translates filename.c to filename.asm64',13,10,13,10,'Options for ASM version:',13,10,13,10,9,'-load',9,9,'Load source only',13,10,9,'-pp',9,9,'Preprocess only',13,10,9,'-parse',9,9,'Parse/type-check only',13,10,9,'-gen1',9,9,'Generate intermediate code (',39,'mcl',39,')',13,10,9,'-gen2',9,9,'Generate asm code',13,10,9,'-c',9,9,'Same as -gen2',13,10,13,10,9,'-i:path',9,9,'Add include path (should end with \ or /)',13,10,9,'-ext',9,9,'Don',39,'t use internal standard headers',13,10,13,10,9,'-e',9,9,'Write preprocessed output to filename.i (also does -pp)',13,10,9,'-modules',9,'List modules',13,10,9,'-files',9,9,'Show all source files',13,10,9,'-st',9,9,'Show structured symbol table (to log file)',13,10,9,'-stflat',9,9,'Show main hash table (to log file)',13,10,9,'-ast',9,9,'Show abstract syntax tree per function (to log file)',13,10,9,'-mcl',9,9,'Show intermediate code (to log file)',13,10,9,'-showasm',9,'Show asm64 code (to log file as well as filename.asm64)',13,10,9,'-types',9,9,'Show type table',13,10,9,'-paths',9,9,'Show include/search paths',13,10,13,10,9,'-time',9,9,'Show compiler timing stats',13,10,9,'-options',9,'Show options chosen',13,10,9,'-v',9,9,'More verbose',13,10,13,10,9,'-writeheaders',9,'Write out internal headers as .hdr (not .h) files',13,10,13,10,'Notes:',13,10,13,10,'* Options can be placed, one per line, in an @ file, then just use',13,10,'  @filename in place of an option',13,10,'* Compiler is not finished',13,10,'* Standard header files are largely unpopulated (can use alternate',13,10,'  headers via -ext and -i, but there can be compatibility issues)',13,10,'* Only one source file is compiled',13,10,'* The only output is x64 ASM source code (requires additional resources and',13,10,'  info to assemble and link)',13,10,0
KK1273:	db '%s',10,0
KK1274:	db '%s',10,0
KK1275:	db 'MC [CY] Compiler 8.10',0
KK1276:	db 'none',0
KK1277:	db 'void',0
KK1278:	db 'schar',0
KK1279:	db 'short',0
KK1280:	db 'int',0
KK1281:	db 'llong',0
KK1282:	db 'bool',0
KK1283:	db 'uchar',0
KK1284:	db 'ushort',0
KK1285:	db 'uint',0
KK1286:	db 'ullong',0
KK1287:	db 'float',0
KK1288:	db 'double',0
KK1289:	db 'ldouble',0
KK1290:	db 'complex',0
KK1291:	db 'enum',0
KK1292:	db 'ref',0
KK1293:	db 'proc',0
KK1294:	db 'label',0
KK1295:	db 'array',0
KK1296:	db 'struct',0
KK1297:	db 'union',0
KK1298:	db 'tlast',0
KK1299:	db 'ts_void',0
KK1300:	db 'ts_char',0
KK1301:	db 'ts_short',0
KK1302:	db 'ts_long',0
KK1303:	db 'ts_int',0
KK1304:	db 'ts_float',0
KK1305:	db 'ts_double',0
KK1306:	db 'ts_signed',0
KK1307:	db 'ts_unsigned',0
KK1308:	db 'ts_bool',0
KK1309:	db 'ts_complex',0
KK1310:	db 'ts_user',0
KK1311:	db 'ts_struct',0
KK1312:	db 'ts_union',0
KK1313:	db 'ts_enum',0
KK1314:	db 'ts_atomic',0
KK1315:	db 'pm_normal',0
KK1316:	db 'pm_notset',0
KK1317:	db 'pm_empty',0
KK1318:	db 'pm_variadic',0
KK1319:	db '-',0
KK1320:	db 'Fn',0
KK1321:	db 'Loc',0
KK1322:	db 'Imp',0
KK1323:	db 'Exp',0
KK1324:	db 'open_cc',0
KK1325:	db 'own_cc',0
KK1326:	db 'clang_cc',0
KK1327:	db 'stdcall_cc',0
KK1328:	db 'callback_cc',0
KK1329:	db 'dummy_cc',0
KK1330:	db 'none_ss',0
KK1331:	db 'static_ss',0
KK1332:	db 'auto_ss',0
KK1333:	db 'register_ss',0
KK1334:	db 'extern_ss',0
KK1335:	db 'typedef_ss',0
KK1336:	db 'const_qual',0
KK1337:	db 'volatile_qual',0
KK1338:	db 'restrict_qual',0
KK1339:	db 'atomic_qual',0
KK1340:	db 'inline_fnspec',0
KK1341:	db 'noreturn_fnspec',0
KK1342:	db 'j_none',0
KK1343:	db 'j_const',0
KK1344:	db 'j_null',0
KK1345:	db 'j_name',0
KK1346:	db 'j_nameaddr',0
KK1347:	db 'j_widenmem',0
KK1348:	db 'j_funcname',0
KK1349:	db 'j_block',0
KK1350:	db 'j_tempdecl',0
KK1351:	db 'j_decl',0
KK1352:	db 'j_callproc',0
KK1353:	db 'j_return',0
KK1354:	db 'j_returnx',0
KK1355:	db 'j_assign',0
KK1356:	db 'j_if',0
KK1357:	db 'j_for',0
KK1358:	db 'j_while',0
KK1359:	db 'j_dowhile',0
KK1360:	db 'j_goto',0
KK1361:	db 'j_labelstmt',0
KK1362:	db 'j_casestmt',0
KK1363:	db 'j_defaultstmt',0
KK1364:	db 'j_break',0
KK1365:	db 'j_continue',0
KK1366:	db 'j_switch',0
KK1367:	db 'j_breaksw',0
KK1368:	db '&& andl',0
KK1369:	db '|| orl',0
KK1370:	db '! notl',0
KK1371:	db 'j_istruel',0
KK1372:	db 'j_makelist',0
KK1373:	db 'j_exprlist',0
KK1374:	db 'j_callfn',0
KK1375:	db 'j_ifx',0
KK1376:	db '&&',0
KK1377:	db '==',0
KK1378:	db '!=',0
KK1379:	db '<',0
KK1380:	db '<=',0
KK1381:	db '>',0
KK1382:	db '>=',0
KK1383:	db '+ add',0
KK1384:	db '- sub',0
KK1385:	db '* mul',0
KK1386:	db '/ div',0
KK1387:	db '% mod',0
KK1388:	db '& iand',0
KK1389:	db '| ior',0
KK1390:	db '^ ixor',0
KK1391:	db '<<',0
KK1392:	db '>>',0
KK1393:	db 'j_dot',0
KK1394:	db 'j_idot',0
KK1395:	db 'j_dotref',0
KK1396:	db 'j_index',0
KK1397:	db '* deref',0
KK1398:	db '* derefoffset',0
KK1399:	db '&* addoffset',0
KK1400:	db 'j_convert',0
KK1401:	db 'j_scale',0
KK1402:	db '- neg',0
KK1403:	db 'abs',0
KK1404:	db '~ inot',0
KK1405:	db '++ preincrx',0
KK1406:	db '-- predecrx',0
KK1407:	db '++ postincrx',0
KK1408:	db '-- postdecrx',0
KK1409:	db '+=',0
KK1410:	db '-=',0
KK1411:	db '*=',0
KK1412:	db '/=',0
KK1413:	db '%=',0
KK1414:	db '&=',0
KK1415:	db '|=',0
KK1416:	db '^=',0
KK1417:	db '<<=',0
KK1418:	db '>>=',0
KK1419:	db '++ preincr',0
KK1420:	db '-- preincr',0
KK1421:	db '++ postincr',0
KK1422:	db '-- postdecr',0
KK1423:	db 'j_dummy',0
KK1424:	db 'errorsym',0
KK1425:	db 'dotsym',0
KK1426:	db 'idotsym',0
KK1427:	db 'lexhashsym',0
KK1428:	db 'hashsym',0
KK1429:	db 'lithashsym',0
KK1430:	db 'hashhashsym',0
KK1431:	db 'commasym',0
KK1432:	db 'semisym',0
KK1433:	db 'colonsym',0
KK1434:	db 'assignsym',0
KK1435:	db 'lbracksym',0
KK1436:	db 'rbracksym',0
KK1437:	db 'lsqsym',0
KK1438:	db 'rsqsym',0
KK1439:	db 'lcurlysym',0
KK1440:	db 'rcurlysym',0
KK1441:	db 'questionsym',0
KK1442:	db 'curlsym',0
KK1443:	db 'ellipsissym',0
KK1444:	db 'addsym',0
KK1445:	db 'subsym',0
KK1446:	db 'mulsym',0
KK1447:	db 'divsym',0
KK1448:	db 'remsym',0
KK1449:	db 'iorsym',0
KK1450:	db 'iandsym',0
KK1451:	db 'ixorsym',0
KK1452:	db 'orlsym',0
KK1453:	db 'andlsym',0
KK1454:	db 'shlsym',0
KK1455:	db 'shrsym',0
KK1456:	db 'inotsym',0
KK1457:	db 'notlsym',0
KK1458:	db 'incrsym',0
KK1459:	db 'decrsym',0
KK1460:	db 'abssym',0
KK1461:	db 'eqsym',0
KK1462:	db 'nesym',0
KK1463:	db 'ltsym',0
KK1464:	db 'lesym',0
KK1465:	db 'gesym',0
KK1466:	db 'gtsym',0
KK1467:	db 'addtosym',0
KK1468:	db 'subtosym',0
KK1469:	db 'multosym',0
KK1470:	db 'divtosym',0
KK1471:	db 'remtosym',0
KK1472:	db 'iortosym',0
KK1473:	db 'iandtosym',0
KK1474:	db 'ixortosym',0
KK1475:	db 'shltosym',0
KK1476:	db 'shrtosym',0
KK1477:	db 'eolsym',0
KK1478:	db 'eofsym',0
KK1479:	db 'rawnumbersym',0
KK1480:	db 'intconstsym',0
KK1481:	db 'realconstsym',0
KK1482:	db 'charconstsym',0
KK1483:	db 'wcharconstsym',0
KK1484:	db 'stringconstsym',0
KK1485:	db 'wstringconstsym',0
KK1486:	db 'whitespacesym',0
KK1487:	db 'placeholdersym',0
KK1488:	db 'namesym',0
KK1489:	db 'ksourcedirsym',0
KK1490:	db 'predefmacrosym',0
KK1491:	db 'ktypespecsym',0
KK1492:	db 'kifsym',0
KK1493:	db 'kelsesym',0
KK1494:	db 'kcasesym',0
KK1495:	db 'kdefaultsym',0
KK1496:	db 'kforsym',0
KK1497:	db 'kwhilesym',0
KK1498:	db 'kdosym',0
KK1499:	db 'kreturnsym',0
KK1500:	db 'kbreaksym',0
KK1501:	db 'kcontinuesym',0
KK1502:	db 'kgotosym',0
KK1503:	db 'kswitchsym',0
KK1504:	db 'kstructsym',0
KK1505:	db 'kunionsym',0
KK1506:	db 'klinkagesym',0
KK1507:	db 'ktypequalsym',0
KK1508:	db 'kfnspecsym',0
KK1509:	db 'kalignassym',0
KK1510:	db 'kenumsym',0
KK1511:	db 'kcallconvsym',0
KK1512:	db 'ksizeofsym',0
KK1513:	db 'kdefinedsym',0
KK1514:	db 'kgenericsym',0
KK1515:	db 'kalignofsym',0
KK1516:	db 'kshowmodesym',0
KK1517:	db 'kshowtypesym',0
KK1518:	db 'ktypeofsym',0
KK1519:	db 'kstrtypesym',0
KK1520:	db 'kmccassertsym',0
KK1521:	db 'kdummysym',0
KK1522:	db 0

KK1523:	db '.',0
KK1524:	db '->',0
KK1525:	db '#',0
KK1526:	db '#',0
KK1527:	db '#',0
KK1528:	db '##',0
KK1529:	db ',',0
KK1530:	db ';',0
KK1531:	db ':',0
KK1532:	db '=',0
KK1533:	db '(',0
KK1534:	db ')',0
KK1535:	db '[',0
KK1536:	db ']',0
KK1537:	db '{',0
KK1538:	db '}',0
KK1539:	db '?',0
KK1540:	db '~',0
KK1541:	db '...',0
KK1542:	db '+',0
KK1543:	db '-',0
KK1544:	db '*',0
KK1545:	db '/',0
KK1546:	db '%',0
KK1547:	db '|',0
KK1548:	db '&',0
KK1549:	db '^',0
KK1550:	db '||',0
KK1551:	db '&&',0
KK1552:	db '<<',0
KK1553:	db '>>',0
KK1554:	db '~',0
KK1555:	db '!',0
KK1556:	db '++',0
KK1557:	db '--',0
KK1558:	db 'abs',0
KK1559:	db '==',0
KK1560:	db '!=',0
KK1561:	db '<',0
KK1562:	db '<=',0
KK1563:	db '>=',0
KK1564:	db '>',0
KK1565:	db '+=',0
KK1566:	db '-=',0
KK1567:	db '*=',0
KK1568:	db '/=',0
KK1569:	db '%=',0
KK1570:	db '|=',0
KK1571:	db '&=',0
KK1572:	db '^=',0
KK1573:	db '<<=',0
KK1574:	db '>>=',0
KK1575:	db 0

KK1576:	db 0

KK1577:	db 'n',0
KK1578:	db 'n',0
KK1579:	db 'n',0
KK1580:	db 's',0
KK1581:	db 's',0
KK1582:	db 's',0
KK1583:	db 's',0
KK1584:	db 'w',0
KK1585:	db '<PH>',0
KK1586:	db 'k',0
KK1587:	db 'k',0
KK1588:	db 'k',0
KK1589:	db 'k',0
KK1590:	db 'k',0
KK1591:	db 'k',0
KK1592:	db 'k',0
KK1593:	db 'k',0
KK1594:	db 'k',0
KK1595:	db 'k',0
KK1596:	db 'k',0
KK1597:	db 'k',0
KK1598:	db 'k',0
KK1599:	db 'k',0
KK1600:	db 'k',0
KK1601:	db 'k',0
KK1602:	db 'k',0
KK1603:	db 'k',0
KK1604:	db 'k',0
KK1605:	db 'k',0
KK1606:	db 'k',0
KK1607:	db 'k',0
KK1608:	db 'k',0
KK1609:	db 'k',0
KK1610:	db 'k',0
KK1611:	db 'k',0
KK1612:	db 'k',0
KK1613:	db 'k',0
KK1614:	db 'k',0
KK1615:	db 'k',0
KK1616:	db 'k',0
KK1617:	db 'k',0
KK1618:	db 'k',0
KK1619:	db 0

KK1620:	db 'definedir',0
KK1621:	db 'emitdir',0
KK1622:	db 'ifdir',0
KK1623:	db 'elifdir',0
KK1624:	db 'elsedir',0
KK1625:	db 'endifdir',0
KK1626:	db 'includedir',0
KK1627:	db 'ifdefdir',0
KK1628:	db 'ifndefdir',0
KK1629:	db 'undefdir',0
KK1630:	db 'errordir',0
KK1631:	db 'warningdir',0
KK1632:	db 'messagedir',0
KK1633:	db 'pausedir',0
KK1634:	db 'debugondir',0
KK1635:	db 'debugoffdir',0
KK1636:	db 'showmacrodir',0
KK1637:	db 'blankdir',0
KK1638:	db 'linedir',0
KK1639:	db 'pragmadir',0
KK1640:	db 'ns_none',0
KK1641:	db 'ns_general',0
KK1642:	db 'ns_tags',0
KK1643:	db 'ns_labels',0
KK1644:	db 'ns_fields',0
KK1645:	db 'nullid',0
KK1646:	db 'macroid',0
KK1647:	db 'programid',0
KK1648:	db 'moduleid',0
KK1649:	db 'extmoduleid',0
KK1650:	db 'typeid',0
KK1651:	db 'procid',0
KK1652:	db 'staticid',0
KK1653:	db 'frameid',0
KK1654:	db 'paramid',0
KK1655:	db 'fieldid',0
KK1656:	db 'enumid',0
KK1657:	db 'enumtagid',0
KK1658:	db 'structtagid',0
KK1659:	db 'labelid',0
KK1660:	db 'if',0
KK1661:	db 'else',0
KK1662:	db 'case',0
KK1663:	db 'default',0
KK1664:	db 'for',0
KK1665:	db 'do',0
KK1666:	db 'while',0
KK1667:	db 'return',0
KK1668:	db 'break',0
KK1669:	db 'continue',0
KK1670:	db 'goto',0
KK1671:	db 'switch',0
KK1672:	db 'struct',0
KK1673:	db 'union',0
KK1674:	db 'include',0
KK1675:	db 'define',0
KK1676:	db 'elif',0
KK1677:	db 'ifdef',0
KK1678:	db 'ifndef',0
KK1679:	db 'endif',0
KK1680:	db 'undef',0
KK1681:	db 'error',0
KK1682:	db 'warning',0
KK1683:	db 'message',0
KK1684:	db 'MESSAGE',0
KK1685:	db 'pragma',0
KK1686:	db 'line',0
KK1687:	db 'pause',0
KK1688:	db 'debugon',0
KK1689:	db 'debugoff',0
KK1690:	db 'showmacro',0
KK1691:	db 'auto',0
KK1692:	db 'register',0
KK1693:	db 'static',0
KK1694:	db 'extern',0
KK1695:	db 'typedef',0
KK1696:	db 'const',0
KK1697:	db 'volatile',0
KK1698:	db 'restrict',0
KK1699:	db '_Atomic',0
KK1700:	db 'inline',0
KK1701:	db '_Noreturn',0
KK1702:	db '_Alignas',0
KK1703:	db 'abs',0
KK1704:	db 'enum',0
KK1705:	db '$stdcall',0
KK1706:	db '$callback',0
KK1707:	db '$windows',0
KK1708:	db 'void',0
KK1709:	db 'char',0
KK1710:	db 'short',0
KK1711:	db 'long',0
KK1712:	db 'int',0
KK1713:	db 'float',0
KK1714:	db 'double',0
KK1715:	db 'signed',0
KK1716:	db 'unsigned',0
KK1717:	db '_Bool',0
KK1718:	db '_Complex',0
KK1719:	db '__DATE__',0
KK1720:	db '__FILE__',0
KK1721:	db '__LINE__',0
KK1722:	db '__TIME__',0
KK1723:	db '__MCC__',0
KK1724:	db 'not',0
KK1725:	db 'sizeof',0
KK1726:	db 'defined',0
KK1727:	db '_Generic',0
KK1728:	db '_Alignof',0
KK1729:	db 'showmode',0
KK1730:	db 'showtype',0
KK1731:	db 'typeof',0
KK1732:	db 'strtype',0
KK1733:	db '_Static_assert',0
KK1734:	db '$$dummy',0
KK1735:	db 'no_conv',0
KK1736:	db 'soft_c',0
KK1737:	db 'hard_c',0
KK1738:	db 'swiden_c',0
KK1739:	db 'uwiden_c',0
KK1740:	db 'sfloat_c',0
KK1741:	db 'ufloat_c',0
KK1742:	db 'sfix_c',0
KK1743:	db 'ufix_c',0
KK1744:	db 'fwiden_c',0
KK1745:	db 'fnarrow_c',0
KK1746:	db 'narrow_c',0
KK1747:	db 'truncate_c',0
KK1748:	db 'bool_c',0
KK1749:	db '/* Header assert.h */',13,10,13,10,'#define assert(x) 0',13,10,0
KK1750:	db '/* Header ctype.h */',13,10,13,10,'int tolower(int);',13,10,'int toupper(int);',13,10,'int isalpha(int);',13,10,'int isdigit(int);',13,10,'int isspace(int);',13,10,'int isalnum(int);',13,10,'int isupper(int);',13,10,'int islower(int);',13,10,13,10,'int isxdigit(int);',13,10,'int iscntrl(int);',13,10,'int isgraph(int);',13,10,'int ispunct(int);',13,10,0
KK1751:	db '/* Header errno.h */',13,10,13,10,'#ifndef $errno',13,10,'#define $errno',13,10,13,10,'extern int* _errno(void);',13,10,'#define errno (*_errno())',13,10,13,10,'#define EPERM 1',13,10,'#define ENOENT 2',13,10,'#define ESRCH 3',13,10,'#define EINTR 4',13,10,'#define EIO 5',13,10,'#define ENXIO 6',13,10,'#define E2BIG 7',13,10,'#define ENOEXEC 8',13,10,'#define EBADF 9',13,10,'#define ECHILD 10',13,10,'#define EAGAIN 11',13,10,'#define ENOMEM 12',13,10,'#define EACCES 13',13,10,'#define EFAULT 14',13,10,'#define ENOTBLK 15',13,10,'#define EBUSY 16',13,10,'#define EEXIST 17',13,10,'#define EXDEV 18',13,10,'#define ENODEV 19',13,10,'#define ENOTDIR 20',13,10,'#define EISDIR 21',13,10,'#define EINVAL 22',13,10,'#define ENFILE 23',13,10,'#define EMFILE 24',13,10,'#define ENOTTY 25',13,10,'#define ETXTBSY 26',13,10,'#define EFBIG 27',13,10,'#define ENOSPC 28',13,10,'#define ESPIPE 29',13,10,'#define EROFS 30',13,10,'#define EMLINK 31',13,10,'#define EPIPE 32',13,10,'#define EDOM 33',13,10,'#define ERANGE 34',13,10,'#define ENOMSG 35',13,10,'#define EIDRM 36',13,10,'#define ECHRNG 37',13,10,'#define EL2NSYNC 38',13,10,'#define EL3HLT 39',13,10,'#define EL3RST 40',13,10,'#define ELNRNG 41',13,10,'#define EUNATCH 42',13,10,'#define ENOCSI 43',13,10,'#define EL2HLT 44',13,10,'#define EDEADLK 45',13,10,'#define ENOLCK 46',13,10,'#define EBADE 50',13,10,'#define EBADR 51',13,10,'#define EXFULL 52',13,10,'#define ENOANO 53',13,10,'#define EBADRQC 54',13,10,'#define EBADSLT 55',13,10,'#define EDEADLOCK 56',13,10,'#define EBFONT 57',13,10,'#define ENOSTR 60',13,10,'#define ENODATA 61',13,10,'#define ETIME 62',13,10,'#define ENOSR 63',13,10,'#define ENONET 64',13,10,'#define ENOPKG 65',13,10,'#define EREMOTE 66',13,10,'#define ENOLINK 67',13,10,'#define EADV 68',13,10,'#define ESRMNT 69',13,10,'#define ECOMM 70',13,10,'#define EPROTO 71',13,10,'#define EMULTIHOP 74',13,10,'#define ELBIN 75',13,10,'#define EOVERFLOW 76',13,10,'#define EBADMSG 77',13,10,'#define ENOTUNIQ 80',13,10,'#define EBADFD 81',13,10,'#define EREMCHG 82',13,10,'#define ELIBACC 83',13,10,'#define ELIBBAD 84',13,10,'#define ELIBSCN 85',13,10,'#define ELIBMAX 86',13,10,'#define ELIBEXEC 87',13,10,'#define ENOSYS 88',13,10,'#define ENMFILE 89',13,10,'#define ENOTEMPTY 90',13,10,'#define ENAMETOOLONG 91',13,10,'#define EILSEQ 92',13,10,'#define __ELASTERROR 2000',13,10,13,10,'#endif',13,10,0
KK1752:	db '/* Header fenv.h */',13,10,0
KK1753:	db '/* Header float.h */',13,10,13,10,'//#define DBL_MAX_10_EXP 308',13,10,'//#define DBL_MANT_DIG 53',13,10,13,10,'#define FLT_RADIX 2',13,10,13,10,'#define FLT_DIG 6',13,10,'#define FLT_MIN_EXP -125',13,10,'#define FLT_MIN 1.17549435E-38F // decimal constant',13,10,'#define FLT_MIN 0X1P-126F // hex constant',13,10,'#define FLT_TRUE_MIN 1.40129846E-45F // decimal constant',13,10,'#define FLT_TRUE_MIN 0X1P-149F // hex constant',13,10,'#define FLT_HAS_SUBNORM 1',13,10,'#define FLT_MIN_10_EXP -37',13,10,'#define FLT_MAX_EXP +128',13,10,'#define FLT_MAX 3.40282347E+38F // decimal constant',13,10,'#define FLT_MAX 0X1.fffffeP127F // hex constant',13,10,'#define FLT_MAX_10_EXP +38',13,10,13,10,'#define FLT_MANT_DIG 23',13,10,13,10,'#define DBL_MANT_DIG 53',13,10,'#define DBL_EPSILON 2.2204460492503131E-16 // decimal constant',13,10,'#define DBL_EPSILON 0X1P-52 // hex constant',13,10,'#define DBL_DECIMAL_DIG 17',13,10,'#define DBL_DIG 15',13,10,'#define DBL_MIN_EXP -1021',13,10,'#define DBL_MIN 2.2250738585072014E-308 // decimal constant',13,10,'#define DBL_MIN 0X1P-1022 // hex constant',13,10,'#define DBL_TRUE_MIN 4.9406564584124654E-324 // decimal constant',13,10,'#define DBL_TRUE_MIN 0X1P-1074 // hex constant',13,10,'#define DBL_HAS_SUBNORM 1',13,10,'#define DBL_MIN_10_EXP -307',13,10,'#define DBL_MAX_EXP +1024',13,10,'#define DBL_MAX 1.7976931348623157E+308 // decimal constant',13,10,'#define DBL_MAX 0X1.fffffffffffffP1023 // hex constant',13,10,'#define DBL_MAX_10_EXP +308',13,10,13,10,'int     _isnan(double);',13,10,'#define isnan _isnan',13,10,0
KK1754:	db '/* Header inttypes.h */',13,10,13,10,'#include <stdint.h>',13,10,0
KK1755:	db '/* Header stdint.h */',13,10,13,10,'#ifndef $stdint',13,10,'#define $stdint',13,10,13,10,'typedef signed char int8_t;',13,10,'typedef short int16_t;',13,10,'typedef int int32_t;',13,10,'typedef long long int int64_t;',13,10,13,10,'typedef unsigned char uint8_t;',13,10,'typedef unsigned short uint16_t;',13,10,'typedef unsigned int uint32_t;',13,10,'typedef unsigned long long int uint64_t;',13,10,13,10,'typedef long long int intptr_t;',13,10,'typedef unsigned long long int uintptr_t;',13,10,13,10,'#define INT8_MIN -128',13,10,'#define INT8_MAX 127',13,10,'#define INT16_MIN -32768',13,10,'#define INT16_MAX 32767',13,10,'#define INT32_MIN 0x80000000',13,10,'#define INT32_MAX 0x7FFFFFFF',13,10,'#define INT64_MIN 0x8000000000000000',13,10,'#define INT64_MAX 0x7FFFFFFFFFFFFFFF',13,10,13,10,'#define UINT8_MAX 255',13,10,'#define UINT16_MAX 65535',13,10,'#define UINT32_MAX 0xFFFFFFFF',13,10,'#define UINT64_MAX 0xFFFFFFFFFFFFFFFF',13,10,13,10,'#define INTPTR_MIN',9,'0x8000000000000000',13,10,'#define INTPTR_MAX',9,'0x7FFFFFFFFFFFFFFF',13,10,'#define UINTPTR_MAX',9,'0xFFFFFFFFFFFFFFFF',13,10,13,10,'#define UINT64_MAX',9,'0xFFFFFFFFFFFFFFFF',13,10,'#define SIZE_MAX',9,'0xFFFFFFFFFFFFFFFF',13,10,13,10,'#define PTRDIFF_MIN',9,'0x8000000000000000',13,10,'#define PTRDIFF_MAX',9,'0x7FFFFFFFFFFFFFFF',13,10,13,10,'#define WCHAR_MIN 0',13,10,'#define WCHAR_MAX 65535',13,10,13,10,'#define WINT_MIN 0',13,10,'#define WINT_MAX 65535',13,10,13,10,'#endif',13,10,0
KK1756:	db '/* Header limits.h */',13,10,13,10,'#define CHAR_BIT 8',13,10,13,10,'#define CHAR_MIN 0',13,10,'#define CHAR_MAX 255',13,10,13,10,'//#define UCHAR_MIN 0',13,10,'#define UCHAR_MAX 255',13,10,13,10,'#define SCHAR_MIN -128',13,10,'#define SCHAR_MAX 127',13,10,13,10,'#define SHRT_MIN 0x8000',13,10,'#define SHRT_MAX 0x7FFF',13,10,13,10,'//#define USHRT_MIN 0x0000',13,10,'#define USHRT_MAX 0xFFFF',13,10,13,10,'#define INT_MIN 0x80000000',13,10,'#define INT_MAX 0x7FFFFFFF',13,10,13,10,'//#define UINT_MIN 0x00000000',13,10,'#define UINT_MAX 0xFFFFFFFF',13,10,13,10,'//#define LONG_MIN 0x80000000',13,10,'#define LONG_MAX 0x7FFFFFFF',13,10,13,10,'//#define ULONG_MIN 0x00000000',13,10,'#define ULONG_MAX 0xFFFFFFFF',13,10,13,10,'#define LLONG_MIN 0x8000000000000000',13,10,'#define LLONG_MAX 0x7FFFFFFFFFFFFFFF',13,10,13,10,'//#define ULLONG_MIN 0x0000000000000000',13,10,'#define ULLONG_MAX 0xFFFFFFFFFFFFFFFF',13,10,0
KK1757:	db '/* Header locale.h */',13,10,13,10,'#define LC_ALL 0',13,10,'#define LC_COLLATE 1',13,10,'#define LC_CTYPE 2',13,10,'#define LC_MONETARY 3',13,10,'#define LC_NUMERIC 4',13,10,'#define LC_TIME 5',13,10,13,10,'struct lconv {',13,10,9,'char *decimal_point;',13,10,9,'char *thousands_sep;',13,10,9,'char *grouping;',13,10,9,'char *int_curr_symbol;',13,10,9,'char *currency_symbol;',13,10,9,'char *mon_decimal_point;',13,10,9,'char *mon_thousands_sep;',13,10,9,'char *mon_grouping;',13,10,9,'char *positive_sign;',13,10,9,'char *negative_sign;',13,10,9,'char int_frac_digits;',13,10,9,'char frac_digits;',13,10,9,'char p_cs_precedes;',13,10,9,'char p_sep_by_space;',13,10,9,'char n_cs_precedes;',13,10,9,'char n_sep_by_space;',13,10,9,'char p_sign_posn;',13,10,9,'char n_sign_posn;',13,10,'};',13,10,'char *setlocale(int category, const char *locale);',13,10,13,10,'struct lconv *localeconv(void);',13,10,13,10,'char * setlocale(int,const char *);',13,10,0
KK1758:	db '/* Header _ansi.h */',13,10,0
KK1759:	db '/* Header math.h */',13,10,13,10,'#define HUGE_VAL 1.7976931348623156e+308',13,10,13,10,'double floor(double);',13,10,'double ceil(double);',13,10,'double sqrt(double);',13,10,'double sin(double);',13,10,'double cos(double);',13,10,'double tan(double);',13,10,'double fmod(double,double);',13,10,'double asin(double);',13,10,'double acos(double);',13,10,'double atan(double);',13,10,'double log(double);',13,10,'double log10(double);',13,10,'double exp(double);',13,10,'double modf(double,double*);',13,10,'double atan2(double,double);',13,10,'double pow(double,double);',13,10,'double fabs(double);',13,10,'double sinh(double);',13,10,'double cosh(double);',13,10,'double tanh(double);',13,10,'double frexp(double,int*);',13,10,'double ldexp(double,int);',13,10,13,10,'//double log2(double);',13,10,'#define log2(x) (log(x)*1.442695041)',13,10,13,10,'int isinf(double);',13,10,0
KK1760:	db '/* Header setjmp.h */',13,10,13,10,'#ifndef $setjmp',13,10,'#define $setjmp 1',13,10,13,10,'typedef int jmp_buf[128];',13,10,13,10,'//void longjmp(char*, int);',13,10,13,10,'//void $mcclongjmp(char*, int);',13,10,'void $mcclongjmp(jmp_buf, int);',13,10,13,10,'//int $mccsetjmp(char*);',13,10,'int $mccsetjmp(jmp_buf);',13,10,13,10,13,10,'//int',9,'_setjmp(char*);',13,10,'//int',9,'setjmp(char*);',13,10,13,10,'#define setjmp $mccsetjmp',13,10,'#define longjmp $mcclongjmp',13,10,13,10,'#endif',13,10,13,10,0
KK1761:	db '/* Header signal.h */',13,10,13,10,'#define SIGINT    2',13,10,'#define SIGILL    4',13,10,'#define SIGFPE    8',13,10,'#define SIGSEGV  11',13,10,'#define SIGTERM  15',13,10,'#define SIGBREAK 21',13,10,'#define SIGABRT  22',13,10,13,10,'#define SIG_DFL (void (*)(int))0',13,10,'#define SIG_IGN (void (*)(int))1',13,10,'#define SIG_SGE (void (*)(int))3',13,10,'#define SIG_ACK (void (*)(int))4',13,10,13,10,'#define SIG_ERR (void (*)(int))-1',13,10,13,10,'extern void (*signal(int, void (*)(int)))(int);',13,10,13,10,'extern int raise(int);',13,10,13,10,13,10,'typedef int sig_atomic_t;',13,10,0
KK1762:	db '/* Header stdarg.h */',13,10,13,10,'#ifndef $STDARG',13,10,' #define $STDARG',13,10,13,10,'//coded for x64 target as used by mcc (with first four params also on stack)',13,10,13,10,' typedef char *',9,'va_list;',13,10,' #define va_start(ap,v) ap=((va_list)&v+8)',13,10,' #define va_arg(ap,t) *(t*)((ap+=8)-8)',13,10,' #define va_copy(dest,src) (dest=src)',13,10,' #define va_end(ap)',9,'( ap = (va_list)0 )',13,10,'#endif',13,10,0
KK1763:	db '/* Header stdbool.h */',13,10,13,10,'#define bool unsigned char',13,10,'#define true 1',13,10,'#define false 0',13,10,13,10,13,10,0
KK1764:	db '/* Header stddef.h */',13,10,13,10,'#ifndef $stddef',13,10,'#define $stddef',13,10,13,10,'typedef unsigned long long int size_t;',13,10,'typedef unsigned short wchar_t;',13,10,13,10,'#define NULL ((void*)0)',13,10,13,10,'#define offsetof(a,b) (size_t) &( ((a*)0) -> b)',13,10,13,10,'typedef long long int ptrdiff_t;',13,10,13,10,'#endif // stddef',13,10,0
KK1765:	db '/* Header stdio.h */',13,10,13,10,'#ifndef $stdio',13,10,'#define $stdio 1',13,10,13,10,'//#message "STDIO included"',13,10,13,10,'#ifndef $valist',13,10,9,'typedef char* va_list;',13,10,9,'#define $valist',13,10,'#endif',13,10,13,10,'#include <stddef.h>',13,10,13,10,'#define SEEK_SET 0',13,10,'#define SEEK_CUR 1',13,10,'#define SEEK_END 2',13,10,13,10,'#define EOF (-1)',13,10,13,10,'#define L_tmpnam 10',13,10,13,10,'typedef struct {',13,10,9,'char *_ptr;',13,10,9,'int   _cnt;',13,10,9,'char *_base;',13,10,9,'int   _flag;',13,10,9,'int   _file;',13,10,9,'int   _charbuf;',13,10,9,'int   _bufsiz;',13,10,9,'char *_tmpfname;',13,10,9,'} FILE;',13,10,13,10,'// _iob-based ',13,10,'//extern FILE _iob[];',13,10,'//#define stdin (&_iob[0])',13,10,'//#define stdout (&_iob[1])',13,10,'//#define stderr (&_iob[2])',13,10,'//',13,10,13,10,'// __iob_func-based',13,10,'extern char* __iob_func(void);',13,10,13,10,'#define stdin ((FILE*)(__iob_func()))',13,10,'#define stdout ((FILE*)(__iob_func()+sizeof(FILE)))',13,10,'#define stderr ((FILE*)(__iob_func()+sizeof(FILE)*2))',13,10,13,10,'#define _IOREAD 0x0001',13,10,'#define _IOWRT 0x0002',13,10,13,10,'#define _IOFBF 0x0000',13,10,'#define _IOLBF 0x0040',13,10,'#define _IONBF 0x0004',13,10,13,10,'#define _IOMYBUF 0x0008',13,10,'#define _IOEOF 0x0010',13,10,'#define _IOERR 0x0020',13,10,'#define _IOSTRG 0x0040',13,10,'#define _IORW 0x0080',13,10,13,10,'#define BUFSIZ 512',13,10,13,10,'FILE* fopen(const char*, const char*);',13,10,'int fclose(FILE*);',13,10,'long ftell(FILE*);',13,10,'long long int _ftelli64(FILE*);',13,10,'int fseek(FILE*,long,int);',13,10,'int _fseeki64(FILE*,long long int,int);',13,10,13,10,'size_t fread(void*, size_t, size_t, FILE*);',13,10,'size_t fwrite(const void*, size_t, size_t, FILE*);',13,10,'int remove(const char*);',13,10,'int rename(const char *,const char *);',13,10,'FILE* freopen(const char*, const char*, FILE*);',13,10,'FILE* _wfopen(const wchar_t*,const wchar_t *);',13,10,13,10,'int printf(const char*, ...);',13,10,'int sprintf(char*,const char*, ...);',13,10,'int fprintf(FILE*,const char*, ...);',13,10,'int sscanf(const char*, const char*, ...);',13,10,'int scanf(const char*, ...);',13,10,'int fscanf(FILE *,const char *, ...);',13,10,'int _snprintf(char *,size_t,const char*,...);',13,10,'#define snprintf _snprintf',13,10,'int _vsnprintf(char*, size_t, const char*, va_list);',13,10,'int vsnprintf(char*,size_t,const char*,va_list);',13,10,'int vsprintf(char*, const char*, va_list);',13,10,'int _wremove(const wchar_t*);',13,10,'int _wrename(const wchar_t*,const wchar_t*);',13,10,13,10,'typedef char* va_list;',13,10,13,10,'int vfprintf(FILE*, const char*, va_list);',13,10,'int vprintf(const char*, va_list);',13,10,13,10,'int puts(const char*);',13,10,'char* fgets(char*, int, FILE*);',13,10,'int fputs(const char*, FILE*);',13,10,'int fgetc(FILE*);',13,10,'int fputc(int, FILE*);',13,10,'int ungetc(int, FILE*);',13,10,'int getchar(void);',13,10,'int putchar(int);',13,10,'int fflush(FILE *);',13,10,'int getc(FILE *);',13,10,'int putc(int, FILE *);',13,10,13,10,'int feof(FILE*);',13,10,'int ferror(FILE*);',13,10,'void clearerr(FILE*);',13,10,13,10,'int fileno(FILE*);',13,10,'int _fileno(FILE*);',13,10,'int setvbuf(FILE*,char*,int,size_t);',13,10,'FILE* _popen(const char*, const char*);',13,10,'int _pclose(FILE*);',13,10,'int _unlink(const char *);',13,10,'#define unlink _unlink;',13,10,'FILE* _fdopen(int, const char *);',13,10,'#define fdopen _fdopen',13,10,13,10,'void rewind(FILE*);',13,10,13,10,'FILE* tmpfile(void);',13,10,13,10,'char* tmpnam(char*);',13,10,13,10,'extern void* _wenviron;',13,10,13,10,'#endif',13,10,13,10,0
KK1766:	db '/* Header stdlib.h */',13,10,13,10,'#ifndef $stdlib',13,10,'#define $stdlib 1',13,10,13,10,'#include <stddef.h>',13,10,13,10,'#define EXIT_FAILURE 1',13,10,'#define EXIT_SUCCESS 0',13,10,13,10,'#define RAND_MAX 32767',13,10,13,10,'void* malloc(size_t);',13,10,'void* realloc(void*, size_t);',13,10,'void* calloc(size_t, size_t);',13,10,13,10,'void free(void*);',13,10,13,10,'void exit(int);',13,10,13,10,'int system(const char*);',13,10,'int _wsystem(const wchar_t*);',13,10,13,10,'//int abs(int);',13,10,'long labs(long);',13,10,'int rand(void);',13,10,'void srand(unsigned int);',13,10,'int atoi(const char*);',13,10,'long atol(const char*);',13,10,'double atof(const char *);',13,10,'int',9,'atexit(void (*)(void));',13,10,13,10,'void qsort(void*, size_t, size_t, int (*)(void*, void*));',13,10,13,10,'typedef struct {',13,10,9,'long long int quot;',13,10,9,'long long int rem;',13,10,'} lldiv_t;',13,10,13,10,'lldiv_t lldiv(long long int, long long int);',13,10,13,10,'char* getenv(const char*);',13,10,'wchar_t* _wgetenv(const wchar_t*);',13,10,'int _wputenv(const wchar_t*);',13,10,13,10,13,10,'double strtod(const char*, char**);',13,10,'float strtof(const char *, char**);',13,10,'long double strtold(const char*, char**);',13,10,'void abort(void);',13,10,'long int strtol(const char*, char**, int);',13,10,'long long int strtoll(const char*, char**,int);',13,10,'unsigned long long int strtoull(const char*, char**, int);',13,10,'unsigned long strtoul(const char*, char**, int);',13,10,13,10,13,10,'#endif',13,10,0
KK1767:	db '/* Header _syslist.h */',13,10,0
KK1768:	db '/* Header string.h */',13,10,13,10,'#include <stddef.h>',13,10,13,10,'void* memcpy(void*, const void*, size_t);',13,10,'void* memmove(void*, void*, size_t);',13,10,'void* memset(void*, int, size_t);',13,10,'int memcmp(const void*, const void*, size_t);',13,10,'void* memchr(const void *, int, size_t);',13,10,13,10,'size_t strlen(const char*);',13,10,'char* strcpy(char*, const char*);',13,10,'char* strncpy(char*, const char*, size_t);',13,10,'char* strcat(char*, const char*);',13,10,'int strcmp(const char*, const char*);',13,10,'int strncmp(const char*, const char*, size_t);',13,10,'char* strchr(const char*, int);',13,10,'char* strstr(const char*, const char*);',13,10,'char* strrchr(const char*, int);',13,10,'int _stricmp(const char*, const char*);',13,10,'#define stricmp _stricmp',13,10,13,10,'int strnicmp(const char*, const char*, size_t);',13,10,13,10,'size_t strcspn(const char*, const char*);',13,10,'size_t strspn(const char*, const char*);',13,10,'int strcoll(const char *, const char *);',13,10,13,10,'unsigned long strtoul(const char*, char**, int);',13,10,13,10,'char* strerror(int);',13,10,'char* strpbrk(const char*, const char*);',13,10,13,10,'char*strupr(char*);',13,10,'char* _strlwr(char*);',13,10,'#define strlwr _strlwr',13,10,13,10,'char*strnupr(char*,size_t);',13,10,'char*strnlwr(char*,size_t);',13,10,'int strtrim(char*);',13,10,'char*strrev(char*);',13,10,13,10,'char* _strdup(const char*);',13,10,'#define strdup _strdup',13,10,0
KK1769:	db '/* Header time.h */',13,10,13,10,'#ifndef $time',13,10,'#define $time',13,10,13,10,'#include <stddef.h>',13,10,13,10,'unsigned int clock(void);',13,10,'typedef unsigned long clock_t;',13,10,'typedef unsigned long time_t;',13,10,13,10,'struct tm',13,10,'{',13,10,'  int',9,'tm_sec;',13,10,'  int',9,'tm_min;',13,10,'  int',9,'tm_hour;',13,10,'  int',9,'tm_mday;',13,10,'  int',9,'tm_mon;',13,10,'  int',9,'tm_year;',13,10,'  int',9,'tm_wday;',13,10,'  int',9,'tm_yday;',13,10,'  int',9,'tm_isdst;',13,10,'};',13,10,13,10,'//struct tm *localtime(time_t*);',13,10,'struct tm* _localtime32(time_t*);',13,10,'#define localtime _localtime32',13,10,13,10,'time_t _time64(time_t *_timer);',13,10,'#define time _time64',13,10,13,10,'#define CLOCKS_PER_SEC 1000',13,10,13,10,'struct tm *gmtime(const time_t*);',13,10,'size_t strftime(char *, size_t, const char *, const struct tm *);',13,10,'time_t mktime(struct tm *);',13,10,'double difftime(time_t, time_t);',13,10,13,10,'#endif',13,10,0
KK1770:	db '/* utime.h header */',13,10,13,10,'#include <sys/utime.h>',13,10,0
KK1771:	db '/* unistd.h header */',13,10,0
KK1772:	db '/* Header safelib.h */',13,10,0
KK1773:	db '/* Header wchar.h */',13,10,13,10,'#include <stddef.h>',13,10,13,10,'typedef unsigned short wint_t;',13,10,'typedef unsigned short wchar_t;',13,10,13,10,'size_t wcslen(const wchar_t*);',13,10,'wchar_t* wcscpy(wchar_t*,const wchar_t*);',13,10,'//wchar_t* _wgetenv(constwchar_t*);',13,10,'wchar_t* wcstok(wchar_t*,wchar_t*,wchar_t**);',13,10,'wchar_t* wcstok_s(wchar_t*,wchar_t*,wchar_t**);',13,10,13,10,'wchar_t* wcschr(wchar_t*,wchar_t);',13,10,13,10,13,10,'int wcscmp(const wchar_t*,const wchar_t*);',13,10,0
KK1774:	db '/* Header wctype.h */',13,10,0
KK1775:	db '/* types.h */',13,10,0
KK1776:	db '/* stat.h */',13,10,13,10,'#ifndef $sysstat',13,10,'#define $sysstat',13,10,13,10,'typedef unsigned short ushort;',13,10,'typedef long long int dint;',13,10,13,10,'struct _stat {',13,10,9,'ushort',9,9,'st_dev;',13,10,9,'ushort',9,9,'st_ino;',13,10,9,'ushort',9,9,'st_mode;',13,10,9,'short',9,9,'st_nlink;',13,10,9,'short',9,9,'st_uid;',13,10,9,'short',9,9,'st_gid;',13,10,9,'ushort',9,9,'st_rdev;',13,10,9,'dint',9,9,'st_size;',13,10,9,'dint',9,9,'st_atime;',13,10,9,'dint',9,9,'st_mtime;',13,10,9,'dint',9,9,'st_ctime;',13,10,'};',13,10,13,10,'#define stat _stat',13,10,'#define _stati64 _stat',13,10,13,10,'#define _S_IFMT 0xF000',13,10,'#define _S_IFDIR 0x4000',13,10,'#define _S_IFCHR 0x2000',13,10,'#define _S_IFIFO 0x1000',13,10,'#define _S_IFREG 0x8000',13,10,'#define _S_IREAD 0x0100',13,10,'#define _S_IWRITE 0x0080',13,10,'#define _S_IEXEC 0x0040',13,10,13,10,'#define S_IFMT 0xF000',13,10,'#define S_IFDIR 0x4000',13,10,'#define S_IFCHR 0x2000',13,10,'#define S_IFIFO 0x1000',13,10,'#define S_IFREG 0x8000',13,10,'#define S_IREAD 0x0100',13,10,'#define S_IWRITE 0x0080',13,10,'#define S_IEXEC 0x0040',13,10,13,10,'int stat(const char *, struct stat*);',13,10,'//int stat(const char *, struct stat*);',13,10,13,10,13,10,'int _fstati64(int, struct stat*);',13,10,13,10,'#endif',13,10,0
KK1777:	db '/* timeb.h */',13,10,13,10,'#ifndef $timeb',13,10,'#define $timeb',13,10,13,10,'#include <time.h>',13,10,13,10,'struct _timeb {',13,10,9,'time_t time;',13,10,9,'unsigned short millitm;',13,10,9,'short timezone;',13,10,9,'short dstflag;',13,10,'};',13,10,'#define timeb _timeb',13,10,13,10,'void _ftime64(struct _timeb*);',13,10,'#define _ftime _ftime64',13,10,'#define ftime _ftime64',13,10,13,10,'#endif',13,10,0
KK1778:	db '/* sys/utime.h header */',13,10,13,10,'#ifndef $utime',13,10,'#define $utime',13,10,13,10,'struct _utimbuf {',13,10,9,'long actime;',13,10,9,'long modtime;',13,10,'};',13,10,13,10,13,10,'#endif',13,10,0
KK1779:	db '#include <malloc.h>',13,10,0
KK1780:	db '#ifndef $windows',13,10,'#define $windows 1',13,10,13,10,'#include <stdarg.h>',13,10,13,10,'#define CALLBACK',13,10,'#define WINAPI',9,13,10,13,10,'#define STILL_ACTIVE',9,'0x103',13,10,13,10,'#define PS_GEOMETRIC',9,'65536',13,10,'#define PS_COSMETIC',9,'0',13,10,'#define PS_ALTERNATE',9,'8',13,10,'#define PS_SOLID',9,'0',13,10,'#define PS_DASH',9,'1',13,10,'#define PS_DOT',9,'2',13,10,'#define PS_DASHDOT',9,'3',13,10,'#define PS_DASHDOTDOT',9,'4',13,10,'#define PS_NULL',9,'5',13,10,'#define PS_USERSTYLE',9,'7',13,10,'#define PS_INSIDEFRAME',9,'6',13,10,'#define PS_ENDCAP_ROUND',9,'0',13,10,'#define PS_ENDCAP_SQUARE',9,'256',13,10,'#define PS_ENDCAP_FLAT',9,'512',13,10,'#define PS_JOIN_BEVEL',9,'4096',13,10,'#define PS_JOIN_MITER',9,'8192',13,10,'#define PS_JOIN_ROUND',9,'0',13,10,'#define PS_STYLE_MASK',9,'15',13,10,'#define PS_ENDCAP_MASK',9,'3840',13,10,'#define PS_TYPE_MASK',9,'983040',13,10,13,10,'#define HTBOTTOM',9,'15',13,10,'#define HTBOTTOMLEFT',9,'16',13,10,'#define HTBOTTOMRIGHT',9,'17',13,10,'#define HTCAPTION',9,'2',13,10,'#define HTCLIENT',9,'1',13,10,'#define HTERROR',9,'(-2)',13,10,'#define HTGROWBOX',9,'4',13,10,'#define HTHSCROLL',9,'6',13,10,'#define HTLEFT',9,'10',13,10,'#define HTMENU',9,'5',13,10,'#define HTNOWHERE',9,'0',13,10,'#define HTREDUCE',9,'8',13,10,'#define HTRIGHT',9,'11',13,10,'#define HTSIZE',9,'4',13,10,'#define HTSYSMENU',9,'3',13,10,'#define HTTOP',9,'12',13,10,'#define HTTOPLEFT',9,'13',13,10,'#define HTTOPRIGHT',9,'14',13,10,'#define HTTRANSPARENT',9,'(-1)',13,10,'#define HTVSCROLL',9,'7',13,10,'#define HTZOOM',9,'9',13,10,'#define HTOBJECT',9,'19',13,10,'#define HTCLOSE',9,'20',13,10,'#define HTHELP',9,'21',13,10,'#define HTBORDER',9,'18',13,10,'#define HTMINBUTTON 8',13,10,'#define HTMAXBUTTON 9',13,10,13,10,'#define VK_LBUTTON',9,'1',13,10,'#define VK_RBUTTON',9,'2',13,10,'#define VK_CANCEL',9,'3',13,10,'#define VK_MBUTTON',9,'4',13,10,'#define VK_BACK',9,'8',13,10,'#define VK_TAB',9,'9',13,10,'#define VK_CLEAR',9,'12',13,10,'#define VK_RETURN',9,'13',13,10,'#define VK_SHIFT',9,'16',13,10,'#define VK_CONTROL',9,'17',13,10,'#define VK_MENU',9,'18',13,10,'#define VK_PAUSE',9,'19',13,10,'#define VK_PRINT',9,'42',13,10,'#define VK_CAPITAL',9,'20',13,10,'#define VK_KANA',9,'0x15',13,10,'#define VK_HANGEUL',9,'0x15',13,10,'#define VK_HANGUL',9,'0x15',13,10,'#define VK_JUNJA',9,'0x17',13,10,'#define VK_FINAL',9,'0x18',13,10,'#define VK_HANJA',9,'0x19',13,10,'#define VK_KANJI',9,'0x19',13,10,'#define VK_CONVERT',9,'0x1C',13,10,'#define VK_NONCONVERT',9,'0x1D',13,10,'#define VK_ACCEPT',9,'0x1E',13,10,'#define VK_MODECHANGE',9,'0x1F',13,10,'#define VK_ESCAPE',9,'27',13,10,'#define VK_SPACE',9,'32',13,10,'#define VK_PRIOR',9,'33',13,10,'#define VK_NEXT',9,'34',13,10,'#define VK_END',9,'35',13,10,'#define VK_HOME',9,'36',13,10,'#define VK_LEFT',9,'37',13,10,'#define VK_UP',9,'38',13,10,'#define VK_RIGHT',9,'39',13,10,'#define VK_DOWN',9,'40',13,10,'#define VK_SELECT',9,'41',13,10,'#define VK_EXECUTE',9,'43',13,10,'#define VK_SNAPSHOT',9,'44',13,10,'#define VK_INSERT',9,'45',13,10,'#define VK_DELETE',9,'46',13,10,'#define VK_HELP',9,'47',13,10,'#define VK_0',9,'48',13,10,'#define VK_1',9,'49',13,10,'#define VK_2',9,'50',13,10,'#define VK_3',9,'51',13,10,'#define VK_4',9,'52',13,10,'#define VK_5',9,'53',13,10,'#define VK_6',9,'54',13,10,'#define VK_7',9,'55',13,10,'#define VK_8',9,'56',13,10,'#define VK_9',9,'57',13,10,'#define VK_A',9,'65',13,10,'#define VK_B',9,'66',13,10,'#define VK_C',9,'67',13,10,'#define VK_D',9,'68',13,10,'#define VK_E',9,'69',13,10,'#define VK_F',9,'70',13,10,'#define VK_G',9,'71',13,10,'#define VK_H',9,'72',13,10,'#define VK_I',9,'73',13,10,'#define VK_J',9,'74',13,10,'#define VK_K',9,'75',13,10,'#define VK_L',9,'76',13,10,'#define VK_M',9,'77',13,10,'#define VK_N',9,'78',13,10,'#define VK_O',9,'79',13,10,'#define VK_P',9,'80',13,10,'#define VK_Q',9,'81',13,10,'#define VK_R',9,'82',13,10,'#define VK_S',9,'83',13,10,'#define VK_T',9,'84',13,10,'#define VK_U',9,'85',13,10,'#define VK_V',9,'86',13,10,'#define VK_W',9,'87',13,10,'#define VK_X',9,'88',13,10,'#define VK_Y',9,'89',13,10,'#define VK_Z',9,'90',13,10,'#define VK_LWIN',9,'0x5B',13,10,'#define VK_RWIN',9,'0x5C',13,10,'#define VK_APPS',9,'0x5D',13,10,'#define VK_NUMPAD0',9,'96',13,10,'#define VK_NUMPAD1',9,'97',13,10,'#define VK_NUMPAD2',9,'98',13,10,'#define VK_NUMPAD3',9,'99',13,10,'#define VK_NUMPAD4',9,'100',13,10,'#define VK_NUMPAD5',9,'101',13,10,'#define VK_NUMPAD6',9,'102',13,10,'#define VK_NUMPAD7',9,'103',13,10,'#define VK_NUMPAD8',9,'104',13,10,'#define VK_NUMPAD9',9,'105',13,10,'#define VK_MULTIPLY',9,'106',13,10,'#define VK_ADD',9,'107',13,10,'#define VK_SEPARATOR',9,'108',13,10,'#define VK_SUBTRACT',9,'109',13,10,'#define VK_DECIMAL',9,'110',13,10,'#define VK_DIVIDE',9,'111',13,10,'#define VK_F1',9,'112',13,10,'#define VK_F2',9,'113',13,10,'#define VK_F3',9,'114',13,10,'#define VK_F4',9,'115',13,10,'#define VK_F5',9,'116',13,10,'#define VK_F6',9,'117',13,10,'#define VK_F7',9,'118',13,10,'#define VK_F8',9,'119',13,10,'#define VK_F9',9,'120',13,10,'#define VK_F10',9,'121',13,10,'#define VK_F11',9,'122',13,10,'#define VK_F12',9,'123',13,10,'#define VK_F13',9,'124',13,10,'#define VK_F14',9,'125',13,10,'#define VK_F15',9,'126',13,10,'#define VK_F16',9,'127',13,10,'#define VK_F17',9,'128',13,10,'#define VK_F18',9,'129',13,10,'#define VK_F19',9,'130',13,10,'#define VK_F20',9,'131',13,10,'#define VK_F21',9,'132',13,10,'#define VK_F22',9,'133',13,10,'#define VK_F23',9,'134',13,10,'#define VK_F24',9,'135',13,10,'#define VK_NUMLOCK',9,'144',13,10,'#define VK_SCROLL',9,'145',13,10,'#define VK_LSHIFT',9,'160',13,10,'#define VK_LCONTROL',9,'162',13,10,'#define VK_LMENU',9,'164',13,10,'#define VK_RSHIFT',9,'161',13,10,'#define VK_RCONTROL',9,'163',13,10,'#define VK_RMENU',9,'165',13,10,13,10,'#define FILE_TYPE_UNKNOWN',9,'0',13,10,'#define FILE_TYPE_DISK',9,'1',13,10,'#define FILE_TYPE_CHAR',9,'2',13,10,'#define FILE_TYPE_PIPE',9,'3',13,10,'#define FILE_TYPE_REMOTE 0x8000',13,10,13,10,'#define PM_NOREMOVE',9,'0',13,10,'#define PM_REMOVE',9,'1',13,10,'#define PM_NOYIELD',9,'2',13,10,13,10,'#define LOWORD(l) (((WORD) (l)) & 0xFFFF)',13,10,'#define HIWORD(l) ((WORD) (((DWORD) (l) >> 16) & 0xFFFF))',13,10,13,10,'#define ERROR_BROKEN_PIPE 109',13,10,13,10,'#define WM_NULL',9,'0',13,10,'#define WM_APP',9,'0x8000',13,10,'#define WM_ACTIVATE',9,'6',13,10,'#define WM_ACTIVATEAPP',9,'28',13,10,'#define WM_ASKCBFORMATNAME',9,'780',13,10,'#define WM_CANCELJOURNAL',9,'75',13,10,'#define WM_CANCELMODE',9,'31',13,10,'#define WM_CAPTURECHANGED',9,'533',13,10,'#define WM_CHANGECBCHAIN',9,'781',13,10,'#define WM_CHAR',9,'258',13,10,'#define WM_CHARTOITEM',9,'47',13,10,'#define WM_CHILDACTIVATE',9,'34',13,10,'#define WM_CHOOSEFONT_GETLOGFONT',9,'1025',13,10,'#define WM_CHOOSEFONT_SETLOGFONT',9,'1125',13,10,'#define WM_CHOOSEFONT_SETFLAGS',9,'1126',13,10,'#define WM_CLEAR',9,'771',13,10,'#define WM_CLOSE',9,'16',13,10,13,10,'//!=================',13,10,13,10,'#define WM_COMMAND',9,'273',13,10,'#define WM_COMPACTING',9,'65',13,10,'#define WM_COMPAREITEM',9,'57',13,10,'#define WM_CONTEXTMENU',9,'123',13,10,'#define WM_COPY',9,'769',13,10,'#define WM_COPYDATA',9,'74',13,10,'#define WM_CREATE',9,'1',13,10,'#define WM_CTLCOLORBTN',9,'309',13,10,'#define WM_CTLCOLORDLG',9,'310',13,10,'#define WM_CTLCOLOREDIT',9,'307',13,10,'#define WM_CTLCOLORLISTBOX',9,'308',13,10,'#define WM_CTLCOLORMSGBOX',9,'306',13,10,'#define WM_CTLCOLORSCROLLBAR',9,'311',13,10,'#define WM_CTLCOLORSTATIC',9,'312',13,10,'#define WM_CUT',9,'768',13,10,'#define WM_DEADCHAR',9,'259',13,10,'#define WM_DELETEITEM',9,'45',13,10,'#define WM_DESTROY',9,'2',13,10,'#define WM_DESTROYCLIPBOARD',9,'775',13,10,'#define WM_DEVICECHANGE',9,'537',13,10,'#define WM_DEVMODECHANGE',9,'27',13,10,'#define WM_DISPLAYCHANGE',9,'126',13,10,'#define WM_DRAWCLIPBOARD',9,'776',13,10,'#define WM_DRAWITEM',9,'43',13,10,'#define WM_DROPFILES',9,'563',13,10,'#define WM_ENABLE',9,'10',13,10,'#define WM_ENDSESSION',9,'22',13,10,'#define WM_ENTERIDLE',9,'289',13,10,'#define WM_ENTERMENULOOP',9,'529',13,10,'#define WM_ENTERSIZEMOVE',9,'561',13,10,'#define WM_ERASEBKGND',9,'20',13,10,'#define WM_EXITMENULOOP',9,'530',13,10,'#define WM_EXITSIZEMOVE',9,'562',13,10,'#define WM_FONTCHANGE',9,'29',13,10,'#define WM_GETDLGCODE',9,'135',13,10,'#define WM_GETFONT',9,'49',13,10,'#define WM_GETHOTKEY',9,'51',13,10,'#define WM_GETICON',9,'127',13,10,'#define WM_GETMINMAXINFO',9,'36',13,10,'#define WM_GETTEXT',9,'13',13,10,'#define WM_GETTEXTLENGTH',9,'14',13,10,'#define WM_HELP',9,'83',13,10,'#define WM_HOTKEY',9,'786',13,10,'#define WM_HSCROLL',9,'276',13,10,'#define WM_HSCROLLCLIPBOARD',9,'782',13,10,'#define WM_ICONERASEBKGND',9,'39',13,10,'#define WM_IME_CHAR',9,'646',13,10,'#define WM_IME_COMPOSITION',9,'271',13,10,'#define WM_IME_COMPOSITIONFULL',9,'644',13,10,'#define WM_IME_CONTROL',9,'643',13,10,'#define WM_IME_ENDCOMPOSITION',9,'270',13,10,'#define WM_IME_KEYDOWN',9,'656',13,10,'#define WM_IME_KEYUP',9,'657',13,10,'#define WM_IME_NOTIFY',9,'642',13,10,'#define WM_IME_SELECT',9,'645',13,10,'#define WM_IME_SETCONTEXT',9,'641',13,10,'#define WM_IME_STARTCOMPOSITION',9,'269',13,10,'#define WM_INITDIALOG',9,'272',13,10,'#define WM_INITMENU',9,'278',13,10,'#define WM_INITMENUPOPUP',9,'279',13,10,'#define WM_INPUTLANGCHANGE',9,'81',13,10,'#define WM_INPUTLANGCHANGEREQUEST',9,'80',13,10,'#define WM_INPUT 0xff',13,10,'#define WM_KEYDOWN',9,'256',13,10,'#define WM_KEYUP',9,'257',13,10,'#define WM_KILLFOCUS',9,'8',13,10,'#define WM_LBUTTONDBLCLK',9,'515',13,10,'#define WM_LBUTTONDOWN',9,'513',13,10,'#define WM_LBUTTONUP',9,'514',13,10,'#define WM_MBUTTONDBLCLK',9,'521',13,10,'#define WM_MBUTTONDOWN',9,'519',13,10,'#define WM_MBUTTONUP',9,'520',13,10,'#define WM_MDIACTIVATE',9,'546',13,10,'#define WM_MDICASCADE',9,'551',13,10,'#define WM_MDICREATE',9,'544',13,10,'#define WM_MDIDESTROY',9,'545',13,10,'#define WM_MDIGETACTIVE',9,'553',13,10,'#define WM_MDIICONARRANGE',9,'552',13,10,'#define WM_MDIMAXIMIZE',9,'549',13,10,'#define WM_MDINEXT',9,'548',13,10,'#define WM_MDIREFRESHMENU',9,'564',13,10,'#define WM_MDIRESTORE',9,'547',13,10,'#define WM_MDISETMENU',9,'560',13,10,'#define WM_MDITILE',9,'550',13,10,'#define WM_MEASUREITEM',9,'44',13,10,'#define WM_MENUCHAR',9,'288',13,10,'#define WM_MENUSELECT',9,'287',13,10,'#define WM_MENURBUTTONUP 0x0122',13,10,'#define WM_MENUDRAG',9,'0x0123',13,10,'#define WM_MENUGETOBJECT 0x0124',13,10,'#define WM_UNINITMENUPOPUP 0x0125',13,10,'#define WM_MENUCOMMAND',9,'0x0126',13,10,'#define WM_CHANGEUISTATE 0x0127',13,10,'#define WM_UPDATEUISTATE 0x0128',13,10,'#define WM_QUERYUISTATE',9,'0x0129',13,10,'#define UIS_SET',9,'1',13,10,'#define UIS_CLEAR',9,'2',13,10,'#define UIS_INITIALIZE  3',13,10,'#define WM_MOUSEACTIVATE',9,'33',13,10,'#define WM_MOUSEMOVE',9,'512',13,10,'#define WM_MOUSEHOVER',9,'0x2a1',13,10,'#define WM_MOUSELEAVE',9,'0x2a3',13,10,'#define WM_MOUSEWHEEL',9,'0x20A',13,10,'#define WM_MOVE',9,'3',13,10,'#define WM_MOVING',9,'534',13,10,'#define WM_NCACTIVATE',9,'134',13,10,'#define WM_NCCALCSIZE',9,'131',13,10,'#define WM_NCCREATE',9,'129',13,10,'#define WM_NCDESTROY',9,'130',13,10,'#define WM_NCHITTEST',9,'132',13,10,'#define WM_NCLBUTTONDBLCLK',9,'163',13,10,'#define WM_NCLBUTTONDOWN',9,'161',13,10,'#define WM_NCLBUTTONUP',9,'162',13,10,'#define WM_NCMBUTTONDBLCLK',9,'169',13,10,'#define WM_NCMBUTTONDOWN',9,'167',13,10,'#define WM_NCMBUTTONUP',9,'168',13,10,'#define WM_NCMOUSEMOVE',9,'160',13,10,'#define WM_NCPAINT',9,'133',13,10,'#define WM_NCRBUTTONDBLCLK',9,'166',13,10,'#define WM_NCRBUTTONDOWN',9,'164',13,10,'#define WM_NCRBUTTONUP',9,'165',13,10,'#define WM_NEXTDLGCTL',9,'40',13,10,'#define WM_NOTIFY',9,'78',13,10,'#define WM_NOTIFYFORMAT',9,'85',13,10,'#define WM_PAINT',9,'15',13,10,'#define WM_PAINTCLIPBOARD',9,'777',13,10,'#define WM_PAINTICON',9,'38',13,10,'#define WM_PALETTECHANGED',9,'785',13,10,'#define WM_PALETTEISCHANGING',9,'784',13,10,'#define WM_PARENTNOTIFY',9,'528',13,10,'#define WM_PASTE',9,'770',13,10,'#define WM_PENWINFIRST',9,'896',13,10,'#define WM_SYNCPAINT',9,'0x0088',13,10,'#define WM_AFXFIRST',9,'0x0360',13,10,'#define WM_AFXLAST',9,'0x037F',13,10,'#define WM_HANDHELDFIRST 0x0358',13,10,'#define WM_HANDHELDLAST 0x035F',13,10,'#define WM_PENWINLAST',9,'911',13,10,'#define WM_POWER',9,'72',13,10,'#define WM_POWERBROADCAST',9,'536',13,10,'#define WM_PRINT',9,'791',13,10,'#define WM_PRINTCLIENT',9,'792',13,10,'#define WM_PSD_ENVSTAMPRECT',9,'1029',13,10,'#define WM_PSD_FULLPAGERECT',9,'1025',13,10,'#define WM_PSD_GREEKTEXTRECT',9,'1028',13,10,'#define WM_PSD_MARGINRECT',9,'1027',13,10,'#define WM_PSD_MINMARGINRECT',9,'1026',13,10,'#define WM_PSD_PAGESETUPDLG',9,'1024',13,10,'#define WM_PSD_YAFULLPAGERECT',9,'1030',13,10,'#define WM_QUERYDRAGICON',9,'55',13,10,'#define WM_QUERYENDSESSION',9,'17',13,10,'#define WM_QUERYNEWPALETTE',9,'783',13,10,'#define WM_QUERYOPEN',9,'19',13,10,'#define WM_QUEUESYNC',9,'35',13,10,'#define WM_QUIT',9,'18',13,10,'#define WM_RBUTTONDBLCLK',9,'518',13,10,'#define WM_RBUTTONDOWN',9,'516',13,10,'#define WM_RBUTTONUP',9,'517',13,10,'#define WM_RENDERALLFORMATS',9,'774',13,10,'#define WM_RENDERFORMAT',9,'773',13,10,'#define WM_SETCURSOR',9,'32',13,10,'#define WM_SETFOCUS',9,'7',13,10,'#define WM_SETFONT',9,'48',13,10,'#define WM_SETHOTKEY',9,'50',13,10,'#define WM_SETICON',9,'128',13,10,'#define WM_SETREDRAW',9,'11',13,10,'#define WM_SETTEXT',9,'12',13,10,'#define WM_SETTINGCHANGE',9,'26',13,10,'#define WM_SHOWWINDOW',9,'24',13,10,'#define WM_SIZE',9,'5',13,10,'#define WM_SIZECLIPBOARD',9,'779',13,10,'#define WM_SIZING',9,'532',13,10,'#define WM_SPOOLERSTATUS',9,'42',13,10,'#define WM_STYLECHANGED',9,'125',13,10,'#define WM_STYLECHANGING',9,'124',13,10,'#define WM_SYSCHAR',9,'262',13,10,'#define WM_SYSCOLORCHANGE',9,'21',13,10,'#define WM_SYSCOMMAND',9,'274',13,10,'#define WM_SYSDEADCHAR',9,'263',13,10,'#define WM_SYSKEYDOWN',9,'260',13,10,'#define WM_SYSKEYUP',9,'261',13,10,'#define WM_TCARD',9,'82',13,10,'#define WM_TIMECHANGE',9,'30',13,10,'#define WM_TIMER',9,'275',13,10,'#define WM_UNDO',9,'772',13,10,'#define WM_USER',9,'1024',13,10,'#define WM_USERCHANGED',9,'84',13,10,'#define WM_VKEYTOITEM',9,'46',13,10,'#define WM_VSCROLL',9,'277',13,10,'#define WM_VSCROLLCLIPBOARD',9,'778',13,10,'#define WM_WINDOWPOSCHANGED',9,'71',13,10,'#define WM_WINDOWPOSCHANGING',9,'70',13,10,'#define WM_XBUTTONDOWN',9,'0x020B',13,10,'#define WM_XBUTTONUP',9,'0x020C',13,10,'#define WM_XBUTTONDBLCLK',9,'0x020D',13,10,'#define WM_WININICHANGE',9,'26',13,10,'#define WM_KEYFIRST',9,'256',13,10,'#define WM_KEYLAST',9,'264',13,10,'#define WM_MOUSEFIRST',9,'512',13,10,'#define WM_MOUSELAST 0x020D',13,10,'#define WM_NEXTMENU',9,'0x0213',13,10,'#define WM_CHANGEUISTATE',9,'0x0127',13,10,'#define WM_UPDATEUISTATE',9,'0x0128',13,10,'#define WM_QUERYUISTATE',9,'0x0129',13,10,'#define WM_WTSSESSION_CHANGE 0x02B1',13,10,'#define WM_LBTRACKPOINT',9,'0x0131',13,10,'#define WM_GETOBJECT 0x003D',13,10,'#define WM_COMMNOTIFY 0x0044',13,10,'#define WM_TABLET_FIRST',9,'0x02c0',13,10,'#define WM_TABLET_LAST',9,'0x02df',13,10,'#define WM_IME_REQUEST',9,'0x0288',13,10,'#define WM_IME_KEYLAST  0x010F',13,10,'#define WM_NCMOUSEHOVER',9,'0x02A0',13,10,'#define WM_NCMOUSELEAVE 0x02A2',13,10,13,10,'//!=================',13,10,13,10,13,10,'#define INVALID_HANDLE_VALUE (HANDLE)(0xffffffff)',13,10,'#define MEM_RESERVE 8192',13,10,'#define MEM_COMMIT 4096',13,10,'#define PAGE_READWRITE 4',13,10,'#define PAGE_WRITECOPY 8',13,10,'#define PAGE_EXECUTE_READ',9,'32',13,10,'#define MEM_TOP_DOWN 1048576',13,10,'#define MEM_RELEASE',9,'32768',13,10,'#define MAX_PATH 260',13,10,'#define FORMAT_MESSAGE_IGNORE_INSERTS 512',13,10,'#define FORMAT_MESSAGE_FROM_SYSTEM 4096',13,10,'#define WAIT_OBJECT_0 0',13,10,'#define MAX_PATH 260',13,10,'#define STD_INPUT_HANDLE',9,'(DWORD)(0xfffffff6)',13,10,'#define STD_OUTPUT_HANDLE',9,'(DWORD)(0xfffffff5)',13,10,'#define STD_ERROR_HANDLE',9,'(DWORD)(0xfffffff4)',13,10,'#define ENABLE_LINE_INPUT',9,'2',13,10,'#define ENABLE_ECHO_INPUT',9,'4',13,10,'#define ENABLE_PROCESSED_INPUT',9,'1',13,10,'#define ENABLE_WINDOW_INPUT',9,'8',13,10,'#define ENABLE_MOUSE_INPUT',9,'16',13,10,'#define ENABLE_PROCESSED_OUTPUT',9,'1',13,10,'#define CONST const',13,10,13,10,'#define CAPSLOCK_ON',9,'128',13,10,'#define ENHANCED_KEY',9,'256',13,10,'#define LEFT_ALT_PRESSED',9,'2',13,10,'#define LEFT_CTRL_PRESSED',9,'8',13,10,'#define NUMLOCK_ON',9,'32',13,10,'#define RIGHT_ALT_PRESSED',9,'1',13,10,'#define RIGHT_CTRL_PRESSED',9,'4',13,10,'#define SCROLLLOCK_ON',9,'64',13,10,'#define SHIFT_PRESSED',9,'16',13,10,'#define FROM_LEFT_1ST_BUTTON_PRESSED',9,'1',13,10,'#define RIGHTMOST_BUTTON_PRESSED',9,'2',13,10,'#define FROM_LEFT_2ND_BUTTON_PRESSED',9,'4',13,10,'#define FROM_LEFT_3RD_BUTTON_PRESSED',9,'8',13,10,'#define FROM_LEFT_4TH_BUTTON_PRESSED',9,'16',13,10,'#define DOUBLE_CLICK',9,'2',13,10,'#define MOUSE_MOVED',9,'1',13,10,'#define KEY_EVENT',9,'1',13,10,'#define MOUSE_EVENT',9,'2',13,10,'#define WINDOW_BUFFER_SIZE_EVENT',9,'4',13,10,'#define MENU_EVENT',9,'8',13,10,'#define FOCUS_EVENT',9,'16',13,10,13,10,'/*',13,10,'proc',13,10,'*/',13,10,13,10,'typedef unsigned char BYTE;',13,10,'typedef BYTE* LPBYTE;',13,10,'typedef struct {int dummy;} *HWND;',13,10,'typedef const char *LPCSTR;',13,10,'typedef char *LPSTR;',13,10,'typedef unsigned int UINT;',13,10,'typedef void* HANDLE;',13,10,'typedef void* HINSTANCE;',13,10,'typedef void* HMODULE;',13,10,'typedef void* HLOCAL;',13,10,'typedef void* LPVOID;',13,10,'typedef void* LPWSTR;',13,10,'typedef const void* LPCWSTR;',13,10,'typedef const void* LPCVOID;',13,10,'typedef void* PVOID;',13,10,'typedef int LONG;',13,10,'typedef unsigned int ULONG;',13,10,'typedef unsigned short WORD;',13,10,'typedef unsigned int DWORD;',13,10,'typedef DWORD* PDWORD;',13,10,'typedef DWORD* LPDWORD;',13,10,'typedef int BOOL;',13,10,'typedef void VOID;',13,10,'typedef long long LONG_PTR;',13,10,'typedef unsigned long long ULONG_PTR;',13,10,'typedef ULONG_PTR DWORD_PTR;',13,10,'typedef char CHAR;',13,10,'typedef unsigned short WCHAR;',13,10,'typedef short int SHORT;',13,10,'typedef WORD* LPWORD;',13,10,'typedef BOOL (CALLBACK *PHANDLER_ROUTINE) (DWORD);',13,10,'typedef unsigned long long UINT_PTR;',13,10,'typedef UINT_PTR WPARAM;',13,10,'typedef LONG_PTR LPARAM;',13,10,'typedef BYTE *PBYTE;',13,10,'typedef unsigned long COLORREF;',13,10,13,10,'typedef HANDLE HDC;',13,10,'typedef HANDLE HBITMAP;',13,10,'typedef HANDLE HPEN;',13,10,'typedef HANDLE HBRUSH;',13,10,'typedef HANDLE *PHANDLE;',13,10,'typedef HANDLE HMENU;',13,10,'typedef HANDLE HGDIOBJ;',13,10,13,10,'/*',13,10,'proc',13,10,'*/',13,10,13,10,'typedef struct tagPOINT {',13,10,9,'LONG x;',13,10,9,'LONG y;',13,10,'} POINT,*PPOINT;',13,10,13,10,'typedef struct tagMSG {',13,10,9,'HWND hwnd;',13,10,9,'UINT message;',13,10,9,'WPARAM wParam;',13,10,9,'LPARAM lParam;',13,10,9,'DWORD time;',13,10,9,'POINT pt;',13,10,'} MSG,*LPMSG,*PMSG;',13,10,13,10,'typedef struct _LIST_ENTRY {',13,10,9,'struct _LIST_ENTRY *Flink;',13,10,9,'struct _LIST_ENTRY *Blink;',13,10,'} LIST_ENTRY,*PLIST_ENTRY;',13,10,13,10,'typedef struct _CONSOLE_CURSOR_INFO {',13,10,9,'DWORD dwSize;',13,10,9,'BOOL bVisible;',13,10,'} CONSOLE_CURSOR_INFO,*PCONSOLE_CURSOR_INFO;',13,10,13,10,'typedef struct {',13,10,9,'PVOID BaseAddress;',13,10,9,'PVOID AllocationBase;',13,10,9,'DWORD AllocationProtect;',13,10,9,'DWORD RegionSize;',13,10,9,'DWORD State;',13,10,9,'DWORD Protect;',13,10,9,'DWORD Type;',13,10,'} MEMORY_BASIC_INFORMATION;',13,10,13,10,'typedef struct _RTL_CRITICAL_SECTION_DEBUG {',13,10,9,'WORD Type;',13,10,9,'WORD CreatorBackTraceIndex;',13,10,9,'struct _RTL_CRITICAL_SECTION *CriticalSection;',13,10,9,'LIST_ENTRY ProcessLocksList;',13,10,9,'DWORD EntryCount;',13,10,9,'DWORD ContentionCount;',13,10,9,'DWORD Spare[ 2];',13,10,'} RTL_CRITICAL_SECTION_DEBUG,*PRTL_CRITICAL_SECTION_DEBUG;',13,10,13,10,'typedef struct {',13,10,9,'PRTL_CRITICAL_SECTION_DEBUG DebugInfo;',13,10,9,'LONG LockCount;',13,10,9,'LONG RecursionCount;',13,10,9,'HANDLE OwningThread;',13,10,9,'HANDLE LockSemaphore;',13,10,9,'ULONG_PTR SpinCount;',13,10,'} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION;',13,10,13,10,'typedef RTL_CRITICAL_SECTION CRITICAL_SECTION,*LPCRITICAL_SECTION;',13,10,13,10,'typedef struct _SECURITY_ATTRIBUTES {',13,10,9,'DWORD nLength;',13,10,9,'LPVOID lpSecurityDescriptor;',13,10,9,'BOOL bInheritHandle;',13,10,'} SECURITY_ATTRIBUTES,*LPSECURITY_ATTRIBUTES;',13,10,13,10,'typedef enum _GET_FILEEX_INFO_LEVELS { GetFileExInfoStandard, GetFileExMaxInfoLevel } GET_FILEEX_INFO_LEVELS;',13,10,13,10,'typedef struct tagFILETIME {',13,10,9,'DWORD dwLowDateTime;',13,10,9,'DWORD dwHighDateTime;',13,10,'} FILETIME,*LPFILETIME,*PFILETIME;',13,10,13,10,'typedef struct _WIN32_FIND_DATAA {',13,10,9,'DWORD dwFileAttributes;',13,10,9,'FILETIME ftCreationTime;',13,10,9,'FILETIME ftLastAccessTime;',13,10,9,'FILETIME ftLastWriteTime;',13,10,9,'DWORD nFileSizeHigh;',13,10,9,'DWORD nFileSizeLow;',13,10,9,'DWORD dwReserved0;',13,10,9,'DWORD dwReserved1;',13,10,9,'CHAR   cFileName[ MAX_PATH ];',13,10,9,'CHAR   cAlternateFileName[ 14 ];',13,10,'} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA, *LPWIN32_FIND_DATAA;',13,10,13,10,'typedef struct _WIN32_FIND_DATAW {',13,10,9,'DWORD dwFileAttributes;',13,10,9,'FILETIME ftCreationTime;',13,10,9,'FILETIME ftLastAccessTime;',13,10,9,'FILETIME ftLastWriteTime;',13,10,9,'DWORD nFileSizeHigh;',13,10,9,'DWORD nFileSizeLow;',13,10,9,'DWORD dwReserved0;',13,10,9,'DWORD dwReserved1;',13,10,9,'WCHAR  cFileName[ MAX_PATH ];',13,10,9,'WCHAR  cAlternateFileName[ 14 ];',13,10,'} WIN32_FIND_DATAW, *PWIN32_FIND_DATAW, *LPWIN32_FIND_DATAW;',13,10,13,10,'typedef struct _COORD {',13,10,9,'SHORT X;',13,10,9,'SHORT Y;',13,10,'} COORD;',13,10,'//!=================',13,10,13,10,'typedef struct _CHAR_INFO {',13,10,9,'union { WCHAR UnicodeChar; CHAR AsciiChar; } Char;',13,10,9,'WORD Attributes;',13,10,'} CHAR_INFO,*PCHAR_INFO;',13,10,13,10,'typedef struct _SMALL_RECT {',13,10,9,'SHORT Left;',13,10,9,'SHORT Top;',13,10,9,'SHORT Right;',13,10,9,'SHORT Bottom;',13,10,'} SMALL_RECT,*PSMALL_RECT;',13,10,13,10,'typedef struct _FOCUS_EVENT_RECORD {',13,10,9,'BOOL bSetFocus;',13,10,'} FOCUS_EVENT_RECORD;',13,10,13,10,'typedef struct _CONSOLE_SCREEN_BUFFER_INFO {',13,10,9,'COORD dwSize;',13,10,9,'COORD dwCursorPosition;',13,10,9,'WORD wAttributes;',13,10,9,'SMALL_RECT srWindow;',13,10,9,'COORD dwMaximumWindowSize;',13,10,'} CONSOLE_SCREEN_BUFFER_INFO,*PCONSOLE_SCREEN_BUFFER_INFO;',13,10,13,10,'typedef struct _KEY_EVENT_RECORD {',13,10,9,'BOOL bKeyDown;',13,10,9,'WORD wRepeatCount;',13,10,9,'WORD wVirtualKeyCode;',13,10,9,'WORD wVirtualScanCode;',13,10,9,'union { WCHAR UnicodeChar; CHAR AsciiChar; } uChar;',13,10,9,'DWORD dwControlKeyState;',13,10,'} KEY_EVENT_RECORD;',13,10,13,10,'typedef struct _MOUSE_EVENT_RECORD {',13,10,9,'COORD dwMousePosition;',13,10,9,'DWORD dwButtonState;',13,10,9,'DWORD dwControlKeyState;',13,10,9,'DWORD dwEventFlags;',13,10,'} MOUSE_EVENT_RECORD;',13,10,13,10,'typedef struct _WINDOW_BUFFER_SIZE_RECORD {',13,10,9,'COORD dwSize;',13,10,'} WINDOW_BUFFER_SIZE_RECORD;',13,10,13,10,'typedef struct _MENU_EVENT_RECORD {',13,10,9,'UINT dwCommandId;',13,10,'} MENU_EVENT_RECORD,*PMENU_EVENT_RECORD;',13,10,13,10,'typedef struct _INPUT_RECORD {',13,10,9,'WORD EventType;',13,10,9,'WORD __alignmentDummy;',13,10,9,'union {',13,10,9,9,'KEY_EVENT_RECORD KeyEvent;',13,10,9,9,'MOUSE_EVENT_RECORD MouseEvent;',13,10,9,9,'WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;',13,10,9,9,'MENU_EVENT_RECORD MenuEvent;',13,10,9,9,'FOCUS_EVENT_RECORD FocusEvent;',13,10,9,'} Event;',13,10,'} INPUT_RECORD,*PINPUT_RECORD;',13,10,13,10,'typedef struct _STARTUPINFOW {',13,10,9,'DWORD cb;',13,10,9,'LPWSTR lpReserved;',13,10,9,'LPWSTR lpDesktop;',13,10,9,'LPWSTR lpTitle;',13,10,9,'DWORD dwX;',13,10,9,'DWORD dwY;',13,10,9,'DWORD dwXSize;',13,10,9,'DWORD dwYSize;',13,10,9,'DWORD dwXCountChars;',13,10,9,'DWORD dwYCountChars;',13,10,9,'DWORD dwFillAttribute;',13,10,9,'DWORD dwFlags;',13,10,9,'WORD wShowWindow;',13,10,9,'WORD cbReserved2;',13,10,9,'LPBYTE lpReserved2;',13,10,9,'HANDLE hStdInput;',13,10,9,'HANDLE hStdOutput;',13,10,9,'HANDLE hStdError;',13,10,'} STARTUPINFOW, *LPSTARTUPINFOW;',13,10,13,10,'typedef struct _PROCESS_INFORMATION {',13,10,9,'HANDLE hProcess;',13,10,9,'HANDLE hThread;',13,10,9,'DWORD dwProcessId;',13,10,9,'DWORD dwThreadId;',13,10,'} PROCESS_INFORMATION,*LPPROCESS_INFORMATION;',13,10,13,10,'typedef struct _WIN32_FILE_ATTRIBUTE_DATA {',13,10,9,'DWORD dwFileAttributes;',13,10,9,'FILETIME ftCreationTime;',13,10,9,'FILETIME ftLastAccessTime;',13,10,9,'FILETIME ftLastWriteTime;',13,10,9,'DWORD nFileSizeHigh;',13,10,9,'DWORD nFileSizeLow;',13,10,'} WIN32_FILE_ATTRIBUTE_DATA,*LPWIN32_FILE_ATTRIBUTE_DATA;',13,10,13,10,'#define _FILETIME',13,10,13,10,13,10,'/*',13,10,'proc',13,10,'*/',13,10,13,10,'#ifdef UNICODE',13,10,9,'typedef WIN32_FIND_DATAW WIN32_FIND_DATA;',13,10,9,'typedef PWIN32_FIND_DATAW PWIN32_FIND_DATA;',13,10,9,'typedef LPWIN32_FIND_DATAW LPWIN32_FIND_DATA;',13,10,'#else',13,10,9,'typedef WIN32_FIND_DATAA WIN32_FIND_DATA;',13,10,9,'typedef PWIN32_FIND_DATAA PWIN32_FIND_DATA;',13,10,9,'typedef LPWIN32_FIND_DATAA LPWIN32_FIND_DATA;',13,10,'#endif',13,10,13,10,'int MessageBoxA(HWND,LPCSTR,LPCSTR,UINT);',13,10,'#define MessageBox MessageBoxA',13,10,13,10,'typedef int (*FARPROC)();',13,10,13,10,'FARPROC GetProcAddress(HINSTANCE,const char*);',13,10,'HINSTANCE LoadLibraryA(LPCSTR);',13,10,'HMODULE GetModuleHandleA(char*);',13,10,13,10,'LPVOID VirtualAlloc(LPVOID,DWORD,DWORD,DWORD);',13,10,'BOOL VirtualFree(LPVOID,DWORD,DWORD);',13,10,'BOOL VirtualProtect(LPVOID,DWORD,DWORD,PDWORD);',13,10,'DWORD VirtualQuery(LPCVOID,MEMORY_BASIC_INFORMATION*,DWORD);',13,10,'HLOCAL LocalFree(HLOCAL);',13,10,'LPWSTR GetCommandLineW(VOID);',13,10,'LPWSTR* CommandLineToArgvW(LPCWSTR,int*);',13,10,'DWORD GetModuleFileNameA(HINSTANCE,LPSTR,DWORD);',13,10,'DWORD GetModuleFileNameW(HINSTANCE,LPWSTR,DWORD);',13,10,'DWORD GetLastError(VOID);',13,10,13,10,'DWORD FormatMessageA(DWORD,LPCVOID,DWORD,DWORD,LPSTR,DWORD,va_list *);',13,10,'LONG InterlockedCompareExchange(LONG volatile*, LONG, LONG);',13,10,'VOID InitializeCriticalSection(LPCRITICAL_SECTION);',13,10,'VOID DeleteCriticalSection(LPCRITICAL_SECTION);',13,10,'VOID EnterCriticalSection(LPCRITICAL_SECTION);',13,10,'VOID LeaveCriticalSection(LPCRITICAL_SECTION);',13,10,'DWORD GetCurrentThreadId(VOID);',13,10,'BOOL CloseHandle(HANDLE);',13,10,'BOOL FreeLibrary(HINSTANCE);',13,10,'BOOL AreFileApisANSI(VOID);',13,10,'VOID OutputDebugStringA(LPCSTR);',13,10,'HANDLE CreateFileA(LPCSTR,DWORD,DWORD,LPSECURITY_ATTRIBUTES,DWORD,DWORD,HANDLE);',13,10,'HANDLE CreateFileW(LPCWSTR,DWORD,DWORD,LPSECURITY_ATTRIBUTES,DWORD,DWORD,HANDLE);',13,10,'HANDLE CreateFileMappingW(HANDLE,LPSECURITY_ATTRIBUTES,DWORD,DWORD,DWORD,LPCWSTR);',13,10,'HANDLE CreateFileMappingA(HANDLE,LPSECURITY_ATTRIBUTES,DWORD,DWORD,DWORD,LPCSTR);',13,10,'HANDLE CreateMutexW(LPSECURITY_ATTRIBUTES,BOOL,LPCWSTR);',13,10,'HANDLE CreateMutexA(LPSECURITY_ATTRIBUTES,BOOL,LPCSTR);',13,10,'BOOL DeleteFileA(LPCSTR);',13,10,'BOOL DeleteFileW(LPCWSTR);',13,10,'BOOL FlushFileBuffers(HANDLE);',13,10,'DWORD FormatMessageW(DWORD,LPCVOID,DWORD,DWORD,LPWSTR,DWORD,va_list *);',13,10,'//DWORD FormatMessageA(DWORD,LPCVOID,DWORD,DWORD,LPSTR,DWORD,va_list *);',13,10,'DWORD GetCurrentProcessId(VOID);',13,10,'BOOL GetDiskFreeSpaceW(LPCWSTR,LPDWORD,LPDWORD,LPDWORD,LPDWORD);',13,10,'BOOL GetDiskFreeSpaceA(LPCSTR,LPDWORD,LPDWORD,LPDWORD,LPDWORD);',13,10,'DWORD GetFileAttributesW(LPCWSTR);',13,10,'DWORD GetFileAttributesA(LPCSTR);',13,10,'BOOL GetFileAttributesExA(LPCSTR,GET_FILEEX_INFO_LEVELS,LPVOID);',13,10,'BOOL GetFileAttributesExW(LPCWSTR,GET_FILEEX_INFO_LEVELS,LPVOID);',13,10,'DWORD GetFileSize(HANDLE,LPDWORD);',13,10,'BOOL SetConsoleMode(HANDLE,DWORD);',13,10,'BOOL GetConsoleMode(HANDLE,LPDWORD);',13,10,'HANDLE GetStdHandle(DWORD);',13,10,'BOOL PeekConsoleInputW(HANDLE,PINPUT_RECORD,DWORD,LPDWORD);',13,10,'BOOL ReadConsoleInputW(HANDLE,PINPUT_RECORD,DWORD,LPDWORD);',13,10,'BOOL WriteConsoleInputW(HANDLE,CONST INPUT_RECORD *,DWORD,LPDWORD);',13,10,'BOOL ReadConsoleOutputW(HANDLE,PCHAR_INFO,COORD,COORD,PSMALL_RECT);',13,10,'BOOL WriteConsoleOutputW(HANDLE,CONST CHAR_INFO *,COORD,COORD,PSMALL_RECT);',13,10,'BOOL ReadConsoleOutputCharacterW(HANDLE,LPWSTR,DWORD,COORD,LPDWORD);',13,10,'BOOL WriteConsoleOutputCharacterW(HANDLE,LPCWSTR,DWORD,COORD,LPDWORD);',13,10,'BOOL FillConsoleOutputCharacterW(HANDLE,WCHAR,DWORD,COORD,LPDWORD);',13,10,'BOOL ScrollConsoleScreenBufferW(HANDLE,CONST SMALL_RECT *,CONST SMALL_RECT *,COORD,CONST CHAR_INFO *);',13,10,'DWORD GetConsoleTitleW(LPWSTR,DWORD);',13,10,'BOOL SetConsoleTitleW(LPCWSTR);',13,10,'BOOL ReadConsoleW(HANDLE,LPVOID,DWORD,LPDWORD,LPVOID);',13,10,'BOOL WriteConsoleW(HANDLE,CONST VOID *,DWORD,LPDWORD,LPVOID);',13,10,'BOOL ReadConsoleOutputAttribute(HANDLE,LPWORD,DWORD,COORD,LPDWORD);',13,10,'BOOL WriteConsoleOutputAttribute(HANDLE,CONST WORD *,DWORD,COORD,LPDWORD);',13,10,'BOOL FillConsoleOutputAttribute(HANDLE,WORD,DWORD,COORD,LPDWORD);',13,10,'BOOL GetConsoleMode(HANDLE,LPDWORD);',13,10,'BOOL GetNumberOfConsoleInputEvents(HANDLE,LPDWORD);',13,10,'BOOL GetConsoleScreenBufferInfo(HANDLE,PCONSOLE_SCREEN_BUFFER_INFO);',13,10,'COORD GetLargestConsoleWindowSize(HANDLE);',13,10,'BOOL GetConsoleCursorInfo(HANDLE,PCONSOLE_CURSOR_INFO);',13,10,'BOOL GetNumberOfConsoleMouseButtons(LPDWORD);',13,10,'BOOL SetConsoleMode(HANDLE,DWORD);',13,10,'BOOL SetConsoleActiveScreenBuffer(HANDLE);',13,10,'BOOL FlushConsoleInputBuffer(HANDLE);',13,10,'BOOL SetConsoleScreenBufferSize(HANDLE,COORD);',13,10,'BOOL SetConsoleCursorPosition(HANDLE,COORD);',13,10,'BOOL SetConsoleCursorInfo(HANDLE,CONST CONSOLE_CURSOR_INFO *);',13,10,'BOOL SetConsoleWindowInfo(HANDLE,BOOL,CONST SMALL_RECT *);',13,10,'BOOL SetConsoleTextAttribute(HANDLE,WORD);',13,10,'BOOL SetConsoleCtrlHandler(PHANDLER_ROUTINE,BOOL);',13,10,'BOOL GenerateConsoleCtrlEvent(DWORD,DWORD);',13,10,'BOOL AllocConsole(VOID);',13,10,'BOOL FreeConsole(VOID);',13,10,'HANDLE CreateConsoleScreenBuffer(DWORD,DWORD,CONST SECURITY_ATTRIBUTES *,DWORD,LPVOID);',13,10,'DWORD GetFileType(HANDLE);',13,10,'DWORD WaitForSingleObject(HANDLE,DWORD);',13,10,'BOOL PeekNamedPipe(HANDLE,LPVOID,DWORD,LPDWORD,LPDWORD,LPDWORD);',13,10,'BOOL CreatePipe(PHANDLE,PHANDLE,LPSECURITY_ATTRIBUTES,DWORD);',13,10,'BOOL GetMessageA(LPMSG,HWND,UINT,UINT);',13,10,'SHORT GetKeyState(int);',13,10,'BOOL TranslateMessage(CONST MSG *);',13,10,'BOOL PeekMessageA(LPMSG,HWND,UINT,UINT,UINT);',13,10,'LONG DispatchMessageA(CONST MSG *);',13,10,'BOOL IsWindow(HWND);',13,10,'BOOL IsMenu(HMENU);',13,10,'BOOL IsChild(HWND,HWND);',13,10,'BOOL DestroyWindow(HWND);',13,10,'BOOL ShowWindow(HWND,int);',13,10,'SHORT GetKeyState(int);',13,10,'SHORT GetAsyncKeyState(int);',13,10,'BOOL GetKeyboardState(PBYTE);',13,10,'BOOL SetKeyboardState(LPBYTE);',13,10,'int GetKeyboardType(int);',13,10,'BOOL GetExitCodeProcess(HANDLE,LPDWORD);',13,10,'BOOL TerminateProcess(HANDLE,UINT);',13,10,'BOOL SetHandleInformation(HANDLE,DWORD,DWORD);',13,10,'HANDLE FindFirstFileA(LPCSTR,LPWIN32_FIND_DATA);',13,10,'HPEN CreatePen(int,int,COLORREF);',13,10,'HBRUSH CreateSolidBrush(COLORREF);',13,10,'HGDIOBJ  SelectObject(HDC,HGDIOBJ);',13,10,13,10,13,10,'//!=================',13,10,13,10,'/*',13,10,'proc',13,10,'*/',13,10,13,10,'#ifdef UNICODE',13,10,9,'#define GetModuleHandle GetModuleHandleW',13,10,9,'#define LoadLibrary LoadLibraryW',13,10,9,'#define OutputDebugString OutputDebugStringW',13,10,9,'#define GetMessage GetMessageW',13,10,9,'#define PeekMessage PeekMessageW',13,10,9,'#define DispatchMessage DispatchMessageW',13,10,'#else',13,10,9,'#define GetModuleHandle GetModuleHandleA',13,10,9,'#define LoadLibrary LoadLibraryA',13,10,9,'#define OutputDebugString OutputDebugStringA',13,10,9,'#define GetMessage GetMessageA',13,10,9,'#define PeekMessage PeekMessageA',13,10,9,'#define DispatchMessage DispatchMessageA',13,10,'#endif',13,10,13,10,'#endif // windows.h',13,10,0
KK1781:	db '/* FCNTL.H */',13,10,13,10,'int _setmode(int,int);',13,10,13,10,'#ifndef _INC_FCNTL',13,10,'#define _INC_FCNTL',13,10,13,10,'#define _O_RDONLY 0x0000',13,10,'#define _O_WRONLY 0x0001',13,10,'#define _O_RDWR 0x0002',13,10,'#define _O_APPEND 0x0008',13,10,'#define _O_CREAT 0x0100',13,10,'#define _O_TRUNC 0x0200',13,10,'#define _O_EXCL 0x0400',13,10,'#define _O_TEXT 0x4000',13,10,'#define _O_BINARY 0x8000',13,10,'#define _O_WTEXT 0x10000',13,10,'#define _O_U16TEXT 0x20000',13,10,'#define _O_U8TEXT 0x40000',13,10,'#define _O_ACCMODE (_O_RDONLY|_O_WRONLY|_O_RDWR)',13,10,13,10,'#define _O_RAW _O_BINARY',13,10,'#define _O_NOINHERIT 0x0080',13,10,'#define _O_TEMPORARY 0x0040',13,10,'#define _O_SHORT_LIVED 0x1000',13,10,13,10,'#define _O_SEQUENTIAL 0x0020',13,10,'#define _O_RANDOM 0x0010',13,10,13,10,'#if !defined(NO_OLDNAMES) || defined(_POSIX)',13,10,'#define O_RDONLY _O_RDONLY',13,10,'#define O_WRONLY _O_WRONLY',13,10,'#define O_RDWR _O_RDWR',13,10,'#define O_APPEND _O_APPEND',13,10,'#define O_CREAT _O_CREAT',13,10,'#define O_TRUNC _O_TRUNC',13,10,'#define O_EXCL _O_EXCL',13,10,'#define O_TEXT _O_TEXT',13,10,'#define O_BINARY _O_BINARY',13,10,'#define O_RAW _O_BINARY',13,10,'#define O_TEMPORARY _O_TEMPORARY',13,10,'#define O_NOINHERIT _O_NOINHERIT',13,10,'#define O_SEQUENTIAL _O_SEQUENTIAL',13,10,'#define O_RANDOM _O_RANDOM',13,10,'#define O_ACCMODE _O_ACCMODE',13,10,'#endif',13,10,13,10,'#endif',13,10,0
KK1782:	db '#include <stdint.h>',13,10,13,10,'#ifndef $io',13,10,'#define $io',13,10,13,10,'/* io.h */',13,10,13,10,'//#message "IO included"',13,10,13,10,'int _isatty(int);',13,10,13,10,'int _read(int, void*, unsigned int);',13,10,'#define read _read',13,10,13,10,'int _open(const char*, int, ...);',13,10,'#define open _open',13,10,13,10,'long _lseek(int, long, int);',13,10,'#define lseek _lseek',13,10,13,10,'int _close(int);',13,10,'#define close _close',13,10,13,10,'intptr_t _get_osfhandle(int);',13,10,'int _open_osfhandle(intptr_t,int);',13,10,13,10,'int _setmode(int,int);',13,10,'#define setmode _setmode',13,10,13,10,'int _wchmod(const wchar_t*, int);',13,10,13,10,'#endif',13,10,0
KK1783:	db '#ifndef $direct',13,10,'#define $direct',13,10,13,10,'typedef struct {',13,10,' unsigned int total_clusters;',13,10,' unsigned int avail_clusters;',13,10,' unsigned int sectors_per_cluster;',13,10,' unsigned int bytes_per_sector;',13,10,'} diskfree_t;',13,10,13,10,'int chdir(const char *);',13,10,'char* _getcwd(char *, int);',13,10,'#define getcwd _getcwd',13,10,'int mkdir(const char *);',13,10,'int rmdir(const char *);',13,10,'int _wrmdir(const wchar_t*);',13,10,'int _wmkdir(const wchar_t*);',13,10,13,10,'int _chdrive(int);',13,10,'char* _getdcwd(int, char *, int);',13,10,'wchar_t* _wgetcwd(wchar_t*, int);',13,10,'int _wchdir(const wchar_t*);',13,10,'int _getdrive(void);',13,10,13,10,'unsigned long _getdrives(void);',13,10,'unsigned int _getdiskfree(unsigned int, diskfree_t*);',13,10,13,10,'#endif',13,10,13,10,0
KK1784:	db '/* Header process.h */',13,10,'#ifndef $process',13,10,'#define $process',13,10,13,10,'#define P_WAIT',9,9,'0',13,10,'#define P_NOWAIT',9,'1',13,10,'#define P_OVERLAY',9,'2',13,10,'#define P_DETACH',9,'4',13,10,'#define WAIT_CHILD 0',13,10,'#define _P_WAIT P_WAIT',13,10,'#define _P_NOWAIT P_NOWAIT',13,10,'#define _P_OVERLAY P_OVERLAY',13,10,13,10,'int _spawnvp(int, const char*, char*const*);',13,10,'#define spawnvp _spawnvp',13,10,13,10,'void endthread(void);',13,10,'unsigned long _beginthreadex(void *,unsigned,unsigned (*)(void *),void *,unsigned,unsigned *);',13,10,'void _endthreadex(unsigned);',13,10,'int _cwait(int*, int, int);',13,10,'#define cwait _cwait',13,10,'//int _System(const char *cmd,int nCmdShow);',13,10,13,10,'//#define _WAIT_CHILD',9,'0',13,10,'//#endif',13,10,'#endif',13,10,13,10,0
KK1785:	db '#include <stddef.h>',13,10,13,10,'void* malloc(size_t);',13,10,'void* realloc(void *, size_t);',13,10,'void  free(void *);',13,10,0
KK1786:	db 'assert.h',0
KK1787:	db 'ctype.h',0
KK1788:	db 'errno.h',0
KK1789:	db 'fenv.h',0
KK1790:	db 'float.h',0
KK1791:	db 'inttypes.h',0
KK1792:	db 'stdint.h',0
KK1793:	db 'limits.h',0
KK1794:	db 'locale.h',0
KK1795:	db '_ansi.h',0
KK1796:	db 'math.h',0
KK1797:	db 'setjmp.h',0
KK1798:	db 'signal.h',0
KK1799:	db 'stdarg.h',0
KK1800:	db 'stdbool.h',0
KK1801:	db 'stddef.h',0
KK1802:	db 'stdio.h',0
KK1803:	db 'stdlib.h',0
KK1804:	db '_syslist.h',0
KK1805:	db 'string.h',0
KK1806:	db 'time.h',0
KK1807:	db 'utime.h',0
KK1808:	db 'unistd.h',0
KK1809:	db 'safelib.h',0
KK1810:	db 'wchar.h',0
KK1811:	db 'wctype.h',0
KK1812:	db 'sys/types.h',0
KK1813:	db 'sys/stat.h',0
KK1814:	db 'sys/timeb.h',0
KK1815:	db 'sys/utime.h',0
KK1816:	db 'malloc.h',0
KK1817:	db 'windows.h',0
KK1818:	db 'fcntl.h',0
KK1819:	db 'io.h',0
KK1820:	db 'direct.h',0
KK1821:	db 'process.h',0
KK1822:	db 'memory.h',0
KK1823:	db 't_comment',0
KK1824:	db 't_blank',0
KK1825:	db 't_source',0
KK1826:	db 't_end',0
KK1827:	db 't_tempdata',0
KK1828:	db 't_setret',0
KK1829:	db 't_stmt',0
KK1830:	db 't_assem',0
KK1831:	db 't_param',0
KK1832:	db 't_eval',0
KK1833:	db 't_move',0
KK1834:	db 't_copylist',0
KK1835:	db 't_copyblock',0
KK1836:	db 't_clearblock',0
KK1837:	db 't_getptr',0
KK1838:	db 't_index',0
KK1839:	db 't_indexlv',0
KK1840:	db 't_indexref',0
KK1841:	db 't_getaddr',0
KK1842:	db 't_label',0
KK1843:	db 't_jumplabel',0
KK1844:	db 't_labelname',0
KK1845:	db 't_switch',0
KK1846:	db 't_jump',0
KK1847:	db 't_jumpcc',0
KK1848:	db 't_jumptrue',0
KK1849:	db 't_jumpfalse',0
KK1850:	db 't_decrjumpnz',0
KK1851:	db 't_setcc',0
KK1852:	db 't_andl',0
KK1853:	db 't_orl',0
KK1854:	db 't_notl',0
KK1855:	db 't_istruel',0
KK1856:	db 't_makelist',0
KK1857:	db 't_callfn',0
KK1858:	db 't_callproc',0
KK1859:	db 't_return',0
KK1860:	db 't_returnx',0
KK1861:	db 't_hardret',0
KK1862:	db 't_add',0
KK1863:	db 't_sub',0
KK1864:	db 't_mul',0
KK1865:	db 't_div',0
KK1866:	db 't_rem',0
KK1867:	db 't_iand',0
KK1868:	db 't_ior',0
KK1869:	db 't_ixor',0
KK1870:	db 't_shl',0
KK1871:	db 't_shr',0
KK1872:	db 't_neg',0
KK1873:	db 't_abs',0
KK1874:	db 't_inot',0
KK1875:	db 't_addto',0
KK1876:	db 't_subto',0
KK1877:	db 't_multo',0
KK1878:	db 't_divto',0
KK1879:	db 't_remto',0
KK1880:	db 't_iorto',0
KK1881:	db 't_iandto',0
KK1882:	db 't_ixorto',0
KK1883:	db 't_shlto',0
KK1884:	db 't_shrto',0
KK1885:	db 't_incrto',0
KK1886:	db 't_decrto',0
KK1887:	db 't_preincrx',0
KK1888:	db 't_predecrx',0
KK1889:	db 't_postincrx',0
KK1890:	db 't_postdecrx',0
KK1891:	db 't_softconv',0
KK1892:	db 't_float',0
KK1893:	db 't_fix',0
KK1894:	db 't_truncate',0
KK1895:	db 't_widen',0
KK1896:	db 't_fwiden',0
KK1897:	db 't_narrow',0
KK1898:	db 't_fnarrow',0
KK1899:	db 't_convert',0
KK1900:	db 't_typepun',0
KK1901:	db 't_last',0
KK1902:	db 'no_opnd',0
KK1903:	db 'mem_opnd',0
KK1904:	db 'temp_opnd',0
KK1905:	db 'int_opnd',0
KK1906:	db 'real_opnd',0
KK1907:	db 'string_opnd',0
KK1908:	db 'regvar_opnd',0
KK1909:	db 'imem_opnd',0
KK1910:	db 'itemp_opnd',0
KK1911:	db 'label_opnd',0
KK1912:	db 'ptr_opnd',0
KK1913:	db 'memaddr_opnd',0
KK1914:	db 'tempaddr_opnd',0
KK1915:	db '?',0
KK1916:	db 'I',0
KK1917:	db 'U',0
KK1918:	db 'F',0
KK1919:	db 'P',0
KK1920:	db 'D',0
KK1921:	db 'no_type',0
KK1922:	db 'signed_type',0
KK1923:	db 'unsigned_type',0
KK1924:	db 'float_type',0
KK1925:	db 'pointer_type',0
KK1926:	db 'block_type',0
KK1927:	db 'rnone',0
KK1928:	db 'r0',0
KK1929:	db 'r1',0
KK1930:	db 'r2',0
KK1931:	db 'r3',0
KK1932:	db 'r4',0
KK1933:	db 'r5',0
KK1934:	db 'r6',0
KK1935:	db 'r7',0
KK1936:	db 'r8',0
KK1937:	db 'r9',0
KK1938:	db 'r10',0
KK1939:	db 'r11',0
KK1940:	db 'r12',0
KK1941:	db 'r13',0
KK1942:	db 'r14',0
KK1943:	db 'rstack',0
KK1944:	db 'xnone',0
KK1945:	db 'xr0',0
KK1946:	db 'xr1',0
KK1947:	db 'xr2',0
KK1948:	db 'xr3',0
KK1949:	db 'xr4',0
KK1950:	db 'xr5',0
KK1951:	db 'xr6',0
KK1952:	db 'xr7',0
KK1953:	db 'xr8',0
KK1954:	db 'xr9',0
KK1955:	db 'xr10',0
KK1956:	db 'xr11',0
KK1957:	db 'xr12',0
KK1958:	db 'xr13',0
KK1959:	db 'xr14',0
KK1960:	db 'xr15',0
KK1961:	db 'byte ',0
KK1962:	db 'word ',0
KK1963:	db 0

KK1964:	db 'dword',0
KK1965:	db 0

KK1966:	db 0

KK1967:	db 0

KK1968:	db 'qword',0
KK1969:	db 'end',0
KK1970:	db 'option',0
KK1971:	db 'sourcefile',0
KK1972:	db 'libfile',0
KK1973:	db 'load',0
KK1974:	db 'pp',0
KK1975:	db 'parse',0
KK1976:	db 'gen1',0
KK1977:	db 'gen2',0
KK1978:	db 'link',0
KK1979:	db 'run',0
KK1980:	db 'asm',0
KK1981:	db 'bin',0
KK1982:	db 'options',0
KK1983:	db 'modules',0
KK1984:	db 'files',0
KK1985:	db 'e',0
KK1986:	db 'ast',0
KK1987:	db 'st',0
KK1988:	db 'stflat',0
KK1989:	db 'dis',0
KK1990:	db 'paths',0
KK1991:	db 'headers',0
KK1992:	db 'types',0
KK1993:	db 'tcl',0
KK1994:	db 'showasm',0
KK1995:	db 'c',0
KK1996:	db 's',0
KK1997:	db 'd',0
KK1998:	db 'i',0
KK1999:	db 'time',0
KK2000:	db 'v',0
KK2001:	db 'v2',0
KK2002:	db 'q',0
KK2003:	db 'h',0
KK2004:	db 'help',0
KK2005:	db 'ext',0
KK2006:	db 'writeheaders',0
	align 8

;real const table:
RR1:	dq 0x4000000000000000
RR2:	dq 0x0
RR3:	dq 0x4048000000000000
RR4:	dq 0x4058400000000000
RR5:	dq 0x4024000000000000
RR6:	dq 0x4050400000000000
RR7:	dq 0x4024000000000000
RR8:	dq 0x7FFFFFFFFFFFFFFF
RR9:	dq 0xFFFFFFFF
RR10:	dq 0x7FFFFFFF
RR11:	dq 0x7FFFFFFF
RR12:	dq 0x7FFFFFFF
RR13:	dq 0xFFFFFFFF
RR14:	dq 0x7FFFFFFF
RR15:	dq 0xFFFFFFFF
RR16:	dq 0xFFFFFFFF
RR17:	dq 0x0
