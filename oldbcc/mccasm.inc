;Defines used in asm64 source code generated by BCC C compiler

;D0 to D15 are 64-bit registers
;Reordered from normal x64 seqence so that:
; D0 to D9 are general purpose
; D10 to D13 are for parameter passing (when using Win64 ABI)
; D14, D15 are frame and stack registers
;Note that D0 is now paired with D11 for 128-bit values needed for MUL/DIV
;Also that B10 is used for the CL shift count (these can both clash with any parameters
;being assembled in D10/D11)

%define D0 rax
%define D1 rbx
%define D2 rsi
%define D3 rdi
%define D4 r10
%define D5 r11
%define D6 r12
%define D7 r13
%define D8 r14
%define D9 r15

%define D10 rcx
%define D11 rdx
%define D12 r8
%define D13 r9

%define D14 rbp
%define D15 rsp

%define Dframe rbp	; Alternate names for D14/D15
%define Dstack rsp

;A0 to A15 are 32-bit registers comprising the low halves of D0 to D15

%define A0 eax
%define A1 ebx
%define A2 esi
%define A3 edi
%define A4 r10d
%define A5 r11d
%define A6 r12d
%define A7 r13d
%define A8 r14d
%define A9 r15d

%define A10 ecx
%define A11 edx
%define A12 r8d
%define A13 r9d
%define A14 ebp
%define A15 esp

%define Aframe ebp
%define Astack esp

;W0 to W13 are 16-bit registers comprising the low 16-bits words of D0 to D15

%define W0 ax
%define W1 bx
%define W2 si
%define W3 di
%define W4 r10w
%define W5 r11w
%define W6 r12w
%define W7 r13w
%define W8 r14w
%define W9 r15w

%define W10 cx
%define W11 dx
%define W12 r8w
%define W13 r9w

;B0 to B13 are 8-bit registers comprising the low 8-bit words of D0 to D15. These
;include the low 8-bits of what had been ESI/EDI/EBP/ESP

%define B0 al
%define B1 bl
%define B2 sil
%define B3 dil
%define B4 r10b
%define B5 r11b
%define B6 r12b
%define B7 r13b
%define B8 r14b
%define B9 r15b

%define B10 cl
%define B11 dl
%define B12 r8b
%define B13 r9b

;BH0 TO BH3 are 8-bit registers corresponding bits 8..15 of D0 to D15 (ie. AH, BH, CH, DH)

%define BH0 ah
%define BH1 bh
%define BH10 ch
%define BH11 dh

;lower-case versions of the above

%define d0 rax
%define d1 rbx
%define d2 rsi
%define d3 rdi
%define d4 r10
%define d5 r11
%define d6 r12
%define d7 r13
%define d8 r14
%define d9 r15

%define d10 rcx
%define d11 rdx
%define d12 r8
%define d13 r9

%define d14 rbp
%define d15 rsp

%define dframe rbp
%define dstack rsp

%define a0 eax
%define a1 ebx
%define a2 esi
%define a3 edi
%define a4 r10d
%define a5 r11d
%define a6 r12d
%define a7 r13d
%define a8 r14d
%define a9 r15d

%define a10 ecx
%define a11 edx
%define a12 r8d
%define a13 r9d
%define a14 ebp
%define a15 esp

%define aframe ebp
%define astack esp

%define w0 ax
%define w1 bx
%define w2 si
%define w3 di
%define w4 r10w
%define w5 r11w
%define w6 r12w
%define w7 r13w
%define w8 r14w
%define w9 r15w

%define w10 cx
%define w11 dx
%define w12 r8w
%define w13 r9w

%define b0 al
%define b1 bl
%define b2 sil
%define b3 dil
%define b4 r10b
%define b5 r11b
%define b6 r12b
%define b7 r13b
%define b8 r14b
%define b9 r15b

%define b10 cl
%define b11 dl
%define b12 r8b
%define b13 r9b

%define bh0 ah
%define bh1 bh
%define bh10 ch
%define bh11 dh

	segment .data
	align 16

fchsmask_pd	dq 8000000000000000h, 8000000000000000h

;	extern m$ufloat_r32u32
;	extern m$ufloat_r64u32
;	extern m$ufloat_r32u64
;	extern m$ufloat_r64u64
