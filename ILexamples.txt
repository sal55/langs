# Original HLL
----------------------------------------
func fib(int n)int=
    if n<3 then
        1
    else 
        fib(n-1)+fib(n-2)
    fi
end

# TAC-Based IL representation
----------------------------------------
Proc fib.fib(i64 n)i64 =
    if n >= 3 then goto L3      i64
    T1 := 1                     i64
    goto L2
L3:
    T2 := n - 1                 i64
    T3 := &fib.fib(T2)          (i64, u64, i64)
    T2 := n - 2                 i64
    T4 := &fib.fib(T2)          (i64, u64, i64)
    T2 := T3 + T4               i64
    T1 := T2                    i64
L2:
    return T1                   i64
End

# Stack-based IL
----------------------------------------
proc fib.fib:
    param    i64       n
    rettype  i64
    startmx                             
    load     i64       n                
    load     i64       3                
    jumpge   i64       #7               
    load     i64       1                
    resetmx  i64                        
    jump               #6               
#7: 
    setcall  i64 /1                     
    load     i64       n                
    load     i64       1                
    sub      i64                        
    setarg   i64 /1                     
    callf    i64 /1    &fib.fib         
    setcall  i64 /1                     
    load     i64       n                
    load     i64       2                
    sub      i64                        
    setarg   i64 /1                     
    callf    i64 /1    &fib.fib         
    add      i64                        
    endmx    i64                        
#6: 
    jumpret  i64       #5               
#5: 
    retfn    i64                        
endproc
